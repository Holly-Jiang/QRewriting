----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.11751818656921387

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [0, 11], [12, 7], [2, 19], [8, 14], [16, 4], [6, 5], [0, 11], [13, 4], [6, 5], [10, 7], [2, 19], [8, 3], [18, 14], [2, 11], [10, 1], [13, 4], [12, 7], [15, 16], [6, 5], [18, 14], [10, 2], [8, 3], [18, 14], [5, 1], [9, 6], [7, 0], [10, 2], [0, 19], [3, 11], [16, 4], [1, 14], [5, 2], [16, 4], [0, 19], [6, 13], [17, 12], [5, 1], [2, 19], [0, 11], [15, 9], [4, 18], [6, 13], [1, 14], [4, 18], [13, 8], [9, 5], [6, 17], [1, 14], [9, 6], [15, 16], [11, 19], [10, 2], [1, 14], [9, 13], [12, 7], [11, 19], [10, 2], [5, 1], [12, 7], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [0, 19], [16, 13], [5, 2], [17, 7], [9, 13], [3, 11], [12, 10], [0, 19], [5, 2], [16, 8], [9, 13], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [1, 3], [12, 7], [13, 5], [16, 4], [1, 3], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 18], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [11, 19], [4, 8], [6, 13], [17, 10], [13, 5], [4, 18], [2, 0], [15, 9], [11, 19], [8, 1], [17, 10], [15, 9], [16, 4], [2, 19], [0, 11], [8, 3], [18, 14], [6, 5], [17, 7], [10, 2], [18, 14], [16, 13], [9, 5], [0, 19], [17, 7], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [13, 4], [9, 6], [16, 8], [10, 1], [3, 11], [2, 0], [17, 12], [15, 9], [2, 0], [1, 14], [13, 4], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [4, 18], [10, 2], [12, 7], [9, 13], [10, 2], [6, 5], [0, 19], [12, 7], [4, 18], [3, 11], [15, 16], [15, 9], [6, 5], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [17, 12], [7, 0], [13, 8], [8, 3], [17, 12], [0, 19], [5, 2], [16, 4], [8, 14], [15, 9], [17, 7], [16, 4], [6, 13], [2, 0], [3, 11], [5, 10], [4, 8], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [4, 8], [13, 5], [12, 7], [0, 11], [17, 10], [16, 4], [0, 11], [8, 14], [2, 19], [6, 13], [10, 7], [16, 4], [0, 11], [6, 5], [15, 9], [10, 2], [8, 14], [17, 7], [4, 18], [6, 5], [1, 2], [16, 13], [17, 10], [0, 19], [4, 18], [15, 16], [9, 13], [2, 0], [10, 1], [6, 5], [11, 19], [8, 3], [4, 18], [8, 3], [9, 5], [11, 19], [1, 2], [18, 14], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [18, 14], [12, 7], [6, 13], [9, 5], [0, 19], [15, 16], [1, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 35, 41]
[106, 109, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[35, 41, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.21058988571167

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 27] cc => I, Pos: [24, 27] cc => I, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [28, 35, 41] ccc => cc, Pos: [32, 38] cc => I, Pos: [32, 38] cc => I, Pos: [34, 37] cc => I, Pos: [34, 37] cc => I, Pos: [35, 41, 47] ccc => cc, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [55, 60] cc => I, Pos: [55, 60] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [69, 77] cc => I, Pos: [69, 77] cc => I, Pos: [72, 79] cc => I, Pos: [72, 79] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [76, 82] cc => I, Pos: [76, 82] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [80, 86] cc => I, Pos: [80, 86] cc => I, Pos: [91, 95] cc => I, Pos: [91, 95] cc => I, Pos: [106, 109, 118] ccc => cc, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [116, 123] cc => I, Pos: [116, 123] cc => I, Pos: [120, 124] cc => I, Pos: [120, 124] cc => I, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [146, 156] cc => I, Pos: [146, 156] cc => I, Pos: [151, 154] cc => I, Pos: [151, 154] cc => I, Pos: [167, 175] cc => I, Pos: [167, 175] cc => I, Pos: [168, 171] cc => I, Pos: [168, 171] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [175, 194] cc => I, Pos: [175, 194] cc => I, Pos: [198, 202] cc => I, Pos: [198, 202] cc => I, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [207, 234] cc => I, Pos: [207, 234] cc => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [223, 226] cc => I, Pos: [223, 226] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [226, 232] cc => I, Pos: [226, 232] cc => I, Pos: [227, 236] cc => I, Pos: [227, 236] cc => I, Pos: [233, 239] cc => I, Pos: [233, 239] cc => I, Pos: [238, 244] cc => I, Pos: [238, 244] cc => I, Pos: [239, 249] cc => I, Pos: [239, 249] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 268] cc => I, Pos: [245, 268] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 253] cc => I, Pos: [251, 253] cc => I, Pos: [255, 258] cc => I, Pos: [255, 258] cc => I, Pos: [257, 263] cc => I, Pos: [257, 263] cc => I]

Plan: 1
[Pos: [0, 5] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [28, 35, 41] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [69, 77] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [223, 226] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [233, 239] cc => I,
 Pos: [238, 244] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 180

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015636205673217773

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [28, 35, 41] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [69, 77] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [223, 226] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [233, 239] cc => I,
 Pos: [238, 244] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 180

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [28, 35, 41] ccc => cc
Apply:  Pos: [32, 38] cc => I
Apply:  Pos: [34, 37] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [55, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [69, 77] cc => I
Apply:  Pos: [72, 79] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [76, 82] cc => I
Apply:  Pos: [91, 95] cc => I
Apply:  Pos: [106, 109, 118] ccc => cc
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [116, 123] cc => I
Apply:  Pos: [120, 124] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [146, 156] cc => I
Apply:  Pos: [151, 154] cc => I
Apply:  Pos: [167, 175] cc => I
Apply:  Pos: [168, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [198, 202] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [207, 234] cc => I
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [223, 226] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 236] cc => I
Apply:  Pos: [233, 239] cc => I
Apply:  Pos: [238, 244] cc => I
Apply:  Pos: [245, 268] cc => I
Apply:  Pos: [250, 255] cc => I
Apply:  Pos: [251, 253] cc => I
Apply:  Pos: [257, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [15, 16], [6, 5], [18, 14], [5, 14], [9, 6], [7, 0], [3, 11], [1, 14], [5, 2], [17, 12], [2, 19], [0, 11], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [15, 16], [1, 14], [9, 13], [5, 1], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  5.226226091384888

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.218726873397827

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 29] cc => I, Pos: [12, 29] cc => I, Pos: [19, 30] cc => I, Pos: [19, 30] cc => I, Pos: [23, 35] cc => I, Pos: [23, 35] cc => I, Pos: [62, 91] cc => I, Pos: [62, 91] cc => I, Pos: [90, 130] cc => I, Pos: [90, 130] cc => I]

Plan: 1
[Pos: [12, 29] cc => I,
 Pos: [19, 30] cc => I,
 Pos: [23, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 20

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 29] cc => I,
 Pos: [19, 30] cc => I,
 Pos: [23, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 20

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 29] cc => I
Apply:  Pos: [19, 30] cc => I
Apply:  Pos: [23, 35] cc => I
Apply:  Pos: [62, 91] cc => I
Apply:  Pos: [90, 130] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [18, 14], [9, 6], [7, 0], [3, 11], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [16, 4], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.218726873397827

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 30]
[17, 38]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 125, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 30]
[17, 38]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9843554496765137

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 30] cc => I, Pos: [6, 30] cc => I, Pos: [17, 38] cc => I, Pos: [17, 38] cc => I, Pos: [121, 125, 126] ccc => cc]

Plan: 1
[Pos: [6, 30] cc => I, Pos: [17, 38] cc => I, Pos: [121, 125, 126] ccc => cc]
Change: 3, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 30] cc => I, Pos: [17, 38] cc => I, Pos: [121, 125, 126] ccc => cc]
Change: 3, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 30] cc => I
Apply:  Pos: [17, 38] cc => I
Apply:  Pos: [121, 125, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [18, 14], [5, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 13], [9, 6], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.9843554496765137

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8906264305114746

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [18, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.8906264305114746

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [165] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 330

Reduced: 
 - size: 105 (38.89%)
 - cycle: 210 (38.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938048362731934

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [0, 11], [12, 7], [2, 19], [8, 14], [16, 4], [6, 5], [0, 11], [13, 4], [6, 5], [10, 7], [2, 19], [8, 3], [18, 14], [2, 11], [10, 1], [13, 4], [12, 7], [15, 16], [6, 5], [18, 14], [10, 2], [8, 3], [18, 14], [5, 1], [9, 6], [7, 0], [10, 2], [0, 19], [3, 11], [16, 4], [1, 14], [5, 2], [16, 4], [0, 19], [6, 13], [17, 12], [5, 1], [2, 19], [0, 11], [15, 9], [4, 18], [6, 13], [1, 14], [4, 18], [13, 8], [9, 5], [6, 17], [1, 14], [9, 6], [15, 16], [11, 19], [10, 2], [1, 14], [9, 13], [12, 7], [11, 19], [10, 2], [5, 1], [12, 7], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [0, 19], [16, 13], [5, 2], [17, 7], [9, 13], [3, 11], [12, 10], [0, 19], [5, 2], [16, 8], [9, 13], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [1, 3], [12, 7], [13, 5], [16, 4], [1, 3], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 18], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [11, 19], [4, 8], [6, 13], [17, 10], [13, 5], [4, 18], [2, 0], [15, 9], [11, 19], [8, 1], [17, 10], [15, 9], [16, 4], [2, 19], [0, 11], [8, 3], [18, 14], [6, 5], [17, 7], [10, 2], [18, 14], [16, 13], [9, 5], [0, 19], [17, 7], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [13, 4], [9, 6], [16, 8], [10, 1], [3, 11], [2, 0], [17, 12], [15, 9], [2, 0], [1, 14], [13, 4], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [4, 18], [10, 2], [12, 7], [9, 13], [10, 2], [6, 5], [0, 19], [12, 7], [4, 18], [3, 11], [15, 16], [15, 9], [6, 5], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [17, 12], [7, 0], [13, 8], [8, 3], [17, 12], [0, 19], [5, 2], [16, 4], [8, 14], [15, 9], [17, 7], [16, 4], [6, 13], [2, 0], [3, 11], [5, 10], [4, 8], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [4, 8], [13, 5], [12, 7], [0, 11], [17, 10], [16, 4], [0, 11], [8, 14], [2, 19], [6, 13], [10, 7], [16, 4], [0, 11], [6, 5], [15, 9], [10, 2], [8, 14], [17, 7], [4, 18], [6, 5], [1, 2], [16, 13], [17, 10], [0, 19], [4, 18], [15, 16], [9, 13], [2, 0], [10, 1], [6, 5], [11, 19], [8, 3], [4, 18], [8, 3], [9, 5], [11, 19], [1, 2], [18, 14], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [18, 14], [12, 7], [6, 13], [9, 5], [0, 19], [15, 16], [1, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 35, 41]
[106, 109, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[35, 41, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.140596628189087

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 27] cc => I, Pos: [24, 27] cc => I, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [28, 35, 41] ccc => cc, Pos: [32, 38] cc => I, Pos: [32, 38] cc => I, Pos: [34, 37] cc => I, Pos: [34, 37] cc => I, Pos: [35, 41, 47] ccc => cc, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [55, 60] cc => I, Pos: [55, 60] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [69, 77] cc => I, Pos: [69, 77] cc => I, Pos: [72, 79] cc => I, Pos: [72, 79] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [76, 82] cc => I, Pos: [76, 82] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [80, 86] cc => I, Pos: [80, 86] cc => I, Pos: [91, 95] cc => I, Pos: [91, 95] cc => I, Pos: [106, 109, 118] ccc => cc, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [116, 123] cc => I, Pos: [116, 123] cc => I, Pos: [120, 124] cc => I, Pos: [120, 124] cc => I, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [146, 156] cc => I, Pos: [146, 156] cc => I, Pos: [151, 154] cc => I, Pos: [151, 154] cc => I, Pos: [167, 175] cc => I, Pos: [167, 175] cc => I, Pos: [168, 171] cc => I, Pos: [168, 171] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [175, 194] cc => I, Pos: [175, 194] cc => I, Pos: [198, 202] cc => I, Pos: [198, 202] cc => I, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [207, 234] cc => I, Pos: [207, 234] cc => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [223, 226] cc => I, Pos: [223, 226] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [226, 232] cc => I, Pos: [226, 232] cc => I, Pos: [227, 236] cc => I, Pos: [227, 236] cc => I, Pos: [233, 239] cc => I, Pos: [233, 239] cc => I, Pos: [238, 244] cc => I, Pos: [238, 244] cc => I, Pos: [239, 249] cc => I, Pos: [239, 249] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 268] cc => I, Pos: [245, 268] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 253] cc => I, Pos: [251, 253] cc => I, Pos: [255, 258] cc => I, Pos: [255, 258] cc => I, Pos: [257, 263] cc => I, Pos: [257, 263] cc => I]

Plan: 1
[Pos: [0, 5] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [28, 35, 41] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [69, 77] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [223, 226] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [233, 239] cc => I,
 Pos: [238, 244] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 47

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.12499141693115234

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [28, 35, 41] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [69, 77] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [223, 226] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [233, 239] cc => I,
 Pos: [238, 244] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [28, 35, 41] ccc => cc
Apply:  Pos: [32, 38] cc => I
Apply:  Pos: [34, 37] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [55, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [69, 77] cc => I
Apply:  Pos: [72, 79] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [76, 82] cc => I
Apply:  Pos: [91, 95] cc => I
Apply:  Pos: [106, 109, 118] ccc => cc
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [116, 123] cc => I
Apply:  Pos: [120, 124] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [146, 156] cc => I
Apply:  Pos: [151, 154] cc => I
Apply:  Pos: [167, 175] cc => I
Apply:  Pos: [168, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [198, 202] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [207, 234] cc => I
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [223, 226] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 236] cc => I
Apply:  Pos: [233, 239] cc => I
Apply:  Pos: [238, 244] cc => I
Apply:  Pos: [245, 268] cc => I
Apply:  Pos: [250, 255] cc => I
Apply:  Pos: [251, 253] cc => I
Apply:  Pos: [257, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [15, 16], [6, 5], [18, 14], [5, 14], [9, 6], [7, 0], [3, 11], [1, 14], [5, 2], [17, 12], [2, 19], [0, 11], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [15, 16], [1, 14], [9, 13], [5, 1], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  5.265588045120239

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2030856609344482

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 29] cc => I, Pos: [12, 29] cc => I, Pos: [19, 30] cc => I, Pos: [19, 30] cc => I, Pos: [23, 35] cc => I, Pos: [23, 35] cc => I, Pos: [62, 91] cc => I, Pos: [62, 91] cc => I, Pos: [90, 130] cc => I, Pos: [90, 130] cc => I]

Plan: 1
[Pos: [12, 29] cc => I,
 Pos: [19, 30] cc => I,
 Pos: [23, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 5

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015868663787841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 29] cc => I,
 Pos: [19, 30] cc => I,
 Pos: [23, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 29] cc => I
Apply:  Pos: [19, 30] cc => I
Apply:  Pos: [23, 35] cc => I
Apply:  Pos: [62, 91] cc => I
Apply:  Pos: [90, 130] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [18, 14], [9, 6], [7, 0], [3, 11], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [16, 4], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.21895432472229

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 30]
[17, 38]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 125, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 30]
[17, 38]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9686315059661865

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 30] cc => I, Pos: [6, 30] cc => I, Pos: [17, 38] cc => I, Pos: [17, 38] cc => I, Pos: [121, 125, 126] ccc => cc]

Plan: 1
[Pos: [6, 30] cc => I, Pos: [17, 38] cc => I, Pos: [121, 125, 126] ccc => cc]
Change: 3, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 30] cc => I, Pos: [17, 38] cc => I, Pos: [121, 125, 126] ccc => cc]
Change: 3, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 30] cc => I
Apply:  Pos: [17, 38] cc => I
Apply:  Pos: [121, 125, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [18, 14], [5, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 13], [9, 6], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.9686315059661865

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8437204360961914

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [18, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.8437204360961914

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [165] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 330

Reduced: 
 - size: 105 (38.89%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936665534973145

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [0, 11], [12, 7], [2, 19], [8, 14], [16, 4], [6, 5], [0, 11], [13, 4], [6, 5], [10, 7], [2, 19], [8, 3], [18, 14], [2, 11], [10, 1], [13, 4], [12, 7], [15, 16], [6, 5], [18, 14], [10, 2], [8, 3], [18, 14], [5, 1], [9, 6], [7, 0], [10, 2], [0, 19], [3, 11], [16, 4], [1, 14], [5, 2], [16, 4], [0, 19], [6, 13], [17, 12], [5, 1], [2, 19], [0, 11], [15, 9], [4, 18], [6, 13], [1, 14], [4, 18], [13, 8], [9, 5], [6, 17], [1, 14], [9, 6], [15, 16], [11, 19], [10, 2], [1, 14], [9, 13], [12, 7], [11, 19], [10, 2], [5, 1], [12, 7], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [0, 19], [16, 13], [5, 2], [17, 7], [9, 13], [3, 11], [12, 10], [0, 19], [5, 2], [16, 8], [9, 13], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [1, 3], [12, 7], [13, 5], [16, 4], [1, 3], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 18], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [11, 19], [4, 8], [6, 13], [17, 10], [13, 5], [4, 18], [2, 0], [15, 9], [11, 19], [8, 1], [17, 10], [15, 9], [16, 4], [2, 19], [0, 11], [8, 3], [18, 14], [6, 5], [17, 7], [10, 2], [18, 14], [16, 13], [9, 5], [0, 19], [17, 7], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [13, 4], [9, 6], [16, 8], [10, 1], [3, 11], [2, 0], [17, 12], [15, 9], [2, 0], [1, 14], [13, 4], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [4, 18], [10, 2], [12, 7], [9, 13], [10, 2], [6, 5], [0, 19], [12, 7], [4, 18], [3, 11], [15, 16], [15, 9], [6, 5], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [17, 12], [7, 0], [13, 8], [8, 3], [17, 12], [0, 19], [5, 2], [16, 4], [8, 14], [15, 9], [17, 7], [16, 4], [6, 13], [2, 0], [3, 11], [5, 10], [4, 8], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [4, 8], [13, 5], [12, 7], [0, 11], [17, 10], [16, 4], [0, 11], [8, 14], [2, 19], [6, 13], [10, 7], [16, 4], [0, 11], [6, 5], [15, 9], [10, 2], [8, 14], [17, 7], [4, 18], [6, 5], [1, 2], [16, 13], [17, 10], [0, 19], [4, 18], [15, 16], [9, 13], [2, 0], [10, 1], [6, 5], [11, 19], [8, 3], [4, 18], [8, 3], [9, 5], [11, 19], [1, 2], [18, 14], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [18, 14], [12, 7], [6, 13], [9, 5], [0, 19], [15, 16], [1, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 35, 41]
[106, 109, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[35, 41, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.154691696166992

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 27] cc => I, Pos: [24, 27] cc => I, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [28, 35, 41] ccc => cc, Pos: [32, 38] cc => I, Pos: [32, 38] cc => I, Pos: [34, 37] cc => I, Pos: [34, 37] cc => I, Pos: [35, 41, 47] ccc => cc, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [55, 60] cc => I, Pos: [55, 60] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [69, 77] cc => I, Pos: [69, 77] cc => I, Pos: [72, 79] cc => I, Pos: [72, 79] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [76, 82] cc => I, Pos: [76, 82] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [80, 86] cc => I, Pos: [80, 86] cc => I, Pos: [91, 95] cc => I, Pos: [91, 95] cc => I, Pos: [106, 109, 118] ccc => cc, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [116, 123] cc => I, Pos: [116, 123] cc => I, Pos: [120, 124] cc => I, Pos: [120, 124] cc => I, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [146, 156] cc => I, Pos: [146, 156] cc => I, Pos: [151, 154] cc => I, Pos: [151, 154] cc => I, Pos: [167, 175] cc => I, Pos: [167, 175] cc => I, Pos: [168, 171] cc => I, Pos: [168, 171] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [175, 194] cc => I, Pos: [175, 194] cc => I, Pos: [198, 202] cc => I, Pos: [198, 202] cc => I, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [207, 234] cc => I, Pos: [207, 234] cc => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [223, 226] cc => I, Pos: [223, 226] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [226, 232] cc => I, Pos: [226, 232] cc => I, Pos: [227, 236] cc => I, Pos: [227, 236] cc => I, Pos: [233, 239] cc => I, Pos: [233, 239] cc => I, Pos: [238, 244] cc => I, Pos: [238, 244] cc => I, Pos: [239, 249] cc => I, Pos: [239, 249] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 268] cc => I, Pos: [245, 268] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 253] cc => I, Pos: [251, 253] cc => I, Pos: [255, 258] cc => I, Pos: [255, 258] cc => I, Pos: [257, 263] cc => I, Pos: [257, 263] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 11] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [28, 35, 41] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [80, 86] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [226, 232] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [233, 239] cc => I,
 Pos: [238, 244] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 180

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [28, 35, 41] ccc => cc
Apply:  Pos: [32, 38] cc => I
Apply:  Pos: [34, 37] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [55, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [77, 83] cc => I
Apply:  Pos: [72, 79] cc => I
Apply:  Pos: [80, 86] cc => I
Apply:  Pos: [76, 82] cc => I
Apply:  Pos: [91, 95] cc => I
Apply:  Pos: [106, 109, 118] ccc => cc
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [116, 123] cc => I
Apply:  Pos: [120, 124] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [146, 156] cc => I
Apply:  Pos: [151, 154] cc => I
Apply:  Pos: [167, 175] cc => I
Apply:  Pos: [168, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [198, 202] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [207, 234] cc => I
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [226, 232] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 236] cc => I
Apply:  Pos: [233, 239] cc => I
Apply:  Pos: [238, 244] cc => I
Apply:  Pos: [245, 268] cc => I
Apply:  Pos: [250, 255] cc => I
Apply:  Pos: [251, 253] cc => I
Apply:  Pos: [257, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [10, 7], [2, 11], [10, 1], [12, 7], [15, 16], [6, 5], [18, 14], [5, 14], [9, 6], [7, 0], [3, 11], [1, 14], [5, 2], [17, 12], [2, 19], [0, 11], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [15, 16], [1, 14], [9, 13], [5, 1], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 7], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  5.154691696166992

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2031681537628174

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 29] cc => I, Pos: [12, 29] cc => I, Pos: [19, 30] cc => I, Pos: [19, 30] cc => I, Pos: [23, 35] cc => I, Pos: [23, 35] cc => I, Pos: [62, 91] cc => I, Pos: [62, 91] cc => I, Pos: [90, 130] cc => I, Pos: [90, 130] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 29] cc => I,
 Pos: [19, 30] cc => I,
 Pos: [23, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 20

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 29] cc => I
Apply:  Pos: [19, 30] cc => I
Apply:  Pos: [23, 35] cc => I
Apply:  Pos: [62, 91] cc => I
Apply:  Pos: [90, 130] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [18, 14], [9, 6], [7, 0], [3, 11], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 2], [17, 7], [10, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.2031681537628174

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 30]
[17, 32]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 125, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[147, 148, 151]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 30]
[17, 32]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.953301429748535

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 30] cc => I, Pos: [7, 30] cc => I, Pos: [17, 32] cc => I, Pos: [17, 32] cc => I, Pos: [121, 125, 126] ccc => cc, Pos: [147, 148, 151] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 30] cc => I,
 Pos: [17, 32] cc => I,
 Pos: [121, 125, 126] ccc => cc,
 Pos: [147, 148, 151] ccc => cc]
Change: 4, Saving: 12

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 30] cc => I
Apply:  Pos: [17, 32] cc => I
Apply:  Pos: [121, 125, 126] ccc => cc
Apply:  Pos: [147, 148, 151] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [18, 14], [5, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 13], [9, 6], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 2], [17, 10], [10, 7], [1, 2], [16, 13], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.953301429748535

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8443639278411865

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [18, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 2], [17, 10], [10, 7], [1, 2], [16, 13], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.8443639278411865

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [164] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 328

Reduced: 
 - size: 106 (39.26%)
 - cycle: 212 (39.26%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935544967651367

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [0, 11], [12, 7], [2, 19], [8, 14], [16, 4], [6, 5], [0, 11], [13, 4], [6, 5], [10, 7], [2, 19], [8, 3], [18, 14], [2, 11], [10, 1], [13, 4], [12, 7], [15, 16], [6, 5], [18, 14], [10, 2], [8, 3], [18, 14], [5, 1], [9, 6], [7, 0], [10, 2], [0, 19], [3, 11], [16, 4], [1, 14], [5, 2], [16, 4], [0, 19], [6, 13], [17, 12], [5, 1], [2, 19], [0, 11], [15, 9], [4, 18], [6, 13], [1, 14], [4, 18], [13, 8], [9, 5], [6, 17], [1, 14], [9, 6], [15, 16], [11, 19], [10, 2], [1, 14], [9, 13], [12, 7], [11, 19], [10, 2], [5, 1], [12, 7], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [0, 19], [16, 13], [5, 2], [17, 7], [9, 13], [3, 11], [12, 10], [0, 19], [5, 2], [16, 8], [9, 13], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [1, 3], [12, 7], [13, 5], [16, 4], [1, 3], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 18], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [11, 19], [4, 8], [6, 13], [17, 10], [13, 5], [4, 18], [2, 0], [15, 9], [11, 19], [8, 1], [17, 10], [15, 9], [16, 4], [2, 19], [0, 11], [8, 3], [18, 14], [6, 5], [17, 7], [10, 2], [18, 14], [16, 13], [9, 5], [0, 19], [17, 7], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [13, 4], [9, 6], [16, 8], [10, 1], [3, 11], [2, 0], [17, 12], [15, 9], [2, 0], [1, 14], [13, 4], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [4, 18], [10, 2], [12, 7], [9, 13], [10, 2], [6, 5], [0, 19], [12, 7], [4, 18], [3, 11], [15, 16], [15, 9], [6, 5], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [17, 12], [7, 0], [13, 8], [8, 3], [17, 12], [0, 19], [5, 2], [16, 4], [8, 14], [15, 9], [17, 7], [16, 4], [6, 13], [2, 0], [3, 11], [5, 10], [4, 8], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [4, 8], [13, 5], [12, 7], [0, 11], [17, 10], [16, 4], [0, 11], [8, 14], [2, 19], [6, 13], [10, 7], [16, 4], [0, 11], [6, 5], [15, 9], [10, 2], [8, 14], [17, 7], [4, 18], [6, 5], [1, 2], [16, 13], [17, 10], [0, 19], [4, 18], [15, 16], [9, 13], [2, 0], [10, 1], [6, 5], [11, 19], [8, 3], [4, 18], [8, 3], [9, 5], [11, 19], [1, 2], [18, 14], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [18, 14], [12, 7], [6, 13], [9, 5], [0, 19], [15, 16], [1, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 35, 41]
[106, 109, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[35, 41, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.202272415161133

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 27] cc => I, Pos: [24, 27] cc => I, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [28, 35, 41] ccc => cc, Pos: [32, 38] cc => I, Pos: [32, 38] cc => I, Pos: [34, 37] cc => I, Pos: [34, 37] cc => I, Pos: [35, 41, 47] ccc => cc, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [55, 60] cc => I, Pos: [55, 60] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [69, 77] cc => I, Pos: [69, 77] cc => I, Pos: [72, 79] cc => I, Pos: [72, 79] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [76, 82] cc => I, Pos: [76, 82] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [80, 86] cc => I, Pos: [80, 86] cc => I, Pos: [91, 95] cc => I, Pos: [91, 95] cc => I, Pos: [106, 109, 118] ccc => cc, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [116, 123] cc => I, Pos: [116, 123] cc => I, Pos: [120, 124] cc => I, Pos: [120, 124] cc => I, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [146, 156] cc => I, Pos: [146, 156] cc => I, Pos: [151, 154] cc => I, Pos: [151, 154] cc => I, Pos: [167, 175] cc => I, Pos: [167, 175] cc => I, Pos: [168, 171] cc => I, Pos: [168, 171] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [175, 194] cc => I, Pos: [175, 194] cc => I, Pos: [198, 202] cc => I, Pos: [198, 202] cc => I, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [207, 234] cc => I, Pos: [207, 234] cc => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [223, 226] cc => I, Pos: [223, 226] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [226, 232] cc => I, Pos: [226, 232] cc => I, Pos: [227, 236] cc => I, Pos: [227, 236] cc => I, Pos: [233, 239] cc => I, Pos: [233, 239] cc => I, Pos: [238, 244] cc => I, Pos: [238, 244] cc => I, Pos: [239, 249] cc => I, Pos: [239, 249] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 268] cc => I, Pos: [245, 268] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 253] cc => I, Pos: [251, 253] cc => I, Pos: [255, 258] cc => I, Pos: [255, 258] cc => I, Pos: [257, 263] cc => I, Pos: [257, 263] cc => I]

--------End Timer [Generate Plans]:  0.12500929832458496

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 11] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [13, 23] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [28, 35, 41] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [226, 232] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [233, 239] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [13, 23] cc => I
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [28, 35, 41] ccc => cc
Apply:  Pos: [32, 38] cc => I
Apply:  Pos: [34, 37] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [77, 83] cc => I
Apply:  Pos: [72, 79] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [76, 82] cc => I
Apply:  Pos: [91, 95] cc => I
Apply:  Pos: [106, 109, 118] ccc => cc
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [116, 123] cc => I
Apply:  Pos: [120, 124] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [146, 156] cc => I
Apply:  Pos: [151, 154] cc => I
Apply:  Pos: [167, 175] cc => I
Apply:  Pos: [168, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [198, 202] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [207, 234] cc => I
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [226, 232] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 236] cc => I
Apply:  Pos: [233, 239] cc => I
Apply:  Pos: [244, 252] cc => I
Apply:  Pos: [245, 268] cc => I
Apply:  Pos: [250, 255] cc => I
Apply:  Pos: [251, 253] cc => I
Apply:  Pos: [257, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [6, 5], [10, 7], [2, 11], [10, 1], [12, 7], [15, 16], [18, 14], [5, 14], [9, 6], [7, 0], [3, 11], [1, 14], [5, 2], [17, 12], [2, 19], [0, 11], [15, 9], [1, 14], [13, 8], [9, 5], [6, 17], [9, 6], [15, 16], [9, 13], [5, 1], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 7], [10, 2], [17, 7], [4, 18], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  5.327281713485718

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 25]
[13, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 25]
[13, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.235203981399536

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 30] cc => I, Pos: [13, 30] cc => I, Pos: [19, 25] cc => I, Pos: [19, 25] cc => I, Pos: [23, 35] cc => I, Pos: [23, 35] cc => I, Pos: [62, 91] cc => I, Pos: [62, 91] cc => I, Pos: [90, 130] cc => I, Pos: [90, 130] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 30] cc => I,
 Pos: [19, 25] cc => I,
 Pos: [23, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 30] cc => I
Apply:  Pos: [19, 25] cc => I
Apply:  Pos: [23, 35] cc => I
Apply:  Pos: [62, 91] cc => I
Apply:  Pos: [90, 130] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [6, 5], [10, 7], [2, 11], [10, 1], [12, 7], [5, 14], [18, 14], [9, 6], [7, 0], [3, 11], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 2], [17, 7], [10, 7], [4, 18], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [9, 5], [6, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.235203981399536

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 30]
[17, 32]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 125, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[147, 148, 152]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 30]
[17, 32]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.0002479553222656

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 30] cc => I, Pos: [7, 30] cc => I, Pos: [17, 32] cc => I, Pos: [17, 32] cc => I, Pos: [121, 125, 126] ccc => cc, Pos: [147, 148, 152] ccc => cc]

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 30] cc => I,
 Pos: [17, 32] cc => I,
 Pos: [121, 125, 126] ccc => cc,
 Pos: [147, 148, 152] ccc => cc]
Change: 4, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 30] cc => I
Apply:  Pos: [17, 32] cc => I
Apply:  Pos: [121, 125, 126] ccc => cc
Apply:  Pos: [147, 148, 152] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [6, 5], [10, 7], [2, 11], [10, 1], [12, 7], [18, 14], [5, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 13], [9, 6], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 2], [17, 10], [10, 7], [4, 18], [1, 2], [16, 13], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.0158727169036865

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.860332727432251

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [6, 5], [10, 7], [2, 11], [10, 1], [12, 7], [5, 14], [18, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 2], [17, 10], [10, 7], [4, 18], [1, 2], [16, 13], [0, 19], [9, 13], [2, 0], [10, 1], [9, 5], [6, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.860332727432251

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [164] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 328

Reduced: 
 - size: 106 (39.26%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12465190887451172

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [0, 11], [12, 7], [2, 19], [8, 14], [16, 4], [6, 5], [0, 11], [13, 4], [6, 5], [10, 7], [2, 19], [8, 3], [18, 14], [2, 11], [10, 1], [13, 4], [12, 7], [15, 16], [6, 5], [18, 14], [10, 2], [8, 3], [18, 14], [5, 1], [9, 6], [7, 0], [10, 2], [0, 19], [3, 11], [16, 4], [1, 14], [5, 2], [16, 4], [0, 19], [6, 13], [17, 12], [5, 1], [2, 19], [0, 11], [15, 9], [4, 18], [6, 13], [1, 14], [4, 18], [13, 8], [9, 5], [6, 17], [1, 14], [9, 6], [15, 16], [11, 19], [10, 2], [1, 14], [9, 13], [12, 7], [11, 19], [10, 2], [5, 1], [12, 7], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [0, 19], [16, 13], [5, 2], [17, 7], [9, 13], [3, 11], [12, 10], [0, 19], [5, 2], [16, 8], [9, 13], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [1, 3], [12, 7], [13, 5], [16, 4], [1, 3], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 18], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [11, 19], [4, 8], [6, 13], [17, 10], [13, 5], [4, 18], [2, 0], [15, 9], [11, 19], [8, 1], [17, 10], [15, 9], [16, 4], [2, 19], [0, 11], [8, 3], [18, 14], [6, 5], [17, 7], [10, 2], [18, 14], [16, 13], [9, 5], [0, 19], [17, 7], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [13, 4], [9, 6], [16, 8], [10, 1], [3, 11], [2, 0], [17, 12], [15, 9], [2, 0], [1, 14], [13, 4], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [4, 18], [10, 2], [12, 7], [9, 13], [10, 2], [6, 5], [0, 19], [12, 7], [4, 18], [3, 11], [15, 16], [15, 9], [6, 5], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [17, 12], [7, 0], [13, 8], [8, 3], [17, 12], [0, 19], [5, 2], [16, 4], [8, 14], [15, 9], [17, 7], [16, 4], [6, 13], [2, 0], [3, 11], [5, 10], [4, 8], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [4, 8], [13, 5], [12, 7], [0, 11], [17, 10], [16, 4], [0, 11], [8, 14], [2, 19], [6, 13], [10, 7], [16, 4], [0, 11], [6, 5], [15, 9], [10, 2], [8, 14], [17, 7], [4, 18], [6, 5], [1, 2], [16, 13], [17, 10], [0, 19], [4, 18], [15, 16], [9, 13], [2, 0], [10, 1], [6, 5], [11, 19], [8, 3], [4, 18], [8, 3], [9, 5], [11, 19], [1, 2], [18, 14], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [18, 14], [12, 7], [6, 13], [9, 5], [0, 19], [15, 16], [1, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 35, 41]
[106, 109, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[35, 41, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.234311103820801

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 27] cc => I, Pos: [24, 27] cc => I, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [28, 35, 41] ccc => cc, Pos: [32, 38] cc => I, Pos: [32, 38] cc => I, Pos: [34, 37] cc => I, Pos: [34, 37] cc => I, Pos: [35, 41, 47] ccc => cc, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [55, 60] cc => I, Pos: [55, 60] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [69, 77] cc => I, Pos: [69, 77] cc => I, Pos: [72, 79] cc => I, Pos: [72, 79] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [76, 82] cc => I, Pos: [76, 82] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [80, 86] cc => I, Pos: [80, 86] cc => I, Pos: [91, 95] cc => I, Pos: [91, 95] cc => I, Pos: [106, 109, 118] ccc => cc, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [116, 123] cc => I, Pos: [116, 123] cc => I, Pos: [120, 124] cc => I, Pos: [120, 124] cc => I, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [146, 156] cc => I, Pos: [146, 156] cc => I, Pos: [151, 154] cc => I, Pos: [151, 154] cc => I, Pos: [167, 175] cc => I, Pos: [167, 175] cc => I, Pos: [168, 171] cc => I, Pos: [168, 171] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [175, 194] cc => I, Pos: [175, 194] cc => I, Pos: [198, 202] cc => I, Pos: [198, 202] cc => I, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [207, 234] cc => I, Pos: [207, 234] cc => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [223, 226] cc => I, Pos: [223, 226] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [226, 232] cc => I, Pos: [226, 232] cc => I, Pos: [227, 236] cc => I, Pos: [227, 236] cc => I, Pos: [233, 239] cc => I, Pos: [233, 239] cc => I, Pos: [238, 244] cc => I, Pos: [238, 244] cc => I, Pos: [239, 249] cc => I, Pos: [239, 249] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 268] cc => I, Pos: [245, 268] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 253] cc => I, Pos: [251, 253] cc => I, Pos: [255, 258] cc => I, Pos: [255, 258] cc => I, Pos: [257, 263] cc => I, Pos: [257, 263] cc => I]

--------End Timer [Generate Plans]:  0.12508034706115723

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 11] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [28, 35, 41] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [226, 232] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [239, 249] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [255, 258] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [28, 35, 41] ccc => cc
Apply:  Pos: [32, 38] cc => I
Apply:  Pos: [34, 37] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [55, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [77, 83] cc => I
Apply:  Pos: [72, 79] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [76, 82] cc => I
Apply:  Pos: [91, 95] cc => I
Apply:  Pos: [106, 109, 118] ccc => cc
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [116, 123] cc => I
Apply:  Pos: [120, 124] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [146, 156] cc => I
Apply:  Pos: [151, 154] cc => I
Apply:  Pos: [167, 175] cc => I
Apply:  Pos: [168, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [198, 202] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [207, 234] cc => I
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [226, 232] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 236] cc => I
Apply:  Pos: [239, 249] cc => I
Apply:  Pos: [244, 252] cc => I
Apply:  Pos: [245, 268] cc => I
Apply:  Pos: [255, 258] cc => I
Apply:  Pos: [251, 253] cc => I
Apply:  Pos: [257, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [10, 7], [2, 11], [10, 1], [12, 7], [15, 16], [6, 5], [18, 14], [5, 14], [9, 6], [7, 0], [3, 11], [1, 14], [5, 2], [17, 12], [2, 19], [0, 11], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [15, 16], [1, 14], [9, 13], [5, 1], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 7], [6, 5], [10, 2], [17, 7], [4, 18], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  5.359391450881958

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2188854217529297

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 29] cc => I, Pos: [12, 29] cc => I, Pos: [19, 30] cc => I, Pos: [19, 30] cc => I, Pos: [23, 35] cc => I, Pos: [23, 35] cc => I, Pos: [62, 91] cc => I, Pos: [62, 91] cc => I, Pos: [90, 130] cc => I, Pos: [90, 130] cc => I]

--------End Timer [Generate Plans]:  0.015521526336669922

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 29] cc => I,
 Pos: [19, 30] cc => I,
 Pos: [23, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 29] cc => I
Apply:  Pos: [19, 30] cc => I
Apply:  Pos: [23, 35] cc => I
Apply:  Pos: [62, 91] cc => I
Apply:  Pos: [90, 130] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [18, 14], [9, 6], [7, 0], [3, 11], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 7], [6, 5], [10, 2], [17, 7], [4, 18], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.2344069480895996

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 30]
[17, 32]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 125, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 30]
[17, 32]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9690163135528564

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 30] cc => I, Pos: [7, 30] cc => I, Pos: [17, 32] cc => I, Pos: [17, 32] cc => I, Pos: [121, 125, 126] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 30] cc => I, Pos: [17, 32] cc => I, Pos: [121, 125, 126] ccc => cc]
Change: 3, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 30] cc => I
Apply:  Pos: [17, 32] cc => I
Apply:  Pos: [121, 125, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [18, 14], [5, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 13], [9, 6], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 7], [6, 5], [10, 2], [17, 7], [4, 18], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.9690163135528564

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8592326641082764

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [18, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 7], [6, 5], [10, 2], [17, 7], [4, 18], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.8592326641082764

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [165] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 330

Reduced: 
 - size: 105 (38.89%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375286102294922

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [0, 11], [12, 7], [2, 19], [8, 14], [16, 4], [6, 5], [0, 11], [13, 4], [6, 5], [10, 7], [2, 19], [8, 3], [18, 14], [2, 11], [10, 1], [13, 4], [12, 7], [15, 16], [6, 5], [18, 14], [10, 2], [8, 3], [18, 14], [5, 1], [9, 6], [7, 0], [10, 2], [0, 19], [3, 11], [16, 4], [1, 14], [5, 2], [16, 4], [0, 19], [6, 13], [17, 12], [5, 1], [2, 19], [0, 11], [15, 9], [4, 18], [6, 13], [1, 14], [4, 18], [13, 8], [9, 5], [6, 17], [1, 14], [9, 6], [15, 16], [11, 19], [10, 2], [1, 14], [9, 13], [12, 7], [11, 19], [10, 2], [5, 1], [12, 7], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [0, 19], [16, 13], [5, 2], [17, 7], [9, 13], [3, 11], [12, 10], [0, 19], [5, 2], [16, 8], [9, 13], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [1, 3], [12, 7], [13, 5], [16, 4], [1, 3], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 18], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [11, 19], [4, 8], [6, 13], [17, 10], [13, 5], [4, 18], [2, 0], [15, 9], [11, 19], [8, 1], [17, 10], [15, 9], [16, 4], [2, 19], [0, 11], [8, 3], [18, 14], [6, 5], [17, 7], [10, 2], [18, 14], [16, 13], [9, 5], [0, 19], [17, 7], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [13, 4], [9, 6], [16, 8], [10, 1], [3, 11], [2, 0], [17, 12], [15, 9], [2, 0], [1, 14], [13, 4], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [4, 18], [10, 2], [12, 7], [9, 13], [10, 2], [6, 5], [0, 19], [12, 7], [4, 18], [3, 11], [15, 16], [15, 9], [6, 5], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [17, 12], [7, 0], [13, 8], [8, 3], [17, 12], [0, 19], [5, 2], [16, 4], [8, 14], [15, 9], [17, 7], [16, 4], [6, 13], [2, 0], [3, 11], [5, 10], [4, 8], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [4, 8], [13, 5], [12, 7], [0, 11], [17, 10], [16, 4], [0, 11], [8, 14], [2, 19], [6, 13], [10, 7], [16, 4], [0, 11], [6, 5], [15, 9], [10, 2], [8, 14], [17, 7], [4, 18], [6, 5], [1, 2], [16, 13], [17, 10], [0, 19], [4, 18], [15, 16], [9, 13], [2, 0], [10, 1], [6, 5], [11, 19], [8, 3], [4, 18], [8, 3], [9, 5], [11, 19], [1, 2], [18, 14], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [18, 14], [12, 7], [6, 13], [9, 5], [0, 19], [15, 16], [1, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 35, 41]
[106, 109, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[35, 41, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.15647029876709

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 27] cc => I, Pos: [24, 27] cc => I, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [28, 35, 41] ccc => cc, Pos: [32, 38] cc => I, Pos: [32, 38] cc => I, Pos: [34, 37] cc => I, Pos: [34, 37] cc => I, Pos: [35, 41, 47] ccc => cc, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [55, 60] cc => I, Pos: [55, 60] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [69, 77] cc => I, Pos: [69, 77] cc => I, Pos: [72, 79] cc => I, Pos: [72, 79] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [76, 82] cc => I, Pos: [76, 82] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [80, 86] cc => I, Pos: [80, 86] cc => I, Pos: [91, 95] cc => I, Pos: [91, 95] cc => I, Pos: [106, 109, 118] ccc => cc, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [116, 123] cc => I, Pos: [116, 123] cc => I, Pos: [120, 124] cc => I, Pos: [120, 124] cc => I, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [146, 156] cc => I, Pos: [146, 156] cc => I, Pos: [151, 154] cc => I, Pos: [151, 154] cc => I, Pos: [167, 175] cc => I, Pos: [167, 175] cc => I, Pos: [168, 171] cc => I, Pos: [168, 171] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [175, 194] cc => I, Pos: [175, 194] cc => I, Pos: [198, 202] cc => I, Pos: [198, 202] cc => I, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [207, 234] cc => I, Pos: [207, 234] cc => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [223, 226] cc => I, Pos: [223, 226] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [226, 232] cc => I, Pos: [226, 232] cc => I, Pos: [227, 236] cc => I, Pos: [227, 236] cc => I, Pos: [233, 239] cc => I, Pos: [233, 239] cc => I, Pos: [238, 244] cc => I, Pos: [238, 244] cc => I, Pos: [239, 249] cc => I, Pos: [239, 249] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 268] cc => I, Pos: [245, 268] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 253] cc => I, Pos: [251, 253] cc => I, Pos: [255, 258] cc => I, Pos: [255, 258] cc => I, Pos: [257, 263] cc => I, Pos: [257, 263] cc => I]

--------End Timer [Generate Plans]:  0.10959005355834961

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 11] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [13, 23] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [24, 27] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [28, 35, 41] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [80, 86] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [223, 226] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [239, 249] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [255, 258] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [13, 23] cc => I
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [24, 27] cc => I
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [28, 35, 41] ccc => cc
Apply:  Pos: [32, 38] cc => I
Apply:  Pos: [34, 37] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [77, 83] cc => I
Apply:  Pos: [72, 79] cc => I
Apply:  Pos: [80, 86] cc => I
Apply:  Pos: [76, 82] cc => I
Apply:  Pos: [91, 95] cc => I
Apply:  Pos: [106, 109, 118] ccc => cc
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [116, 123] cc => I
Apply:  Pos: [120, 124] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [146, 156] cc => I
Apply:  Pos: [151, 154] cc => I
Apply:  Pos: [167, 175] cc => I
Apply:  Pos: [168, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [198, 202] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [207, 234] cc => I
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [223, 226] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 236] cc => I
Apply:  Pos: [239, 249] cc => I
Apply:  Pos: [244, 252] cc => I
Apply:  Pos: [245, 268] cc => I
Apply:  Pos: [255, 258] cc => I
Apply:  Pos: [251, 253] cc => I
Apply:  Pos: [257, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [6, 5], [10, 7], [18, 14], [2, 11], [10, 1], [12, 7], [15, 16], [5, 14], [9, 6], [7, 0], [3, 11], [1, 14], [5, 2], [17, 12], [2, 19], [0, 11], [15, 9], [1, 14], [13, 8], [9, 5], [6, 17], [9, 6], [15, 16], [9, 13], [5, 1], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [6, 5], [10, 2], [17, 7], [4, 18], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  5.2660603523254395

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 25]
[14, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 25]
[14, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1720006465911865

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 30] cc => I, Pos: [14, 30] cc => I, Pos: [19, 25] cc => I, Pos: [19, 25] cc => I, Pos: [23, 35] cc => I, Pos: [23, 35] cc => I, Pos: [62, 91] cc => I, Pos: [62, 91] cc => I, Pos: [90, 130] cc => I, Pos: [90, 130] cc => I]

--------End Timer [Generate Plans]:  0.015642404556274414

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 30] cc => I,
 Pos: [19, 25] cc => I,
 Pos: [23, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 30] cc => I
Apply:  Pos: [19, 25] cc => I
Apply:  Pos: [23, 35] cc => I
Apply:  Pos: [62, 91] cc => I
Apply:  Pos: [90, 130] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [6, 5], [10, 7], [18, 14], [2, 11], [10, 1], [12, 7], [5, 14], [9, 6], [7, 0], [3, 11], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [6, 5], [10, 2], [17, 7], [4, 18], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.187643051147461

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 30]
[17, 32]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 125, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 30]
[17, 32]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.93780779838562

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 30] cc => I, Pos: [7, 30] cc => I, Pos: [17, 32] cc => I, Pos: [17, 32] cc => I, Pos: [121, 125, 126] ccc => cc]

--------End Timer [Generate Plans]:  0.015619277954101562

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 30] cc => I, Pos: [17, 32] cc => I, Pos: [121, 125, 126] ccc => cc]
Change: 3, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 30] cc => I
Apply:  Pos: [17, 32] cc => I
Apply:  Pos: [121, 125, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [6, 5], [10, 7], [18, 14], [2, 11], [10, 1], [12, 7], [5, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 13], [9, 6], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [6, 5], [10, 2], [17, 7], [4, 18], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.9534270763397217

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.823099136352539

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [6, 5], [10, 7], [18, 14], [2, 11], [10, 1], [12, 7], [5, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [6, 5], [10, 2], [17, 7], [4, 18], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.823099136352539

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [165] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 330

Reduced: 
 - size: 105 (38.89%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09373784065246582

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [0, 11], [12, 7], [2, 19], [8, 14], [16, 4], [6, 5], [0, 11], [13, 4], [6, 5], [10, 7], [2, 19], [8, 3], [18, 14], [2, 11], [10, 1], [13, 4], [12, 7], [15, 16], [6, 5], [18, 14], [10, 2], [8, 3], [18, 14], [5, 1], [9, 6], [7, 0], [10, 2], [0, 19], [3, 11], [16, 4], [1, 14], [5, 2], [16, 4], [0, 19], [6, 13], [17, 12], [5, 1], [2, 19], [0, 11], [15, 9], [4, 18], [6, 13], [1, 14], [4, 18], [13, 8], [9, 5], [6, 17], [1, 14], [9, 6], [15, 16], [11, 19], [10, 2], [1, 14], [9, 13], [12, 7], [11, 19], [10, 2], [5, 1], [12, 7], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [0, 19], [16, 13], [5, 2], [17, 7], [9, 13], [3, 11], [12, 10], [0, 19], [5, 2], [16, 8], [9, 13], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [1, 3], [12, 7], [13, 5], [16, 4], [1, 3], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 18], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [11, 19], [4, 8], [6, 13], [17, 10], [13, 5], [4, 18], [2, 0], [15, 9], [11, 19], [8, 1], [17, 10], [15, 9], [16, 4], [2, 19], [0, 11], [8, 3], [18, 14], [6, 5], [17, 7], [10, 2], [18, 14], [16, 13], [9, 5], [0, 19], [17, 7], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [13, 4], [9, 6], [16, 8], [10, 1], [3, 11], [2, 0], [17, 12], [15, 9], [2, 0], [1, 14], [13, 4], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [4, 18], [10, 2], [12, 7], [9, 13], [10, 2], [6, 5], [0, 19], [12, 7], [4, 18], [3, 11], [15, 16], [15, 9], [6, 5], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [17, 12], [7, 0], [13, 8], [8, 3], [17, 12], [0, 19], [5, 2], [16, 4], [8, 14], [15, 9], [17, 7], [16, 4], [6, 13], [2, 0], [3, 11], [5, 10], [4, 8], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [4, 8], [13, 5], [12, 7], [0, 11], [17, 10], [16, 4], [0, 11], [8, 14], [2, 19], [6, 13], [10, 7], [16, 4], [0, 11], [6, 5], [15, 9], [10, 2], [8, 14], [17, 7], [4, 18], [6, 5], [1, 2], [16, 13], [17, 10], [0, 19], [4, 18], [15, 16], [9, 13], [2, 0], [10, 1], [6, 5], [11, 19], [8, 3], [4, 18], [8, 3], [9, 5], [11, 19], [1, 2], [18, 14], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [18, 14], [12, 7], [6, 13], [9, 5], [0, 19], [15, 16], [1, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 35, 41]
[106, 109, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[35, 41, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.249342441558838

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 27] cc => I, Pos: [24, 27] cc => I, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [28, 35, 41] ccc => cc, Pos: [32, 38] cc => I, Pos: [32, 38] cc => I, Pos: [34, 37] cc => I, Pos: [34, 37] cc => I, Pos: [35, 41, 47] ccc => cc, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [55, 60] cc => I, Pos: [55, 60] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [69, 77] cc => I, Pos: [69, 77] cc => I, Pos: [72, 79] cc => I, Pos: [72, 79] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [76, 82] cc => I, Pos: [76, 82] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [80, 86] cc => I, Pos: [80, 86] cc => I, Pos: [91, 95] cc => I, Pos: [91, 95] cc => I, Pos: [106, 109, 118] ccc => cc, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [116, 123] cc => I, Pos: [116, 123] cc => I, Pos: [120, 124] cc => I, Pos: [120, 124] cc => I, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [146, 156] cc => I, Pos: [146, 156] cc => I, Pos: [151, 154] cc => I, Pos: [151, 154] cc => I, Pos: [167, 175] cc => I, Pos: [167, 175] cc => I, Pos: [168, 171] cc => I, Pos: [168, 171] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [175, 194] cc => I, Pos: [175, 194] cc => I, Pos: [198, 202] cc => I, Pos: [198, 202] cc => I, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [207, 234] cc => I, Pos: [207, 234] cc => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [223, 226] cc => I, Pos: [223, 226] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [226, 232] cc => I, Pos: [226, 232] cc => I, Pos: [227, 236] cc => I, Pos: [227, 236] cc => I, Pos: [233, 239] cc => I, Pos: [233, 239] cc => I, Pos: [238, 244] cc => I, Pos: [238, 244] cc => I, Pos: [239, 249] cc => I, Pos: [239, 249] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 268] cc => I, Pos: [245, 268] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 253] cc => I, Pos: [251, 253] cc => I, Pos: [255, 258] cc => I, Pos: [255, 258] cc => I, Pos: [257, 263] cc => I, Pos: [257, 263] cc => I]

--------End Timer [Generate Plans]:  0.12499141693115234

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [13, 23] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [35, 41, 47] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [69, 77] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [80, 86] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [223, 226] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [239, 249] cc => I,
 Pos: [238, 244] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [255, 258] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 45

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [13, 23] cc => I
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [35, 41, 47] ccc => cc
Apply:  Pos: [32, 38] cc => I
Apply:  Pos: [34, 37] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [69, 77] cc => I
Apply:  Pos: [72, 79] cc => I
Apply:  Pos: [80, 86] cc => I
Apply:  Pos: [76, 82] cc => I
Apply:  Pos: [91, 95] cc => I
Apply:  Pos: [106, 109, 118] ccc => cc
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [116, 123] cc => I
Apply:  Pos: [120, 124] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [146, 156] cc => I
Apply:  Pos: [151, 154] cc => I
Apply:  Pos: [167, 175] cc => I
Apply:  Pos: [168, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [198, 202] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [207, 234] cc => I
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [223, 226] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 236] cc => I
Apply:  Pos: [239, 249] cc => I
Apply:  Pos: [238, 244] cc => I
Apply:  Pos: [245, 268] cc => I
Apply:  Pos: [255, 258] cc => I
Apply:  Pos: [251, 253] cc => I
Apply:  Pos: [257, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [6, 5], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [15, 16], [18, 14], [5, 1], [9, 6], [7, 0], [3, 11], [5, 1], [5, 2], [17, 12], [1, 14], [2, 19], [0, 11], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [15, 16], [9, 13], [5, 1], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [3, 11], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [6, 5], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [4, 18], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  5.37433385848999

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[15, 20]
[13, 30]
[24, 35]
[62, 91]
[90, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[15, 20]
[13, 30]
[24, 35]
[62, 91]
[90, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.344311475753784

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 30] cc => I, Pos: [13, 30] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [24, 35] cc => I, Pos: [24, 35] cc => I, Pos: [62, 91] cc => I, Pos: [62, 91] cc => I, Pos: [90, 130] cc => I, Pos: [90, 130] cc => I]

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 30] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [24, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 30] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [24, 35] cc => I
Apply:  Pos: [62, 91] cc => I
Apply:  Pos: [90, 130] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [6, 5], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [18, 14], [9, 6], [7, 0], [3, 11], [5, 2], [17, 12], [1, 14], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [16, 4], [1, 2], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [3, 11], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [6, 5], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [4, 18], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.359936237335205

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 30]
[16, 39]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 125, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 30]
[16, 39]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.0158531665802

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 30] cc => I, Pos: [6, 30] cc => I, Pos: [16, 39] cc => I, Pos: [16, 39] cc => I, Pos: [121, 125, 126] ccc => cc]

--------End Timer [Generate Plans]:  0.015611886978149414

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 30] cc => I, Pos: [16, 39] cc => I, Pos: [121, 125, 126] ccc => cc]
Change: 3, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 30] cc => I
Apply:  Pos: [16, 39] cc => I
Apply:  Pos: [121, 125, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [6, 5], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [18, 14], [9, 6], [7, 0], [5, 2], [17, 12], [1, 14], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 13], [9, 6], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [6, 5], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [4, 18], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.0314650535583496

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9380853176116943

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [6, 5], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [18, 14], [9, 6], [7, 0], [5, 2], [17, 12], [1, 14], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [6, 5], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [4, 18], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.9380853176116943

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [165] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 330

Reduced: 
 - size: 105 (38.89%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10951972007751465

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [0, 11], [12, 7], [2, 19], [8, 14], [16, 4], [6, 5], [0, 11], [13, 4], [6, 5], [10, 7], [2, 19], [8, 3], [18, 14], [2, 11], [10, 1], [13, 4], [12, 7], [15, 16], [6, 5], [18, 14], [10, 2], [8, 3], [18, 14], [5, 1], [9, 6], [7, 0], [10, 2], [0, 19], [3, 11], [16, 4], [1, 14], [5, 2], [16, 4], [0, 19], [6, 13], [17, 12], [5, 1], [2, 19], [0, 11], [15, 9], [4, 18], [6, 13], [1, 14], [4, 18], [13, 8], [9, 5], [6, 17], [1, 14], [9, 6], [15, 16], [11, 19], [10, 2], [1, 14], [9, 13], [12, 7], [11, 19], [10, 2], [5, 1], [12, 7], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [0, 19], [16, 13], [5, 2], [17, 7], [9, 13], [3, 11], [12, 10], [0, 19], [5, 2], [16, 8], [9, 13], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [1, 3], [12, 7], [13, 5], [16, 4], [1, 3], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 18], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [11, 19], [4, 8], [6, 13], [17, 10], [13, 5], [4, 18], [2, 0], [15, 9], [11, 19], [8, 1], [17, 10], [15, 9], [16, 4], [2, 19], [0, 11], [8, 3], [18, 14], [6, 5], [17, 7], [10, 2], [18, 14], [16, 13], [9, 5], [0, 19], [17, 7], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [13, 4], [9, 6], [16, 8], [10, 1], [3, 11], [2, 0], [17, 12], [15, 9], [2, 0], [1, 14], [13, 4], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [4, 18], [10, 2], [12, 7], [9, 13], [10, 2], [6, 5], [0, 19], [12, 7], [4, 18], [3, 11], [15, 16], [15, 9], [6, 5], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [17, 12], [7, 0], [13, 8], [8, 3], [17, 12], [0, 19], [5, 2], [16, 4], [8, 14], [15, 9], [17, 7], [16, 4], [6, 13], [2, 0], [3, 11], [5, 10], [4, 8], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [4, 8], [13, 5], [12, 7], [0, 11], [17, 10], [16, 4], [0, 11], [8, 14], [2, 19], [6, 13], [10, 7], [16, 4], [0, 11], [6, 5], [15, 9], [10, 2], [8, 14], [17, 7], [4, 18], [6, 5], [1, 2], [16, 13], [17, 10], [0, 19], [4, 18], [15, 16], [9, 13], [2, 0], [10, 1], [6, 5], [11, 19], [8, 3], [4, 18], [8, 3], [9, 5], [11, 19], [1, 2], [18, 14], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [18, 14], [12, 7], [6, 13], [9, 5], [0, 19], [15, 16], [1, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 35, 41]
[106, 109, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[35, 41, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.218641996383667

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 27] cc => I, Pos: [24, 27] cc => I, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [28, 35, 41] ccc => cc, Pos: [32, 38] cc => I, Pos: [32, 38] cc => I, Pos: [34, 37] cc => I, Pos: [34, 37] cc => I, Pos: [35, 41, 47] ccc => cc, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [55, 60] cc => I, Pos: [55, 60] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [69, 77] cc => I, Pos: [69, 77] cc => I, Pos: [72, 79] cc => I, Pos: [72, 79] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [76, 82] cc => I, Pos: [76, 82] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [80, 86] cc => I, Pos: [80, 86] cc => I, Pos: [91, 95] cc => I, Pos: [91, 95] cc => I, Pos: [106, 109, 118] ccc => cc, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [116, 123] cc => I, Pos: [116, 123] cc => I, Pos: [120, 124] cc => I, Pos: [120, 124] cc => I, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [146, 156] cc => I, Pos: [146, 156] cc => I, Pos: [151, 154] cc => I, Pos: [151, 154] cc => I, Pos: [167, 175] cc => I, Pos: [167, 175] cc => I, Pos: [168, 171] cc => I, Pos: [168, 171] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [175, 194] cc => I, Pos: [175, 194] cc => I, Pos: [198, 202] cc => I, Pos: [198, 202] cc => I, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [207, 234] cc => I, Pos: [207, 234] cc => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [223, 226] cc => I, Pos: [223, 226] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [226, 232] cc => I, Pos: [226, 232] cc => I, Pos: [227, 236] cc => I, Pos: [227, 236] cc => I, Pos: [233, 239] cc => I, Pos: [233, 239] cc => I, Pos: [238, 244] cc => I, Pos: [238, 244] cc => I, Pos: [239, 249] cc => I, Pos: [239, 249] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 268] cc => I, Pos: [245, 268] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 253] cc => I, Pos: [251, 253] cc => I, Pos: [255, 258] cc => I, Pos: [255, 258] cc => I, Pos: [257, 263] cc => I, Pos: [257, 263] cc => I]

--------End Timer [Generate Plans]:  0.12499189376831055

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [24, 27] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [28, 35, 41] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [69, 77] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [175, 194] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [226, 232] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [239, 249] cc => I,
 Pos: [238, 244] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [255, 258] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [24, 27] cc => I
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [28, 35, 41] ccc => cc
Apply:  Pos: [32, 38] cc => I
Apply:  Pos: [34, 37] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [55, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [69, 77] cc => I
Apply:  Pos: [72, 79] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [76, 82] cc => I
Apply:  Pos: [91, 95] cc => I
Apply:  Pos: [106, 109, 118] ccc => cc
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [116, 123] cc => I
Apply:  Pos: [120, 124] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [146, 156] cc => I
Apply:  Pos: [151, 154] cc => I
Apply:  Pos: [175, 194] cc => I
Apply:  Pos: [168, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [198, 202] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [207, 234] cc => I
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [226, 232] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 236] cc => I
Apply:  Pos: [239, 249] cc => I
Apply:  Pos: [238, 244] cc => I
Apply:  Pos: [245, 268] cc => I
Apply:  Pos: [255, 258] cc => I
Apply:  Pos: [251, 253] cc => I
Apply:  Pos: [257, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [0, 11], [10, 7], [18, 14], [2, 11], [10, 1], [12, 7], [15, 16], [6, 5], [5, 14], [9, 6], [7, 0], [3, 11], [1, 14], [5, 2], [17, 12], [2, 19], [0, 11], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [15, 16], [1, 14], [9, 13], [5, 1], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [4, 18], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 7], [6, 5], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [4, 18], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  5.3436338901519775

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 111]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[131, 135, 136]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 111]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.218787431716919

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 29] cc => I, Pos: [13, 29] cc => I, Pos: [19, 30] cc => I, Pos: [19, 30] cc => I, Pos: [23, 35] cc => I, Pos: [23, 35] cc => I, Pos: [62, 91] cc => I, Pos: [62, 91] cc => I, Pos: [90, 111] cc => I, Pos: [90, 111] cc => I, Pos: [131, 135, 136] ccc => cc]

--------End Timer [Generate Plans]:  0.015611410140991211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 29] cc => I,
 Pos: [19, 30] cc => I,
 Pos: [23, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 111] cc => I,
 Pos: [131, 135, 136] ccc => cc]
Change: 6, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 29] cc => I
Apply:  Pos: [19, 30] cc => I
Apply:  Pos: [23, 35] cc => I
Apply:  Pos: [62, 91] cc => I
Apply:  Pos: [90, 111] cc => I
Apply:  Pos: [131, 135, 136] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [0, 11], [10, 7], [18, 14], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [9, 6], [7, 0], [3, 11], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [16, 4], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 7], [6, 5], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [4, 18], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.23439884185791

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 30]
[17, 38]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 30]
[17, 38]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9843461513519287

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 30] cc => I, Pos: [6, 30] cc => I, Pos: [17, 38] cc => I, Pos: [17, 38] cc => I]

--------End Timer [Generate Plans]:  0.015629291534423828

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 30] cc => I, Pos: [17, 38] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 30] cc => I
Apply:  Pos: [17, 38] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [0, 11], [10, 7], [18, 14], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 13], [9, 6], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 7], [6, 5], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [4, 18], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.9999754428863525

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.874946355819702

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [0, 11], [10, 7], [18, 14], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 7], [6, 5], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [4, 18], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.874946355819702

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [165] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 330

Reduced: 
 - size: 105 (38.89%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935044288635254

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [0, 11], [12, 7], [2, 19], [8, 14], [16, 4], [6, 5], [0, 11], [13, 4], [6, 5], [10, 7], [2, 19], [8, 3], [18, 14], [2, 11], [10, 1], [13, 4], [12, 7], [15, 16], [6, 5], [18, 14], [10, 2], [8, 3], [18, 14], [5, 1], [9, 6], [7, 0], [10, 2], [0, 19], [3, 11], [16, 4], [1, 14], [5, 2], [16, 4], [0, 19], [6, 13], [17, 12], [5, 1], [2, 19], [0, 11], [15, 9], [4, 18], [6, 13], [1, 14], [4, 18], [13, 8], [9, 5], [6, 17], [1, 14], [9, 6], [15, 16], [11, 19], [10, 2], [1, 14], [9, 13], [12, 7], [11, 19], [10, 2], [5, 1], [12, 7], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [0, 19], [16, 13], [5, 2], [17, 7], [9, 13], [3, 11], [12, 10], [0, 19], [5, 2], [16, 8], [9, 13], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [1, 3], [12, 7], [13, 5], [16, 4], [1, 3], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 18], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [11, 19], [4, 8], [6, 13], [17, 10], [13, 5], [4, 18], [2, 0], [15, 9], [11, 19], [8, 1], [17, 10], [15, 9], [16, 4], [2, 19], [0, 11], [8, 3], [18, 14], [6, 5], [17, 7], [10, 2], [18, 14], [16, 13], [9, 5], [0, 19], [17, 7], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [13, 4], [9, 6], [16, 8], [10, 1], [3, 11], [2, 0], [17, 12], [15, 9], [2, 0], [1, 14], [13, 4], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [4, 18], [10, 2], [12, 7], [9, 13], [10, 2], [6, 5], [0, 19], [12, 7], [4, 18], [3, 11], [15, 16], [15, 9], [6, 5], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [17, 12], [7, 0], [13, 8], [8, 3], [17, 12], [0, 19], [5, 2], [16, 4], [8, 14], [15, 9], [17, 7], [16, 4], [6, 13], [2, 0], [3, 11], [5, 10], [4, 8], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [4, 8], [13, 5], [12, 7], [0, 11], [17, 10], [16, 4], [0, 11], [8, 14], [2, 19], [6, 13], [10, 7], [16, 4], [0, 11], [6, 5], [15, 9], [10, 2], [8, 14], [17, 7], [4, 18], [6, 5], [1, 2], [16, 13], [17, 10], [0, 19], [4, 18], [15, 16], [9, 13], [2, 0], [10, 1], [6, 5], [11, 19], [8, 3], [4, 18], [8, 3], [9, 5], [11, 19], [1, 2], [18, 14], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [18, 14], [12, 7], [6, 13], [9, 5], [0, 19], [15, 16], [1, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 35, 41]
[106, 109, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[35, 41, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.172640562057495

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 27] cc => I, Pos: [24, 27] cc => I, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [28, 35, 41] ccc => cc, Pos: [32, 38] cc => I, Pos: [32, 38] cc => I, Pos: [34, 37] cc => I, Pos: [34, 37] cc => I, Pos: [35, 41, 47] ccc => cc, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [55, 60] cc => I, Pos: [55, 60] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [69, 77] cc => I, Pos: [69, 77] cc => I, Pos: [72, 79] cc => I, Pos: [72, 79] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [76, 82] cc => I, Pos: [76, 82] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [80, 86] cc => I, Pos: [80, 86] cc => I, Pos: [91, 95] cc => I, Pos: [91, 95] cc => I, Pos: [106, 109, 118] ccc => cc, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [116, 123] cc => I, Pos: [116, 123] cc => I, Pos: [120, 124] cc => I, Pos: [120, 124] cc => I, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [146, 156] cc => I, Pos: [146, 156] cc => I, Pos: [151, 154] cc => I, Pos: [151, 154] cc => I, Pos: [167, 175] cc => I, Pos: [167, 175] cc => I, Pos: [168, 171] cc => I, Pos: [168, 171] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [175, 194] cc => I, Pos: [175, 194] cc => I, Pos: [198, 202] cc => I, Pos: [198, 202] cc => I, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [207, 234] cc => I, Pos: [207, 234] cc => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [223, 226] cc => I, Pos: [223, 226] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [226, 232] cc => I, Pos: [226, 232] cc => I, Pos: [227, 236] cc => I, Pos: [227, 236] cc => I, Pos: [233, 239] cc => I, Pos: [233, 239] cc => I, Pos: [238, 244] cc => I, Pos: [238, 244] cc => I, Pos: [239, 249] cc => I, Pos: [239, 249] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 268] cc => I, Pos: [245, 268] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 253] cc => I, Pos: [251, 253] cc => I, Pos: [255, 258] cc => I, Pos: [255, 258] cc => I, Pos: [257, 263] cc => I, Pos: [257, 263] cc => I]

--------End Timer [Generate Plans]:  0.12417435646057129

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 11] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [13, 23] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [35, 41, 47] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [80, 86] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [223, 226] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [239, 249] cc => I,
 Pos: [238, 244] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [255, 258] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 45

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [13, 23] cc => I
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [35, 41, 47] ccc => cc
Apply:  Pos: [32, 38] cc => I
Apply:  Pos: [34, 37] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [77, 83] cc => I
Apply:  Pos: [72, 79] cc => I
Apply:  Pos: [80, 86] cc => I
Apply:  Pos: [76, 82] cc => I
Apply:  Pos: [91, 95] cc => I
Apply:  Pos: [106, 109, 118] ccc => cc
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [116, 123] cc => I
Apply:  Pos: [120, 124] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [146, 156] cc => I
Apply:  Pos: [151, 154] cc => I
Apply:  Pos: [167, 175] cc => I
Apply:  Pos: [168, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [198, 202] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [207, 234] cc => I
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [223, 226] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 236] cc => I
Apply:  Pos: [239, 249] cc => I
Apply:  Pos: [238, 244] cc => I
Apply:  Pos: [245, 268] cc => I
Apply:  Pos: [255, 258] cc => I
Apply:  Pos: [251, 253] cc => I
Apply:  Pos: [257, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [6, 5], [10, 7], [2, 11], [10, 1], [12, 7], [15, 16], [18, 14], [5, 1], [9, 6], [7, 0], [3, 11], [5, 1], [5, 2], [17, 12], [1, 14], [2, 19], [0, 11], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [15, 16], [9, 13], [5, 1], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [6, 5], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [4, 18], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  5.296814918518066

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[15, 20]
[13, 30]
[24, 35]
[62, 91]
[90, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[15, 20]
[13, 30]
[24, 35]
[62, 91]
[90, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2188117504119873

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 30] cc => I, Pos: [13, 30] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [24, 35] cc => I, Pos: [24, 35] cc => I, Pos: [62, 91] cc => I, Pos: [62, 91] cc => I, Pos: [90, 130] cc => I, Pos: [90, 130] cc => I]

--------End Timer [Generate Plans]:  0.01563858985900879

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 30] cc => I,
 Pos: [15, 20] cc => I,
 Pos: [24, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 30] cc => I
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [24, 35] cc => I
Apply:  Pos: [62, 91] cc => I
Apply:  Pos: [90, 130] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [6, 5], [10, 7], [2, 11], [10, 1], [12, 7], [18, 14], [9, 6], [7, 0], [3, 11], [5, 2], [17, 12], [1, 14], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [6, 5], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [4, 18], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.234450340270996

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 30]
[16, 32]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 125, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 30]
[16, 32]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.984337568283081

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 30] cc => I, Pos: [7, 30] cc => I, Pos: [16, 32] cc => I, Pos: [16, 32] cc => I, Pos: [121, 125, 126] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 30] cc => I, Pos: [16, 32] cc => I, Pos: [121, 125, 126] ccc => cc]
Change: 3, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 30] cc => I
Apply:  Pos: [16, 32] cc => I
Apply:  Pos: [121, 125, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [6, 5], [10, 7], [2, 11], [10, 1], [12, 7], [18, 14], [9, 6], [7, 0], [5, 2], [17, 12], [1, 14], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 13], [9, 6], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [6, 5], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [4, 18], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.984337568283081

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8440356254577637

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [6, 5], [10, 7], [2, 11], [10, 1], [12, 7], [18, 14], [9, 6], [7, 0], [5, 2], [17, 12], [1, 14], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [6, 5], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [11, 19], [4, 18], [9, 5], [1, 2], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.8440356254577637

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [165] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 330

Reduced: 
 - size: 105 (38.89%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09375548362731934

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [0, 11], [12, 7], [2, 19], [8, 14], [16, 4], [6, 5], [0, 11], [13, 4], [6, 5], [10, 7], [2, 19], [8, 3], [18, 14], [2, 11], [10, 1], [13, 4], [12, 7], [15, 16], [6, 5], [18, 14], [10, 2], [8, 3], [18, 14], [5, 1], [9, 6], [7, 0], [10, 2], [0, 19], [3, 11], [16, 4], [1, 14], [5, 2], [16, 4], [0, 19], [6, 13], [17, 12], [5, 1], [2, 19], [0, 11], [15, 9], [4, 18], [6, 13], [1, 14], [4, 18], [13, 8], [9, 5], [6, 17], [1, 14], [9, 6], [15, 16], [11, 19], [10, 2], [1, 14], [9, 13], [12, 7], [11, 19], [10, 2], [5, 1], [12, 7], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [0, 19], [16, 13], [5, 2], [17, 7], [9, 13], [3, 11], [12, 10], [0, 19], [5, 2], [16, 8], [9, 13], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [1, 3], [12, 7], [13, 5], [16, 4], [1, 3], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 18], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [11, 19], [4, 8], [6, 13], [17, 10], [13, 5], [4, 18], [2, 0], [15, 9], [11, 19], [8, 1], [17, 10], [15, 9], [16, 4], [2, 19], [0, 11], [8, 3], [18, 14], [6, 5], [17, 7], [10, 2], [18, 14], [16, 13], [9, 5], [0, 19], [17, 7], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [13, 4], [9, 6], [16, 8], [10, 1], [3, 11], [2, 0], [17, 12], [15, 9], [2, 0], [1, 14], [13, 4], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [4, 18], [10, 2], [12, 7], [9, 13], [10, 2], [6, 5], [0, 19], [12, 7], [4, 18], [3, 11], [15, 16], [15, 9], [6, 5], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [17, 12], [7, 0], [13, 8], [8, 3], [17, 12], [0, 19], [5, 2], [16, 4], [8, 14], [15, 9], [17, 7], [16, 4], [6, 13], [2, 0], [3, 11], [5, 10], [4, 8], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [4, 8], [13, 5], [12, 7], [0, 11], [17, 10], [16, 4], [0, 11], [8, 14], [2, 19], [6, 13], [10, 7], [16, 4], [0, 11], [6, 5], [15, 9], [10, 2], [8, 14], [17, 7], [4, 18], [6, 5], [1, 2], [16, 13], [17, 10], [0, 19], [4, 18], [15, 16], [9, 13], [2, 0], [10, 1], [6, 5], [11, 19], [8, 3], [4, 18], [8, 3], [9, 5], [11, 19], [1, 2], [18, 14], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [18, 14], [12, 7], [6, 13], [9, 5], [0, 19], [15, 16], [1, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 35, 41]
[106, 109, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[35, 41, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.234398365020752

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 27] cc => I, Pos: [24, 27] cc => I, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [28, 35, 41] ccc => cc, Pos: [32, 38] cc => I, Pos: [32, 38] cc => I, Pos: [34, 37] cc => I, Pos: [34, 37] cc => I, Pos: [35, 41, 47] ccc => cc, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [55, 60] cc => I, Pos: [55, 60] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [69, 77] cc => I, Pos: [69, 77] cc => I, Pos: [72, 79] cc => I, Pos: [72, 79] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [76, 82] cc => I, Pos: [76, 82] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [80, 86] cc => I, Pos: [80, 86] cc => I, Pos: [91, 95] cc => I, Pos: [91, 95] cc => I, Pos: [106, 109, 118] ccc => cc, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [116, 123] cc => I, Pos: [116, 123] cc => I, Pos: [120, 124] cc => I, Pos: [120, 124] cc => I, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [146, 156] cc => I, Pos: [146, 156] cc => I, Pos: [151, 154] cc => I, Pos: [151, 154] cc => I, Pos: [167, 175] cc => I, Pos: [167, 175] cc => I, Pos: [168, 171] cc => I, Pos: [168, 171] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [175, 194] cc => I, Pos: [175, 194] cc => I, Pos: [198, 202] cc => I, Pos: [198, 202] cc => I, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [207, 234] cc => I, Pos: [207, 234] cc => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [223, 226] cc => I, Pos: [223, 226] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [226, 232] cc => I, Pos: [226, 232] cc => I, Pos: [227, 236] cc => I, Pos: [227, 236] cc => I, Pos: [233, 239] cc => I, Pos: [233, 239] cc => I, Pos: [238, 244] cc => I, Pos: [238, 244] cc => I, Pos: [239, 249] cc => I, Pos: [239, 249] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 268] cc => I, Pos: [245, 268] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 253] cc => I, Pos: [251, 253] cc => I, Pos: [255, 258] cc => I, Pos: [255, 258] cc => I, Pos: [257, 263] cc => I, Pos: [257, 263] cc => I]

--------End Timer [Generate Plans]:  0.10936808586120605

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 11] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [24, 27] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [28, 35, 41] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [77, 83] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [80, 86] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [226, 232] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [233, 239] cc => I,
 Pos: [238, 244] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [24, 27] cc => I
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [28, 35, 41] ccc => cc
Apply:  Pos: [32, 38] cc => I
Apply:  Pos: [34, 37] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [55, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [77, 83] cc => I
Apply:  Pos: [72, 79] cc => I
Apply:  Pos: [80, 86] cc => I
Apply:  Pos: [76, 82] cc => I
Apply:  Pos: [91, 95] cc => I
Apply:  Pos: [106, 109, 118] ccc => cc
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [116, 123] cc => I
Apply:  Pos: [120, 124] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [146, 156] cc => I
Apply:  Pos: [151, 154] cc => I
Apply:  Pos: [167, 175] cc => I
Apply:  Pos: [168, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [198, 202] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [207, 234] cc => I
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [226, 232] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 236] cc => I
Apply:  Pos: [233, 239] cc => I
Apply:  Pos: [238, 244] cc => I
Apply:  Pos: [245, 268] cc => I
Apply:  Pos: [250, 255] cc => I
Apply:  Pos: [251, 253] cc => I
Apply:  Pos: [257, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015623331069946289

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [10, 7], [18, 14], [2, 11], [10, 1], [12, 7], [15, 16], [6, 5], [5, 14], [9, 6], [7, 0], [3, 11], [1, 14], [5, 2], [17, 12], [2, 19], [0, 11], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [15, 16], [1, 14], [9, 13], [5, 1], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 7], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  5.359389781951904

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[13, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.234337091445923

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [13, 29] cc => I, Pos: [13, 29] cc => I, Pos: [19, 30] cc => I, Pos: [19, 30] cc => I, Pos: [23, 35] cc => I, Pos: [23, 35] cc => I, Pos: [62, 91] cc => I, Pos: [62, 91] cc => I, Pos: [90, 130] cc => I, Pos: [90, 130] cc => I]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [13, 29] cc => I,
 Pos: [19, 30] cc => I,
 Pos: [23, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [13, 29] cc => I
Apply:  Pos: [19, 30] cc => I
Apply:  Pos: [23, 35] cc => I
Apply:  Pos: [62, 91] cc => I
Apply:  Pos: [90, 130] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [10, 7], [18, 14], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [9, 6], [7, 0], [3, 11], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 2], [17, 7], [10, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.2499611377716064

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 30]
[17, 32]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 125, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[147, 148, 151]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 30]
[17, 32]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.000190496444702

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 30] cc => I, Pos: [7, 30] cc => I, Pos: [17, 32] cc => I, Pos: [17, 32] cc => I, Pos: [121, 125, 126] ccc => cc, Pos: [147, 148, 151] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 30] cc => I,
 Pos: [17, 32] cc => I,
 Pos: [121, 125, 126] ccc => cc,
 Pos: [147, 148, 151] ccc => cc]
Change: 4, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 30] cc => I
Apply:  Pos: [17, 32] cc => I
Apply:  Pos: [121, 125, 126] ccc => cc
Apply:  Pos: [147, 148, 151] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [10, 7], [18, 14], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 13], [9, 6], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 2], [17, 10], [10, 7], [1, 2], [16, 13], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.000190496444702

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8592960834503174

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [10, 7], [18, 14], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [5, 2], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [0, 11], [17, 10], [2, 19], [6, 13], [10, 2], [17, 10], [10, 7], [1, 2], [16, 13], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.8592960834503174

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [164] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 328

Reduced: 
 - size: 106 (39.26%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935354232788086

[0, 11], [14, 3], [6, 13], [15, 9], [10, 2], [0, 11], [12, 7], [2, 19], [8, 14], [16, 4], [6, 5], [0, 11], [13, 4], [6, 5], [10, 7], [2, 19], [8, 3], [18, 14], [2, 11], [10, 1], [13, 4], [12, 7], [15, 16], [6, 5], [18, 14], [10, 2], [8, 3], [18, 14], [5, 1], [9, 6], [7, 0], [10, 2], [0, 19], [3, 11], [16, 4], [1, 14], [5, 2], [16, 4], [0, 19], [6, 13], [17, 12], [5, 1], [2, 19], [0, 11], [15, 9], [4, 18], [6, 13], [1, 14], [4, 18], [13, 8], [9, 5], [6, 17], [1, 14], [9, 6], [15, 16], [11, 19], [10, 2], [1, 14], [9, 13], [12, 7], [11, 19], [10, 2], [5, 1], [12, 7], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [3, 11], [17, 12], [6, 5], [0, 19], [16, 13], [5, 2], [17, 7], [9, 13], [3, 11], [12, 10], [0, 19], [5, 2], [16, 8], [9, 13], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [1, 3], [12, 7], [13, 5], [16, 4], [1, 3], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 18], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [11, 19], [4, 8], [6, 13], [17, 10], [13, 5], [4, 18], [2, 0], [15, 9], [11, 19], [8, 1], [17, 10], [15, 9], [16, 4], [2, 19], [0, 11], [8, 3], [18, 14], [6, 5], [17, 7], [10, 2], [18, 14], [16, 13], [9, 5], [0, 19], [17, 7], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [13, 4], [9, 6], [16, 8], [10, 1], [3, 11], [2, 0], [17, 12], [15, 9], [2, 0], [1, 14], [13, 4], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [4, 18], [10, 2], [12, 7], [9, 13], [10, 2], [6, 5], [0, 19], [12, 7], [4, 18], [3, 11], [15, 16], [15, 9], [6, 5], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [17, 12], [7, 0], [13, 8], [8, 3], [17, 12], [0, 19], [5, 2], [16, 4], [8, 14], [15, 9], [17, 7], [16, 4], [6, 13], [2, 0], [3, 11], [5, 10], [4, 8], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [4, 8], [13, 5], [12, 7], [0, 11], [17, 10], [16, 4], [0, 11], [8, 14], [2, 19], [6, 13], [10, 7], [16, 4], [0, 11], [6, 5], [15, 9], [10, 2], [8, 14], [17, 7], [4, 18], [6, 5], [1, 2], [16, 13], [17, 10], [0, 19], [4, 18], [15, 16], [9, 13], [2, 0], [10, 1], [6, 5], [11, 19], [8, 3], [4, 18], [8, 3], [9, 5], [11, 19], [1, 2], [18, 14], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [18, 14], [12, 7], [6, 13], [9, 5], [0, 19], [15, 16], [1, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[28, 35, 41]
[106, 109, 118]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[35, 41, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 5]
[5, 11]
[10, 13]
[7, 15]
[12, 20]
[13, 23]
[17, 24]
[16, 26]
[24, 27]
[25, 31]
[34, 37]
[32, 38]
[39, 46]
[45, 48]
[47, 52]
[52, 57]
[55, 60]
[56, 61]
[59, 63]
[69, 77]
[72, 79]
[74, 80]
[76, 82]
[77, 83]
[80, 86]
[91, 95]
[113, 121]
[116, 123]
[120, 124]
[129, 133]
[131, 137]
[151, 154]
[146, 156]
[168, 171]
[169, 174]
[167, 175]
[172, 179]
[175, 194]
[198, 202]
[205, 209]
[214, 220]
[223, 226]
[225, 231]
[226, 232]
[207, 234]
[227, 236]
[233, 239]
[238, 244]
[239, 249]
[244, 252]
[251, 253]
[250, 255]
[255, 258]
[257, 263]
[245, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.171959400177002

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] cc => I, Pos: [0, 5] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 13] cc => I, Pos: [10, 13] cc => I, Pos: [12, 20] cc => I, Pos: [12, 20] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [16, 26] cc => I, Pos: [16, 26] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 27] cc => I, Pos: [24, 27] cc => I, Pos: [25, 31] cc => I, Pos: [25, 31] cc => I, Pos: [28, 35, 41] ccc => cc, Pos: [32, 38] cc => I, Pos: [32, 38] cc => I, Pos: [34, 37] cc => I, Pos: [34, 37] cc => I, Pos: [35, 41, 47] ccc => cc, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [45, 48] cc => I, Pos: [45, 48] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [55, 60] cc => I, Pos: [55, 60] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [69, 77] cc => I, Pos: [69, 77] cc => I, Pos: [72, 79] cc => I, Pos: [72, 79] cc => I, Pos: [74, 80] cc => I, Pos: [74, 80] cc => I, Pos: [76, 82] cc => I, Pos: [76, 82] cc => I, Pos: [77, 83] cc => I, Pos: [77, 83] cc => I, Pos: [80, 86] cc => I, Pos: [80, 86] cc => I, Pos: [91, 95] cc => I, Pos: [91, 95] cc => I, Pos: [106, 109, 118] ccc => cc, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [116, 123] cc => I, Pos: [116, 123] cc => I, Pos: [120, 124] cc => I, Pos: [120, 124] cc => I, Pos: [129, 133] cc => I, Pos: [129, 133] cc => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [146, 156] cc => I, Pos: [146, 156] cc => I, Pos: [151, 154] cc => I, Pos: [151, 154] cc => I, Pos: [167, 175] cc => I, Pos: [167, 175] cc => I, Pos: [168, 171] cc => I, Pos: [168, 171] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [175, 194] cc => I, Pos: [175, 194] cc => I, Pos: [198, 202] cc => I, Pos: [198, 202] cc => I, Pos: [205, 209] cc => I, Pos: [205, 209] cc => I, Pos: [207, 234] cc => I, Pos: [207, 234] cc => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [223, 226] cc => I, Pos: [223, 226] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [226, 232] cc => I, Pos: [226, 232] cc => I, Pos: [227, 236] cc => I, Pos: [227, 236] cc => I, Pos: [233, 239] cc => I, Pos: [233, 239] cc => I, Pos: [238, 244] cc => I, Pos: [238, 244] cc => I, Pos: [239, 249] cc => I, Pos: [239, 249] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 268] cc => I, Pos: [245, 268] cc => I, Pos: [250, 255] cc => I, Pos: [250, 255] cc => I, Pos: [251, 253] cc => I, Pos: [251, 253] cc => I, Pos: [255, 258] cc => I, Pos: [255, 258] cc => I, Pos: [257, 263] cc => I, Pos: [257, 263] cc => I]

Plan: 1
[Pos: [0, 5] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [28, 35, 41] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [69, 77] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [223, 226] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [233, 239] cc => I,
 Pos: [238, 244] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 47

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10935449600219727

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] cc => I,
 Pos: [7, 15] cc => I,
 Pos: [10, 13] cc => I,
 Pos: [12, 20] cc => I,
 Pos: [16, 26] cc => I,
 Pos: [17, 24] cc => I,
 Pos: [25, 31] cc => I,
 Pos: [28, 35, 41] ccc => cc,
 Pos: [32, 38] cc => I,
 Pos: [34, 37] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [45, 48] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [55, 60] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [69, 77] cc => I,
 Pos: [72, 79] cc => I,
 Pos: [74, 80] cc => I,
 Pos: [76, 82] cc => I,
 Pos: [91, 95] cc => I,
 Pos: [106, 109, 118] ccc => cc,
 Pos: [113, 121] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [120, 124] cc => I,
 Pos: [129, 133] cc => I,
 Pos: [131, 137] cc => I,
 Pos: [146, 156] cc => I,
 Pos: [151, 154] cc => I,
 Pos: [167, 175] cc => I,
 Pos: [168, 171] cc => I,
 Pos: [169, 174] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [198, 202] cc => I,
 Pos: [205, 209] cc => I,
 Pos: [207, 234] cc => I,
 Pos: [214, 220] cc => I,
 Pos: [223, 226] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 236] cc => I,
 Pos: [233, 239] cc => I,
 Pos: [238, 244] cc => I,
 Pos: [245, 268] cc => I,
 Pos: [250, 255] cc => I,
 Pos: [251, 253] cc => I,
 Pos: [257, 263] cc => I]
Change: 46, Saving: 47

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 5] cc => I
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 13] cc => I
Apply:  Pos: [12, 20] cc => I
Apply:  Pos: [16, 26] cc => I
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [25, 31] cc => I
Apply:  Pos: [28, 35, 41] ccc => cc
Apply:  Pos: [32, 38] cc => I
Apply:  Pos: [34, 37] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [45, 48] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [55, 60] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [69, 77] cc => I
Apply:  Pos: [72, 79] cc => I
Apply:  Pos: [74, 80] cc => I
Apply:  Pos: [76, 82] cc => I
Apply:  Pos: [91, 95] cc => I
Apply:  Pos: [106, 109, 118] ccc => cc
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [116, 123] cc => I
Apply:  Pos: [120, 124] cc => I
Apply:  Pos: [129, 133] cc => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [146, 156] cc => I
Apply:  Pos: [151, 154] cc => I
Apply:  Pos: [167, 175] cc => I
Apply:  Pos: [168, 171] cc => I
Apply:  Pos: [169, 174] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [198, 202] cc => I
Apply:  Pos: [205, 209] cc => I
Apply:  Pos: [207, 234] cc => I
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [223, 226] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 236] cc => I
Apply:  Pos: [233, 239] cc => I
Apply:  Pos: [238, 244] cc => I
Apply:  Pos: [245, 268] cc => I
Apply:  Pos: [250, 255] cc => I
Apply:  Pos: [251, 253] cc => I
Apply:  Pos: [257, 263] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [15, 16], [6, 5], [18, 14], [5, 14], [9, 6], [7, 0], [3, 11], [1, 14], [5, 2], [17, 12], [2, 19], [0, 11], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [15, 16], [1, 14], [9, 13], [5, 1], [6, 13], [8, 14], [0, 11], [16, 4], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [6, 17], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [4, 18], [6, 17], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [4, 18], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  5.281313896179199

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[12, 29]
[19, 30]
[23, 35]
[62, 91]
[90, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.187462568283081

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 29] cc => I, Pos: [12, 29] cc => I, Pos: [19, 30] cc => I, Pos: [19, 30] cc => I, Pos: [23, 35] cc => I, Pos: [23, 35] cc => I, Pos: [62, 91] cc => I, Pos: [62, 91] cc => I, Pos: [90, 130] cc => I, Pos: [90, 130] cc => I]

Plan: 1
[Pos: [12, 29] cc => I,
 Pos: [19, 30] cc => I,
 Pos: [23, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 5

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.01563858985900879

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 29] cc => I,
 Pos: [19, 30] cc => I,
 Pos: [23, 35] cc => I,
 Pos: [62, 91] cc => I,
 Pos: [90, 130] cc => I]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 29] cc => I
Apply:  Pos: [19, 30] cc => I
Apply:  Pos: [23, 35] cc => I
Apply:  Pos: [62, 91] cc => I
Apply:  Pos: [90, 130] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [16, 4], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [18, 14], [9, 6], [7, 0], [3, 11], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [16, 4], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [3, 11], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [8, 3], [1, 3], [18, 14], [6, 5], [7, 0], [13, 8], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  3.20310115814209

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 30]
[17, 38]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 125, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 30]
[17, 38]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.953110694885254

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 30] cc => I, Pos: [6, 30] cc => I, Pos: [17, 38] cc => I, Pos: [17, 38] cc => I, Pos: [121, 125, 126] ccc => cc]

Plan: 1
[Pos: [6, 30] cc => I, Pos: [17, 38] cc => I, Pos: [121, 125, 126] ccc => cc]
Change: 3, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 30] cc => I, Pos: [17, 38] cc => I, Pos: [121, 125, 126] ccc => cc]
Change: 3, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 30] cc => I
Apply:  Pos: [17, 38] cc => I
Apply:  Pos: [121, 125, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [18, 14], [5, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 13], [9, 6], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [5, 2], [10, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 16], [15, 9], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.953110694885254

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8438169956207275

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[14, 3], [6, 13], [15, 9], [10, 2], [12, 7], [8, 14], [0, 11], [10, 7], [2, 11], [10, 1], [12, 7], [6, 5], [5, 14], [18, 14], [9, 6], [7, 0], [5, 2], [17, 12], [2, 19], [15, 9], [13, 8], [9, 5], [6, 17], [9, 6], [9, 13], [5, 1], [6, 13], [8, 14], [1, 2], [17, 12], [6, 5], [16, 13], [17, 7], [12, 10], [16, 8], [17, 10], [1, 14], [5, 2], [0, 11], [6, 13], [15, 9], [4, 8], [12, 7], [13, 5], [16, 4], [11, 19], [9, 6], [5, 1], [16, 8], [2, 0], [10, 7], [9, 13], [10, 1], [0, 11], [4, 14], [10, 2], [5, 2], [18, 14], [7, 0], [9, 5], [1, 3], [4, 8], [6, 13], [13, 5], [2, 0], [8, 1], [16, 4], [2, 19], [0, 11], [8, 3], [6, 5], [10, 2], [16, 13], [9, 5], [0, 19], [9, 13], [5, 10], [3, 11], [8, 14], [2, 11], [1, 3], [9, 6], [16, 8], [10, 1], [3, 11], [17, 12], [15, 9], [1, 14], [5, 10], [8, 3], [9, 13], [14, 3], [5, 2], [15, 16], [9, 5], [16, 13], [11, 19], [1, 14], [9, 13], [0, 19], [3, 11], [15, 9], [15, 16], [13, 8], [17, 7], [1, 2], [14, 3], [9, 5], [8, 1], [10, 2], [6, 17], [5, 1], [0, 11], [12, 10], [9, 6], [2, 19], [1, 3], [13, 8], [18, 14], [6, 5], [7, 0], [8, 3], [0, 19], [5, 2], [8, 14], [17, 7], [6, 13], [2, 0], [3, 11], [5, 10], [7, 0], [12, 10], [1, 2], [11, 19], [14, 3], [13, 5], [12, 7], [17, 10], [2, 19], [6, 13], [10, 7], [0, 11], [10, 2], [17, 7], [1, 2], [16, 13], [17, 10], [0, 19], [9, 13], [2, 0], [10, 1], [6, 5], [4, 18], [9, 5], [1, 2], [11, 19], [8, 1], [13, 5], [7, 0], [10, 2], [12, 7], [6, 13], [9, 5], [0, 19], [1, 3], ----End Timer [Execute Mapping]:  2.8438169956207275

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [165] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 330

Reduced: 
 - size: 105 (38.89%)
 - depth: 5 (11.11%)

