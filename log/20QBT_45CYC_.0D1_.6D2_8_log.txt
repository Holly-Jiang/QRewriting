----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935473442077637

[8, 5], [2, 0], [17, 4], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [14, 15], [19, 5], [17, 4], [1, 0], [19, 8], [4, 9], [14, 15], [1, 0], [5, 13], [8, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [12, 6], [8, 13], [2, 0], [7, 1], [11, 3], [19, 8], [15, 16], [18, 5], [1, 10], [9, 3], [12, 0], [19, 8], [1, 10], [16, 9], [14, 15], [18, 5], [11, 3], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [12, 6], [4, 15], [16, 9], [19, 5], [14, 7], [2, 0], [11, 3], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [19, 5], [14, 7], [9, 18], [6, 8], [1, 0], [11, 3], [15, 16], [1, 19], [9, 18], [15, 16], [6, 8], [0, 10], [14, 7], [2, 12], [1, 0], [15, 16], [9, 3], [6, 8], [14, 7], [2, 12], [19, 13], [1, 10], [4, 15], [16, 9], [2, 0], [17, 14], [11, 3], [19, 13], [9, 10], [7, 1], [19, 8], [16, 11], [9, 3], [0, 6], [7, 1], [4, 15], [17, 14], [18, 5], [15, 9], [14, 7], [1, 19], [17, 4], [8, 5], [2, 0], [15, 9], [14, 1], [19, 5], [12, 6], [16, 11], [4, 15], [14, 7], [19, 13], [11, 3], [2, 12], [17, 4], [18, 5], [0, 19], [15, 1], [12, 6], [8, 13], [11, 3], [4, 9], [12, 0], [11, 3], [18, 5], [15, 1], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [19, 13], [7, 2], [16, 11], [19, 13], [9, 3], [2, 6], [15, 1], [18, 5], [16, 11], [9, 3], [19, 13], [18, 5], [2, 6], [7, 1], [11, 3], [7, 1], [8, 13], [16, 9], [10, 18], [14, 15], [11, 3], [15, 16], [0, 6], [1, 10], [8, 13], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [16, 11], [1, 0], [6, 8], [9, 10], [14, 7], [4, 15], [3, 18], [16, 11], [0, 6], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [0, 6], [14, 7], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [8, 13], [7, 2], [7, 15], [17, 14], [16, 9], [3, 18], [2, 6], [8, 13], [10, 19], [1, 0], [7, 15], [5, 13], [1, 10], [17, 14], [0, 6], [4, 9], [15, 16], [0, 6], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [11, 3], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [12, 6], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [12, 6], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [5, 13], [16, 9], [5, 13], [2, 12], [19, 8], [1, 10], [11, 3], [15, 9], [19, 8], [1, 10], [2, 12], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 77, 80]
[90, 99, 109]
[190, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 119, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[17, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.187505722045898

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 11] cc => I, Pos: [2, 11] cc => I, Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [17, 18, 23] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [29, 52] cc => I, Pos: [29, 52] cc => I, Pos: [34, 40] cc => I, Pos: [34, 40] cc => I, Pos: [36, 44] cc => I, Pos: [36, 44] cc => I, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [45, 58] cc => I, Pos: [45, 58] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [56, 67] cc => I, Pos: [56, 67] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [62, 69] cc => I, Pos: [62, 69] cc => I, Pos: [67, 78] cc => I, Pos: [67, 78] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [69, 76] cc => I, Pos: [69, 76] cc => I, Pos: [70, 77, 80] ccc => cc, Pos: [72, 75] cc => I, Pos: [72, 75] cc => I, Pos: [75, 81] cc => I, Pos: [75, 81] cc => I, Pos: [76, 83] cc => I, Pos: [76, 83] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 101] cc => I, Pos: [88, 101] cc => I, Pos: [90, 99, 109] ccc => cc, Pos: [91, 102] cc => I, Pos: [91, 102] cc => I, Pos: [95, 100] cc => I, Pos: [95, 100] cc => I, Pos: [97, 114] cc => I, Pos: [97, 114] cc => I, Pos: [104, 110] cc => I, Pos: [104, 110] cc => I, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [113, 119, 124] ccc => cc, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [121, 130] cc => I, Pos: [121, 130] cc => I, Pos: [123, 131] cc => I, Pos: [123, 131] cc => I, Pos: [126, 129] cc => I, Pos: [126, 129] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [140, 143] cc => I, Pos: [140, 143] cc => I, Pos: [142, 148] cc => I, Pos: [142, 148] cc => I, Pos: [143, 150] cc => I, Pos: [143, 150] cc => I, Pos: [144, 149] cc => I, Pos: [144, 149] cc => I, Pos: [145, 152] cc => I, Pos: [145, 152] cc => I, Pos: [147, 151] cc => I, Pos: [147, 151] cc => I, Pos: [153, 155] cc => I, Pos: [153, 155] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [164, 169] cc => I, Pos: [164, 169] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [190, 203, 207] ccc => cc, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [198, 208] cc => I, Pos: [198, 208] cc => I, Pos: [207, 218] cc => I, Pos: [207, 218] cc => I, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [241, 252] cc => I, Pos: [241, 252] cc => I, Pos: [252, 254] cc => I, Pos: [252, 254] cc => I, Pos: [254, 268] cc => I, Pos: [254, 268] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 260] cc => I, Pos: [256, 260] cc => I, Pos: [257, 261] cc => I, Pos: [257, 261] cc => I, Pos: [262, 265] cc => I, Pos: [262, 265] cc => I]

Plan: 1
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [17, 18, 23] ccc => cc,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [56, 67] cc => I,
 Pos: [62, 69] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [72, 75] cc => I,
 Pos: [76, 83] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [140, 143] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [190, 203, 207] ccc => cc,
 Pos: [193, 198] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [241, 252] cc => I,
 Pos: [254, 268] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 55, Saving: 210

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [17, 18, 23] ccc => cc,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [56, 67] cc => I,
 Pos: [62, 69] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [72, 75] cc => I,
 Pos: [76, 83] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [140, 143] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [190, 203, 207] ccc => cc,
 Pos: [193, 198] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [241, 252] cc => I,
 Pos: [254, 268] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 55, Saving: 210

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 11] cc => I
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [17, 18, 23] ccc => cc
Apply:  Pos: [29, 52] cc => I
Apply:  Pos: [34, 40] cc => I
Apply:  Pos: [36, 44] cc => I
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [45, 58] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [56, 67] cc => I
Apply:  Pos: [62, 69] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 77, 80] ccc => cc
Apply:  Pos: [72, 75] cc => I
Apply:  Pos: [76, 83] cc => I
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 101] cc => I
Apply:  Pos: [90, 99, 109] ccc => cc
Apply:  Pos: [91, 102] cc => I
Apply:  Pos: [95, 100] cc => I
Apply:  Pos: [97, 114] cc => I
Apply:  Pos: [104, 110] cc => I
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [113, 119, 124] ccc => cc
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [121, 130] cc => I
Apply:  Pos: [123, 131] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [140, 143] cc => I
Apply:  Pos: [142, 148] cc => I
Apply:  Pos: [144, 149] cc => I
Apply:  Pos: [145, 152] cc => I
Apply:  Pos: [147, 151] cc => I
Apply:  Pos: [153, 155] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [156, 164] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [190, 203, 207] ccc => cc
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [209, 212] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [241, 252] cc => I
Apply:  Pos: [254, 268] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [256, 260] cc => I
Apply:  Pos: [257, 261] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [8, 13], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 19], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 4], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [17, 4], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [8, 5], [7, 2], [15, 1], [19, 13], [16, 9], [10, 18], [14, 15], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [1, 0], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [5, 13], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [1, 0], [5, 13], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  5.187505722045898

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 35]
[96, 117]
[109, 118]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[46, 55, 59]
[60, 65, 68]
[78, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[74, 76, 83]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 35]
[96, 117]
[109, 118]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8906757831573486

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 35] cc => I, Pos: [22, 35] cc => I, Pos: [46, 55, 59] ccc => cc, Pos: [60, 65, 68] ccc => cc, Pos: [74, 76, 83] ccc => cc, Pos: [78, 81, 85] ccc => cc, Pos: [96, 117] cc => I, Pos: [96, 117] cc => I, Pos: [109, 118] cc => I, Pos: [109, 118] cc => I]

Plan: 1
[Pos: [22, 35] cc => I,
 Pos: [46, 55, 59] ccc => cc,
 Pos: [60, 65, 68] ccc => cc,
 Pos: [74, 76, 83] ccc => cc,
 Pos: [78, 81, 85] ccc => cc,
 Pos: [96, 117] cc => I,
 Pos: [109, 118] cc => I]
Change: 7, Saving: 20

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 35] cc => I,
 Pos: [46, 55, 59] ccc => cc,
 Pos: [60, 65, 68] ccc => cc,
 Pos: [74, 76, 83] ccc => cc,
 Pos: [78, 81, 85] ccc => cc,
 Pos: [96, 117] cc => I,
 Pos: [109, 118] cc => I]
Change: 7, Saving: 20

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 35] cc => I
Apply:  Pos: [46, 55, 59] ccc => cc
Apply:  Pos: [60, 65, 68] ccc => cc
Apply:  Pos: [74, 76, 83] ccc => cc
Apply:  Pos: [78, 81, 85] ccc => cc
Apply:  Pos: [96, 117] cc => I
Apply:  Pos: [109, 118] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.8906757831573486

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 63]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 63]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6405906677246094

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 63] cc => I, Pos: [37, 63] cc => I]

Plan: 1
[Pos: [37, 63] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 63] cc => I]
Change: 1, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 63] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.6405906677246094

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6094017028808594

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.6094017028808594

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [153] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 306

Reduced: 
 - size: 117 (43.33%)
 - cycle: 234 (43.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374451637268066

[8, 5], [2, 0], [17, 4], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [14, 15], [19, 5], [17, 4], [1, 0], [19, 8], [4, 9], [14, 15], [1, 0], [5, 13], [8, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [12, 6], [8, 13], [2, 0], [7, 1], [11, 3], [19, 8], [15, 16], [18, 5], [1, 10], [9, 3], [12, 0], [19, 8], [1, 10], [16, 9], [14, 15], [18, 5], [11, 3], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [12, 6], [4, 15], [16, 9], [19, 5], [14, 7], [2, 0], [11, 3], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [19, 5], [14, 7], [9, 18], [6, 8], [1, 0], [11, 3], [15, 16], [1, 19], [9, 18], [15, 16], [6, 8], [0, 10], [14, 7], [2, 12], [1, 0], [15, 16], [9, 3], [6, 8], [14, 7], [2, 12], [19, 13], [1, 10], [4, 15], [16, 9], [2, 0], [17, 14], [11, 3], [19, 13], [9, 10], [7, 1], [19, 8], [16, 11], [9, 3], [0, 6], [7, 1], [4, 15], [17, 14], [18, 5], [15, 9], [14, 7], [1, 19], [17, 4], [8, 5], [2, 0], [15, 9], [14, 1], [19, 5], [12, 6], [16, 11], [4, 15], [14, 7], [19, 13], [11, 3], [2, 12], [17, 4], [18, 5], [0, 19], [15, 1], [12, 6], [8, 13], [11, 3], [4, 9], [12, 0], [11, 3], [18, 5], [15, 1], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [19, 13], [7, 2], [16, 11], [19, 13], [9, 3], [2, 6], [15, 1], [18, 5], [16, 11], [9, 3], [19, 13], [18, 5], [2, 6], [7, 1], [11, 3], [7, 1], [8, 13], [16, 9], [10, 18], [14, 15], [11, 3], [15, 16], [0, 6], [1, 10], [8, 13], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [16, 11], [1, 0], [6, 8], [9, 10], [14, 7], [4, 15], [3, 18], [16, 11], [0, 6], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [0, 6], [14, 7], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [8, 13], [7, 2], [7, 15], [17, 14], [16, 9], [3, 18], [2, 6], [8, 13], [10, 19], [1, 0], [7, 15], [5, 13], [1, 10], [17, 14], [0, 6], [4, 9], [15, 16], [0, 6], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [11, 3], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [12, 6], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [12, 6], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [5, 13], [16, 9], [5, 13], [2, 12], [19, 8], [1, 10], [11, 3], [15, 9], [19, 8], [1, 10], [2, 12], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 77, 80]
[90, 99, 109]
[190, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 119, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[17, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.171931266784668

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 11] cc => I, Pos: [2, 11] cc => I, Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [17, 18, 23] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [29, 52] cc => I, Pos: [29, 52] cc => I, Pos: [34, 40] cc => I, Pos: [34, 40] cc => I, Pos: [36, 44] cc => I, Pos: [36, 44] cc => I, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [45, 58] cc => I, Pos: [45, 58] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [56, 67] cc => I, Pos: [56, 67] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [62, 69] cc => I, Pos: [62, 69] cc => I, Pos: [67, 78] cc => I, Pos: [67, 78] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [69, 76] cc => I, Pos: [69, 76] cc => I, Pos: [70, 77, 80] ccc => cc, Pos: [72, 75] cc => I, Pos: [72, 75] cc => I, Pos: [75, 81] cc => I, Pos: [75, 81] cc => I, Pos: [76, 83] cc => I, Pos: [76, 83] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 101] cc => I, Pos: [88, 101] cc => I, Pos: [90, 99, 109] ccc => cc, Pos: [91, 102] cc => I, Pos: [91, 102] cc => I, Pos: [95, 100] cc => I, Pos: [95, 100] cc => I, Pos: [97, 114] cc => I, Pos: [97, 114] cc => I, Pos: [104, 110] cc => I, Pos: [104, 110] cc => I, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [113, 119, 124] ccc => cc, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [121, 130] cc => I, Pos: [121, 130] cc => I, Pos: [123, 131] cc => I, Pos: [123, 131] cc => I, Pos: [126, 129] cc => I, Pos: [126, 129] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [140, 143] cc => I, Pos: [140, 143] cc => I, Pos: [142, 148] cc => I, Pos: [142, 148] cc => I, Pos: [143, 150] cc => I, Pos: [143, 150] cc => I, Pos: [144, 149] cc => I, Pos: [144, 149] cc => I, Pos: [145, 152] cc => I, Pos: [145, 152] cc => I, Pos: [147, 151] cc => I, Pos: [147, 151] cc => I, Pos: [153, 155] cc => I, Pos: [153, 155] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [164, 169] cc => I, Pos: [164, 169] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [190, 203, 207] ccc => cc, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [198, 208] cc => I, Pos: [198, 208] cc => I, Pos: [207, 218] cc => I, Pos: [207, 218] cc => I, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [241, 252] cc => I, Pos: [241, 252] cc => I, Pos: [252, 254] cc => I, Pos: [252, 254] cc => I, Pos: [254, 268] cc => I, Pos: [254, 268] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 260] cc => I, Pos: [256, 260] cc => I, Pos: [257, 261] cc => I, Pos: [257, 261] cc => I, Pos: [262, 265] cc => I, Pos: [262, 265] cc => I]

Plan: 1
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [17, 18, 23] ccc => cc,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [56, 67] cc => I,
 Pos: [62, 69] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [72, 75] cc => I,
 Pos: [76, 83] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [140, 143] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [190, 203, 207] ccc => cc,
 Pos: [193, 198] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [241, 252] cc => I,
 Pos: [254, 268] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 55, Saving: 56

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.14061832427978516

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [17, 18, 23] ccc => cc,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [56, 67] cc => I,
 Pos: [62, 69] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [72, 75] cc => I,
 Pos: [76, 83] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [140, 143] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [190, 203, 207] ccc => cc,
 Pos: [193, 198] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [241, 252] cc => I,
 Pos: [254, 268] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 55, Saving: 56

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 11] cc => I
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [17, 18, 23] ccc => cc
Apply:  Pos: [29, 52] cc => I
Apply:  Pos: [34, 40] cc => I
Apply:  Pos: [36, 44] cc => I
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [45, 58] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [56, 67] cc => I
Apply:  Pos: [62, 69] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 77, 80] ccc => cc
Apply:  Pos: [72, 75] cc => I
Apply:  Pos: [76, 83] cc => I
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 101] cc => I
Apply:  Pos: [90, 99, 109] ccc => cc
Apply:  Pos: [91, 102] cc => I
Apply:  Pos: [95, 100] cc => I
Apply:  Pos: [97, 114] cc => I
Apply:  Pos: [104, 110] cc => I
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [113, 119, 124] ccc => cc
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [121, 130] cc => I
Apply:  Pos: [123, 131] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [140, 143] cc => I
Apply:  Pos: [142, 148] cc => I
Apply:  Pos: [144, 149] cc => I
Apply:  Pos: [145, 152] cc => I
Apply:  Pos: [147, 151] cc => I
Apply:  Pos: [153, 155] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [156, 164] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [190, 203, 207] ccc => cc
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [209, 212] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [241, 252] cc => I
Apply:  Pos: [254, 268] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [256, 260] cc => I
Apply:  Pos: [257, 261] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [8, 13], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 19], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 4], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [17, 4], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [8, 5], [7, 2], [15, 1], [19, 13], [16, 9], [10, 18], [14, 15], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [1, 0], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [5, 13], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [1, 0], [5, 13], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  5.312549591064453

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 35]
[96, 117]
[109, 118]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[46, 55, 59]
[60, 65, 68]
[78, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[74, 76, 83]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 35]
[96, 117]
[109, 118]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.859618663787842

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 35] cc => I, Pos: [22, 35] cc => I, Pos: [46, 55, 59] ccc => cc, Pos: [60, 65, 68] ccc => cc, Pos: [74, 76, 83] ccc => cc, Pos: [78, 81, 85] ccc => cc, Pos: [96, 117] cc => I, Pos: [96, 117] cc => I, Pos: [109, 118] cc => I, Pos: [109, 118] cc => I]

Plan: 1
[Pos: [22, 35] cc => I,
 Pos: [46, 55, 59] ccc => cc,
 Pos: [60, 65, 68] ccc => cc,
 Pos: [74, 76, 83] ccc => cc,
 Pos: [78, 81, 85] ccc => cc,
 Pos: [96, 117] cc => I,
 Pos: [109, 118] cc => I]
Change: 7, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015641212463378906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 35] cc => I,
 Pos: [46, 55, 59] ccc => cc,
 Pos: [60, 65, 68] ccc => cc,
 Pos: [74, 76, 83] ccc => cc,
 Pos: [78, 81, 85] ccc => cc,
 Pos: [96, 117] cc => I,
 Pos: [109, 118] cc => I]
Change: 7, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 35] cc => I
Apply:  Pos: [46, 55, 59] ccc => cc
Apply:  Pos: [60, 65, 68] ccc => cc
Apply:  Pos: [74, 76, 83] ccc => cc
Apply:  Pos: [78, 81, 85] ccc => cc
Apply:  Pos: [96, 117] cc => I
Apply:  Pos: [109, 118] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.8752598762512207

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 63]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 63]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.640509843826294

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 63] cc => I, Pos: [37, 63] cc => I]

Plan: 1
[Pos: [37, 63] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 63] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 63] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.640509843826294

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5937705039978027

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.5937705039978027

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [153] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 306

Reduced: 
 - size: 117 (43.33%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374380111694336

[8, 5], [2, 0], [17, 4], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [14, 15], [19, 5], [17, 4], [1, 0], [19, 8], [4, 9], [14, 15], [1, 0], [5, 13], [8, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [12, 6], [8, 13], [2, 0], [7, 1], [11, 3], [19, 8], [15, 16], [18, 5], [1, 10], [9, 3], [12, 0], [19, 8], [1, 10], [16, 9], [14, 15], [18, 5], [11, 3], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [12, 6], [4, 15], [16, 9], [19, 5], [14, 7], [2, 0], [11, 3], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [19, 5], [14, 7], [9, 18], [6, 8], [1, 0], [11, 3], [15, 16], [1, 19], [9, 18], [15, 16], [6, 8], [0, 10], [14, 7], [2, 12], [1, 0], [15, 16], [9, 3], [6, 8], [14, 7], [2, 12], [19, 13], [1, 10], [4, 15], [16, 9], [2, 0], [17, 14], [11, 3], [19, 13], [9, 10], [7, 1], [19, 8], [16, 11], [9, 3], [0, 6], [7, 1], [4, 15], [17, 14], [18, 5], [15, 9], [14, 7], [1, 19], [17, 4], [8, 5], [2, 0], [15, 9], [14, 1], [19, 5], [12, 6], [16, 11], [4, 15], [14, 7], [19, 13], [11, 3], [2, 12], [17, 4], [18, 5], [0, 19], [15, 1], [12, 6], [8, 13], [11, 3], [4, 9], [12, 0], [11, 3], [18, 5], [15, 1], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [19, 13], [7, 2], [16, 11], [19, 13], [9, 3], [2, 6], [15, 1], [18, 5], [16, 11], [9, 3], [19, 13], [18, 5], [2, 6], [7, 1], [11, 3], [7, 1], [8, 13], [16, 9], [10, 18], [14, 15], [11, 3], [15, 16], [0, 6], [1, 10], [8, 13], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [16, 11], [1, 0], [6, 8], [9, 10], [14, 7], [4, 15], [3, 18], [16, 11], [0, 6], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [0, 6], [14, 7], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [8, 13], [7, 2], [7, 15], [17, 14], [16, 9], [3, 18], [2, 6], [8, 13], [10, 19], [1, 0], [7, 15], [5, 13], [1, 10], [17, 14], [0, 6], [4, 9], [15, 16], [0, 6], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [11, 3], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [12, 6], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [12, 6], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [5, 13], [16, 9], [5, 13], [2, 12], [19, 8], [1, 10], [11, 3], [15, 9], [19, 8], [1, 10], [2, 12], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 77, 80]
[90, 99, 109]
[190, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 119, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[17, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.172040939331055

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 11] cc => I, Pos: [2, 11] cc => I, Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [17, 18, 23] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [29, 52] cc => I, Pos: [29, 52] cc => I, Pos: [34, 40] cc => I, Pos: [34, 40] cc => I, Pos: [36, 44] cc => I, Pos: [36, 44] cc => I, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [45, 58] cc => I, Pos: [45, 58] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [56, 67] cc => I, Pos: [56, 67] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [62, 69] cc => I, Pos: [62, 69] cc => I, Pos: [67, 78] cc => I, Pos: [67, 78] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [69, 76] cc => I, Pos: [69, 76] cc => I, Pos: [70, 77, 80] ccc => cc, Pos: [72, 75] cc => I, Pos: [72, 75] cc => I, Pos: [75, 81] cc => I, Pos: [75, 81] cc => I, Pos: [76, 83] cc => I, Pos: [76, 83] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 101] cc => I, Pos: [88, 101] cc => I, Pos: [90, 99, 109] ccc => cc, Pos: [91, 102] cc => I, Pos: [91, 102] cc => I, Pos: [95, 100] cc => I, Pos: [95, 100] cc => I, Pos: [97, 114] cc => I, Pos: [97, 114] cc => I, Pos: [104, 110] cc => I, Pos: [104, 110] cc => I, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [113, 119, 124] ccc => cc, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [121, 130] cc => I, Pos: [121, 130] cc => I, Pos: [123, 131] cc => I, Pos: [123, 131] cc => I, Pos: [126, 129] cc => I, Pos: [126, 129] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [140, 143] cc => I, Pos: [140, 143] cc => I, Pos: [142, 148] cc => I, Pos: [142, 148] cc => I, Pos: [143, 150] cc => I, Pos: [143, 150] cc => I, Pos: [144, 149] cc => I, Pos: [144, 149] cc => I, Pos: [145, 152] cc => I, Pos: [145, 152] cc => I, Pos: [147, 151] cc => I, Pos: [147, 151] cc => I, Pos: [153, 155] cc => I, Pos: [153, 155] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [164, 169] cc => I, Pos: [164, 169] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [190, 203, 207] ccc => cc, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [198, 208] cc => I, Pos: [198, 208] cc => I, Pos: [207, 218] cc => I, Pos: [207, 218] cc => I, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [241, 252] cc => I, Pos: [241, 252] cc => I, Pos: [252, 254] cc => I, Pos: [252, 254] cc => I, Pos: [254, 268] cc => I, Pos: [254, 268] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 260] cc => I, Pos: [256, 260] cc => I, Pos: [257, 261] cc => I, Pos: [257, 261] cc => I, Pos: [262, 265] cc => I, Pos: [262, 265] cc => I]

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 30] cc => I,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [67, 78] cc => I,
 Pos: [62, 69] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [72, 75] cc => I,
 Pos: [76, 83] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [140, 143] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [164, 169] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [207, 218] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [252, 254] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 53, Saving: 206

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 11] cc => I
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [29, 52] cc => I
Apply:  Pos: [34, 40] cc => I
Apply:  Pos: [36, 44] cc => I
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [45, 58] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [67, 78] cc => I
Apply:  Pos: [62, 69] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 77, 80] ccc => cc
Apply:  Pos: [72, 75] cc => I
Apply:  Pos: [76, 83] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 101] cc => I
Apply:  Pos: [90, 99, 109] ccc => cc
Apply:  Pos: [91, 102] cc => I
Apply:  Pos: [95, 100] cc => I
Apply:  Pos: [97, 114] cc => I
Apply:  Pos: [104, 110] cc => I
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [113, 119, 124] ccc => cc
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [121, 130] cc => I
Apply:  Pos: [123, 131] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [140, 143] cc => I
Apply:  Pos: [142, 148] cc => I
Apply:  Pos: [144, 149] cc => I
Apply:  Pos: [145, 152] cc => I
Apply:  Pos: [147, 151] cc => I
Apply:  Pos: [153, 155] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [164, 169] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [207, 218] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [209, 212] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [252, 254] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [256, 260] cc => I
Apply:  Pos: [257, 261] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [14, 7], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 19], [0, 10], [15, 16], [9, 3], [14, 7], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 4], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [17, 4], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [8, 5], [7, 2], [15, 1], [19, 13], [8, 13], [16, 9], [10, 18], [14, 15], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [1, 0], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [5, 13], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [1, 0], [5, 13], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----End Timer [Execute Mapping]:  5.187664747238159

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 50]
[97, 118]
[110, 119]
[147, 165]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[46, 56, 60]
[61, 66, 69]
[79, 82, 87]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[75, 77, 85]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 50]
[97, 118]
[110, 119]
[147, 165]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9204208850860596

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 50] cc => I, Pos: [37, 50] cc => I, Pos: [46, 56, 60] ccc => cc, Pos: [61, 66, 69] ccc => cc, Pos: [75, 77, 85] ccc => cc, Pos: [79, 82, 87] ccc => cc, Pos: [97, 118] cc => I, Pos: [97, 118] cc => I, Pos: [110, 119] cc => I, Pos: [110, 119] cc => I, Pos: [147, 165] cc => I, Pos: [147, 165] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 50] cc => I,
 Pos: [46, 56, 60] ccc => cc,
 Pos: [61, 66, 69] ccc => cc,
 Pos: [75, 77, 85] ccc => cc,
 Pos: [79, 82, 87] ccc => cc,
 Pos: [97, 118] cc => I,
 Pos: [110, 119] cc => I,
 Pos: [147, 165] cc => I]
Change: 8, Saving: 24

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 50] cc => I
Apply:  Pos: [46, 56, 60] ccc => cc
Apply:  Pos: [61, 66, 69] ccc => cc
Apply:  Pos: [75, 77, 85] ccc => cc
Apply:  Pos: [79, 82, 87] ccc => cc
Apply:  Pos: [97, 118] cc => I
Apply:  Pos: [110, 119] cc => I
Apply:  Pos: [147, 165] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [8, 13], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.9204208850860596

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 64]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 64]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.656679153442383

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 64] cc => I, Pos: [38, 64] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 64] cc => I]
Change: 1, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 64] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [8, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.656679153442383

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.59472393989563

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [8, 13], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.59472393989563

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [153] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 306

Reduced: 
 - size: 117 (43.33%)
 - cycle: 234 (43.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935497283935547

[8, 5], [2, 0], [17, 4], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [14, 15], [19, 5], [17, 4], [1, 0], [19, 8], [4, 9], [14, 15], [1, 0], [5, 13], [8, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [12, 6], [8, 13], [2, 0], [7, 1], [11, 3], [19, 8], [15, 16], [18, 5], [1, 10], [9, 3], [12, 0], [19, 8], [1, 10], [16, 9], [14, 15], [18, 5], [11, 3], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [12, 6], [4, 15], [16, 9], [19, 5], [14, 7], [2, 0], [11, 3], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [19, 5], [14, 7], [9, 18], [6, 8], [1, 0], [11, 3], [15, 16], [1, 19], [9, 18], [15, 16], [6, 8], [0, 10], [14, 7], [2, 12], [1, 0], [15, 16], [9, 3], [6, 8], [14, 7], [2, 12], [19, 13], [1, 10], [4, 15], [16, 9], [2, 0], [17, 14], [11, 3], [19, 13], [9, 10], [7, 1], [19, 8], [16, 11], [9, 3], [0, 6], [7, 1], [4, 15], [17, 14], [18, 5], [15, 9], [14, 7], [1, 19], [17, 4], [8, 5], [2, 0], [15, 9], [14, 1], [19, 5], [12, 6], [16, 11], [4, 15], [14, 7], [19, 13], [11, 3], [2, 12], [17, 4], [18, 5], [0, 19], [15, 1], [12, 6], [8, 13], [11, 3], [4, 9], [12, 0], [11, 3], [18, 5], [15, 1], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [19, 13], [7, 2], [16, 11], [19, 13], [9, 3], [2, 6], [15, 1], [18, 5], [16, 11], [9, 3], [19, 13], [18, 5], [2, 6], [7, 1], [11, 3], [7, 1], [8, 13], [16, 9], [10, 18], [14, 15], [11, 3], [15, 16], [0, 6], [1, 10], [8, 13], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [16, 11], [1, 0], [6, 8], [9, 10], [14, 7], [4, 15], [3, 18], [16, 11], [0, 6], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [0, 6], [14, 7], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [8, 13], [7, 2], [7, 15], [17, 14], [16, 9], [3, 18], [2, 6], [8, 13], [10, 19], [1, 0], [7, 15], [5, 13], [1, 10], [17, 14], [0, 6], [4, 9], [15, 16], [0, 6], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [11, 3], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [12, 6], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [12, 6], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [5, 13], [16, 9], [5, 13], [2, 12], [19, 8], [1, 10], [11, 3], [15, 9], [19, 8], [1, 10], [2, 12], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 77, 80]
[90, 99, 109]
[190, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 119, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[17, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.231446266174316

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 11] cc => I, Pos: [2, 11] cc => I, Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [17, 18, 23] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [29, 52] cc => I, Pos: [29, 52] cc => I, Pos: [34, 40] cc => I, Pos: [34, 40] cc => I, Pos: [36, 44] cc => I, Pos: [36, 44] cc => I, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [45, 58] cc => I, Pos: [45, 58] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [56, 67] cc => I, Pos: [56, 67] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [62, 69] cc => I, Pos: [62, 69] cc => I, Pos: [67, 78] cc => I, Pos: [67, 78] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [69, 76] cc => I, Pos: [69, 76] cc => I, Pos: [70, 77, 80] ccc => cc, Pos: [72, 75] cc => I, Pos: [72, 75] cc => I, Pos: [75, 81] cc => I, Pos: [75, 81] cc => I, Pos: [76, 83] cc => I, Pos: [76, 83] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 101] cc => I, Pos: [88, 101] cc => I, Pos: [90, 99, 109] ccc => cc, Pos: [91, 102] cc => I, Pos: [91, 102] cc => I, Pos: [95, 100] cc => I, Pos: [95, 100] cc => I, Pos: [97, 114] cc => I, Pos: [97, 114] cc => I, Pos: [104, 110] cc => I, Pos: [104, 110] cc => I, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [113, 119, 124] ccc => cc, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [121, 130] cc => I, Pos: [121, 130] cc => I, Pos: [123, 131] cc => I, Pos: [123, 131] cc => I, Pos: [126, 129] cc => I, Pos: [126, 129] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [140, 143] cc => I, Pos: [140, 143] cc => I, Pos: [142, 148] cc => I, Pos: [142, 148] cc => I, Pos: [143, 150] cc => I, Pos: [143, 150] cc => I, Pos: [144, 149] cc => I, Pos: [144, 149] cc => I, Pos: [145, 152] cc => I, Pos: [145, 152] cc => I, Pos: [147, 151] cc => I, Pos: [147, 151] cc => I, Pos: [153, 155] cc => I, Pos: [153, 155] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [164, 169] cc => I, Pos: [164, 169] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [190, 203, 207] ccc => cc, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [198, 208] cc => I, Pos: [198, 208] cc => I, Pos: [207, 218] cc => I, Pos: [207, 218] cc => I, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [241, 252] cc => I, Pos: [241, 252] cc => I, Pos: [252, 254] cc => I, Pos: [252, 254] cc => I, Pos: [254, 268] cc => I, Pos: [254, 268] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 260] cc => I, Pos: [256, 260] cc => I, Pos: [257, 261] cc => I, Pos: [257, 261] cc => I, Pos: [262, 265] cc => I, Pos: [262, 265] cc => I]

--------End Timer [Generate Plans]:  0.12497901916503906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 30] cc => I,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [56, 67] cc => I,
 Pos: [69, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [72, 75] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [140, 143] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [160, 165] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [207, 218] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [241, 252] cc => I,
 Pos: [254, 268] cc => I,
 Pos: [262, 265] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 54, Saving: 54

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 11] cc => I
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [29, 52] cc => I
Apply:  Pos: [34, 40] cc => I
Apply:  Pos: [36, 44] cc => I
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [45, 58] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [56, 67] cc => I
Apply:  Pos: [69, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 77, 80] ccc => cc
Apply:  Pos: [72, 75] cc => I
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 101] cc => I
Apply:  Pos: [90, 99, 109] ccc => cc
Apply:  Pos: [91, 102] cc => I
Apply:  Pos: [95, 100] cc => I
Apply:  Pos: [97, 114] cc => I
Apply:  Pos: [104, 110] cc => I
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [113, 119, 124] ccc => cc
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [121, 130] cc => I
Apply:  Pos: [123, 131] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [140, 143] cc => I
Apply:  Pos: [142, 148] cc => I
Apply:  Pos: [144, 149] cc => I
Apply:  Pos: [145, 152] cc => I
Apply:  Pos: [147, 151] cc => I
Apply:  Pos: [153, 155] cc => I
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [156, 164] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [207, 218] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [209, 212] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [241, 252] cc => I
Apply:  Pos: [254, 268] cc => I
Apply:  Pos: [262, 265] cc => I
Apply:  Pos: [256, 260] cc => I
Apply:  Pos: [257, 261] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 19], [0, 10], [15, 16], [9, 3], [6, 8], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 4], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [17, 4], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [16, 9], [10, 18], [14, 15], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [1, 0], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [5, 13], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [1, 0], [5, 13], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  5.3564252853393555

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 50]
[97, 118]
[110, 119]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[61, 66, 69]
[79, 82, 87]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[75, 77, 85]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[40, 50]
[97, 118]
[110, 119]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8916244506835938

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [40, 50] cc => I, Pos: [40, 50] cc => I, Pos: [61, 66, 69] ccc => cc, Pos: [75, 77, 85] ccc => cc, Pos: [79, 82, 87] ccc => cc, Pos: [97, 118] cc => I, Pos: [97, 118] cc => I, Pos: [110, 119] cc => I, Pos: [110, 119] cc => I]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [40, 50] cc => I,
 Pos: [61, 66, 69] ccc => cc,
 Pos: [75, 77, 85] ccc => cc,
 Pos: [79, 82, 87] ccc => cc,
 Pos: [97, 118] cc => I,
 Pos: [110, 119] cc => I]
Change: 6, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [40, 50] cc => I
Apply:  Pos: [61, 66, 69] ccc => cc
Apply:  Pos: [75, 77, 85] ccc => cc
Apply:  Pos: [79, 82, 87] ccc => cc
Apply:  Pos: [97, 118] cc => I
Apply:  Pos: [110, 119] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 19], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.9072487354278564

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 54, 58]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.7024688720703125

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [45, 54, 58] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [45, 54, 58] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [45, 54, 58] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.7024688720703125

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 64]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 64]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6890273094177246

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 64] cc => I, Pos: [38, 64] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 64] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 64] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.6890273094177246

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6099350452423096

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.6099350452423096

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [153] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 306

Reduced: 
 - size: 117 (43.33%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935449600219727

[8, 5], [2, 0], [17, 4], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [14, 15], [19, 5], [17, 4], [1, 0], [19, 8], [4, 9], [14, 15], [1, 0], [5, 13], [8, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [12, 6], [8, 13], [2, 0], [7, 1], [11, 3], [19, 8], [15, 16], [18, 5], [1, 10], [9, 3], [12, 0], [19, 8], [1, 10], [16, 9], [14, 15], [18, 5], [11, 3], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [12, 6], [4, 15], [16, 9], [19, 5], [14, 7], [2, 0], [11, 3], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [19, 5], [14, 7], [9, 18], [6, 8], [1, 0], [11, 3], [15, 16], [1, 19], [9, 18], [15, 16], [6, 8], [0, 10], [14, 7], [2, 12], [1, 0], [15, 16], [9, 3], [6, 8], [14, 7], [2, 12], [19, 13], [1, 10], [4, 15], [16, 9], [2, 0], [17, 14], [11, 3], [19, 13], [9, 10], [7, 1], [19, 8], [16, 11], [9, 3], [0, 6], [7, 1], [4, 15], [17, 14], [18, 5], [15, 9], [14, 7], [1, 19], [17, 4], [8, 5], [2, 0], [15, 9], [14, 1], [19, 5], [12, 6], [16, 11], [4, 15], [14, 7], [19, 13], [11, 3], [2, 12], [17, 4], [18, 5], [0, 19], [15, 1], [12, 6], [8, 13], [11, 3], [4, 9], [12, 0], [11, 3], [18, 5], [15, 1], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [19, 13], [7, 2], [16, 11], [19, 13], [9, 3], [2, 6], [15, 1], [18, 5], [16, 11], [9, 3], [19, 13], [18, 5], [2, 6], [7, 1], [11, 3], [7, 1], [8, 13], [16, 9], [10, 18], [14, 15], [11, 3], [15, 16], [0, 6], [1, 10], [8, 13], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [16, 11], [1, 0], [6, 8], [9, 10], [14, 7], [4, 15], [3, 18], [16, 11], [0, 6], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [0, 6], [14, 7], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [8, 13], [7, 2], [7, 15], [17, 14], [16, 9], [3, 18], [2, 6], [8, 13], [10, 19], [1, 0], [7, 15], [5, 13], [1, 10], [17, 14], [0, 6], [4, 9], [15, 16], [0, 6], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [11, 3], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [12, 6], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [12, 6], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [5, 13], [16, 9], [5, 13], [2, 12], [19, 8], [1, 10], [11, 3], [15, 9], [19, 8], [1, 10], [2, 12], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 77, 80]
[90, 99, 109]
[190, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 119, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[17, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.187503099441528

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 11] cc => I, Pos: [2, 11] cc => I, Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [17, 18, 23] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [29, 52] cc => I, Pos: [29, 52] cc => I, Pos: [34, 40] cc => I, Pos: [34, 40] cc => I, Pos: [36, 44] cc => I, Pos: [36, 44] cc => I, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [45, 58] cc => I, Pos: [45, 58] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [56, 67] cc => I, Pos: [56, 67] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [62, 69] cc => I, Pos: [62, 69] cc => I, Pos: [67, 78] cc => I, Pos: [67, 78] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [69, 76] cc => I, Pos: [69, 76] cc => I, Pos: [70, 77, 80] ccc => cc, Pos: [72, 75] cc => I, Pos: [72, 75] cc => I, Pos: [75, 81] cc => I, Pos: [75, 81] cc => I, Pos: [76, 83] cc => I, Pos: [76, 83] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 101] cc => I, Pos: [88, 101] cc => I, Pos: [90, 99, 109] ccc => cc, Pos: [91, 102] cc => I, Pos: [91, 102] cc => I, Pos: [95, 100] cc => I, Pos: [95, 100] cc => I, Pos: [97, 114] cc => I, Pos: [97, 114] cc => I, Pos: [104, 110] cc => I, Pos: [104, 110] cc => I, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [113, 119, 124] ccc => cc, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [121, 130] cc => I, Pos: [121, 130] cc => I, Pos: [123, 131] cc => I, Pos: [123, 131] cc => I, Pos: [126, 129] cc => I, Pos: [126, 129] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [140, 143] cc => I, Pos: [140, 143] cc => I, Pos: [142, 148] cc => I, Pos: [142, 148] cc => I, Pos: [143, 150] cc => I, Pos: [143, 150] cc => I, Pos: [144, 149] cc => I, Pos: [144, 149] cc => I, Pos: [145, 152] cc => I, Pos: [145, 152] cc => I, Pos: [147, 151] cc => I, Pos: [147, 151] cc => I, Pos: [153, 155] cc => I, Pos: [153, 155] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [164, 169] cc => I, Pos: [164, 169] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [190, 203, 207] ccc => cc, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [198, 208] cc => I, Pos: [198, 208] cc => I, Pos: [207, 218] cc => I, Pos: [207, 218] cc => I, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [241, 252] cc => I, Pos: [241, 252] cc => I, Pos: [252, 254] cc => I, Pos: [252, 254] cc => I, Pos: [254, 268] cc => I, Pos: [254, 268] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 260] cc => I, Pos: [256, 260] cc => I, Pos: [257, 261] cc => I, Pos: [257, 261] cc => I, Pos: [262, 265] cc => I, Pos: [262, 265] cc => I]

--------End Timer [Generate Plans]:  0.14061546325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 30] cc => I,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [67, 78] cc => I,
 Pos: [69, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [72, 75] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [140, 143] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [164, 169] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [207, 218] cc => I,
 Pos: [198, 208] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [252, 254] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 52, Saving: 52

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 11] cc => I
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [29, 52] cc => I
Apply:  Pos: [34, 40] cc => I
Apply:  Pos: [36, 44] cc => I
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [45, 58] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [67, 78] cc => I
Apply:  Pos: [69, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 77, 80] ccc => cc
Apply:  Pos: [72, 75] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 101] cc => I
Apply:  Pos: [90, 99, 109] ccc => cc
Apply:  Pos: [91, 102] cc => I
Apply:  Pos: [95, 100] cc => I
Apply:  Pos: [97, 114] cc => I
Apply:  Pos: [104, 110] cc => I
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [113, 119, 124] ccc => cc
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [121, 130] cc => I
Apply:  Pos: [123, 131] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [140, 143] cc => I
Apply:  Pos: [142, 148] cc => I
Apply:  Pos: [144, 149] cc => I
Apply:  Pos: [145, 152] cc => I
Apply:  Pos: [147, 151] cc => I
Apply:  Pos: [153, 155] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [164, 169] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [207, 218] cc => I
Apply:  Pos: [198, 208] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [209, 212] cc => I
Apply:  Pos: [224, 229] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [252, 254] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [256, 260] cc => I
Apply:  Pos: [257, 261] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [14, 7], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 19], [0, 10], [15, 16], [9, 3], [6, 8], [14, 7], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 4], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [17, 4], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [8, 5], [7, 2], [15, 1], [19, 13], [8, 13], [16, 9], [10, 18], [14, 15], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [1, 0], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [1, 0], [5, 13], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----End Timer [Execute Mapping]:  5.328118562698364

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 51]
[37, 52]
[99, 121]
[112, 122]
[149, 167]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 68, 71]
[81, 84, 89]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 79, 87]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 51]
[37, 52]
[99, 121]
[112, 122]
[149, 167]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.968701124191284

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 52] cc => I, Pos: [37, 52] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [63, 68, 71] ccc => cc, Pos: [77, 79, 87] ccc => cc, Pos: [81, 84, 89] ccc => cc, Pos: [99, 121] cc => I, Pos: [99, 121] cc => I, Pos: [112, 122] cc => I, Pos: [112, 122] cc => I, Pos: [149, 167] cc => I, Pos: [149, 167] cc => I]

--------End Timer [Generate Plans]:  0.015610218048095703

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 52] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [63, 68, 71] ccc => cc,
 Pos: [77, 79, 87] ccc => cc,
 Pos: [81, 84, 89] ccc => cc,
 Pos: [99, 121] cc => I,
 Pos: [112, 122] cc => I,
 Pos: [149, 167] cc => I]
Change: 8, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 52] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [63, 68, 71] ccc => cc
Apply:  Pos: [77, 79, 87] ccc => cc
Apply:  Pos: [81, 84, 89] ccc => cc
Apply:  Pos: [99, 121] cc => I
Apply:  Pos: [112, 122] cc => I
Apply:  Pos: [149, 167] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 19], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [8, 13], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.98431134223938

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 54, 58]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.671919107437134

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [45, 54, 58] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [45, 54, 58] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [45, 54, 58] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [8, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.671919107437134

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 64]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 64]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6407907009124756

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 64] cc => I, Pos: [38, 64] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 64] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 64] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [8, 13], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.6407907009124756

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6093320846557617

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [8, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.6093320846557617

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [153] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 306

Reduced: 
 - size: 117 (43.33%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09373736381530762

[8, 5], [2, 0], [17, 4], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [14, 15], [19, 5], [17, 4], [1, 0], [19, 8], [4, 9], [14, 15], [1, 0], [5, 13], [8, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [12, 6], [8, 13], [2, 0], [7, 1], [11, 3], [19, 8], [15, 16], [18, 5], [1, 10], [9, 3], [12, 0], [19, 8], [1, 10], [16, 9], [14, 15], [18, 5], [11, 3], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [12, 6], [4, 15], [16, 9], [19, 5], [14, 7], [2, 0], [11, 3], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [19, 5], [14, 7], [9, 18], [6, 8], [1, 0], [11, 3], [15, 16], [1, 19], [9, 18], [15, 16], [6, 8], [0, 10], [14, 7], [2, 12], [1, 0], [15, 16], [9, 3], [6, 8], [14, 7], [2, 12], [19, 13], [1, 10], [4, 15], [16, 9], [2, 0], [17, 14], [11, 3], [19, 13], [9, 10], [7, 1], [19, 8], [16, 11], [9, 3], [0, 6], [7, 1], [4, 15], [17, 14], [18, 5], [15, 9], [14, 7], [1, 19], [17, 4], [8, 5], [2, 0], [15, 9], [14, 1], [19, 5], [12, 6], [16, 11], [4, 15], [14, 7], [19, 13], [11, 3], [2, 12], [17, 4], [18, 5], [0, 19], [15, 1], [12, 6], [8, 13], [11, 3], [4, 9], [12, 0], [11, 3], [18, 5], [15, 1], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [19, 13], [7, 2], [16, 11], [19, 13], [9, 3], [2, 6], [15, 1], [18, 5], [16, 11], [9, 3], [19, 13], [18, 5], [2, 6], [7, 1], [11, 3], [7, 1], [8, 13], [16, 9], [10, 18], [14, 15], [11, 3], [15, 16], [0, 6], [1, 10], [8, 13], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [16, 11], [1, 0], [6, 8], [9, 10], [14, 7], [4, 15], [3, 18], [16, 11], [0, 6], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [0, 6], [14, 7], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [8, 13], [7, 2], [7, 15], [17, 14], [16, 9], [3, 18], [2, 6], [8, 13], [10, 19], [1, 0], [7, 15], [5, 13], [1, 10], [17, 14], [0, 6], [4, 9], [15, 16], [0, 6], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [11, 3], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [12, 6], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [12, 6], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [5, 13], [16, 9], [5, 13], [2, 12], [19, 8], [1, 10], [11, 3], [15, 9], [19, 8], [1, 10], [2, 12], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 77, 80]
[90, 99, 109]
[190, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 119, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[17, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.109673738479614

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 11] cc => I, Pos: [2, 11] cc => I, Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [17, 18, 23] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [29, 52] cc => I, Pos: [29, 52] cc => I, Pos: [34, 40] cc => I, Pos: [34, 40] cc => I, Pos: [36, 44] cc => I, Pos: [36, 44] cc => I, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [45, 58] cc => I, Pos: [45, 58] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [56, 67] cc => I, Pos: [56, 67] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [62, 69] cc => I, Pos: [62, 69] cc => I, Pos: [67, 78] cc => I, Pos: [67, 78] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [69, 76] cc => I, Pos: [69, 76] cc => I, Pos: [70, 77, 80] ccc => cc, Pos: [72, 75] cc => I, Pos: [72, 75] cc => I, Pos: [75, 81] cc => I, Pos: [75, 81] cc => I, Pos: [76, 83] cc => I, Pos: [76, 83] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 101] cc => I, Pos: [88, 101] cc => I, Pos: [90, 99, 109] ccc => cc, Pos: [91, 102] cc => I, Pos: [91, 102] cc => I, Pos: [95, 100] cc => I, Pos: [95, 100] cc => I, Pos: [97, 114] cc => I, Pos: [97, 114] cc => I, Pos: [104, 110] cc => I, Pos: [104, 110] cc => I, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [113, 119, 124] ccc => cc, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [121, 130] cc => I, Pos: [121, 130] cc => I, Pos: [123, 131] cc => I, Pos: [123, 131] cc => I, Pos: [126, 129] cc => I, Pos: [126, 129] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [140, 143] cc => I, Pos: [140, 143] cc => I, Pos: [142, 148] cc => I, Pos: [142, 148] cc => I, Pos: [143, 150] cc => I, Pos: [143, 150] cc => I, Pos: [144, 149] cc => I, Pos: [144, 149] cc => I, Pos: [145, 152] cc => I, Pos: [145, 152] cc => I, Pos: [147, 151] cc => I, Pos: [147, 151] cc => I, Pos: [153, 155] cc => I, Pos: [153, 155] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [164, 169] cc => I, Pos: [164, 169] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [190, 203, 207] ccc => cc, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [198, 208] cc => I, Pos: [198, 208] cc => I, Pos: [207, 218] cc => I, Pos: [207, 218] cc => I, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [241, 252] cc => I, Pos: [241, 252] cc => I, Pos: [252, 254] cc => I, Pos: [252, 254] cc => I, Pos: [254, 268] cc => I, Pos: [254, 268] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 260] cc => I, Pos: [256, 260] cc => I, Pos: [257, 261] cc => I, Pos: [257, 261] cc => I, Pos: [262, 265] cc => I, Pos: [262, 265] cc => I]

--------End Timer [Generate Plans]:  0.14061594009399414

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [17, 18, 23] ccc => cc,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [56, 67] cc => I,
 Pos: [62, 69] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [72, 75] cc => I,
 Pos: [76, 83] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [140, 143] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [160, 165] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [207, 218] cc => I,
 Pos: [198, 208] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [252, 254] cc => I,
 Pos: [262, 265] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 54, Saving: 55

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 11] cc => I
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [17, 18, 23] ccc => cc
Apply:  Pos: [29, 52] cc => I
Apply:  Pos: [34, 40] cc => I
Apply:  Pos: [36, 44] cc => I
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [45, 58] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [56, 67] cc => I
Apply:  Pos: [62, 69] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 77, 80] ccc => cc
Apply:  Pos: [72, 75] cc => I
Apply:  Pos: [76, 83] cc => I
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 101] cc => I
Apply:  Pos: [90, 99, 109] ccc => cc
Apply:  Pos: [91, 102] cc => I
Apply:  Pos: [95, 100] cc => I
Apply:  Pos: [97, 114] cc => I
Apply:  Pos: [104, 110] cc => I
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [113, 119, 124] ccc => cc
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [121, 130] cc => I
Apply:  Pos: [123, 131] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [140, 143] cc => I
Apply:  Pos: [142, 148] cc => I
Apply:  Pos: [144, 149] cc => I
Apply:  Pos: [145, 152] cc => I
Apply:  Pos: [147, 151] cc => I
Apply:  Pos: [153, 155] cc => I
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [156, 164] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [207, 218] cc => I
Apply:  Pos: [198, 208] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [209, 212] cc => I
Apply:  Pos: [224, 229] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [252, 254] cc => I
Apply:  Pos: [262, 265] cc => I
Apply:  Pos: [256, 260] cc => I
Apply:  Pos: [257, 261] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [8, 13], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 19], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 4], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [17, 4], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [16, 9], [10, 18], [14, 15], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [1, 0], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [1, 0], [5, 13], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [5, 13], [16, 11], ----End Timer [Execute Mapping]:  5.250289678573608

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 35]
[96, 118]
[109, 119]
[146, 164]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[46, 55, 59]
[60, 65, 68]
[78, 81, 86]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[74, 76, 84]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 35]
[96, 118]
[109, 119]
[146, 164]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8753061294555664

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 35] cc => I, Pos: [22, 35] cc => I, Pos: [46, 55, 59] ccc => cc, Pos: [60, 65, 68] ccc => cc, Pos: [74, 76, 84] ccc => cc, Pos: [78, 81, 86] ccc => cc, Pos: [96, 118] cc => I, Pos: [96, 118] cc => I, Pos: [109, 119] cc => I, Pos: [109, 119] cc => I, Pos: [146, 164] cc => I, Pos: [146, 164] cc => I]

--------End Timer [Generate Plans]:  0.01561880111694336

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 35] cc => I,
 Pos: [46, 55, 59] ccc => cc,
 Pos: [60, 65, 68] ccc => cc,
 Pos: [74, 76, 84] ccc => cc,
 Pos: [78, 81, 86] ccc => cc,
 Pos: [96, 118] cc => I,
 Pos: [109, 119] cc => I,
 Pos: [146, 164] cc => I]
Change: 8, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 35] cc => I
Apply:  Pos: [46, 55, 59] ccc => cc
Apply:  Pos: [60, 65, 68] ccc => cc
Apply:  Pos: [74, 76, 84] ccc => cc
Apply:  Pos: [78, 81, 86] ccc => cc
Apply:  Pos: [96, 118] cc => I
Apply:  Pos: [109, 119] cc => I
Apply:  Pos: [146, 164] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.8909249305725098

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 63]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 63]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.593843460083008

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 63] cc => I, Pos: [37, 63] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 63] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 63] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.593843460083008

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.5315909385681152

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.547214984893799

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [152] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 304

Reduced: 
 - size: 118 (43.70%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374356269836426

[8, 5], [2, 0], [17, 4], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [14, 15], [19, 5], [17, 4], [1, 0], [19, 8], [4, 9], [14, 15], [1, 0], [5, 13], [8, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [12, 6], [8, 13], [2, 0], [7, 1], [11, 3], [19, 8], [15, 16], [18, 5], [1, 10], [9, 3], [12, 0], [19, 8], [1, 10], [16, 9], [14, 15], [18, 5], [11, 3], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [12, 6], [4, 15], [16, 9], [19, 5], [14, 7], [2, 0], [11, 3], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [19, 5], [14, 7], [9, 18], [6, 8], [1, 0], [11, 3], [15, 16], [1, 19], [9, 18], [15, 16], [6, 8], [0, 10], [14, 7], [2, 12], [1, 0], [15, 16], [9, 3], [6, 8], [14, 7], [2, 12], [19, 13], [1, 10], [4, 15], [16, 9], [2, 0], [17, 14], [11, 3], [19, 13], [9, 10], [7, 1], [19, 8], [16, 11], [9, 3], [0, 6], [7, 1], [4, 15], [17, 14], [18, 5], [15, 9], [14, 7], [1, 19], [17, 4], [8, 5], [2, 0], [15, 9], [14, 1], [19, 5], [12, 6], [16, 11], [4, 15], [14, 7], [19, 13], [11, 3], [2, 12], [17, 4], [18, 5], [0, 19], [15, 1], [12, 6], [8, 13], [11, 3], [4, 9], [12, 0], [11, 3], [18, 5], [15, 1], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [19, 13], [7, 2], [16, 11], [19, 13], [9, 3], [2, 6], [15, 1], [18, 5], [16, 11], [9, 3], [19, 13], [18, 5], [2, 6], [7, 1], [11, 3], [7, 1], [8, 13], [16, 9], [10, 18], [14, 15], [11, 3], [15, 16], [0, 6], [1, 10], [8, 13], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [16, 11], [1, 0], [6, 8], [9, 10], [14, 7], [4, 15], [3, 18], [16, 11], [0, 6], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [0, 6], [14, 7], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [8, 13], [7, 2], [7, 15], [17, 14], [16, 9], [3, 18], [2, 6], [8, 13], [10, 19], [1, 0], [7, 15], [5, 13], [1, 10], [17, 14], [0, 6], [4, 9], [15, 16], [0, 6], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [11, 3], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [12, 6], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [12, 6], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [5, 13], [16, 9], [5, 13], [2, 12], [19, 8], [1, 10], [11, 3], [15, 9], [19, 8], [1, 10], [2, 12], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 77, 80]
[90, 99, 109]
[190, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 119, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[17, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.29533314704895

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 11] cc => I, Pos: [2, 11] cc => I, Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [17, 18, 23] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [29, 52] cc => I, Pos: [29, 52] cc => I, Pos: [34, 40] cc => I, Pos: [34, 40] cc => I, Pos: [36, 44] cc => I, Pos: [36, 44] cc => I, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [45, 58] cc => I, Pos: [45, 58] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [56, 67] cc => I, Pos: [56, 67] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [62, 69] cc => I, Pos: [62, 69] cc => I, Pos: [67, 78] cc => I, Pos: [67, 78] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [69, 76] cc => I, Pos: [69, 76] cc => I, Pos: [70, 77, 80] ccc => cc, Pos: [72, 75] cc => I, Pos: [72, 75] cc => I, Pos: [75, 81] cc => I, Pos: [75, 81] cc => I, Pos: [76, 83] cc => I, Pos: [76, 83] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 101] cc => I, Pos: [88, 101] cc => I, Pos: [90, 99, 109] ccc => cc, Pos: [91, 102] cc => I, Pos: [91, 102] cc => I, Pos: [95, 100] cc => I, Pos: [95, 100] cc => I, Pos: [97, 114] cc => I, Pos: [97, 114] cc => I, Pos: [104, 110] cc => I, Pos: [104, 110] cc => I, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [113, 119, 124] ccc => cc, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [121, 130] cc => I, Pos: [121, 130] cc => I, Pos: [123, 131] cc => I, Pos: [123, 131] cc => I, Pos: [126, 129] cc => I, Pos: [126, 129] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [140, 143] cc => I, Pos: [140, 143] cc => I, Pos: [142, 148] cc => I, Pos: [142, 148] cc => I, Pos: [143, 150] cc => I, Pos: [143, 150] cc => I, Pos: [144, 149] cc => I, Pos: [144, 149] cc => I, Pos: [145, 152] cc => I, Pos: [145, 152] cc => I, Pos: [147, 151] cc => I, Pos: [147, 151] cc => I, Pos: [153, 155] cc => I, Pos: [153, 155] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [164, 169] cc => I, Pos: [164, 169] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [190, 203, 207] ccc => cc, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [198, 208] cc => I, Pos: [198, 208] cc => I, Pos: [207, 218] cc => I, Pos: [207, 218] cc => I, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [241, 252] cc => I, Pos: [241, 252] cc => I, Pos: [252, 254] cc => I, Pos: [252, 254] cc => I, Pos: [254, 268] cc => I, Pos: [254, 268] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 260] cc => I, Pos: [256, 260] cc => I, Pos: [257, 261] cc => I, Pos: [257, 261] cc => I, Pos: [262, 265] cc => I, Pos: [262, 265] cc => I]

--------End Timer [Generate Plans]:  0.12497782707214355

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 30] cc => I,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [56, 67] cc => I,
 Pos: [62, 69] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [75, 81] cc => I,
 Pos: [76, 83] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [126, 129] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [140, 143] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [207, 218] cc => I,
 Pos: [198, 208] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [241, 252] cc => I,
 Pos: [254, 268] cc => I,
 Pos: [262, 265] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 54, Saving: 54

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 11] cc => I
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [29, 52] cc => I
Apply:  Pos: [34, 40] cc => I
Apply:  Pos: [36, 44] cc => I
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [45, 58] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [56, 67] cc => I
Apply:  Pos: [62, 69] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 77, 80] ccc => cc
Apply:  Pos: [75, 81] cc => I
Apply:  Pos: [76, 83] cc => I
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 101] cc => I
Apply:  Pos: [90, 99, 109] ccc => cc
Apply:  Pos: [91, 102] cc => I
Apply:  Pos: [95, 100] cc => I
Apply:  Pos: [97, 114] cc => I
Apply:  Pos: [104, 110] cc => I
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [113, 119, 124] ccc => cc
Apply:  Pos: [126, 129] cc => I
Apply:  Pos: [121, 130] cc => I
Apply:  Pos: [123, 131] cc => I
Apply:  Pos: [140, 143] cc => I
Apply:  Pos: [142, 148] cc => I
Apply:  Pos: [144, 149] cc => I
Apply:  Pos: [145, 152] cc => I
Apply:  Pos: [147, 151] cc => I
Apply:  Pos: [153, 155] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [156, 164] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [207, 218] cc => I
Apply:  Pos: [198, 208] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [209, 212] cc => I
Apply:  Pos: [224, 229] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [241, 252] cc => I
Apply:  Pos: [254, 268] cc => I
Apply:  Pos: [262, 265] cc => I
Apply:  Pos: [256, 260] cc => I
Apply:  Pos: [257, 261] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [1, 10], [11, 3], [15, 16], [1, 19], [0, 10], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 4], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [11, 3], [12, 6], [17, 4], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [7, 2], [15, 1], [19, 13], [16, 9], [10, 18], [14, 15], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [1, 0], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [1, 0], [5, 13], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  5.420310974121094

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[66, 79]
[79, 90]
[97, 119]
[110, 120]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[46, 54, 58]
[59, 64, 68]
[78, 82, 86]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[74, 76, 84]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[66, 79]
[79, 90]
[97, 119]
[110, 120]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.921924352645874

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [46, 54, 58] ccc => cc, Pos: [59, 64, 68] ccc => cc, Pos: [66, 79] cc => I, Pos: [66, 79] cc => I, Pos: [74, 76, 84] ccc => cc, Pos: [78, 82, 86] ccc => cc, Pos: [79, 90] cc => I, Pos: [79, 90] cc => I, Pos: [97, 119] cc => I, Pos: [97, 119] cc => I, Pos: [110, 120] cc => I, Pos: [110, 120] cc => I]

--------End Timer [Generate Plans]:  0.015906572341918945

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [46, 54, 58] ccc => cc,
 Pos: [59, 64, 68] ccc => cc,
 Pos: [66, 79] cc => I,
 Pos: [74, 76, 84] ccc => cc,
 Pos: [78, 82, 86] ccc => cc,
 Pos: [97, 119] cc => I,
 Pos: [110, 120] cc => I]
Change: 7, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [46, 54, 58] ccc => cc
Apply:  Pos: [59, 64, 68] ccc => cc
Apply:  Pos: [66, 79] cc => I
Apply:  Pos: [74, 76, 84] ccc => cc
Apply:  Pos: [78, 82, 86] ccc => cc
Apply:  Pos: [97, 119] cc => I
Apply:  Pos: [110, 120] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [1, 10], [9, 10], [11, 3], [15, 16], [1, 8], [0, 10], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.937830924987793

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 64]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[39, 64]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6720006465911865

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [39, 64] cc => I, Pos: [39, 64] cc => I]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [39, 64] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [39, 64] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [1, 10], [11, 3], [15, 16], [1, 8], [0, 10], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.68762469291687

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6409153938293457

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [1, 10], [9, 10], [11, 3], [15, 16], [1, 8], [0, 10], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.6409153938293457

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [153] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 306

Reduced: 
 - size: 117 (43.33%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09408187866210938

[8, 5], [2, 0], [17, 4], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [14, 15], [19, 5], [17, 4], [1, 0], [19, 8], [4, 9], [14, 15], [1, 0], [5, 13], [8, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [12, 6], [8, 13], [2, 0], [7, 1], [11, 3], [19, 8], [15, 16], [18, 5], [1, 10], [9, 3], [12, 0], [19, 8], [1, 10], [16, 9], [14, 15], [18, 5], [11, 3], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [12, 6], [4, 15], [16, 9], [19, 5], [14, 7], [2, 0], [11, 3], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [19, 5], [14, 7], [9, 18], [6, 8], [1, 0], [11, 3], [15, 16], [1, 19], [9, 18], [15, 16], [6, 8], [0, 10], [14, 7], [2, 12], [1, 0], [15, 16], [9, 3], [6, 8], [14, 7], [2, 12], [19, 13], [1, 10], [4, 15], [16, 9], [2, 0], [17, 14], [11, 3], [19, 13], [9, 10], [7, 1], [19, 8], [16, 11], [9, 3], [0, 6], [7, 1], [4, 15], [17, 14], [18, 5], [15, 9], [14, 7], [1, 19], [17, 4], [8, 5], [2, 0], [15, 9], [14, 1], [19, 5], [12, 6], [16, 11], [4, 15], [14, 7], [19, 13], [11, 3], [2, 12], [17, 4], [18, 5], [0, 19], [15, 1], [12, 6], [8, 13], [11, 3], [4, 9], [12, 0], [11, 3], [18, 5], [15, 1], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [19, 13], [7, 2], [16, 11], [19, 13], [9, 3], [2, 6], [15, 1], [18, 5], [16, 11], [9, 3], [19, 13], [18, 5], [2, 6], [7, 1], [11, 3], [7, 1], [8, 13], [16, 9], [10, 18], [14, 15], [11, 3], [15, 16], [0, 6], [1, 10], [8, 13], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [16, 11], [1, 0], [6, 8], [9, 10], [14, 7], [4, 15], [3, 18], [16, 11], [0, 6], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [0, 6], [14, 7], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [8, 13], [7, 2], [7, 15], [17, 14], [16, 9], [3, 18], [2, 6], [8, 13], [10, 19], [1, 0], [7, 15], [5, 13], [1, 10], [17, 14], [0, 6], [4, 9], [15, 16], [0, 6], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [11, 3], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [12, 6], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [12, 6], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [5, 13], [16, 9], [5, 13], [2, 12], [19, 8], [1, 10], [11, 3], [15, 9], [19, 8], [1, 10], [2, 12], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 77, 80]
[90, 99, 109]
[190, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 119, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[17, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.2184059619903564

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 11] cc => I, Pos: [2, 11] cc => I, Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [17, 18, 23] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [29, 52] cc => I, Pos: [29, 52] cc => I, Pos: [34, 40] cc => I, Pos: [34, 40] cc => I, Pos: [36, 44] cc => I, Pos: [36, 44] cc => I, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [45, 58] cc => I, Pos: [45, 58] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [56, 67] cc => I, Pos: [56, 67] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [62, 69] cc => I, Pos: [62, 69] cc => I, Pos: [67, 78] cc => I, Pos: [67, 78] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [69, 76] cc => I, Pos: [69, 76] cc => I, Pos: [70, 77, 80] ccc => cc, Pos: [72, 75] cc => I, Pos: [72, 75] cc => I, Pos: [75, 81] cc => I, Pos: [75, 81] cc => I, Pos: [76, 83] cc => I, Pos: [76, 83] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 101] cc => I, Pos: [88, 101] cc => I, Pos: [90, 99, 109] ccc => cc, Pos: [91, 102] cc => I, Pos: [91, 102] cc => I, Pos: [95, 100] cc => I, Pos: [95, 100] cc => I, Pos: [97, 114] cc => I, Pos: [97, 114] cc => I, Pos: [104, 110] cc => I, Pos: [104, 110] cc => I, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [113, 119, 124] ccc => cc, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [121, 130] cc => I, Pos: [121, 130] cc => I, Pos: [123, 131] cc => I, Pos: [123, 131] cc => I, Pos: [126, 129] cc => I, Pos: [126, 129] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [140, 143] cc => I, Pos: [140, 143] cc => I, Pos: [142, 148] cc => I, Pos: [142, 148] cc => I, Pos: [143, 150] cc => I, Pos: [143, 150] cc => I, Pos: [144, 149] cc => I, Pos: [144, 149] cc => I, Pos: [145, 152] cc => I, Pos: [145, 152] cc => I, Pos: [147, 151] cc => I, Pos: [147, 151] cc => I, Pos: [153, 155] cc => I, Pos: [153, 155] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [164, 169] cc => I, Pos: [164, 169] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [190, 203, 207] ccc => cc, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [198, 208] cc => I, Pos: [198, 208] cc => I, Pos: [207, 218] cc => I, Pos: [207, 218] cc => I, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [241, 252] cc => I, Pos: [241, 252] cc => I, Pos: [252, 254] cc => I, Pos: [252, 254] cc => I, Pos: [254, 268] cc => I, Pos: [254, 268] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 260] cc => I, Pos: [256, 260] cc => I, Pos: [257, 261] cc => I, Pos: [257, 261] cc => I, Pos: [262, 265] cc => I, Pos: [262, 265] cc => I]

--------End Timer [Generate Plans]:  0.12547922134399414

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [17, 18, 23] ccc => cc,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [67, 78] cc => I,
 Pos: [62, 69] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [75, 81] cc => I,
 Pos: [76, 83] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [126, 129] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [143, 150] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [160, 165] cc => I,
 Pos: [164, 169] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [207, 218] cc => I,
 Pos: [193, 198] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [241, 252] cc => I,
 Pos: [254, 268] cc => I,
 Pos: [262, 265] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 53, Saving: 54

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 11] cc => I
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [17, 18, 23] ccc => cc
Apply:  Pos: [29, 52] cc => I
Apply:  Pos: [34, 40] cc => I
Apply:  Pos: [36, 44] cc => I
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [45, 58] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [67, 78] cc => I
Apply:  Pos: [62, 69] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 77, 80] ccc => cc
Apply:  Pos: [75, 81] cc => I
Apply:  Pos: [76, 83] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 101] cc => I
Apply:  Pos: [90, 99, 109] ccc => cc
Apply:  Pos: [91, 102] cc => I
Apply:  Pos: [95, 100] cc => I
Apply:  Pos: [97, 114] cc => I
Apply:  Pos: [104, 110] cc => I
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [113, 119, 124] ccc => cc
Apply:  Pos: [126, 129] cc => I
Apply:  Pos: [121, 130] cc => I
Apply:  Pos: [123, 131] cc => I
Apply:  Pos: [143, 150] cc => I
Apply:  Pos: [142, 148] cc => I
Apply:  Pos: [144, 149] cc => I
Apply:  Pos: [145, 152] cc => I
Apply:  Pos: [147, 151] cc => I
Apply:  Pos: [153, 155] cc => I
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [164, 169] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [207, 218] cc => I
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [209, 212] cc => I
Apply:  Pos: [224, 229] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [241, 252] cc => I
Apply:  Pos: [254, 268] cc => I
Apply:  Pos: [262, 265] cc => I
Apply:  Pos: [256, 260] cc => I
Apply:  Pos: [257, 261] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [8, 13], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [14, 7], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [15, 16], [1, 19], [0, 10], [9, 3], [14, 7], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 4], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [11, 3], [12, 6], [17, 4], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [19, 13], [7, 2], [15, 1], [11, 3], [8, 13], [16, 9], [10, 18], [14, 15], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [1, 0], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [5, 13], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [1, 0], [5, 13], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  5.343885183334351

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 35]
[38, 51]
[69, 82]
[82, 87]
[100, 121]
[113, 122]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 57, 61]
[62, 67, 71]
[81, 86, 91]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 79, 89]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 35]
[38, 51]
[69, 82]
[82, 87]
[100, 121]
[113, 122]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9531638622283936

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 35] cc => I, Pos: [22, 35] cc => I, Pos: [38, 51] cc => I, Pos: [38, 51] cc => I, Pos: [48, 57, 61] ccc => cc, Pos: [62, 67, 71] ccc => cc, Pos: [69, 82] cc => I, Pos: [69, 82] cc => I, Pos: [77, 79, 89] ccc => cc, Pos: [81, 86, 91] ccc => cc, Pos: [82, 87] cc => I, Pos: [82, 87] cc => I, Pos: [100, 121] cc => I, Pos: [100, 121] cc => I, Pos: [113, 122] cc => I, Pos: [113, 122] cc => I]

--------End Timer [Generate Plans]:  0.031162023544311523

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 35] cc => I,
 Pos: [38, 51] cc => I,
 Pos: [48, 57, 61] ccc => cc,
 Pos: [62, 67, 71] ccc => cc,
 Pos: [69, 82] cc => I,
 Pos: [77, 79, 89] ccc => cc,
 Pos: [81, 86, 91] ccc => cc,
 Pos: [100, 121] cc => I,
 Pos: [113, 122] cc => I]
Change: 9, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 35] cc => I
Apply:  Pos: [38, 51] cc => I
Apply:  Pos: [48, 57, 61] ccc => cc
Apply:  Pos: [62, 67, 71] ccc => cc
Apply:  Pos: [69, 82] cc => I
Apply:  Pos: [77, 79, 89] ccc => cc
Apply:  Pos: [81, 86, 91] ccc => cc
Apply:  Pos: [100, 121] cc => I
Apply:  Pos: [113, 122] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [15, 16], [1, 8], [0, 10], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [19, 13], [7, 2], [15, 1], [11, 3], [8, 13], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.984325885772705

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 63]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 63]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6561636924743652

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 63] cc => I, Pos: [37, 63] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 63] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 63] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [15, 16], [1, 8], [0, 10], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [19, 13], [7, 2], [15, 1], [11, 3], [8, 13], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.6561636924743652

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.593757390975952

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [15, 16], [1, 8], [0, 10], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [19, 13], [7, 2], [15, 1], [11, 3], [8, 13], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.593757390975952

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [152] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 304

Reduced: 
 - size: 118 (43.70%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09376239776611328

[8, 5], [2, 0], [17, 4], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [14, 15], [19, 5], [17, 4], [1, 0], [19, 8], [4, 9], [14, 15], [1, 0], [5, 13], [8, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [12, 6], [8, 13], [2, 0], [7, 1], [11, 3], [19, 8], [15, 16], [18, 5], [1, 10], [9, 3], [12, 0], [19, 8], [1, 10], [16, 9], [14, 15], [18, 5], [11, 3], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [12, 6], [4, 15], [16, 9], [19, 5], [14, 7], [2, 0], [11, 3], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [19, 5], [14, 7], [9, 18], [6, 8], [1, 0], [11, 3], [15, 16], [1, 19], [9, 18], [15, 16], [6, 8], [0, 10], [14, 7], [2, 12], [1, 0], [15, 16], [9, 3], [6, 8], [14, 7], [2, 12], [19, 13], [1, 10], [4, 15], [16, 9], [2, 0], [17, 14], [11, 3], [19, 13], [9, 10], [7, 1], [19, 8], [16, 11], [9, 3], [0, 6], [7, 1], [4, 15], [17, 14], [18, 5], [15, 9], [14, 7], [1, 19], [17, 4], [8, 5], [2, 0], [15, 9], [14, 1], [19, 5], [12, 6], [16, 11], [4, 15], [14, 7], [19, 13], [11, 3], [2, 12], [17, 4], [18, 5], [0, 19], [15, 1], [12, 6], [8, 13], [11, 3], [4, 9], [12, 0], [11, 3], [18, 5], [15, 1], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [19, 13], [7, 2], [16, 11], [19, 13], [9, 3], [2, 6], [15, 1], [18, 5], [16, 11], [9, 3], [19, 13], [18, 5], [2, 6], [7, 1], [11, 3], [7, 1], [8, 13], [16, 9], [10, 18], [14, 15], [11, 3], [15, 16], [0, 6], [1, 10], [8, 13], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [16, 11], [1, 0], [6, 8], [9, 10], [14, 7], [4, 15], [3, 18], [16, 11], [0, 6], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [0, 6], [14, 7], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [8, 13], [7, 2], [7, 15], [17, 14], [16, 9], [3, 18], [2, 6], [8, 13], [10, 19], [1, 0], [7, 15], [5, 13], [1, 10], [17, 14], [0, 6], [4, 9], [15, 16], [0, 6], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [11, 3], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [12, 6], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [12, 6], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [5, 13], [16, 9], [5, 13], [2, 12], [19, 8], [1, 10], [11, 3], [15, 9], [19, 8], [1, 10], [2, 12], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 77, 80]
[90, 99, 109]
[190, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 119, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[17, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.218424320220947

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 11] cc => I, Pos: [2, 11] cc => I, Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [17, 18, 23] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [29, 52] cc => I, Pos: [29, 52] cc => I, Pos: [34, 40] cc => I, Pos: [34, 40] cc => I, Pos: [36, 44] cc => I, Pos: [36, 44] cc => I, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [45, 58] cc => I, Pos: [45, 58] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [56, 67] cc => I, Pos: [56, 67] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [62, 69] cc => I, Pos: [62, 69] cc => I, Pos: [67, 78] cc => I, Pos: [67, 78] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [69, 76] cc => I, Pos: [69, 76] cc => I, Pos: [70, 77, 80] ccc => cc, Pos: [72, 75] cc => I, Pos: [72, 75] cc => I, Pos: [75, 81] cc => I, Pos: [75, 81] cc => I, Pos: [76, 83] cc => I, Pos: [76, 83] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 101] cc => I, Pos: [88, 101] cc => I, Pos: [90, 99, 109] ccc => cc, Pos: [91, 102] cc => I, Pos: [91, 102] cc => I, Pos: [95, 100] cc => I, Pos: [95, 100] cc => I, Pos: [97, 114] cc => I, Pos: [97, 114] cc => I, Pos: [104, 110] cc => I, Pos: [104, 110] cc => I, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [113, 119, 124] ccc => cc, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [121, 130] cc => I, Pos: [121, 130] cc => I, Pos: [123, 131] cc => I, Pos: [123, 131] cc => I, Pos: [126, 129] cc => I, Pos: [126, 129] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [140, 143] cc => I, Pos: [140, 143] cc => I, Pos: [142, 148] cc => I, Pos: [142, 148] cc => I, Pos: [143, 150] cc => I, Pos: [143, 150] cc => I, Pos: [144, 149] cc => I, Pos: [144, 149] cc => I, Pos: [145, 152] cc => I, Pos: [145, 152] cc => I, Pos: [147, 151] cc => I, Pos: [147, 151] cc => I, Pos: [153, 155] cc => I, Pos: [153, 155] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [164, 169] cc => I, Pos: [164, 169] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [190, 203, 207] ccc => cc, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [198, 208] cc => I, Pos: [198, 208] cc => I, Pos: [207, 218] cc => I, Pos: [207, 218] cc => I, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [241, 252] cc => I, Pos: [241, 252] cc => I, Pos: [252, 254] cc => I, Pos: [252, 254] cc => I, Pos: [254, 268] cc => I, Pos: [254, 268] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 260] cc => I, Pos: [256, 260] cc => I, Pos: [257, 261] cc => I, Pos: [257, 261] cc => I, Pos: [262, 265] cc => I, Pos: [262, 265] cc => I]

--------End Timer [Generate Plans]:  0.14062786102294922

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 30] cc => I,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [56, 67] cc => I,
 Pos: [62, 69] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [72, 75] cc => I,
 Pos: [76, 83] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [140, 143] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [160, 165] cc => I,
 Pos: [164, 169] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [190, 203, 207] ccc => cc,
 Pos: [193, 198] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [252, 254] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 54, Saving: 54

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 11] cc => I
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [29, 52] cc => I
Apply:  Pos: [34, 40] cc => I
Apply:  Pos: [36, 44] cc => I
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [45, 58] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [56, 67] cc => I
Apply:  Pos: [62, 69] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 77, 80] ccc => cc
Apply:  Pos: [72, 75] cc => I
Apply:  Pos: [76, 83] cc => I
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 101] cc => I
Apply:  Pos: [90, 99, 109] ccc => cc
Apply:  Pos: [91, 102] cc => I
Apply:  Pos: [95, 100] cc => I
Apply:  Pos: [97, 114] cc => I
Apply:  Pos: [104, 110] cc => I
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [113, 119, 124] ccc => cc
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [121, 130] cc => I
Apply:  Pos: [123, 131] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [140, 143] cc => I
Apply:  Pos: [142, 148] cc => I
Apply:  Pos: [144, 149] cc => I
Apply:  Pos: [145, 152] cc => I
Apply:  Pos: [147, 151] cc => I
Apply:  Pos: [153, 155] cc => I
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [164, 169] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [190, 203, 207] ccc => cc
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [209, 212] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [252, 254] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [256, 260] cc => I
Apply:  Pos: [257, 261] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 19], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 4], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [17, 4], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [8, 13], [16, 9], [10, 18], [14, 15], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [1, 0], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [5, 13], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [1, 0], [5, 13], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----End Timer [Execute Mapping]:  5.3590521812438965

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[95, 116]
[108, 117]
[146, 164]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 54, 58]
[59, 64, 67]
[77, 80, 86]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[73, 75, 84]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[95, 116]
[108, 117]
[146, 164]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9218692779541016

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [45, 54, 58] ccc => cc, Pos: [59, 64, 67] ccc => cc, Pos: [73, 75, 84] ccc => cc, Pos: [77, 80, 86] ccc => cc, Pos: [95, 116] cc => I, Pos: [95, 116] cc => I, Pos: [108, 117] cc => I, Pos: [108, 117] cc => I, Pos: [146, 164] cc => I, Pos: [146, 164] cc => I]

--------End Timer [Generate Plans]:  0.015611410140991211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [45, 54, 58] ccc => cc,
 Pos: [59, 64, 67] ccc => cc,
 Pos: [73, 75, 84] ccc => cc,
 Pos: [77, 80, 86] ccc => cc,
 Pos: [95, 116] cc => I,
 Pos: [108, 117] cc => I,
 Pos: [146, 164] cc => I]
Change: 7, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [45, 54, 58] ccc => cc
Apply:  Pos: [59, 64, 67] ccc => cc
Apply:  Pos: [73, 75, 84] ccc => cc
Apply:  Pos: [77, 80, 86] ccc => cc
Apply:  Pos: [95, 116] cc => I
Apply:  Pos: [108, 117] cc => I
Apply:  Pos: [146, 164] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [8, 13], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.9374806880950928

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 64]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 64]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.671896457672119

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 64] cc => I, Pos: [38, 64] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 64] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 64] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [8, 13], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.671896457672119

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.703134536743164

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [11, 3], [8, 13], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.703134536743164

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [154] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 308

Reduced: 
 - size: 116 (42.96%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.0939943790435791

[8, 5], [2, 0], [17, 4], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [14, 15], [19, 5], [17, 4], [1, 0], [19, 8], [4, 9], [14, 15], [1, 0], [5, 13], [8, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [12, 6], [8, 13], [2, 0], [7, 1], [11, 3], [19, 8], [15, 16], [18, 5], [1, 10], [9, 3], [12, 0], [19, 8], [1, 10], [16, 9], [14, 15], [18, 5], [11, 3], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [12, 6], [4, 15], [16, 9], [19, 5], [14, 7], [2, 0], [11, 3], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [19, 5], [14, 7], [9, 18], [6, 8], [1, 0], [11, 3], [15, 16], [1, 19], [9, 18], [15, 16], [6, 8], [0, 10], [14, 7], [2, 12], [1, 0], [15, 16], [9, 3], [6, 8], [14, 7], [2, 12], [19, 13], [1, 10], [4, 15], [16, 9], [2, 0], [17, 14], [11, 3], [19, 13], [9, 10], [7, 1], [19, 8], [16, 11], [9, 3], [0, 6], [7, 1], [4, 15], [17, 14], [18, 5], [15, 9], [14, 7], [1, 19], [17, 4], [8, 5], [2, 0], [15, 9], [14, 1], [19, 5], [12, 6], [16, 11], [4, 15], [14, 7], [19, 13], [11, 3], [2, 12], [17, 4], [18, 5], [0, 19], [15, 1], [12, 6], [8, 13], [11, 3], [4, 9], [12, 0], [11, 3], [18, 5], [15, 1], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [19, 13], [7, 2], [16, 11], [19, 13], [9, 3], [2, 6], [15, 1], [18, 5], [16, 11], [9, 3], [19, 13], [18, 5], [2, 6], [7, 1], [11, 3], [7, 1], [8, 13], [16, 9], [10, 18], [14, 15], [11, 3], [15, 16], [0, 6], [1, 10], [8, 13], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [16, 11], [1, 0], [6, 8], [9, 10], [14, 7], [4, 15], [3, 18], [16, 11], [0, 6], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [0, 6], [14, 7], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [8, 13], [7, 2], [7, 15], [17, 14], [16, 9], [3, 18], [2, 6], [8, 13], [10, 19], [1, 0], [7, 15], [5, 13], [1, 10], [17, 14], [0, 6], [4, 9], [15, 16], [0, 6], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [11, 3], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [12, 6], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [12, 6], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [5, 13], [16, 9], [5, 13], [2, 12], [19, 8], [1, 10], [11, 3], [15, 9], [19, 8], [1, 10], [2, 12], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 77, 80]
[90, 99, 109]
[190, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 119, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[17, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.296676397323608

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 11] cc => I, Pos: [2, 11] cc => I, Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [17, 18, 23] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [29, 52] cc => I, Pos: [29, 52] cc => I, Pos: [34, 40] cc => I, Pos: [34, 40] cc => I, Pos: [36, 44] cc => I, Pos: [36, 44] cc => I, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [45, 58] cc => I, Pos: [45, 58] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [56, 67] cc => I, Pos: [56, 67] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [62, 69] cc => I, Pos: [62, 69] cc => I, Pos: [67, 78] cc => I, Pos: [67, 78] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [69, 76] cc => I, Pos: [69, 76] cc => I, Pos: [70, 77, 80] ccc => cc, Pos: [72, 75] cc => I, Pos: [72, 75] cc => I, Pos: [75, 81] cc => I, Pos: [75, 81] cc => I, Pos: [76, 83] cc => I, Pos: [76, 83] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 101] cc => I, Pos: [88, 101] cc => I, Pos: [90, 99, 109] ccc => cc, Pos: [91, 102] cc => I, Pos: [91, 102] cc => I, Pos: [95, 100] cc => I, Pos: [95, 100] cc => I, Pos: [97, 114] cc => I, Pos: [97, 114] cc => I, Pos: [104, 110] cc => I, Pos: [104, 110] cc => I, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [113, 119, 124] ccc => cc, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [121, 130] cc => I, Pos: [121, 130] cc => I, Pos: [123, 131] cc => I, Pos: [123, 131] cc => I, Pos: [126, 129] cc => I, Pos: [126, 129] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [140, 143] cc => I, Pos: [140, 143] cc => I, Pos: [142, 148] cc => I, Pos: [142, 148] cc => I, Pos: [143, 150] cc => I, Pos: [143, 150] cc => I, Pos: [144, 149] cc => I, Pos: [144, 149] cc => I, Pos: [145, 152] cc => I, Pos: [145, 152] cc => I, Pos: [147, 151] cc => I, Pos: [147, 151] cc => I, Pos: [153, 155] cc => I, Pos: [153, 155] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [164, 169] cc => I, Pos: [164, 169] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [190, 203, 207] ccc => cc, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [198, 208] cc => I, Pos: [198, 208] cc => I, Pos: [207, 218] cc => I, Pos: [207, 218] cc => I, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [241, 252] cc => I, Pos: [241, 252] cc => I, Pos: [252, 254] cc => I, Pos: [252, 254] cc => I, Pos: [254, 268] cc => I, Pos: [254, 268] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 260] cc => I, Pos: [256, 260] cc => I, Pos: [257, 261] cc => I, Pos: [257, 261] cc => I, Pos: [262, 265] cc => I, Pos: [262, 265] cc => I]

--------End Timer [Generate Plans]:  0.12515974044799805

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [18, 30] cc => I,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [67, 78] cc => I,
 Pos: [69, 76] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [75, 81] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [143, 150] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [160, 165] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [207, 218] cc => I,
 Pos: [198, 208] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [241, 252] cc => I,
 Pos: [254, 268] cc => I,
 Pos: [262, 265] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 53, Saving: 53

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 11] cc => I
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [29, 52] cc => I
Apply:  Pos: [34, 40] cc => I
Apply:  Pos: [36, 44] cc => I
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [45, 58] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [67, 78] cc => I
Apply:  Pos: [69, 76] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 77, 80] ccc => cc
Apply:  Pos: [75, 81] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 101] cc => I
Apply:  Pos: [90, 99, 109] ccc => cc
Apply:  Pos: [91, 102] cc => I
Apply:  Pos: [95, 100] cc => I
Apply:  Pos: [97, 114] cc => I
Apply:  Pos: [104, 110] cc => I
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [113, 119, 124] ccc => cc
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [121, 130] cc => I
Apply:  Pos: [123, 131] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [143, 150] cc => I
Apply:  Pos: [142, 148] cc => I
Apply:  Pos: [144, 149] cc => I
Apply:  Pos: [145, 152] cc => I
Apply:  Pos: [147, 151] cc => I
Apply:  Pos: [153, 155] cc => I
Apply:  Pos: [160, 165] cc => I
Apply:  Pos: [156, 164] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [207, 218] cc => I
Apply:  Pos: [198, 208] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [209, 212] cc => I
Apply:  Pos: [224, 229] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [241, 252] cc => I
Apply:  Pos: [254, 268] cc => I
Apply:  Pos: [262, 265] cc => I
Apply:  Pos: [256, 260] cc => I
Apply:  Pos: [257, 261] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [14, 7], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [15, 16], [1, 19], [0, 10], [9, 3], [6, 8], [14, 7], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 4], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [17, 4], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [8, 5], [19, 13], [7, 2], [15, 1], [11, 3], [16, 9], [10, 18], [14, 15], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [1, 0], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [1, 0], [5, 13], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  5.4218361377716064

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 51]
[37, 52]
[99, 121]
[112, 122]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[63, 68, 71]
[81, 85, 89]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 79, 87]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[41, 51]
[37, 52]
[99, 121]
[112, 122]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9374606609344482

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 52] cc => I, Pos: [37, 52] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [63, 68, 71] ccc => cc, Pos: [77, 79, 87] ccc => cc, Pos: [81, 85, 89] ccc => cc, Pos: [99, 121] cc => I, Pos: [99, 121] cc => I, Pos: [112, 122] cc => I, Pos: [112, 122] cc => I]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 52] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [63, 68, 71] ccc => cc,
 Pos: [77, 79, 87] ccc => cc,
 Pos: [81, 85, 89] ccc => cc,
 Pos: [99, 121] cc => I,
 Pos: [112, 122] cc => I]
Change: 7, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 52] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [63, 68, 71] ccc => cc
Apply:  Pos: [77, 79, 87] ccc => cc
Apply:  Pos: [81, 85, 89] ccc => cc
Apply:  Pos: [99, 121] cc => I
Apply:  Pos: [112, 122] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [15, 16], [1, 19], [0, 10], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [19, 13], [7, 2], [15, 1], [11, 3], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.953084945678711

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[46, 54, 58]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6866016387939453

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [46, 54, 58] ccc => cc]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [46, 54, 58] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [46, 54, 58] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [15, 16], [1, 8], [0, 10], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [19, 13], [7, 2], [15, 1], [11, 3], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.7022252082824707

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 64]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[38, 64]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6719276905059814

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 64] cc => I, Pos: [38, 64] cc => I]

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 64] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 64] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [15, 16], [1, 8], [0, 10], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [19, 13], [7, 2], [15, 1], [11, 3], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.6875522136688232

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6093854904174805

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [15, 16], [1, 8], [0, 10], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [19, 13], [7, 2], [15, 1], [11, 3], [10, 18], [15, 16], [0, 6], [1, 10], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 10], [15, 16], [17, 14], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [2, 12], [11, 3], [15, 9], [4, 16], [9, 18], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.6093854904174805

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [153] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 306

Reduced: 
 - size: 117 (43.33%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936713218688965

[8, 5], [2, 0], [17, 4], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [14, 15], [19, 5], [17, 4], [1, 0], [19, 8], [4, 9], [14, 15], [1, 0], [5, 13], [8, 13], [16, 9], [17, 14], [15, 1], [7, 2], [8, 5], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [12, 6], [8, 13], [2, 0], [7, 1], [11, 3], [19, 8], [15, 16], [18, 5], [1, 10], [9, 3], [12, 0], [19, 8], [1, 10], [16, 9], [14, 15], [18, 5], [11, 3], [8, 5], [2, 0], [15, 16], [17, 14], [10, 19], [8, 13], [12, 6], [4, 15], [16, 9], [19, 5], [14, 7], [2, 0], [11, 3], [10, 18], [19, 13], [4, 16], [6, 8], [3, 18], [9, 10], [2, 0], [19, 5], [14, 7], [9, 18], [6, 8], [1, 0], [11, 3], [15, 16], [1, 19], [9, 18], [15, 16], [6, 8], [0, 10], [14, 7], [2, 12], [1, 0], [15, 16], [9, 3], [6, 8], [14, 7], [2, 12], [19, 13], [1, 10], [4, 15], [16, 9], [2, 0], [17, 14], [11, 3], [19, 13], [9, 10], [7, 1], [19, 8], [16, 11], [9, 3], [0, 6], [7, 1], [4, 15], [17, 14], [18, 5], [15, 9], [14, 7], [1, 19], [17, 4], [8, 5], [2, 0], [15, 9], [14, 1], [19, 5], [12, 6], [16, 11], [4, 15], [14, 7], [19, 13], [11, 3], [2, 12], [17, 4], [18, 5], [0, 19], [15, 1], [12, 6], [8, 13], [11, 3], [4, 9], [12, 0], [11, 3], [18, 5], [15, 1], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [11, 3], [8, 5], [19, 13], [7, 2], [16, 11], [19, 13], [9, 3], [2, 6], [15, 1], [18, 5], [16, 11], [9, 3], [19, 13], [18, 5], [2, 6], [7, 1], [11, 3], [7, 1], [8, 13], [16, 9], [10, 18], [14, 15], [11, 3], [15, 16], [0, 6], [1, 10], [8, 13], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [16, 11], [1, 0], [6, 8], [9, 10], [14, 7], [4, 15], [3, 18], [16, 11], [0, 6], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [0, 6], [14, 7], [1, 10], [5, 13], [15, 16], [17, 14], [12, 6], [8, 13], [7, 2], [7, 15], [17, 14], [16, 9], [3, 18], [2, 6], [8, 13], [10, 19], [1, 0], [7, 15], [5, 13], [1, 10], [17, 14], [0, 6], [4, 9], [15, 16], [0, 6], [14, 7], [9, 18], [16, 9], [11, 3], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [11, 3], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [12, 6], [9, 18], [0, 19], [7, 2], [5, 13], [15, 16], [17, 4], [12, 6], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [5, 13], [16, 9], [5, 13], [2, 12], [19, 8], [1, 10], [11, 3], [15, 9], [19, 8], [1, 10], [2, 12], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [5, 13], [16, 11], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 77, 80]
[90, 99, 109]
[190, 203, 207]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[113, 119, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[17, 18, 23]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 11]
[9, 15]
[12, 16]
[18, 30]
[34, 40]
[37, 41]
[36, 44]
[29, 52]
[47, 57]
[45, 58]
[57, 65]
[55, 66]
[56, 67]
[62, 69]
[68, 74]
[72, 75]
[69, 76]
[67, 78]
[75, 81]
[76, 83]
[78, 84]
[79, 85]
[86, 93]
[95, 100]
[88, 101]
[91, 102]
[104, 110]
[97, 114]
[105, 116]
[118, 126]
[126, 129]
[121, 130]
[123, 131]
[129, 138]
[140, 143]
[142, 148]
[144, 149]
[143, 150]
[147, 151]
[145, 152]
[153, 155]
[154, 160]
[156, 164]
[160, 165]
[164, 169]
[172, 179]
[180, 188]
[176, 189]
[193, 198]
[195, 202]
[197, 205]
[198, 208]
[209, 212]
[207, 218]
[216, 224]
[224, 229]
[237, 244]
[241, 252]
[252, 254]
[256, 260]
[257, 261]
[255, 262]
[262, 265]
[254, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.17195987701416

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 11] cc => I, Pos: [2, 11] cc => I, Pos: [9, 15] cc => I, Pos: [9, 15] cc => I, Pos: [12, 16] cc => I, Pos: [12, 16] cc => I, Pos: [17, 18, 23] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [29, 52] cc => I, Pos: [29, 52] cc => I, Pos: [34, 40] cc => I, Pos: [34, 40] cc => I, Pos: [36, 44] cc => I, Pos: [36, 44] cc => I, Pos: [37, 41] cc => I, Pos: [37, 41] cc => I, Pos: [45, 58] cc => I, Pos: [45, 58] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [56, 67] cc => I, Pos: [56, 67] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [62, 69] cc => I, Pos: [62, 69] cc => I, Pos: [67, 78] cc => I, Pos: [67, 78] cc => I, Pos: [68, 74] cc => I, Pos: [68, 74] cc => I, Pos: [69, 76] cc => I, Pos: [69, 76] cc => I, Pos: [70, 77, 80] ccc => cc, Pos: [72, 75] cc => I, Pos: [72, 75] cc => I, Pos: [75, 81] cc => I, Pos: [75, 81] cc => I, Pos: [76, 83] cc => I, Pos: [76, 83] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [79, 85] cc => I, Pos: [79, 85] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 101] cc => I, Pos: [88, 101] cc => I, Pos: [90, 99, 109] ccc => cc, Pos: [91, 102] cc => I, Pos: [91, 102] cc => I, Pos: [95, 100] cc => I, Pos: [95, 100] cc => I, Pos: [97, 114] cc => I, Pos: [97, 114] cc => I, Pos: [104, 110] cc => I, Pos: [104, 110] cc => I, Pos: [105, 116] cc => I, Pos: [105, 116] cc => I, Pos: [113, 119, 124] ccc => cc, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [121, 130] cc => I, Pos: [121, 130] cc => I, Pos: [123, 131] cc => I, Pos: [123, 131] cc => I, Pos: [126, 129] cc => I, Pos: [126, 129] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [140, 143] cc => I, Pos: [140, 143] cc => I, Pos: [142, 148] cc => I, Pos: [142, 148] cc => I, Pos: [143, 150] cc => I, Pos: [143, 150] cc => I, Pos: [144, 149] cc => I, Pos: [144, 149] cc => I, Pos: [145, 152] cc => I, Pos: [145, 152] cc => I, Pos: [147, 151] cc => I, Pos: [147, 151] cc => I, Pos: [153, 155] cc => I, Pos: [153, 155] cc => I, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 164] cc => I, Pos: [156, 164] cc => I, Pos: [160, 165] cc => I, Pos: [160, 165] cc => I, Pos: [164, 169] cc => I, Pos: [164, 169] cc => I, Pos: [172, 179] cc => I, Pos: [172, 179] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [190, 203, 207] ccc => cc, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 205] cc => I, Pos: [197, 205] cc => I, Pos: [198, 208] cc => I, Pos: [198, 208] cc => I, Pos: [207, 218] cc => I, Pos: [207, 218] cc => I, Pos: [209, 212] cc => I, Pos: [209, 212] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [241, 252] cc => I, Pos: [241, 252] cc => I, Pos: [252, 254] cc => I, Pos: [252, 254] cc => I, Pos: [254, 268] cc => I, Pos: [254, 268] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [256, 260] cc => I, Pos: [256, 260] cc => I, Pos: [257, 261] cc => I, Pos: [257, 261] cc => I, Pos: [262, 265] cc => I, Pos: [262, 265] cc => I]

Plan: 1
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [17, 18, 23] ccc => cc,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [56, 67] cc => I,
 Pos: [62, 69] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [72, 75] cc => I,
 Pos: [76, 83] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [140, 143] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [190, 203, 207] ccc => cc,
 Pos: [193, 198] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [241, 252] cc => I,
 Pos: [254, 268] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 55, Saving: 56

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.14052414894104004

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 11] cc => I,
 Pos: [9, 15] cc => I,
 Pos: [12, 16] cc => I,
 Pos: [17, 18, 23] ccc => cc,
 Pos: [29, 52] cc => I,
 Pos: [34, 40] cc => I,
 Pos: [36, 44] cc => I,
 Pos: [37, 41] cc => I,
 Pos: [45, 58] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [56, 67] cc => I,
 Pos: [62, 69] cc => I,
 Pos: [68, 74] cc => I,
 Pos: [70, 77, 80] ccc => cc,
 Pos: [72, 75] cc => I,
 Pos: [76, 83] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [79, 85] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 101] cc => I,
 Pos: [90, 99, 109] ccc => cc,
 Pos: [91, 102] cc => I,
 Pos: [95, 100] cc => I,
 Pos: [97, 114] cc => I,
 Pos: [104, 110] cc => I,
 Pos: [105, 116] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [118, 126] cc => I,
 Pos: [121, 130] cc => I,
 Pos: [123, 131] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [140, 143] cc => I,
 Pos: [142, 148] cc => I,
 Pos: [144, 149] cc => I,
 Pos: [145, 152] cc => I,
 Pos: [147, 151] cc => I,
 Pos: [153, 155] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [156, 164] cc => I,
 Pos: [172, 179] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [190, 203, 207] ccc => cc,
 Pos: [193, 198] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 205] cc => I,
 Pos: [209, 212] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [241, 252] cc => I,
 Pos: [254, 268] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [256, 260] cc => I,
 Pos: [257, 261] cc => I]
Change: 55, Saving: 56

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 11] cc => I
Apply:  Pos: [9, 15] cc => I
Apply:  Pos: [12, 16] cc => I
Apply:  Pos: [17, 18, 23] ccc => cc
Apply:  Pos: [29, 52] cc => I
Apply:  Pos: [34, 40] cc => I
Apply:  Pos: [36, 44] cc => I
Apply:  Pos: [37, 41] cc => I
Apply:  Pos: [45, 58] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [56, 67] cc => I
Apply:  Pos: [62, 69] cc => I
Apply:  Pos: [68, 74] cc => I
Apply:  Pos: [70, 77, 80] ccc => cc
Apply:  Pos: [72, 75] cc => I
Apply:  Pos: [76, 83] cc => I
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [79, 85] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 101] cc => I
Apply:  Pos: [90, 99, 109] ccc => cc
Apply:  Pos: [91, 102] cc => I
Apply:  Pos: [95, 100] cc => I
Apply:  Pos: [97, 114] cc => I
Apply:  Pos: [104, 110] cc => I
Apply:  Pos: [105, 116] cc => I
Apply:  Pos: [113, 119, 124] ccc => cc
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [121, 130] cc => I
Apply:  Pos: [123, 131] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [140, 143] cc => I
Apply:  Pos: [142, 148] cc => I
Apply:  Pos: [144, 149] cc => I
Apply:  Pos: [145, 152] cc => I
Apply:  Pos: [147, 151] cc => I
Apply:  Pos: [153, 155] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [156, 164] cc => I
Apply:  Pos: [172, 179] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [190, 203, 207] ccc => cc
Apply:  Pos: [193, 198] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 205] cc => I
Apply:  Pos: [209, 212] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [241, 252] cc => I
Apply:  Pos: [254, 268] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [256, 260] cc => I
Apply:  Pos: [257, 261] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [8, 13], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [8, 13], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 19], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [1, 19], [17, 4], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [17, 4], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [16, 9], [1, 19], [4, 16], [0, 10], [14, 15], [8, 5], [7, 2], [15, 1], [19, 13], [16, 9], [10, 18], [14, 15], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [1, 0], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [5, 13], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [1, 0], [5, 13], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  5.3124840259552

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 35]
[96, 117]
[109, 118]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[46, 55, 59]
[60, 65, 68]
[78, 81, 85]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[74, 76, 83]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[22, 35]
[96, 117]
[109, 118]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.8750016689300537

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 35] cc => I, Pos: [22, 35] cc => I, Pos: [46, 55, 59] ccc => cc, Pos: [60, 65, 68] ccc => cc, Pos: [74, 76, 83] ccc => cc, Pos: [78, 81, 85] ccc => cc, Pos: [96, 117] cc => I, Pos: [96, 117] cc => I, Pos: [109, 118] cc => I, Pos: [109, 118] cc => I]

Plan: 1
[Pos: [22, 35] cc => I,
 Pos: [46, 55, 59] ccc => cc,
 Pos: [60, 65, 68] ccc => cc,
 Pos: [74, 76, 83] ccc => cc,
 Pos: [78, 81, 85] ccc => cc,
 Pos: [96, 117] cc => I,
 Pos: [109, 118] cc => I]
Change: 7, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015639781951904297

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 35] cc => I,
 Pos: [46, 55, 59] ccc => cc,
 Pos: [60, 65, 68] ccc => cc,
 Pos: [74, 76, 83] ccc => cc,
 Pos: [78, 81, 85] ccc => cc,
 Pos: [96, 117] cc => I,
 Pos: [109, 118] cc => I]
Change: 7, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 35] cc => I
Apply:  Pos: [46, 55, 59] ccc => cc
Apply:  Pos: [60, 65, 68] ccc => cc
Apply:  Pos: [74, 76, 83] ccc => cc
Apply:  Pos: [78, 81, 85] ccc => cc
Apply:  Pos: [96, 117] cc => I
Apply:  Pos: [109, 118] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [19, 13], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [19, 13], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.890641450881958

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 63]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 63]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.64067006111145

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 63] cc => I, Pos: [37, 63] cc => I]

Plan: 1
[Pos: [37, 63] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 63] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 63] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 5], [19, 8], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [10, 3], [9, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.64067006111145

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.593738317489624

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[8, 5], [2, 0], [10, 18], [15, 16], [1, 19], [11, 3], [6, 8], [10, 3], [19, 8], [19, 5], [4, 9], [8, 5], [5, 13], [16, 9], [17, 14], [15, 1], [7, 2], [0, 19], [9, 10], [2, 12], [14, 1], [19, 5], [2, 0], [7, 1], [11, 3], [15, 16], [9, 3], [12, 0], [16, 9], [14, 15], [8, 5], [15, 16], [17, 14], [10, 19], [4, 15], [16, 9], [10, 18], [4, 16], [3, 18], [9, 10], [2, 0], [1, 10], [11, 3], [1, 8], [0, 10], [15, 16], [9, 3], [1, 10], [16, 9], [2, 6], [11, 3], [9, 10], [19, 8], [9, 3], [0, 6], [18, 5], [17, 15], [8, 5], [14, 1], [19, 5], [2, 12], [4, 15], [12, 6], [0, 19], [8, 13], [4, 9], [12, 0], [19, 8], [4, 16], [1, 19], [16, 9], [0, 10], [14, 1], [8, 5], [7, 2], [15, 1], [19, 13], [10, 18], [15, 16], [0, 6], [1, 10], [11, 3], [9, 18], [0, 10], [14, 1], [8, 13], [7, 15], [2, 6], [6, 8], [9, 10], [4, 15], [3, 18], [14, 15], [2, 12], [10, 18], [17, 4], [19, 8], [4, 16], [15, 9], [1, 19], [15, 16], [12, 6], [7, 2], [16, 9], [3, 18], [2, 6], [10, 19], [17, 14], [4, 9], [15, 16], [14, 7], [9, 18], [16, 9], [12, 6], [1, 10], [19, 8], [2, 0], [9, 10], [4, 15], [8, 5], [2, 12], [10, 19], [0, 6], [15, 9], [11, 3], [7, 1], [4, 16], [8, 13], [10, 18], [19, 13], [7, 15], [1, 0], [9, 18], [0, 19], [7, 2], [15, 16], [17, 4], [9, 3], [10, 3], [12, 0], [4, 16], [17, 14], [7, 1], [2, 6], [16, 9], [11, 3], [15, 9], [4, 16], [9, 18], [2, 12], [10, 19], [17, 4], [16, 11], ----End Timer [Execute Mapping]:  2.593738317489624

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [153] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 306

Reduced: 
 - size: 117 (43.33%)
 - depth: 7 (15.56%)

