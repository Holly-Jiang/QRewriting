----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10934734344482422

[8, 0], [12, 14], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [5, 13], [15, 18], [17, 9], [4, 10], [11, 1], [12, 14], [6, 5], [17, 4], [19, 2], [1, 16], [8, 0], [9, 7], [11, 10], [8, 12], [19, 2], [5, 13], [0, 18], [11, 1], [4, 10], [17, 14], [9, 7], [3, 8], [9, 4], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [9, 4], [1, 16], [3, 17], [6, 18], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [6, 18], [1, 16], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [6, 5], [8, 0], [17, 14], [1, 13], [4, 11], [6, 5], [17, 9], [4, 10], [19, 2], [8, 0], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [17, 14], [0, 1], [9, 7], [8, 12], [11, 10], [17, 14], [6, 18], [1, 13], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [8, 12], [11, 10], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [1, 13], [17, 14], [11, 10], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [17, 9], [4, 11], [12, 6], [4, 10], [15, 5], [1, 13], [18, 11], [17, 9], [12, 0], [13, 16], [4, 10], [14, 9], [18, 1], [12, 0], [18, 11], [14, 9], [6, 15], [1, 2], [10, 19], [12, 6], [5, 13], [11, 1], [17, 4], [14, 9], [0, 18], [6, 15], [3, 17], [18, 11], [9, 7], [1, 16], [6, 15], [14, 0], [19, 2], [18, 5], [17, 4], [8, 12], [1, 13], [6, 15], [8, 12], [9, 4], [13, 16], [18, 1], [10, 19], [17, 14], [15, 5], [4, 11], [0, 18], [8, 12], [1, 16], [15, 18], [7, 10], [1, 2], [8, 12], [0, 11], [15, 18], [12, 6], [11, 19], [13, 16], [9, 4], [15, 5], [7, 10], [0, 1], [13, 16], [17, 9], [4, 19], [15, 18], [3, 8], [14, 4], [0, 1], [13, 2], [6, 15], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [2, 16], [17, 9], [0, 18], [6, 15], [18, 1], [4, 11], [17, 9], [5, 13], [14, 0], [2, 16], [6, 18], [11, 10], [14, 0], [5, 13], [1, 16], [17, 4], [0, 18], [6, 5], [9, 4], [11, 19], [17, 14], [2, 16], [3, 8], [7, 10], [18, 11], [9, 4], [10, 19], [3, 17], [8, 14], [12, 6], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [8, 14], [12, 6], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [15, 5], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [15, 5], [3, 17], [8, 12], [11, 1], [9, 4], [6, 5], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [6, 5], [11, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 16, 24]
[75, 84, 88]
[76, 83, 89]
[139, 153, 163]
[184, 195, 200]
[191, 197, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 11, 16]
[7, 13, 22]
[67, 73, 79]
[137, 140, 146]
[143, 147, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.265695571899414

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 12] cc => I, Pos: [1, 12] cc => I, Pos: [5, 11, 16] ccc => cc, Pos: [7, 13, 22] ccc => cc, Pos: [11, 16, 24] ccc => cc, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [18, 27] cc => I, Pos: [18, 27] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [37, 49] cc => I, Pos: [37, 49] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 60] cc => I, Pos: [42, 60] cc => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 66] cc => I, Pos: [58, 66] cc => I, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [67, 73, 79] ccc => cc, Pos: [72, 77] cc => I, Pos: [72, 77] cc => I, Pos: [75, 84, 88] ccc => cc, Pos: [76, 83, 89] ccc => cc, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [109, 126] cc => I, Pos: [109, 126] cc => I, Pos: [111, 115] cc => I, Pos: [111, 115] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [124, 131] cc => I, Pos: [124, 131] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [129, 134] cc => I, Pos: [129, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [136, 144] cc => I, Pos: [136, 144] cc => I, Pos: [137, 140, 146] ccc => cc, Pos: [139, 153, 163] ccc => cc, Pos: [143, 147, 155] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [151, 158] cc => I, Pos: [151, 158] cc => I, Pos: [156, 159] cc => I, Pos: [156, 159] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [165, 180] cc => I, Pos: [165, 180] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I, Pos: [171, 181] cc => I, Pos: [171, 181] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 183] cc => I, Pos: [178, 183] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 195, 200] ccc => cc, Pos: [187, 221] cc => I, Pos: [187, 221] cc => I, Pos: [191, 197, 202] ccc => cc, Pos: [196, 199] cc => I, Pos: [196, 199] cc => I, Pos: [199, 208] cc => I, Pos: [199, 208] cc => I, Pos: [200, 205] cc => I, Pos: [200, 205] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [217, 224] cc => I, Pos: [217, 224] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [247, 255] cc => I, Pos: [247, 255] cc => I, Pos: [260, 268] cc => I, Pos: [260, 268] cc => I]

Plan: 1
[Pos: [1, 12] cc => I,
 Pos: [5, 11, 16] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [37, 49] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 60] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [59, 72] cc => I,
 Pos: [67, 73, 79] ccc => cc,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [76, 83, 89] ccc => cc,
 Pos: [95, 111] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [137, 140, 146] ccc => cc,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [151, 158] cc => I,
 Pos: [156, 159] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [170, 175] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 195, 200] ccc => cc,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [196, 199] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 44, Saving: 156

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 12] cc => I,
 Pos: [5, 11, 16] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [37, 49] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 60] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [59, 72] cc => I,
 Pos: [67, 73, 79] ccc => cc,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [76, 83, 89] ccc => cc,
 Pos: [95, 111] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [137, 140, 146] ccc => cc,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [151, 158] cc => I,
 Pos: [156, 159] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [170, 175] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 195, 200] ccc => cc,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [196, 199] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 44, Saving: 156

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 12] cc => I
Apply:  Pos: [5, 11, 16] ccc => cc
Apply:  Pos: [7, 13, 22] ccc => cc
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [18, 27] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [37, 49] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 60] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 66] cc => I
Apply:  Pos: [59, 72] cc => I
Apply:  Pos: [67, 73, 79] ccc => cc
Apply:  Pos: [75, 84, 88] ccc => cc
Apply:  Pos: [76, 83, 89] ccc => cc
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [109, 126] cc => I
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [124, 131] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [129, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [137, 140, 146] ccc => cc
Apply:  Pos: [139, 153, 163] ccc => cc
Apply:  Pos: [143, 147, 155] ccc => cc
Apply:  Pos: [151, 158] cc => I
Apply:  Pos: [156, 159] cc => I
Apply:  Pos: [165, 180] cc => I
Apply:  Pos: [168, 173] cc => I
Apply:  Pos: [170, 175] cc => I
Apply:  Pos: [171, 181] cc => I
Apply:  Pos: [178, 183] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [184, 195, 200] ccc => cc
Apply:  Pos: [187, 221] cc => I
Apply:  Pos: [191, 197, 202] ccc => cc
Apply:  Pos: [196, 199] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [217, 224] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [247, 255] cc => I
Apply:  Pos: [260, 268] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [6, 5], [13, 2], [11, 1], [12, 0], [6, 5], [15, 18], [17, 9], [4, 10], [1, 16], [5, 13], [17, 4], [8, 0], [11, 10], [8, 12], [0, 18], [11, 1], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [5, 13], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [12, 6], [18, 5], [2, 16], [11, 19], [1, 13], [9, 7], [8, 0], [11, 19], [17, 14], [6, 18], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [18, 1], [12, 6], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  5.265695571899414

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 47]
[50, 54]
[51, 59]
[94, 98]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 17]
[11, 22, 28]
[98, 101, 124]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 13, 15]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 47]
[50, 54]
[51, 59]
[94, 98]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.531167984008789

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 10, 17] ccc => cc, Pos: [5, 13, 15] ccc => cc, Pos: [11, 22, 28] ccc => cc, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [50, 54] cc => I, Pos: [50, 54] cc => I, Pos: [51, 59] cc => I, Pos: [51, 59] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [98, 101, 124] ccc => cc]

Plan: 1
[Pos: [2, 6] cc => I,
 Pos: [4, 10, 17] ccc => cc,
 Pos: [5, 13, 15] ccc => cc,
 Pos: [11, 22, 28] ccc => cc,
 Pos: [36, 47] cc => I,
 Pos: [50, 54] cc => I,
 Pos: [51, 59] cc => I,
 Pos: [94, 98] cc => I]
Change: 8, Saving: 26

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 6] cc => I,
 Pos: [4, 10, 17] ccc => cc,
 Pos: [5, 13, 15] ccc => cc,
 Pos: [11, 22, 28] ccc => cc,
 Pos: [36, 47] cc => I,
 Pos: [50, 54] cc => I,
 Pos: [51, 59] cc => I,
 Pos: [94, 98] cc => I]
Change: 8, Saving: 26

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 10, 17] ccc => cc
Apply:  Pos: [5, 13, 15] ccc => cc
Apply:  Pos: [11, 22, 28] ccc => cc
Apply:  Pos: [36, 47] cc => I
Apply:  Pos: [50, 54] cc => I
Apply:  Pos: [51, 59] cc => I
Apply:  Pos: [94, 98] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [1, 16], [5, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [9, 7], [8, 0], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [18, 1], [10, 2], [1, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 2], [1, 16], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.531167984008789

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.249687671661377

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [5, 16], [1, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [9, 7], [8, 0], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [18, 1], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.249687671661377

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [179] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 358

Reduced: 
 - size: 91 (33.70%)
 - cycle: 182 (33.70%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10965347290039062

[8, 0], [12, 14], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [5, 13], [15, 18], [17, 9], [4, 10], [11, 1], [12, 14], [6, 5], [17, 4], [19, 2], [1, 16], [8, 0], [9, 7], [11, 10], [8, 12], [19, 2], [5, 13], [0, 18], [11, 1], [4, 10], [17, 14], [9, 7], [3, 8], [9, 4], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [9, 4], [1, 16], [3, 17], [6, 18], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [6, 18], [1, 16], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [6, 5], [8, 0], [17, 14], [1, 13], [4, 11], [6, 5], [17, 9], [4, 10], [19, 2], [8, 0], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [17, 14], [0, 1], [9, 7], [8, 12], [11, 10], [17, 14], [6, 18], [1, 13], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [8, 12], [11, 10], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [1, 13], [17, 14], [11, 10], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [17, 9], [4, 11], [12, 6], [4, 10], [15, 5], [1, 13], [18, 11], [17, 9], [12, 0], [13, 16], [4, 10], [14, 9], [18, 1], [12, 0], [18, 11], [14, 9], [6, 15], [1, 2], [10, 19], [12, 6], [5, 13], [11, 1], [17, 4], [14, 9], [0, 18], [6, 15], [3, 17], [18, 11], [9, 7], [1, 16], [6, 15], [14, 0], [19, 2], [18, 5], [17, 4], [8, 12], [1, 13], [6, 15], [8, 12], [9, 4], [13, 16], [18, 1], [10, 19], [17, 14], [15, 5], [4, 11], [0, 18], [8, 12], [1, 16], [15, 18], [7, 10], [1, 2], [8, 12], [0, 11], [15, 18], [12, 6], [11, 19], [13, 16], [9, 4], [15, 5], [7, 10], [0, 1], [13, 16], [17, 9], [4, 19], [15, 18], [3, 8], [14, 4], [0, 1], [13, 2], [6, 15], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [2, 16], [17, 9], [0, 18], [6, 15], [18, 1], [4, 11], [17, 9], [5, 13], [14, 0], [2, 16], [6, 18], [11, 10], [14, 0], [5, 13], [1, 16], [17, 4], [0, 18], [6, 5], [9, 4], [11, 19], [17, 14], [2, 16], [3, 8], [7, 10], [18, 11], [9, 4], [10, 19], [3, 17], [8, 14], [12, 6], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [8, 14], [12, 6], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [15, 5], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [15, 5], [3, 17], [8, 12], [11, 1], [9, 4], [6, 5], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [6, 5], [11, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 16, 24]
[75, 84, 88]
[76, 83, 89]
[139, 153, 163]
[184, 195, 200]
[191, 197, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 11, 16]
[7, 13, 22]
[67, 73, 79]
[137, 140, 146]
[143, 147, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.156039714813232

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 12] cc => I, Pos: [1, 12] cc => I, Pos: [5, 11, 16] ccc => cc, Pos: [7, 13, 22] ccc => cc, Pos: [11, 16, 24] ccc => cc, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [18, 27] cc => I, Pos: [18, 27] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [37, 49] cc => I, Pos: [37, 49] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 60] cc => I, Pos: [42, 60] cc => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 66] cc => I, Pos: [58, 66] cc => I, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [67, 73, 79] ccc => cc, Pos: [72, 77] cc => I, Pos: [72, 77] cc => I, Pos: [75, 84, 88] ccc => cc, Pos: [76, 83, 89] ccc => cc, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [109, 126] cc => I, Pos: [109, 126] cc => I, Pos: [111, 115] cc => I, Pos: [111, 115] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [124, 131] cc => I, Pos: [124, 131] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [129, 134] cc => I, Pos: [129, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [136, 144] cc => I, Pos: [136, 144] cc => I, Pos: [137, 140, 146] ccc => cc, Pos: [139, 153, 163] ccc => cc, Pos: [143, 147, 155] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [151, 158] cc => I, Pos: [151, 158] cc => I, Pos: [156, 159] cc => I, Pos: [156, 159] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [165, 180] cc => I, Pos: [165, 180] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I, Pos: [171, 181] cc => I, Pos: [171, 181] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 183] cc => I, Pos: [178, 183] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 195, 200] ccc => cc, Pos: [187, 221] cc => I, Pos: [187, 221] cc => I, Pos: [191, 197, 202] ccc => cc, Pos: [196, 199] cc => I, Pos: [196, 199] cc => I, Pos: [199, 208] cc => I, Pos: [199, 208] cc => I, Pos: [200, 205] cc => I, Pos: [200, 205] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [217, 224] cc => I, Pos: [217, 224] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [247, 255] cc => I, Pos: [247, 255] cc => I, Pos: [260, 268] cc => I, Pos: [260, 268] cc => I]

Plan: 1
[Pos: [1, 12] cc => I,
 Pos: [5, 11, 16] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [37, 49] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 60] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [59, 72] cc => I,
 Pos: [67, 73, 79] ccc => cc,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [76, 83, 89] ccc => cc,
 Pos: [95, 111] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [137, 140, 146] ccc => cc,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [151, 158] cc => I,
 Pos: [156, 159] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [170, 175] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 195, 200] ccc => cc,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [196, 199] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 44, Saving: 46

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.1093745231628418

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 12] cc => I,
 Pos: [5, 11, 16] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [37, 49] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 60] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [59, 72] cc => I,
 Pos: [67, 73, 79] ccc => cc,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [76, 83, 89] ccc => cc,
 Pos: [95, 111] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [137, 140, 146] ccc => cc,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [151, 158] cc => I,
 Pos: [156, 159] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [170, 175] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 195, 200] ccc => cc,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [196, 199] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 44, Saving: 46

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 12] cc => I
Apply:  Pos: [5, 11, 16] ccc => cc
Apply:  Pos: [7, 13, 22] ccc => cc
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [18, 27] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [37, 49] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 60] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 66] cc => I
Apply:  Pos: [59, 72] cc => I
Apply:  Pos: [67, 73, 79] ccc => cc
Apply:  Pos: [75, 84, 88] ccc => cc
Apply:  Pos: [76, 83, 89] ccc => cc
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [109, 126] cc => I
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [124, 131] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [129, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [137, 140, 146] ccc => cc
Apply:  Pos: [139, 153, 163] ccc => cc
Apply:  Pos: [143, 147, 155] ccc => cc
Apply:  Pos: [151, 158] cc => I
Apply:  Pos: [156, 159] cc => I
Apply:  Pos: [165, 180] cc => I
Apply:  Pos: [168, 173] cc => I
Apply:  Pos: [170, 175] cc => I
Apply:  Pos: [171, 181] cc => I
Apply:  Pos: [178, 183] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [184, 195, 200] ccc => cc
Apply:  Pos: [187, 221] cc => I
Apply:  Pos: [191, 197, 202] ccc => cc
Apply:  Pos: [196, 199] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [217, 224] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [247, 255] cc => I
Apply:  Pos: [260, 268] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [6, 5], [13, 2], [11, 1], [12, 0], [6, 5], [15, 18], [17, 9], [4, 10], [1, 16], [5, 13], [17, 4], [8, 0], [11, 10], [8, 12], [0, 18], [11, 1], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [5, 13], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [12, 6], [18, 5], [2, 16], [11, 19], [1, 13], [9, 7], [8, 0], [11, 19], [17, 14], [6, 18], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [18, 1], [12, 6], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  5.265414237976074

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 47]
[50, 54]
[51, 59]
[94, 98]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 17]
[11, 22, 28]
[98, 101, 124]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 13, 15]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 47]
[50, 54]
[51, 59]
[94, 98]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4374351501464844

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 10, 17] ccc => cc, Pos: [5, 13, 15] ccc => cc, Pos: [11, 22, 28] ccc => cc, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [50, 54] cc => I, Pos: [50, 54] cc => I, Pos: [51, 59] cc => I, Pos: [51, 59] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [98, 101, 124] ccc => cc]

Plan: 1
[Pos: [2, 6] cc => I,
 Pos: [4, 10, 17] ccc => cc,
 Pos: [5, 13, 15] ccc => cc,
 Pos: [11, 22, 28] ccc => cc,
 Pos: [36, 47] cc => I,
 Pos: [50, 54] cc => I,
 Pos: [51, 59] cc => I,
 Pos: [94, 98] cc => I]
Change: 8, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.01561880111694336

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 6] cc => I,
 Pos: [4, 10, 17] ccc => cc,
 Pos: [5, 13, 15] ccc => cc,
 Pos: [11, 22, 28] ccc => cc,
 Pos: [36, 47] cc => I,
 Pos: [50, 54] cc => I,
 Pos: [51, 59] cc => I,
 Pos: [94, 98] cc => I]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 10, 17] ccc => cc
Apply:  Pos: [5, 13, 15] ccc => cc
Apply:  Pos: [11, 22, 28] ccc => cc
Apply:  Pos: [36, 47] cc => I
Apply:  Pos: [50, 54] cc => I
Apply:  Pos: [51, 59] cc => I
Apply:  Pos: [94, 98] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [1, 16], [5, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [9, 7], [8, 0], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [18, 1], [10, 2], [1, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 2], [1, 16], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.4530539512634277

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1728243827819824

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [5, 16], [1, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [9, 7], [8, 0], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [18, 1], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.1728243827819824

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [179] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 358

Reduced: 
 - size: 91 (33.70%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935473442077637

[8, 0], [12, 14], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [5, 13], [15, 18], [17, 9], [4, 10], [11, 1], [12, 14], [6, 5], [17, 4], [19, 2], [1, 16], [8, 0], [9, 7], [11, 10], [8, 12], [19, 2], [5, 13], [0, 18], [11, 1], [4, 10], [17, 14], [9, 7], [3, 8], [9, 4], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [9, 4], [1, 16], [3, 17], [6, 18], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [6, 18], [1, 16], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [6, 5], [8, 0], [17, 14], [1, 13], [4, 11], [6, 5], [17, 9], [4, 10], [19, 2], [8, 0], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [17, 14], [0, 1], [9, 7], [8, 12], [11, 10], [17, 14], [6, 18], [1, 13], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [8, 12], [11, 10], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [1, 13], [17, 14], [11, 10], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [17, 9], [4, 11], [12, 6], [4, 10], [15, 5], [1, 13], [18, 11], [17, 9], [12, 0], [13, 16], [4, 10], [14, 9], [18, 1], [12, 0], [18, 11], [14, 9], [6, 15], [1, 2], [10, 19], [12, 6], [5, 13], [11, 1], [17, 4], [14, 9], [0, 18], [6, 15], [3, 17], [18, 11], [9, 7], [1, 16], [6, 15], [14, 0], [19, 2], [18, 5], [17, 4], [8, 12], [1, 13], [6, 15], [8, 12], [9, 4], [13, 16], [18, 1], [10, 19], [17, 14], [15, 5], [4, 11], [0, 18], [8, 12], [1, 16], [15, 18], [7, 10], [1, 2], [8, 12], [0, 11], [15, 18], [12, 6], [11, 19], [13, 16], [9, 4], [15, 5], [7, 10], [0, 1], [13, 16], [17, 9], [4, 19], [15, 18], [3, 8], [14, 4], [0, 1], [13, 2], [6, 15], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [2, 16], [17, 9], [0, 18], [6, 15], [18, 1], [4, 11], [17, 9], [5, 13], [14, 0], [2, 16], [6, 18], [11, 10], [14, 0], [5, 13], [1, 16], [17, 4], [0, 18], [6, 5], [9, 4], [11, 19], [17, 14], [2, 16], [3, 8], [7, 10], [18, 11], [9, 4], [10, 19], [3, 17], [8, 14], [12, 6], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [8, 14], [12, 6], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [15, 5], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [15, 5], [3, 17], [8, 12], [11, 1], [9, 4], [6, 5], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [6, 5], [11, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 16, 24]
[75, 84, 88]
[76, 83, 89]
[139, 153, 163]
[184, 195, 200]
[191, 197, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 11, 16]
[7, 13, 22]
[67, 73, 79]
[137, 140, 146]
[143, 147, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.14056658744812

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 12] cc => I, Pos: [1, 12] cc => I, Pos: [5, 11, 16] ccc => cc, Pos: [7, 13, 22] ccc => cc, Pos: [11, 16, 24] ccc => cc, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [18, 27] cc => I, Pos: [18, 27] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [37, 49] cc => I, Pos: [37, 49] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 60] cc => I, Pos: [42, 60] cc => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 66] cc => I, Pos: [58, 66] cc => I, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [67, 73, 79] ccc => cc, Pos: [72, 77] cc => I, Pos: [72, 77] cc => I, Pos: [75, 84, 88] ccc => cc, Pos: [76, 83, 89] ccc => cc, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [109, 126] cc => I, Pos: [109, 126] cc => I, Pos: [111, 115] cc => I, Pos: [111, 115] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [124, 131] cc => I, Pos: [124, 131] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [129, 134] cc => I, Pos: [129, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [136, 144] cc => I, Pos: [136, 144] cc => I, Pos: [137, 140, 146] ccc => cc, Pos: [139, 153, 163] ccc => cc, Pos: [143, 147, 155] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [151, 158] cc => I, Pos: [151, 158] cc => I, Pos: [156, 159] cc => I, Pos: [156, 159] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [165, 180] cc => I, Pos: [165, 180] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I, Pos: [171, 181] cc => I, Pos: [171, 181] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 183] cc => I, Pos: [178, 183] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 195, 200] ccc => cc, Pos: [187, 221] cc => I, Pos: [187, 221] cc => I, Pos: [191, 197, 202] ccc => cc, Pos: [196, 199] cc => I, Pos: [196, 199] cc => I, Pos: [199, 208] cc => I, Pos: [199, 208] cc => I, Pos: [200, 205] cc => I, Pos: [200, 205] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [217, 224] cc => I, Pos: [217, 224] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [247, 255] cc => I, Pos: [247, 255] cc => I, Pos: [260, 268] cc => I, Pos: [260, 268] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 12] cc => I,
 Pos: [5, 11, 16] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [37, 49] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 60] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [72, 77] cc => I,
 Pos: [67, 73, 79] ccc => cc,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [89, 95] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [111, 115] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [146, 151] cc => I,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [170, 175] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [200, 205] cc => I,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [196, 199] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 42, Saving: 154

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 12] cc => I
Apply:  Pos: [5, 11, 16] ccc => cc
Apply:  Pos: [7, 13, 22] ccc => cc
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [18, 27] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [37, 49] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 60] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 66] cc => I
Apply:  Pos: [72, 77] cc => I
Apply:  Pos: [67, 73, 79] ccc => cc
Apply:  Pos: [75, 84, 88] ccc => cc
Apply:  Pos: [89, 95] cc => I
Apply:  Pos: [109, 126] cc => I
Apply:  Pos: [111, 115] cc => I
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [124, 131] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [129, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [139, 153, 163] ccc => cc
Apply:  Pos: [143, 147, 155] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [165, 180] cc => I
Apply:  Pos: [170, 175] cc => I
Apply:  Pos: [171, 181] cc => I
Apply:  Pos: [178, 183] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [200, 205] cc => I
Apply:  Pos: [187, 221] cc => I
Apply:  Pos: [191, 197, 202] ccc => cc
Apply:  Pos: [196, 199] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [217, 224] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [247, 255] cc => I
Apply:  Pos: [260, 268] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [6, 5], [13, 2], [11, 1], [12, 0], [6, 5], [15, 18], [17, 9], [4, 10], [1, 16], [5, 13], [17, 4], [8, 0], [11, 10], [8, 12], [0, 18], [11, 1], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [5, 13], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [17, 14], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [12, 6], [18, 5], [2, 16], [11, 19], [1, 13], [9, 7], [8, 0], [11, 10], [6, 18], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [18, 1], [6, 15], [1, 2], [10, 2], [12, 6], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [8, 12], [1, 13], [6, 15], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [8, 12], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  5.14056658744812

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 48]
[52, 59]
[113, 124]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 17]
[11, 22, 28]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 13, 15]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 48]
[52, 59]
[113, 124]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5448954105377197

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 10, 17] ccc => cc, Pos: [5, 13, 15] ccc => cc, Pos: [11, 22, 28] ccc => cc, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [52, 59] cc => I, Pos: [52, 59] cc => I, Pos: [113, 124] cc => I, Pos: [113, 124] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 6] cc => I,
 Pos: [4, 10, 17] ccc => cc,
 Pos: [5, 13, 15] ccc => cc,
 Pos: [11, 22, 28] ccc => cc,
 Pos: [36, 48] cc => I,
 Pos: [52, 59] cc => I,
 Pos: [113, 124] cc => I]
Change: 7, Saving: 22

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 10, 17] ccc => cc
Apply:  Pos: [5, 13, 15] ccc => cc
Apply:  Pos: [11, 22, 28] ccc => cc
Apply:  Pos: [36, 48] cc => I
Apply:  Pos: [52, 59] cc => I
Apply:  Pos: [113, 124] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [1, 16], [5, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [17, 14], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [11, 19], [9, 7], [8, 0], [11, 10], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [18, 1], [6, 15], [10, 2], [1, 2], [12, 6], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [6, 15], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 2], [1, 16], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.5448954105377197

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 105, 115]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[88, 91, 105]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.215982437133789

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [88, 91, 105] ccc => cc, Pos: [91, 105, 115] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [91, 105, 115] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [91, 105, 115] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [5, 16], [1, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [17, 14], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [11, 19], [9, 7], [8, 0], [11, 10], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [18, 1], [6, 15], [1, 2], [10, 2], [12, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [6, 15], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [11, 19], [9, 4], [17, 9], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.215982437133789

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.183286190032959

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [1, 16], [5, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [17, 14], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [11, 19], [9, 7], [8, 0], [11, 10], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [18, 1], [6, 15], [10, 2], [1, 2], [12, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [6, 15], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 2], [1, 16], [0, 11], [11, 19], [9, 4], [17, 9], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.183286190032959

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [181] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 362

Reduced: 
 - size: 89 (32.96%)
 - cycle: 178 (32.96%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936713218688965

[8, 0], [12, 14], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [5, 13], [15, 18], [17, 9], [4, 10], [11, 1], [12, 14], [6, 5], [17, 4], [19, 2], [1, 16], [8, 0], [9, 7], [11, 10], [8, 12], [19, 2], [5, 13], [0, 18], [11, 1], [4, 10], [17, 14], [9, 7], [3, 8], [9, 4], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [9, 4], [1, 16], [3, 17], [6, 18], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [6, 18], [1, 16], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [6, 5], [8, 0], [17, 14], [1, 13], [4, 11], [6, 5], [17, 9], [4, 10], [19, 2], [8, 0], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [17, 14], [0, 1], [9, 7], [8, 12], [11, 10], [17, 14], [6, 18], [1, 13], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [8, 12], [11, 10], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [1, 13], [17, 14], [11, 10], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [17, 9], [4, 11], [12, 6], [4, 10], [15, 5], [1, 13], [18, 11], [17, 9], [12, 0], [13, 16], [4, 10], [14, 9], [18, 1], [12, 0], [18, 11], [14, 9], [6, 15], [1, 2], [10, 19], [12, 6], [5, 13], [11, 1], [17, 4], [14, 9], [0, 18], [6, 15], [3, 17], [18, 11], [9, 7], [1, 16], [6, 15], [14, 0], [19, 2], [18, 5], [17, 4], [8, 12], [1, 13], [6, 15], [8, 12], [9, 4], [13, 16], [18, 1], [10, 19], [17, 14], [15, 5], [4, 11], [0, 18], [8, 12], [1, 16], [15, 18], [7, 10], [1, 2], [8, 12], [0, 11], [15, 18], [12, 6], [11, 19], [13, 16], [9, 4], [15, 5], [7, 10], [0, 1], [13, 16], [17, 9], [4, 19], [15, 18], [3, 8], [14, 4], [0, 1], [13, 2], [6, 15], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [2, 16], [17, 9], [0, 18], [6, 15], [18, 1], [4, 11], [17, 9], [5, 13], [14, 0], [2, 16], [6, 18], [11, 10], [14, 0], [5, 13], [1, 16], [17, 4], [0, 18], [6, 5], [9, 4], [11, 19], [17, 14], [2, 16], [3, 8], [7, 10], [18, 11], [9, 4], [10, 19], [3, 17], [8, 14], [12, 6], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [8, 14], [12, 6], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [15, 5], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [15, 5], [3, 17], [8, 12], [11, 1], [9, 4], [6, 5], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [6, 5], [11, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 16, 24]
[75, 84, 88]
[76, 83, 89]
[139, 153, 163]
[184, 195, 200]
[191, 197, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 11, 16]
[7, 13, 22]
[67, 73, 79]
[137, 140, 146]
[143, 147, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.234115839004517

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 12] cc => I, Pos: [1, 12] cc => I, Pos: [5, 11, 16] ccc => cc, Pos: [7, 13, 22] ccc => cc, Pos: [11, 16, 24] ccc => cc, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [18, 27] cc => I, Pos: [18, 27] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [37, 49] cc => I, Pos: [37, 49] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 60] cc => I, Pos: [42, 60] cc => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 66] cc => I, Pos: [58, 66] cc => I, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [67, 73, 79] ccc => cc, Pos: [72, 77] cc => I, Pos: [72, 77] cc => I, Pos: [75, 84, 88] ccc => cc, Pos: [76, 83, 89] ccc => cc, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [109, 126] cc => I, Pos: [109, 126] cc => I, Pos: [111, 115] cc => I, Pos: [111, 115] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [124, 131] cc => I, Pos: [124, 131] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [129, 134] cc => I, Pos: [129, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [136, 144] cc => I, Pos: [136, 144] cc => I, Pos: [137, 140, 146] ccc => cc, Pos: [139, 153, 163] ccc => cc, Pos: [143, 147, 155] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [151, 158] cc => I, Pos: [151, 158] cc => I, Pos: [156, 159] cc => I, Pos: [156, 159] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [165, 180] cc => I, Pos: [165, 180] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I, Pos: [171, 181] cc => I, Pos: [171, 181] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 183] cc => I, Pos: [178, 183] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 195, 200] ccc => cc, Pos: [187, 221] cc => I, Pos: [187, 221] cc => I, Pos: [191, 197, 202] ccc => cc, Pos: [196, 199] cc => I, Pos: [196, 199] cc => I, Pos: [199, 208] cc => I, Pos: [199, 208] cc => I, Pos: [200, 205] cc => I, Pos: [200, 205] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [217, 224] cc => I, Pos: [217, 224] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [247, 255] cc => I, Pos: [247, 255] cc => I, Pos: [260, 268] cc => I, Pos: [260, 268] cc => I]

--------End Timer [Generate Plans]:  0.10936737060546875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 12] cc => I,
 Pos: [11, 16, 24] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [37, 49] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 60] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [59, 72] cc => I,
 Pos: [79, 82] cc => I,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [89, 95] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [111, 115] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [136, 144] cc => I,
 Pos: [137, 140, 146] ccc => cc,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [151, 158] cc => I,
 Pos: [159, 168] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [200, 205] cc => I,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [196, 199] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 43, Saving: 45

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 12] cc => I
Apply:  Pos: [11, 16, 24] ccc => cc
Apply:  Pos: [7, 13, 22] ccc => cc
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [18, 27] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [37, 49] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 60] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 66] cc => I
Apply:  Pos: [59, 72] cc => I
Apply:  Pos: [79, 82] cc => I
Apply:  Pos: [75, 84, 88] ccc => cc
Apply:  Pos: [89, 95] cc => I
Apply:  Pos: [109, 126] cc => I
Apply:  Pos: [111, 115] cc => I
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [124, 131] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [129, 134] cc => I
Apply:  Pos: [136, 144] cc => I
Apply:  Pos: [137, 140, 146] ccc => cc
Apply:  Pos: [139, 153, 163] ccc => cc
Apply:  Pos: [143, 147, 155] ccc => cc
Apply:  Pos: [151, 158] cc => I
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [165, 180] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [171, 181] cc => I
Apply:  Pos: [178, 183] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [200, 205] cc => I
Apply:  Pos: [187, 221] cc => I
Apply:  Pos: [191, 197, 202] ccc => cc
Apply:  Pos: [196, 199] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [217, 224] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [247, 255] cc => I
Apply:  Pos: [260, 268] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [6, 5], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [8, 0], [11, 10], [8, 12], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [5, 13], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [12, 6], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [8, 12], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [8, 12], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  5.343483209609985

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 47]
[92, 97]
[112, 123]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 14, 16]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 47]
[92, 97]
[112, 123]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4688429832458496

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [5, 14, 16] ccc => cc, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [92, 97] cc => I, Pos: [92, 97] cc => I, Pos: [112, 123] cc => I, Pos: [112, 123] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 6] cc => I,
 Pos: [5, 14, 16] ccc => cc,
 Pos: [36, 47] cc => I,
 Pos: [92, 97] cc => I,
 Pos: [112, 123] cc => I]
Change: 5, Saving: 5

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [5, 14, 16] ccc => cc
Apply:  Pos: [36, 47] cc => I
Apply:  Pos: [92, 97] cc => I
Apply:  Pos: [112, 123] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [1, 16], [8, 12], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [5, 13], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [1, 13], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [14, 9], [18, 1], [10, 2], [1, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.4688429832458496

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.298001766204834

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [1, 16], [8, 12], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [5, 13], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [1, 13], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [14, 9], [18, 1], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.298001766204834

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 88 (32.59%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12497878074645996

[8, 0], [12, 14], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [5, 13], [15, 18], [17, 9], [4, 10], [11, 1], [12, 14], [6, 5], [17, 4], [19, 2], [1, 16], [8, 0], [9, 7], [11, 10], [8, 12], [19, 2], [5, 13], [0, 18], [11, 1], [4, 10], [17, 14], [9, 7], [3, 8], [9, 4], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [9, 4], [1, 16], [3, 17], [6, 18], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [6, 18], [1, 16], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [6, 5], [8, 0], [17, 14], [1, 13], [4, 11], [6, 5], [17, 9], [4, 10], [19, 2], [8, 0], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [17, 14], [0, 1], [9, 7], [8, 12], [11, 10], [17, 14], [6, 18], [1, 13], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [8, 12], [11, 10], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [1, 13], [17, 14], [11, 10], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [17, 9], [4, 11], [12, 6], [4, 10], [15, 5], [1, 13], [18, 11], [17, 9], [12, 0], [13, 16], [4, 10], [14, 9], [18, 1], [12, 0], [18, 11], [14, 9], [6, 15], [1, 2], [10, 19], [12, 6], [5, 13], [11, 1], [17, 4], [14, 9], [0, 18], [6, 15], [3, 17], [18, 11], [9, 7], [1, 16], [6, 15], [14, 0], [19, 2], [18, 5], [17, 4], [8, 12], [1, 13], [6, 15], [8, 12], [9, 4], [13, 16], [18, 1], [10, 19], [17, 14], [15, 5], [4, 11], [0, 18], [8, 12], [1, 16], [15, 18], [7, 10], [1, 2], [8, 12], [0, 11], [15, 18], [12, 6], [11, 19], [13, 16], [9, 4], [15, 5], [7, 10], [0, 1], [13, 16], [17, 9], [4, 19], [15, 18], [3, 8], [14, 4], [0, 1], [13, 2], [6, 15], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [2, 16], [17, 9], [0, 18], [6, 15], [18, 1], [4, 11], [17, 9], [5, 13], [14, 0], [2, 16], [6, 18], [11, 10], [14, 0], [5, 13], [1, 16], [17, 4], [0, 18], [6, 5], [9, 4], [11, 19], [17, 14], [2, 16], [3, 8], [7, 10], [18, 11], [9, 4], [10, 19], [3, 17], [8, 14], [12, 6], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [8, 14], [12, 6], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [15, 5], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [15, 5], [3, 17], [8, 12], [11, 1], [9, 4], [6, 5], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [6, 5], [11, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 16, 24]
[75, 84, 88]
[76, 83, 89]
[139, 153, 163]
[184, 195, 200]
[191, 197, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 11, 16]
[7, 13, 22]
[67, 73, 79]
[137, 140, 146]
[143, 147, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.187482833862305

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 12] cc => I, Pos: [1, 12] cc => I, Pos: [5, 11, 16] ccc => cc, Pos: [7, 13, 22] ccc => cc, Pos: [11, 16, 24] ccc => cc, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [18, 27] cc => I, Pos: [18, 27] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [37, 49] cc => I, Pos: [37, 49] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 60] cc => I, Pos: [42, 60] cc => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 66] cc => I, Pos: [58, 66] cc => I, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [67, 73, 79] ccc => cc, Pos: [72, 77] cc => I, Pos: [72, 77] cc => I, Pos: [75, 84, 88] ccc => cc, Pos: [76, 83, 89] ccc => cc, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [109, 126] cc => I, Pos: [109, 126] cc => I, Pos: [111, 115] cc => I, Pos: [111, 115] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [124, 131] cc => I, Pos: [124, 131] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [129, 134] cc => I, Pos: [129, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [136, 144] cc => I, Pos: [136, 144] cc => I, Pos: [137, 140, 146] ccc => cc, Pos: [139, 153, 163] ccc => cc, Pos: [143, 147, 155] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [151, 158] cc => I, Pos: [151, 158] cc => I, Pos: [156, 159] cc => I, Pos: [156, 159] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [165, 180] cc => I, Pos: [165, 180] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I, Pos: [171, 181] cc => I, Pos: [171, 181] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 183] cc => I, Pos: [178, 183] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 195, 200] ccc => cc, Pos: [187, 221] cc => I, Pos: [187, 221] cc => I, Pos: [191, 197, 202] ccc => cc, Pos: [196, 199] cc => I, Pos: [196, 199] cc => I, Pos: [199, 208] cc => I, Pos: [199, 208] cc => I, Pos: [200, 205] cc => I, Pos: [200, 205] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [217, 224] cc => I, Pos: [217, 224] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [247, 255] cc => I, Pos: [247, 255] cc => I, Pos: [260, 268] cc => I, Pos: [260, 268] cc => I]

--------End Timer [Generate Plans]:  0.10937237739562988

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 12] cc => I,
 Pos: [5, 11, 16] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [37, 49] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [60, 67] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [59, 72] cc => I,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [89, 95] cc => I,
 Pos: [79, 82] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [111, 115] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [136, 144] cc => I,
 Pos: [146, 151] cc => I,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [200, 205] cc => I,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [196, 199] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 42, Saving: 43

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 12] cc => I
Apply:  Pos: [5, 11, 16] ccc => cc
Apply:  Pos: [7, 13, 22] ccc => cc
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [18, 27] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [37, 49] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 66] cc => I
Apply:  Pos: [59, 72] cc => I
Apply:  Pos: [75, 84, 88] ccc => cc
Apply:  Pos: [89, 95] cc => I
Apply:  Pos: [79, 82] cc => I
Apply:  Pos: [109, 126] cc => I
Apply:  Pos: [111, 115] cc => I
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [124, 131] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [129, 134] cc => I
Apply:  Pos: [136, 144] cc => I
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [139, 153, 163] ccc => cc
Apply:  Pos: [143, 147, 155] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [165, 180] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [171, 181] cc => I
Apply:  Pos: [178, 183] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [200, 205] cc => I
Apply:  Pos: [187, 221] cc => I
Apply:  Pos: [191, 197, 202] ccc => cc
Apply:  Pos: [196, 199] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [217, 224] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [247, 255] cc => I
Apply:  Pos: [260, 268] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [6, 5], [13, 2], [11, 1], [12, 0], [6, 5], [15, 18], [17, 9], [4, 10], [1, 16], [5, 13], [17, 4], [8, 0], [11, 10], [8, 12], [0, 18], [11, 1], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [12, 6], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [6, 15], [1, 2], [10, 2], [12, 6], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [8, 12], [1, 13], [6, 15], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [8, 12], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  5.296855211257935

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[37, 47]
[112, 124]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 17]
[11, 22, 28]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 13, 15]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[37, 47]
[112, 124]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4687342643737793

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 10, 17] ccc => cc, Pos: [5, 13, 15] ccc => cc, Pos: [11, 22, 28] ccc => cc, Pos: [37, 47] cc => I, Pos: [37, 47] cc => I, Pos: [112, 124] cc => I, Pos: [112, 124] cc => I]

--------End Timer [Generate Plans]:  0.016479969024658203

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 6] cc => I,
 Pos: [4, 10, 17] ccc => cc,
 Pos: [5, 13, 15] ccc => cc,
 Pos: [11, 22, 28] ccc => cc,
 Pos: [37, 47] cc => I,
 Pos: [112, 124] cc => I]
Change: 6, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 10, 17] ccc => cc
Apply:  Pos: [5, 13, 15] ccc => cc
Apply:  Pos: [11, 22, 28] ccc => cc
Apply:  Pos: [37, 47] cc => I
Apply:  Pos: [112, 124] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [1, 16], [5, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [6, 15], [10, 2], [1, 2], [12, 6], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [6, 15], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.4852142333984375

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[90, 93, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2655420303344727

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [90, 93, 106] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [90, 93, 106] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [90, 93, 106] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [5, 16], [1, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [12, 6], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.2655420303344727

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[85, 90]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[85, 90]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.218815803527832

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [85, 90] cc => I, Pos: [85, 90] cc => I]

--------End Timer [Generate Plans]:  0.015625476837158203

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [85, 90] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [85, 90] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [1, 16], [5, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [14, 9], [18, 1], [10, 2], [1, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.2344412803649902

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.187782049179077

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [5, 16], [1, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [14, 9], [18, 1], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.187782049179077

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 360

Reduced: 
 - size: 90 (33.33%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374356269836426

[8, 0], [12, 14], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [5, 13], [15, 18], [17, 9], [4, 10], [11, 1], [12, 14], [6, 5], [17, 4], [19, 2], [1, 16], [8, 0], [9, 7], [11, 10], [8, 12], [19, 2], [5, 13], [0, 18], [11, 1], [4, 10], [17, 14], [9, 7], [3, 8], [9, 4], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [9, 4], [1, 16], [3, 17], [6, 18], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [6, 18], [1, 16], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [6, 5], [8, 0], [17, 14], [1, 13], [4, 11], [6, 5], [17, 9], [4, 10], [19, 2], [8, 0], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [17, 14], [0, 1], [9, 7], [8, 12], [11, 10], [17, 14], [6, 18], [1, 13], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [8, 12], [11, 10], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [1, 13], [17, 14], [11, 10], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [17, 9], [4, 11], [12, 6], [4, 10], [15, 5], [1, 13], [18, 11], [17, 9], [12, 0], [13, 16], [4, 10], [14, 9], [18, 1], [12, 0], [18, 11], [14, 9], [6, 15], [1, 2], [10, 19], [12, 6], [5, 13], [11, 1], [17, 4], [14, 9], [0, 18], [6, 15], [3, 17], [18, 11], [9, 7], [1, 16], [6, 15], [14, 0], [19, 2], [18, 5], [17, 4], [8, 12], [1, 13], [6, 15], [8, 12], [9, 4], [13, 16], [18, 1], [10, 19], [17, 14], [15, 5], [4, 11], [0, 18], [8, 12], [1, 16], [15, 18], [7, 10], [1, 2], [8, 12], [0, 11], [15, 18], [12, 6], [11, 19], [13, 16], [9, 4], [15, 5], [7, 10], [0, 1], [13, 16], [17, 9], [4, 19], [15, 18], [3, 8], [14, 4], [0, 1], [13, 2], [6, 15], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [2, 16], [17, 9], [0, 18], [6, 15], [18, 1], [4, 11], [17, 9], [5, 13], [14, 0], [2, 16], [6, 18], [11, 10], [14, 0], [5, 13], [1, 16], [17, 4], [0, 18], [6, 5], [9, 4], [11, 19], [17, 14], [2, 16], [3, 8], [7, 10], [18, 11], [9, 4], [10, 19], [3, 17], [8, 14], [12, 6], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [8, 14], [12, 6], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [15, 5], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [15, 5], [3, 17], [8, 12], [11, 1], [9, 4], [6, 5], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [6, 5], [11, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 16, 24]
[75, 84, 88]
[76, 83, 89]
[139, 153, 163]
[184, 195, 200]
[191, 197, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 11, 16]
[7, 13, 22]
[67, 73, 79]
[137, 140, 146]
[143, 147, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.12550687789917

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 12] cc => I, Pos: [1, 12] cc => I, Pos: [5, 11, 16] ccc => cc, Pos: [7, 13, 22] ccc => cc, Pos: [11, 16, 24] ccc => cc, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [18, 27] cc => I, Pos: [18, 27] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [37, 49] cc => I, Pos: [37, 49] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 60] cc => I, Pos: [42, 60] cc => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 66] cc => I, Pos: [58, 66] cc => I, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [67, 73, 79] ccc => cc, Pos: [72, 77] cc => I, Pos: [72, 77] cc => I, Pos: [75, 84, 88] ccc => cc, Pos: [76, 83, 89] ccc => cc, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [109, 126] cc => I, Pos: [109, 126] cc => I, Pos: [111, 115] cc => I, Pos: [111, 115] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [124, 131] cc => I, Pos: [124, 131] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [129, 134] cc => I, Pos: [129, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [136, 144] cc => I, Pos: [136, 144] cc => I, Pos: [137, 140, 146] ccc => cc, Pos: [139, 153, 163] ccc => cc, Pos: [143, 147, 155] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [151, 158] cc => I, Pos: [151, 158] cc => I, Pos: [156, 159] cc => I, Pos: [156, 159] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [165, 180] cc => I, Pos: [165, 180] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I, Pos: [171, 181] cc => I, Pos: [171, 181] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 183] cc => I, Pos: [178, 183] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 195, 200] ccc => cc, Pos: [187, 221] cc => I, Pos: [187, 221] cc => I, Pos: [191, 197, 202] ccc => cc, Pos: [196, 199] cc => I, Pos: [196, 199] cc => I, Pos: [199, 208] cc => I, Pos: [199, 208] cc => I, Pos: [200, 205] cc => I, Pos: [200, 205] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [217, 224] cc => I, Pos: [217, 224] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [247, 255] cc => I, Pos: [247, 255] cc => I, Pos: [260, 268] cc => I, Pos: [260, 268] cc => I]

--------End Timer [Generate Plans]:  0.10936307907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 12] cc => I,
 Pos: [11, 16, 24] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [37, 49] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [60, 67] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [72, 77] cc => I,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [89, 95] cc => I,
 Pos: [79, 82] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [111, 115] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [136, 144] cc => I,
 Pos: [146, 151] cc => I,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [156, 159] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [200, 205] cc => I,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [199, 208] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 43, Saving: 44

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 12] cc => I
Apply:  Pos: [11, 16, 24] ccc => cc
Apply:  Pos: [7, 13, 22] ccc => cc
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [18, 27] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [37, 49] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 66] cc => I
Apply:  Pos: [72, 77] cc => I
Apply:  Pos: [75, 84, 88] ccc => cc
Apply:  Pos: [89, 95] cc => I
Apply:  Pos: [79, 82] cc => I
Apply:  Pos: [109, 126] cc => I
Apply:  Pos: [111, 115] cc => I
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [124, 131] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [129, 134] cc => I
Apply:  Pos: [136, 144] cc => I
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [139, 153, 163] ccc => cc
Apply:  Pos: [143, 147, 155] ccc => cc
Apply:  Pos: [156, 159] cc => I
Apply:  Pos: [165, 180] cc => I
Apply:  Pos: [168, 173] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [171, 181] cc => I
Apply:  Pos: [178, 183] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [200, 205] cc => I
Apply:  Pos: [187, 221] cc => I
Apply:  Pos: [191, 197, 202] ccc => cc
Apply:  Pos: [199, 208] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [217, 224] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [247, 255] cc => I
Apply:  Pos: [260, 268] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [6, 5], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [8, 0], [11, 10], [8, 12], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [17, 14], [4, 11], [17, 9], [4, 10], [19, 2], [12, 6], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [6, 15], [1, 2], [10, 2], [12, 6], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [6, 15], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  5.234869956970215

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[37, 48]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[97, 100, 113]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 14, 16]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[37, 48]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3910653591156006

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [5, 14, 16] ccc => cc, Pos: [37, 48] cc => I, Pos: [37, 48] cc => I, Pos: [97, 100, 113] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 6] cc => I,
 Pos: [5, 14, 16] ccc => cc,
 Pos: [37, 48] cc => I,
 Pos: [97, 100, 113] ccc => cc]
Change: 4, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [5, 14, 16] ccc => cc
Apply:  Pos: [37, 48] cc => I
Apply:  Pos: [97, 100, 113] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [1, 16], [8, 12], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [17, 14], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [12, 6], [10, 2], [1, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.3910653591156006

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 92]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 92]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2501115798950195

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [87, 92] cc => I, Pos: [87, 92] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [87, 92] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [87, 92] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [1, 16], [8, 12], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [17, 14], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [14, 9], [18, 1], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.2501115798950195

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.187854766845703

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [1, 16], [8, 12], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [17, 14], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [14, 9], [18, 1], [10, 2], [1, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.187854766845703

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 88 (32.59%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936808586120605

[8, 0], [12, 14], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [5, 13], [15, 18], [17, 9], [4, 10], [11, 1], [12, 14], [6, 5], [17, 4], [19, 2], [1, 16], [8, 0], [9, 7], [11, 10], [8, 12], [19, 2], [5, 13], [0, 18], [11, 1], [4, 10], [17, 14], [9, 7], [3, 8], [9, 4], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [9, 4], [1, 16], [3, 17], [6, 18], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [6, 18], [1, 16], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [6, 5], [8, 0], [17, 14], [1, 13], [4, 11], [6, 5], [17, 9], [4, 10], [19, 2], [8, 0], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [17, 14], [0, 1], [9, 7], [8, 12], [11, 10], [17, 14], [6, 18], [1, 13], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [8, 12], [11, 10], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [1, 13], [17, 14], [11, 10], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [17, 9], [4, 11], [12, 6], [4, 10], [15, 5], [1, 13], [18, 11], [17, 9], [12, 0], [13, 16], [4, 10], [14, 9], [18, 1], [12, 0], [18, 11], [14, 9], [6, 15], [1, 2], [10, 19], [12, 6], [5, 13], [11, 1], [17, 4], [14, 9], [0, 18], [6, 15], [3, 17], [18, 11], [9, 7], [1, 16], [6, 15], [14, 0], [19, 2], [18, 5], [17, 4], [8, 12], [1, 13], [6, 15], [8, 12], [9, 4], [13, 16], [18, 1], [10, 19], [17, 14], [15, 5], [4, 11], [0, 18], [8, 12], [1, 16], [15, 18], [7, 10], [1, 2], [8, 12], [0, 11], [15, 18], [12, 6], [11, 19], [13, 16], [9, 4], [15, 5], [7, 10], [0, 1], [13, 16], [17, 9], [4, 19], [15, 18], [3, 8], [14, 4], [0, 1], [13, 2], [6, 15], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [2, 16], [17, 9], [0, 18], [6, 15], [18, 1], [4, 11], [17, 9], [5, 13], [14, 0], [2, 16], [6, 18], [11, 10], [14, 0], [5, 13], [1, 16], [17, 4], [0, 18], [6, 5], [9, 4], [11, 19], [17, 14], [2, 16], [3, 8], [7, 10], [18, 11], [9, 4], [10, 19], [3, 17], [8, 14], [12, 6], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [8, 14], [12, 6], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [15, 5], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [15, 5], [3, 17], [8, 12], [11, 1], [9, 4], [6, 5], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [6, 5], [11, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 16, 24]
[75, 84, 88]
[76, 83, 89]
[139, 153, 163]
[184, 195, 200]
[191, 197, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 11, 16]
[7, 13, 22]
[67, 73, 79]
[137, 140, 146]
[143, 147, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.265447616577148

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 12] cc => I, Pos: [1, 12] cc => I, Pos: [5, 11, 16] ccc => cc, Pos: [7, 13, 22] ccc => cc, Pos: [11, 16, 24] ccc => cc, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [18, 27] cc => I, Pos: [18, 27] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [37, 49] cc => I, Pos: [37, 49] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 60] cc => I, Pos: [42, 60] cc => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 66] cc => I, Pos: [58, 66] cc => I, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [67, 73, 79] ccc => cc, Pos: [72, 77] cc => I, Pos: [72, 77] cc => I, Pos: [75, 84, 88] ccc => cc, Pos: [76, 83, 89] ccc => cc, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [109, 126] cc => I, Pos: [109, 126] cc => I, Pos: [111, 115] cc => I, Pos: [111, 115] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [124, 131] cc => I, Pos: [124, 131] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [129, 134] cc => I, Pos: [129, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [136, 144] cc => I, Pos: [136, 144] cc => I, Pos: [137, 140, 146] ccc => cc, Pos: [139, 153, 163] ccc => cc, Pos: [143, 147, 155] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [151, 158] cc => I, Pos: [151, 158] cc => I, Pos: [156, 159] cc => I, Pos: [156, 159] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [165, 180] cc => I, Pos: [165, 180] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I, Pos: [171, 181] cc => I, Pos: [171, 181] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 183] cc => I, Pos: [178, 183] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 195, 200] ccc => cc, Pos: [187, 221] cc => I, Pos: [187, 221] cc => I, Pos: [191, 197, 202] ccc => cc, Pos: [196, 199] cc => I, Pos: [196, 199] cc => I, Pos: [199, 208] cc => I, Pos: [199, 208] cc => I, Pos: [200, 205] cc => I, Pos: [200, 205] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [217, 224] cc => I, Pos: [217, 224] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [247, 255] cc => I, Pos: [247, 255] cc => I, Pos: [260, 268] cc => I, Pos: [260, 268] cc => I]

--------End Timer [Generate Plans]:  0.10936760902404785

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 12] cc => I,
 Pos: [5, 11, 16] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [37, 49] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 60] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [72, 77] cc => I,
 Pos: [79, 82] cc => I,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [76, 83, 89] ccc => cc,
 Pos: [95, 111] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [136, 144] cc => I,
 Pos: [137, 140, 146] ccc => cc,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [151, 158] cc => I,
 Pos: [156, 159] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [170, 175] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 195, 200] ccc => cc,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [199, 208] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 44, Saving: 46

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 12] cc => I
Apply:  Pos: [5, 11, 16] ccc => cc
Apply:  Pos: [7, 13, 22] ccc => cc
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [18, 27] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [37, 49] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 60] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 66] cc => I
Apply:  Pos: [72, 77] cc => I
Apply:  Pos: [79, 82] cc => I
Apply:  Pos: [75, 84, 88] ccc => cc
Apply:  Pos: [76, 83, 89] ccc => cc
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [109, 126] cc => I
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [124, 131] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [129, 134] cc => I
Apply:  Pos: [136, 144] cc => I
Apply:  Pos: [137, 140, 146] ccc => cc
Apply:  Pos: [139, 153, 163] ccc => cc
Apply:  Pos: [143, 147, 155] ccc => cc
Apply:  Pos: [151, 158] cc => I
Apply:  Pos: [156, 159] cc => I
Apply:  Pos: [165, 180] cc => I
Apply:  Pos: [168, 173] cc => I
Apply:  Pos: [170, 175] cc => I
Apply:  Pos: [171, 181] cc => I
Apply:  Pos: [178, 183] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [184, 195, 200] ccc => cc
Apply:  Pos: [187, 221] cc => I
Apply:  Pos: [191, 197, 202] ccc => cc
Apply:  Pos: [199, 208] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [217, 224] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [247, 255] cc => I
Apply:  Pos: [260, 268] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [6, 5], [13, 2], [11, 1], [12, 0], [6, 5], [15, 18], [17, 9], [4, 10], [1, 16], [5, 13], [17, 4], [8, 0], [11, 10], [8, 12], [0, 18], [11, 1], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [5, 13], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [17, 14], [4, 11], [17, 9], [4, 10], [19, 2], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 19], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [12, 6], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  5.374815225601196

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 48]
[51, 55]
[93, 98]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 17]
[11, 22, 28]
[98, 101, 123]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 13, 15]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 48]
[51, 55]
[93, 98]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4849419593811035

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 10, 17] ccc => cc, Pos: [5, 13, 15] ccc => cc, Pos: [11, 22, 28] ccc => cc, Pos: [36, 48] cc => I, Pos: [36, 48] cc => I, Pos: [51, 55] cc => I, Pos: [51, 55] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [98, 101, 123] ccc => cc]

--------End Timer [Generate Plans]:  0.0312345027923584

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 6] cc => I,
 Pos: [4, 10, 17] ccc => cc,
 Pos: [5, 13, 15] ccc => cc,
 Pos: [11, 22, 28] ccc => cc,
 Pos: [36, 48] cc => I,
 Pos: [51, 55] cc => I,
 Pos: [98, 101, 123] ccc => cc]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 10, 17] ccc => cc
Apply:  Pos: [5, 13, 15] ccc => cc
Apply:  Pos: [11, 22, 28] ccc => cc
Apply:  Pos: [36, 48] cc => I
Apply:  Pos: [51, 55] cc => I
Apply:  Pos: [98, 101, 123] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [1, 16], [5, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [17, 14], [4, 11], [17, 9], [4, 10], [19, 2], [1, 13], [18, 5], [2, 16], [0, 1], [9, 7], [8, 0], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [12, 15], [10, 2], [1, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 2], [1, 16], [0, 11], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.516176462173462

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[18, 35, 41]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2657687664031982

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [18, 35, 41] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [18, 35, 41] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [18, 35, 41] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [5, 16], [1, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [1, 13], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [13, 16], [17, 14], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [0, 1], [9, 7], [8, 0], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [12, 15], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.2657687664031982

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2506966590881348

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [1, 16], [5, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 13], [1, 2], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [13, 16], [17, 14], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [0, 1], [9, 7], [8, 0], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [12, 15], [10, 2], [1, 2], [6, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 2], [1, 16], [0, 11], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.2506966590881348

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 360

Reduced: 
 - size: 90 (33.33%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374451637268066

[8, 0], [12, 14], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [5, 13], [15, 18], [17, 9], [4, 10], [11, 1], [12, 14], [6, 5], [17, 4], [19, 2], [1, 16], [8, 0], [9, 7], [11, 10], [8, 12], [19, 2], [5, 13], [0, 18], [11, 1], [4, 10], [17, 14], [9, 7], [3, 8], [9, 4], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [9, 4], [1, 16], [3, 17], [6, 18], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [6, 18], [1, 16], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [6, 5], [8, 0], [17, 14], [1, 13], [4, 11], [6, 5], [17, 9], [4, 10], [19, 2], [8, 0], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [17, 14], [0, 1], [9, 7], [8, 12], [11, 10], [17, 14], [6, 18], [1, 13], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [8, 12], [11, 10], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [1, 13], [17, 14], [11, 10], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [17, 9], [4, 11], [12, 6], [4, 10], [15, 5], [1, 13], [18, 11], [17, 9], [12, 0], [13, 16], [4, 10], [14, 9], [18, 1], [12, 0], [18, 11], [14, 9], [6, 15], [1, 2], [10, 19], [12, 6], [5, 13], [11, 1], [17, 4], [14, 9], [0, 18], [6, 15], [3, 17], [18, 11], [9, 7], [1, 16], [6, 15], [14, 0], [19, 2], [18, 5], [17, 4], [8, 12], [1, 13], [6, 15], [8, 12], [9, 4], [13, 16], [18, 1], [10, 19], [17, 14], [15, 5], [4, 11], [0, 18], [8, 12], [1, 16], [15, 18], [7, 10], [1, 2], [8, 12], [0, 11], [15, 18], [12, 6], [11, 19], [13, 16], [9, 4], [15, 5], [7, 10], [0, 1], [13, 16], [17, 9], [4, 19], [15, 18], [3, 8], [14, 4], [0, 1], [13, 2], [6, 15], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [2, 16], [17, 9], [0, 18], [6, 15], [18, 1], [4, 11], [17, 9], [5, 13], [14, 0], [2, 16], [6, 18], [11, 10], [14, 0], [5, 13], [1, 16], [17, 4], [0, 18], [6, 5], [9, 4], [11, 19], [17, 14], [2, 16], [3, 8], [7, 10], [18, 11], [9, 4], [10, 19], [3, 17], [8, 14], [12, 6], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [8, 14], [12, 6], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [15, 5], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [15, 5], [3, 17], [8, 12], [11, 1], [9, 4], [6, 5], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [6, 5], [11, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 16, 24]
[75, 84, 88]
[76, 83, 89]
[139, 153, 163]
[184, 195, 200]
[191, 197, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 11, 16]
[7, 13, 22]
[67, 73, 79]
[137, 140, 146]
[143, 147, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.21875262260437

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 12] cc => I, Pos: [1, 12] cc => I, Pos: [5, 11, 16] ccc => cc, Pos: [7, 13, 22] ccc => cc, Pos: [11, 16, 24] ccc => cc, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [18, 27] cc => I, Pos: [18, 27] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [37, 49] cc => I, Pos: [37, 49] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 60] cc => I, Pos: [42, 60] cc => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 66] cc => I, Pos: [58, 66] cc => I, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [67, 73, 79] ccc => cc, Pos: [72, 77] cc => I, Pos: [72, 77] cc => I, Pos: [75, 84, 88] ccc => cc, Pos: [76, 83, 89] ccc => cc, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [109, 126] cc => I, Pos: [109, 126] cc => I, Pos: [111, 115] cc => I, Pos: [111, 115] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [124, 131] cc => I, Pos: [124, 131] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [129, 134] cc => I, Pos: [129, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [136, 144] cc => I, Pos: [136, 144] cc => I, Pos: [137, 140, 146] ccc => cc, Pos: [139, 153, 163] ccc => cc, Pos: [143, 147, 155] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [151, 158] cc => I, Pos: [151, 158] cc => I, Pos: [156, 159] cc => I, Pos: [156, 159] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [165, 180] cc => I, Pos: [165, 180] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I, Pos: [171, 181] cc => I, Pos: [171, 181] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 183] cc => I, Pos: [178, 183] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 195, 200] ccc => cc, Pos: [187, 221] cc => I, Pos: [187, 221] cc => I, Pos: [191, 197, 202] ccc => cc, Pos: [196, 199] cc => I, Pos: [196, 199] cc => I, Pos: [199, 208] cc => I, Pos: [199, 208] cc => I, Pos: [200, 205] cc => I, Pos: [200, 205] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [217, 224] cc => I, Pos: [217, 224] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [247, 255] cc => I, Pos: [247, 255] cc => I, Pos: [260, 268] cc => I, Pos: [260, 268] cc => I]

--------End Timer [Generate Plans]:  0.10936784744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 12] cc => I,
 Pos: [5, 11, 16] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [37, 49] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 60] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [59, 72] cc => I,
 Pos: [67, 73, 79] ccc => cc,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [89, 95] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [111, 115] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [146, 151] cc => I,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [170, 175] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [200, 205] cc => I,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [199, 208] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 42, Saving: 43

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 12] cc => I
Apply:  Pos: [5, 11, 16] ccc => cc
Apply:  Pos: [7, 13, 22] ccc => cc
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [18, 27] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [37, 49] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 60] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 66] cc => I
Apply:  Pos: [59, 72] cc => I
Apply:  Pos: [67, 73, 79] ccc => cc
Apply:  Pos: [75, 84, 88] ccc => cc
Apply:  Pos: [89, 95] cc => I
Apply:  Pos: [109, 126] cc => I
Apply:  Pos: [111, 115] cc => I
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [124, 131] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [129, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [139, 153, 163] ccc => cc
Apply:  Pos: [143, 147, 155] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [165, 180] cc => I
Apply:  Pos: [170, 175] cc => I
Apply:  Pos: [171, 181] cc => I
Apply:  Pos: [178, 183] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [200, 205] cc => I
Apply:  Pos: [187, 221] cc => I
Apply:  Pos: [191, 197, 202] ccc => cc
Apply:  Pos: [199, 208] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [217, 224] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [247, 255] cc => I
Apply:  Pos: [260, 268] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [6, 5], [13, 2], [11, 1], [12, 0], [6, 5], [15, 18], [17, 9], [4, 10], [1, 16], [5, 13], [17, 4], [8, 0], [11, 10], [8, 12], [0, 18], [11, 1], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [5, 13], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [12, 6], [18, 5], [2, 16], [11, 19], [1, 13], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [18, 1], [6, 15], [1, 2], [10, 2], [12, 6], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [8, 12], [1, 13], [6, 15], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [8, 12], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  5.328120470046997

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 47]
[51, 59]
[113, 124]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 17]
[11, 22, 28]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 13, 15]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 47]
[51, 59]
[113, 124]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.515765905380249

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 10, 17] ccc => cc, Pos: [5, 13, 15] ccc => cc, Pos: [11, 22, 28] ccc => cc, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [51, 59] cc => I, Pos: [51, 59] cc => I, Pos: [113, 124] cc => I, Pos: [113, 124] cc => I]

--------End Timer [Generate Plans]:  0.015641450881958008

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 6] cc => I,
 Pos: [4, 10, 17] ccc => cc,
 Pos: [5, 13, 15] ccc => cc,
 Pos: [11, 22, 28] ccc => cc,
 Pos: [36, 47] cc => I,
 Pos: [51, 59] cc => I,
 Pos: [113, 124] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 10, 17] ccc => cc
Apply:  Pos: [5, 13, 15] ccc => cc
Apply:  Pos: [11, 22, 28] ccc => cc
Apply:  Pos: [36, 47] cc => I
Apply:  Pos: [51, 59] cc => I
Apply:  Pos: [113, 124] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [1, 16], [5, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [11, 19], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [18, 1], [6, 15], [10, 2], [1, 2], [12, 6], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [6, 15], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 2], [1, 16], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.531407356262207

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 105, 115]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[88, 91, 105]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2499475479125977

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [88, 91, 105] ccc => cc, Pos: [91, 105, 115] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [88, 91, 105] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [88, 91, 105] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [5, 16], [1, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [11, 19], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [18, 1], [12, 6], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.2499475479125977

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[84, 88]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[88, 91, 114]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[84, 88]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2189931869506836

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [84, 88] cc => I, Pos: [84, 88] cc => I, Pos: [88, 91, 114] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [84, 88] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [84, 88] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [1, 16], [5, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [11, 19], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [18, 1], [10, 2], [1, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 2], [1, 16], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.2189931869506836

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2019782066345215

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [5, 16], [1, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [11, 19], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [18, 1], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.2019782066345215

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [179] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 358

Reduced: 
 - size: 91 (33.70%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374284744262695

[8, 0], [12, 14], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [5, 13], [15, 18], [17, 9], [4, 10], [11, 1], [12, 14], [6, 5], [17, 4], [19, 2], [1, 16], [8, 0], [9, 7], [11, 10], [8, 12], [19, 2], [5, 13], [0, 18], [11, 1], [4, 10], [17, 14], [9, 7], [3, 8], [9, 4], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [9, 4], [1, 16], [3, 17], [6, 18], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [6, 18], [1, 16], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [6, 5], [8, 0], [17, 14], [1, 13], [4, 11], [6, 5], [17, 9], [4, 10], [19, 2], [8, 0], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [17, 14], [0, 1], [9, 7], [8, 12], [11, 10], [17, 14], [6, 18], [1, 13], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [8, 12], [11, 10], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [1, 13], [17, 14], [11, 10], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [17, 9], [4, 11], [12, 6], [4, 10], [15, 5], [1, 13], [18, 11], [17, 9], [12, 0], [13, 16], [4, 10], [14, 9], [18, 1], [12, 0], [18, 11], [14, 9], [6, 15], [1, 2], [10, 19], [12, 6], [5, 13], [11, 1], [17, 4], [14, 9], [0, 18], [6, 15], [3, 17], [18, 11], [9, 7], [1, 16], [6, 15], [14, 0], [19, 2], [18, 5], [17, 4], [8, 12], [1, 13], [6, 15], [8, 12], [9, 4], [13, 16], [18, 1], [10, 19], [17, 14], [15, 5], [4, 11], [0, 18], [8, 12], [1, 16], [15, 18], [7, 10], [1, 2], [8, 12], [0, 11], [15, 18], [12, 6], [11, 19], [13, 16], [9, 4], [15, 5], [7, 10], [0, 1], [13, 16], [17, 9], [4, 19], [15, 18], [3, 8], [14, 4], [0, 1], [13, 2], [6, 15], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [2, 16], [17, 9], [0, 18], [6, 15], [18, 1], [4, 11], [17, 9], [5, 13], [14, 0], [2, 16], [6, 18], [11, 10], [14, 0], [5, 13], [1, 16], [17, 4], [0, 18], [6, 5], [9, 4], [11, 19], [17, 14], [2, 16], [3, 8], [7, 10], [18, 11], [9, 4], [10, 19], [3, 17], [8, 14], [12, 6], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [8, 14], [12, 6], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [15, 5], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [15, 5], [3, 17], [8, 12], [11, 1], [9, 4], [6, 5], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [6, 5], [11, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 16, 24]
[75, 84, 88]
[76, 83, 89]
[139, 153, 163]
[184, 195, 200]
[191, 197, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 11, 16]
[7, 13, 22]
[67, 73, 79]
[137, 140, 146]
[143, 147, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.1718430519104

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 12] cc => I, Pos: [1, 12] cc => I, Pos: [5, 11, 16] ccc => cc, Pos: [7, 13, 22] ccc => cc, Pos: [11, 16, 24] ccc => cc, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [18, 27] cc => I, Pos: [18, 27] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [37, 49] cc => I, Pos: [37, 49] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 60] cc => I, Pos: [42, 60] cc => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 66] cc => I, Pos: [58, 66] cc => I, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [67, 73, 79] ccc => cc, Pos: [72, 77] cc => I, Pos: [72, 77] cc => I, Pos: [75, 84, 88] ccc => cc, Pos: [76, 83, 89] ccc => cc, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [109, 126] cc => I, Pos: [109, 126] cc => I, Pos: [111, 115] cc => I, Pos: [111, 115] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [124, 131] cc => I, Pos: [124, 131] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [129, 134] cc => I, Pos: [129, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [136, 144] cc => I, Pos: [136, 144] cc => I, Pos: [137, 140, 146] ccc => cc, Pos: [139, 153, 163] ccc => cc, Pos: [143, 147, 155] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [151, 158] cc => I, Pos: [151, 158] cc => I, Pos: [156, 159] cc => I, Pos: [156, 159] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [165, 180] cc => I, Pos: [165, 180] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I, Pos: [171, 181] cc => I, Pos: [171, 181] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 183] cc => I, Pos: [178, 183] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 195, 200] ccc => cc, Pos: [187, 221] cc => I, Pos: [187, 221] cc => I, Pos: [191, 197, 202] ccc => cc, Pos: [196, 199] cc => I, Pos: [196, 199] cc => I, Pos: [199, 208] cc => I, Pos: [199, 208] cc => I, Pos: [200, 205] cc => I, Pos: [200, 205] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [217, 224] cc => I, Pos: [217, 224] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [247, 255] cc => I, Pos: [247, 255] cc => I, Pos: [260, 268] cc => I, Pos: [260, 268] cc => I]

--------End Timer [Generate Plans]:  0.10936903953552246

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 12] cc => I,
 Pos: [11, 16, 24] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [49, 56] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [60, 67] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [59, 72] cc => I,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [76, 83, 89] ccc => cc,
 Pos: [79, 82] cc => I,
 Pos: [111, 115] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [137, 140, 146] ccc => cc,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [151, 158] cc => I,
 Pos: [159, 168] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 195, 200] ccc => cc,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [196, 199] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 43, Saving: 45

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 12] cc => I
Apply:  Pos: [11, 16, 24] ccc => cc
Apply:  Pos: [7, 13, 22] ccc => cc
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [18, 27] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 66] cc => I
Apply:  Pos: [59, 72] cc => I
Apply:  Pos: [75, 84, 88] ccc => cc
Apply:  Pos: [76, 83, 89] ccc => cc
Apply:  Pos: [79, 82] cc => I
Apply:  Pos: [111, 115] cc => I
Apply:  Pos: [109, 126] cc => I
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [124, 131] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [129, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [137, 140, 146] ccc => cc
Apply:  Pos: [139, 153, 163] ccc => cc
Apply:  Pos: [143, 147, 155] ccc => cc
Apply:  Pos: [151, 158] cc => I
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [165, 180] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [171, 181] cc => I
Apply:  Pos: [178, 183] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [184, 195, 200] ccc => cc
Apply:  Pos: [187, 221] cc => I
Apply:  Pos: [191, 197, 202] ccc => cc
Apply:  Pos: [196, 199] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [217, 224] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [247, 255] cc => I
Apply:  Pos: [260, 268] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [6, 5], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [8, 0], [11, 10], [8, 12], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [1, 16], [3, 17], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [4, 11], [17, 9], [4, 10], [19, 2], [12, 6], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 19], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [18, 1], [12, 6], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [8, 12], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [8, 12], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  5.281212091445923

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[38, 47]
[50, 54]
[93, 97]
[113, 124]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 14, 16]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[38, 47]
[50, 54]
[93, 97]
[113, 124]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5781872272491455

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [5, 14, 16] ccc => cc, Pos: [38, 47] cc => I, Pos: [38, 47] cc => I, Pos: [50, 54] cc => I, Pos: [50, 54] cc => I, Pos: [93, 97] cc => I, Pos: [93, 97] cc => I, Pos: [113, 124] cc => I, Pos: [113, 124] cc => I]

--------End Timer [Generate Plans]:  0.01563119888305664

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 6] cc => I,
 Pos: [5, 14, 16] ccc => cc,
 Pos: [38, 47] cc => I,
 Pos: [50, 54] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [113, 124] cc => I]
Change: 6, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [5, 14, 16] ccc => cc
Apply:  Pos: [38, 47] cc => I
Apply:  Pos: [50, 54] cc => I
Apply:  Pos: [93, 97] cc => I
Apply:  Pos: [113, 124] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [1, 16], [8, 12], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [1, 16], [3, 17], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [0, 1], [9, 7], [8, 0], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [18, 1], [10, 2], [1, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.593818426132202

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2343502044677734

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [1, 16], [8, 12], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [1, 16], [3, 17], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [0, 1], [9, 7], [8, 0], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [18, 1], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [15, 18], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.2343502044677734

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 88 (32.59%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936689376831055

[8, 0], [12, 14], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [5, 13], [15, 18], [17, 9], [4, 10], [11, 1], [12, 14], [6, 5], [17, 4], [19, 2], [1, 16], [8, 0], [9, 7], [11, 10], [8, 12], [19, 2], [5, 13], [0, 18], [11, 1], [4, 10], [17, 14], [9, 7], [3, 8], [9, 4], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [9, 4], [1, 16], [3, 17], [6, 18], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [6, 18], [1, 16], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [6, 5], [8, 0], [17, 14], [1, 13], [4, 11], [6, 5], [17, 9], [4, 10], [19, 2], [8, 0], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [17, 14], [0, 1], [9, 7], [8, 12], [11, 10], [17, 14], [6, 18], [1, 13], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [8, 12], [11, 10], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [1, 13], [17, 14], [11, 10], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [17, 9], [4, 11], [12, 6], [4, 10], [15, 5], [1, 13], [18, 11], [17, 9], [12, 0], [13, 16], [4, 10], [14, 9], [18, 1], [12, 0], [18, 11], [14, 9], [6, 15], [1, 2], [10, 19], [12, 6], [5, 13], [11, 1], [17, 4], [14, 9], [0, 18], [6, 15], [3, 17], [18, 11], [9, 7], [1, 16], [6, 15], [14, 0], [19, 2], [18, 5], [17, 4], [8, 12], [1, 13], [6, 15], [8, 12], [9, 4], [13, 16], [18, 1], [10, 19], [17, 14], [15, 5], [4, 11], [0, 18], [8, 12], [1, 16], [15, 18], [7, 10], [1, 2], [8, 12], [0, 11], [15, 18], [12, 6], [11, 19], [13, 16], [9, 4], [15, 5], [7, 10], [0, 1], [13, 16], [17, 9], [4, 19], [15, 18], [3, 8], [14, 4], [0, 1], [13, 2], [6, 15], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [2, 16], [17, 9], [0, 18], [6, 15], [18, 1], [4, 11], [17, 9], [5, 13], [14, 0], [2, 16], [6, 18], [11, 10], [14, 0], [5, 13], [1, 16], [17, 4], [0, 18], [6, 5], [9, 4], [11, 19], [17, 14], [2, 16], [3, 8], [7, 10], [18, 11], [9, 4], [10, 19], [3, 17], [8, 14], [12, 6], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [8, 14], [12, 6], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [15, 5], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [15, 5], [3, 17], [8, 12], [11, 1], [9, 4], [6, 5], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [6, 5], [11, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 16, 24]
[75, 84, 88]
[76, 83, 89]
[139, 153, 163]
[184, 195, 200]
[191, 197, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 11, 16]
[7, 13, 22]
[67, 73, 79]
[137, 140, 146]
[143, 147, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.234534025192261

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 12] cc => I, Pos: [1, 12] cc => I, Pos: [5, 11, 16] ccc => cc, Pos: [7, 13, 22] ccc => cc, Pos: [11, 16, 24] ccc => cc, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [18, 27] cc => I, Pos: [18, 27] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [37, 49] cc => I, Pos: [37, 49] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 60] cc => I, Pos: [42, 60] cc => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 66] cc => I, Pos: [58, 66] cc => I, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [67, 73, 79] ccc => cc, Pos: [72, 77] cc => I, Pos: [72, 77] cc => I, Pos: [75, 84, 88] ccc => cc, Pos: [76, 83, 89] ccc => cc, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [109, 126] cc => I, Pos: [109, 126] cc => I, Pos: [111, 115] cc => I, Pos: [111, 115] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [124, 131] cc => I, Pos: [124, 131] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [129, 134] cc => I, Pos: [129, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [136, 144] cc => I, Pos: [136, 144] cc => I, Pos: [137, 140, 146] ccc => cc, Pos: [139, 153, 163] ccc => cc, Pos: [143, 147, 155] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [151, 158] cc => I, Pos: [151, 158] cc => I, Pos: [156, 159] cc => I, Pos: [156, 159] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [165, 180] cc => I, Pos: [165, 180] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I, Pos: [171, 181] cc => I, Pos: [171, 181] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 183] cc => I, Pos: [178, 183] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 195, 200] ccc => cc, Pos: [187, 221] cc => I, Pos: [187, 221] cc => I, Pos: [191, 197, 202] ccc => cc, Pos: [196, 199] cc => I, Pos: [196, 199] cc => I, Pos: [199, 208] cc => I, Pos: [199, 208] cc => I, Pos: [200, 205] cc => I, Pos: [200, 205] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [217, 224] cc => I, Pos: [217, 224] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [247, 255] cc => I, Pos: [247, 255] cc => I, Pos: [260, 268] cc => I, Pos: [260, 268] cc => I]

--------End Timer [Generate Plans]:  0.12492108345031738

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 12] cc => I,
 Pos: [11, 16, 24] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [49, 56] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [60, 67] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [59, 72] cc => I,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [89, 95] cc => I,
 Pos: [79, 82] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [111, 115] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [136, 144] cc => I,
 Pos: [146, 151] cc => I,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [156, 159] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [170, 175] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [200, 205] cc => I,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [199, 208] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 43, Saving: 44

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 12] cc => I
Apply:  Pos: [11, 16, 24] ccc => cc
Apply:  Pos: [7, 13, 22] ccc => cc
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [18, 27] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [60, 67] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 66] cc => I
Apply:  Pos: [59, 72] cc => I
Apply:  Pos: [75, 84, 88] ccc => cc
Apply:  Pos: [89, 95] cc => I
Apply:  Pos: [79, 82] cc => I
Apply:  Pos: [109, 126] cc => I
Apply:  Pos: [111, 115] cc => I
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [124, 131] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [129, 134] cc => I
Apply:  Pos: [136, 144] cc => I
Apply:  Pos: [146, 151] cc => I
Apply:  Pos: [139, 153, 163] ccc => cc
Apply:  Pos: [143, 147, 155] ccc => cc
Apply:  Pos: [156, 159] cc => I
Apply:  Pos: [165, 180] cc => I
Apply:  Pos: [168, 173] cc => I
Apply:  Pos: [170, 175] cc => I
Apply:  Pos: [171, 181] cc => I
Apply:  Pos: [178, 183] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [200, 205] cc => I
Apply:  Pos: [187, 221] cc => I
Apply:  Pos: [191, 197, 202] ccc => cc
Apply:  Pos: [199, 208] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [217, 224] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [247, 255] cc => I
Apply:  Pos: [260, 268] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [6, 5], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [8, 0], [11, 10], [8, 12], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [1, 16], [3, 17], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [4, 11], [17, 9], [4, 10], [19, 2], [12, 6], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [6, 15], [1, 2], [10, 2], [12, 6], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [6, 15], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 9], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  5.359455108642578

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[38, 47]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[100, 113, 123]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[97, 100, 113]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 14, 16]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[38, 47]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5000250339508057

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [5, 14, 16] ccc => cc, Pos: [38, 47] cc => I, Pos: [38, 47] cc => I, Pos: [97, 100, 113] ccc => cc, Pos: [100, 113, 123] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 6] cc => I,
 Pos: [5, 14, 16] ccc => cc,
 Pos: [38, 47] cc => I,
 Pos: [100, 113, 123] ccc => cc]
Change: 4, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [5, 14, 16] ccc => cc
Apply:  Pos: [38, 47] cc => I
Apply:  Pos: [100, 113, 123] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [1, 16], [8, 12], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [1, 16], [3, 17], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [6, 15], [10, 2], [1, 2], [12, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [6, 15], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 2], [1, 16], [0, 11], [11, 19], [9, 4], [17, 9], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.5000250339508057

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3281407356262207

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [1, 16], [8, 12], [15, 18], [17, 9], [4, 10], [11, 16], [5, 13], [17, 4], [1, 16], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [1, 16], [3, 17], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [4, 11], [17, 9], [4, 10], [19, 2], [18, 5], [2, 16], [11, 19], [0, 1], [9, 7], [8, 0], [11, 10], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [14, 9], [18, 1], [6, 15], [1, 2], [10, 2], [12, 15], [5, 13], [11, 1], [3, 17], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [6, 15], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [11, 19], [9, 4], [17, 9], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.3281407356262207

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [184] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 368

Reduced: 
 - size: 86 (31.85%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936713218688965

[8, 0], [12, 14], [9, 4], [6, 5], [13, 2], [1, 16], [12, 0], [5, 13], [15, 18], [17, 9], [4, 10], [11, 1], [12, 14], [6, 5], [17, 4], [19, 2], [1, 16], [8, 0], [9, 7], [11, 10], [8, 12], [19, 2], [5, 13], [0, 18], [11, 1], [4, 10], [17, 14], [9, 7], [3, 8], [9, 4], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [9, 4], [1, 16], [3, 17], [6, 18], [5, 13], [8, 12], [1, 13], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [6, 18], [1, 16], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [6, 5], [8, 0], [17, 14], [1, 13], [4, 11], [6, 5], [17, 9], [4, 10], [19, 2], [8, 0], [1, 13], [12, 6], [18, 5], [2, 16], [11, 19], [17, 14], [0, 1], [9, 7], [8, 12], [11, 10], [17, 14], [6, 18], [1, 13], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [8, 12], [11, 10], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [11, 10], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [1, 13], [17, 14], [11, 10], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [17, 9], [4, 11], [12, 6], [4, 10], [15, 5], [1, 13], [18, 11], [17, 9], [12, 0], [13, 16], [4, 10], [14, 9], [18, 1], [12, 0], [18, 11], [14, 9], [6, 15], [1, 2], [10, 19], [12, 6], [5, 13], [11, 1], [17, 4], [14, 9], [0, 18], [6, 15], [3, 17], [18, 11], [9, 7], [1, 16], [6, 15], [14, 0], [19, 2], [18, 5], [17, 4], [8, 12], [1, 13], [6, 15], [8, 12], [9, 4], [13, 16], [18, 1], [10, 19], [17, 14], [15, 5], [4, 11], [0, 18], [8, 12], [1, 16], [15, 18], [7, 10], [1, 2], [8, 12], [0, 11], [15, 18], [12, 6], [11, 19], [13, 16], [9, 4], [15, 5], [7, 10], [0, 1], [13, 16], [17, 9], [4, 19], [15, 18], [3, 8], [14, 4], [0, 1], [13, 2], [6, 15], [12, 0], [10, 19], [1, 13], [9, 7], [2, 16], [15, 5], [11, 1], [2, 16], [17, 9], [0, 18], [6, 15], [18, 1], [4, 11], [17, 9], [5, 13], [14, 0], [2, 16], [6, 18], [11, 10], [14, 0], [5, 13], [1, 16], [17, 4], [0, 18], [6, 5], [9, 4], [11, 19], [17, 14], [2, 16], [3, 8], [7, 10], [18, 11], [9, 4], [10, 19], [3, 17], [8, 14], [12, 6], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [8, 14], [12, 6], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [15, 5], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [15, 5], [3, 17], [8, 12], [11, 1], [9, 4], [6, 5], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [6, 5], [11, 19], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[11, 16, 24]
[75, 84, 88]
[76, 83, 89]
[139, 153, 163]
[184, 195, 200]
[191, 197, 202]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 11, 16]
[7, 13, 22]
[67, 73, 79]
[137, 140, 146]
[143, 147, 155]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 12]
[15, 21]
[18, 27]
[29, 36]
[39, 48]
[37, 49]
[49, 56]
[42, 60]
[57, 62]
[58, 66]
[60, 67]
[59, 72]
[72, 77]
[79, 82]
[89, 95]
[95, 111]
[111, 115]
[109, 126]
[121, 128]
[124, 131]
[129, 134]
[127, 135]
[132, 136]
[136, 144]
[146, 151]
[151, 158]
[156, 159]
[159, 168]
[168, 173]
[170, 175]
[165, 180]
[171, 181]
[178, 183]
[175, 186]
[182, 189]
[196, 199]
[200, 205]
[199, 208]
[207, 211]
[206, 212]
[187, 221]
[217, 224]
[227, 235]
[228, 236]
[247, 255]
[260, 268]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  5.187458038330078

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 12] cc => I, Pos: [1, 12] cc => I, Pos: [5, 11, 16] ccc => cc, Pos: [7, 13, 22] ccc => cc, Pos: [11, 16, 24] ccc => cc, Pos: [15, 21] cc => I, Pos: [15, 21] cc => I, Pos: [18, 27] cc => I, Pos: [18, 27] cc => I, Pos: [29, 36] cc => I, Pos: [29, 36] cc => I, Pos: [37, 49] cc => I, Pos: [37, 49] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 60] cc => I, Pos: [42, 60] cc => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [57, 62] cc => I, Pos: [57, 62] cc => I, Pos: [58, 66] cc => I, Pos: [58, 66] cc => I, Pos: [59, 72] cc => I, Pos: [59, 72] cc => I, Pos: [60, 67] cc => I, Pos: [60, 67] cc => I, Pos: [67, 73, 79] ccc => cc, Pos: [72, 77] cc => I, Pos: [72, 77] cc => I, Pos: [75, 84, 88] ccc => cc, Pos: [76, 83, 89] ccc => cc, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [109, 126] cc => I, Pos: [109, 126] cc => I, Pos: [111, 115] cc => I, Pos: [111, 115] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [124, 131] cc => I, Pos: [124, 131] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [129, 134] cc => I, Pos: [129, 134] cc => I, Pos: [132, 136] cc => I, Pos: [132, 136] cc => I, Pos: [136, 144] cc => I, Pos: [136, 144] cc => I, Pos: [137, 140, 146] ccc => cc, Pos: [139, 153, 163] ccc => cc, Pos: [143, 147, 155] ccc => cc, Pos: [146, 151] cc => I, Pos: [146, 151] cc => I, Pos: [151, 158] cc => I, Pos: [151, 158] cc => I, Pos: [156, 159] cc => I, Pos: [156, 159] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [165, 180] cc => I, Pos: [165, 180] cc => I, Pos: [168, 173] cc => I, Pos: [168, 173] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I, Pos: [171, 181] cc => I, Pos: [171, 181] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 183] cc => I, Pos: [178, 183] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [184, 195, 200] ccc => cc, Pos: [187, 221] cc => I, Pos: [187, 221] cc => I, Pos: [191, 197, 202] ccc => cc, Pos: [196, 199] cc => I, Pos: [196, 199] cc => I, Pos: [199, 208] cc => I, Pos: [199, 208] cc => I, Pos: [200, 205] cc => I, Pos: [200, 205] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [217, 224] cc => I, Pos: [217, 224] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [247, 255] cc => I, Pos: [247, 255] cc => I, Pos: [260, 268] cc => I, Pos: [260, 268] cc => I]

Plan: 1
[Pos: [1, 12] cc => I,
 Pos: [5, 11, 16] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [37, 49] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 60] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [59, 72] cc => I,
 Pos: [67, 73, 79] ccc => cc,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [76, 83, 89] ccc => cc,
 Pos: [95, 111] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [137, 140, 146] ccc => cc,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [151, 158] cc => I,
 Pos: [156, 159] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [170, 175] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 195, 200] ccc => cc,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [196, 199] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 44, Saving: 46

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10935449600219727

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 12] cc => I,
 Pos: [5, 11, 16] ccc => cc,
 Pos: [7, 13, 22] ccc => cc,
 Pos: [15, 21] cc => I,
 Pos: [18, 27] cc => I,
 Pos: [29, 36] cc => I,
 Pos: [37, 49] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 60] cc => I,
 Pos: [57, 62] cc => I,
 Pos: [58, 66] cc => I,
 Pos: [59, 72] cc => I,
 Pos: [67, 73, 79] ccc => cc,
 Pos: [75, 84, 88] ccc => cc,
 Pos: [76, 83, 89] ccc => cc,
 Pos: [95, 111] cc => I,
 Pos: [109, 126] cc => I,
 Pos: [121, 128] cc => I,
 Pos: [124, 131] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [129, 134] cc => I,
 Pos: [132, 136] cc => I,
 Pos: [137, 140, 146] ccc => cc,
 Pos: [139, 153, 163] ccc => cc,
 Pos: [143, 147, 155] ccc => cc,
 Pos: [151, 158] cc => I,
 Pos: [156, 159] cc => I,
 Pos: [165, 180] cc => I,
 Pos: [168, 173] cc => I,
 Pos: [170, 175] cc => I,
 Pos: [171, 181] cc => I,
 Pos: [178, 183] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [184, 195, 200] ccc => cc,
 Pos: [187, 221] cc => I,
 Pos: [191, 197, 202] ccc => cc,
 Pos: [196, 199] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [217, 224] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [247, 255] cc => I,
 Pos: [260, 268] cc => I]
Change: 44, Saving: 46

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 12] cc => I
Apply:  Pos: [5, 11, 16] ccc => cc
Apply:  Pos: [7, 13, 22] ccc => cc
Apply:  Pos: [15, 21] cc => I
Apply:  Pos: [18, 27] cc => I
Apply:  Pos: [29, 36] cc => I
Apply:  Pos: [37, 49] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 60] cc => I
Apply:  Pos: [57, 62] cc => I
Apply:  Pos: [58, 66] cc => I
Apply:  Pos: [59, 72] cc => I
Apply:  Pos: [67, 73, 79] ccc => cc
Apply:  Pos: [75, 84, 88] ccc => cc
Apply:  Pos: [76, 83, 89] ccc => cc
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [109, 126] cc => I
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [124, 131] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [129, 134] cc => I
Apply:  Pos: [132, 136] cc => I
Apply:  Pos: [137, 140, 146] ccc => cc
Apply:  Pos: [139, 153, 163] ccc => cc
Apply:  Pos: [143, 147, 155] ccc => cc
Apply:  Pos: [151, 158] cc => I
Apply:  Pos: [156, 159] cc => I
Apply:  Pos: [165, 180] cc => I
Apply:  Pos: [168, 173] cc => I
Apply:  Pos: [170, 175] cc => I
Apply:  Pos: [171, 181] cc => I
Apply:  Pos: [178, 183] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [184, 195, 200] ccc => cc
Apply:  Pos: [187, 221] cc => I
Apply:  Pos: [191, 197, 202] ccc => cc
Apply:  Pos: [196, 199] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [217, 224] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [247, 255] cc => I
Apply:  Pos: [260, 268] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [6, 5], [13, 2], [11, 1], [12, 0], [6, 5], [15, 18], [17, 9], [4, 10], [1, 16], [5, 13], [17, 4], [8, 0], [11, 10], [8, 12], [0, 18], [11, 1], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [5, 13], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [12, 6], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [12, 6], [18, 5], [2, 16], [11, 19], [1, 13], [9, 7], [8, 0], [11, 19], [17, 14], [6, 18], [15, 5], [8, 14], [1, 13], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [12, 6], [15, 5], [13, 16], [18, 1], [12, 6], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  5.296812534332275

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 47]
[50, 54]
[51, 59]
[94, 98]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[4, 10, 17]
[11, 22, 28]
[98, 101, 124]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[5, 13, 15]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 6]
[36, 47]
[50, 54]
[51, 59]
[94, 98]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4531147480010986

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 6] cc => I, Pos: [2, 6] cc => I, Pos: [4, 10, 17] ccc => cc, Pos: [5, 13, 15] ccc => cc, Pos: [11, 22, 28] ccc => cc, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [50, 54] cc => I, Pos: [50, 54] cc => I, Pos: [51, 59] cc => I, Pos: [51, 59] cc => I, Pos: [94, 98] cc => I, Pos: [94, 98] cc => I, Pos: [98, 101, 124] ccc => cc]

Plan: 1
[Pos: [2, 6] cc => I,
 Pos: [4, 10, 17] ccc => cc,
 Pos: [5, 13, 15] ccc => cc,
 Pos: [11, 22, 28] ccc => cc,
 Pos: [36, 47] cc => I,
 Pos: [50, 54] cc => I,
 Pos: [51, 59] cc => I,
 Pos: [94, 98] cc => I]
Change: 8, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.01563715934753418

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 6] cc => I,
 Pos: [4, 10, 17] ccc => cc,
 Pos: [5, 13, 15] ccc => cc,
 Pos: [11, 22, 28] ccc => cc,
 Pos: [36, 47] cc => I,
 Pos: [50, 54] cc => I,
 Pos: [51, 59] cc => I,
 Pos: [94, 98] cc => I]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 6] cc => I
Apply:  Pos: [4, 10, 17] ccc => cc
Apply:  Pos: [5, 13, 15] ccc => cc
Apply:  Pos: [11, 22, 28] ccc => cc
Apply:  Pos: [36, 47] cc => I
Apply:  Pos: [50, 54] cc => I
Apply:  Pos: [51, 59] cc => I
Apply:  Pos: [94, 98] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [1, 16], [5, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [8, 0], [14, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [9, 7], [8, 0], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [18, 1], [10, 2], [1, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 2], [1, 16], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [12, 0], [14, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.468751907348633

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.156297206878662

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[8, 0], [9, 4], [13, 2], [11, 16], [8, 12], [15, 18], [17, 9], [4, 10], [5, 16], [1, 16], [17, 4], [12, 0], [11, 10], [0, 18], [4, 10], [17, 14], [3, 8], [1, 2], [13, 16], [18, 11], [14, 0], [8, 0], [11, 19], [3, 17], [8, 12], [4, 11], [15, 5], [12, 14], [17, 4], [11, 19], [3, 8], [8, 14], [9, 4], [0, 11], [15, 18], [1, 16], [4, 11], [17, 9], [4, 10], [19, 2], [0, 1], [18, 5], [2, 16], [9, 7], [8, 0], [17, 14], [6, 18], [15, 5], [8, 14], [10, 19], [12, 0], [18, 5], [9, 4], [3, 17], [18, 1], [6, 15], [19, 2], [17, 14], [3, 8], [12, 6], [4, 19], [14, 9], [13, 2], [8, 12], [11, 19], [14, 0], [5, 13], [9, 7], [2, 16], [6, 18], [12, 6], [18, 5], [17, 14], [12, 0], [3, 8], [6, 5], [11, 10], [15, 18], [8, 12], [10, 19], [1, 16], [14, 0], [4, 11], [15, 5], [13, 16], [18, 1], [1, 2], [10, 2], [6, 15], [5, 13], [11, 1], [3, 17], [14, 9], [0, 18], [17, 4], [18, 11], [9, 7], [1, 16], [14, 0], [19, 2], [18, 5], [1, 13], [9, 4], [13, 16], [18, 1], [17, 14], [4, 11], [0, 18], [1, 16], [1, 2], [0, 11], [12, 6], [11, 19], [9, 4], [17, 7], [4, 19], [15, 18], [14, 4], [13, 2], [6, 5], [12, 0], [10, 19], [1, 13], [9, 7], [15, 5], [11, 1], [0, 18], [18, 1], [4, 11], [17, 9], [2, 16], [6, 18], [11, 10], [1, 16], [17, 4], [0, 18], [6, 5], [11, 19], [17, 14], [2, 16], [7, 10], [18, 11], [10, 19], [3, 17], [15, 5], [13, 2], [0, 18], [4, 11], [1, 13], [19, 2], [17, 9], [7, 10], [8, 0], [10, 19], [6, 15], [13, 2], [14, 4], [12, 0], [19, 2], [17, 14], [1, 13], [11, 10], [6, 18], [12, 6], [8, 0], [4, 19], [13, 2], [3, 17], [8, 12], [11, 1], [9, 4], [14, 0], [12, 0], [17, 4], [1, 13], [0, 1], [3, 17], [14, 4], [11, 19], ----End Timer [Execute Mapping]:  3.156297206878662

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [179] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 358

Reduced: 
 - size: 91 (33.70%)
 - depth: 6 (13.33%)

