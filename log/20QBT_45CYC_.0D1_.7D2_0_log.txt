----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1562201976776123

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [0, 7], [12, 3], [11, 9], [1, 5], [13, 18], [0, 7], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [11, 9], [2, 16], [13, 11], [7, 19], [5, 6], [3, 16], [18, 14], [13, 11], [18, 4], [2, 16], [1, 10], [0, 19], [9, 14], [5, 6], [13, 6], [12, 3], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [13, 6], [12, 3], [11, 18], [9, 14], [1, 10], [17, 19], [8, 0], [5, 13], [18, 4], [12, 2], [0, 7], [15, 3], [6, 17], [1, 10], [13, 6], [18, 14], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [12, 2], [13, 6], [0, 7], [17, 19], [2, 3], [11, 9], [18, 14], [4, 12], [5, 8], [13, 6], [12, 3], [2, 16], [11, 9], [0, 17], [4, 14], [7, 19], [1, 10], [8, 6], [12, 3], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [6, 4], [1, 5], [5, 8], [19, 2], [12, 3], [0, 17], [13, 11], [6, 4], [5, 6], [4, 12], [0, 17], [7, 19], [9, 14], [8, 13], [18, 15], [2, 3], [6, 12], [2, 16], [11, 9], [18, 15], [0, 17], [8, 13], [4, 14], [6, 12], [11, 9], [8, 0], [2, 3], [10, 13], [7, 19], [18, 4], [12, 2], [10, 11], [18, 14], [0, 7], [5, 8], [6, 17], [6, 12], [5, 8], [10, 11], [7, 17], [2, 3], [12, 2], [11, 9], [18, 4], [3, 16], [7, 19], [13, 6], [1, 5], [4, 12], [0, 7], [14, 15], [8, 13], [19, 2], [1, 5], [6, 17], [4, 12], [13, 18], [0, 7], [14, 15], [19, 2], [1, 5], [3, 16], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [8, 13], [1, 5], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [0, 17], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [0, 17], [5, 6], [3, 16], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [3, 16], [1, 5], [8, 0], [10, 18], [12, 16], [7, 19], [15, 3], [1, 5], [11, 9], [6, 4], [8, 0], [7, 19], [4, 15], [13, 6], [2, 16], [11, 9], [1, 5], [10, 18], [17, 12], [8, 13], [18, 14], [1, 5], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [8, 13], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 3], [13, 11], [4, 12], [5, 8], [0, 17], [1, 10], [18, 14], [7, 19], [3, 16], [10, 13], [15, 3], [0, 17], [7, 19], [12, 16], [6, 4], [18, 14], [5, 8], [11, 9], [10, 18], [5, 6], [9, 14], [12, 3], [19, 2], [13, 11], [10, 18], [5, 13], [14, 15], [12, 16], [19, 2], [7, 17], [8, 0], [10, 11], [5, 13], [3, 16], [4, 12], [8, 0], [7, 17], [18, 15], [13, 11], [1, 10], [6, 4], [17, 12], [14, 15], [8, 0], [5, 13], [8, 6], [17, 12], [18, 15], [7, 19], [2, 3], [10, 11], [4, 14], [13, 6], [7, 17], [0, 19], [4, 12], [18, 15], [2, 3], [8, 13], [0, 17], [6, 12], [1, 10], [4, 14], [18, 15], [11, 9], [5, 8], [3, 16], [6, 17], [9, 14], [13, 18], [7, 19], [4, 15], [5, 8], [13, 6], [15, 3], [17, 12], [7, 19], [9, 14], [10, 11], [8, 13], [6, 4], [7, 17], [11, 9], [3, 16], [10, 18], [12, 2], [10, 13], [6, 4], [17, 12], [18, 14], [5, 8], [15, 3], [7, 19], [10, 18], [4, 12], [17, 19], [11, 9], [3, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[51, 57, 64]
[58, 65, 75]
[139, 144, 155]
[156, 159, 165]
[200, 203, 211]
[217, 225, 227]
[249, 255, 261]
[256, 267, 278]
[291, 300, 308]
[301, 306, 310]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[300, 308, 314]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.218745708465576

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 14] cc => I, Pos: [9, 14] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [16, 30] cc => I, Pos: [16, 30] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 33] cc => I, Pos: [24, 33] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [34, 41] cc => I, Pos: [34, 41] cc => I, Pos: [35, 42] cc => I, Pos: [35, 42] cc => I, Pos: [45, 54] cc => I, Pos: [45, 54] cc => I, Pos: [50, 62] cc => I, Pos: [50, 62] cc => I, Pos: [51, 57, 64] ccc => cc, Pos: [54, 78] cc => I, Pos: [54, 78] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [56, 68] cc => I, Pos: [56, 68] cc => I, Pos: [58, 65, 75] ccc => cc, Pos: [61, 67] cc => I, Pos: [61, 67] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [67, 74] cc => I, Pos: [67, 74] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [75, 87] cc => I, Pos: [75, 87] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [98, 108] cc => I, Pos: [98, 108] cc => I, Pos: [99, 116] cc => I, Pos: [99, 116] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I, Pos: [102, 107] cc => I, Pos: [102, 107] cc => I, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 131] cc => I, Pos: [117, 131] cc => I, Pos: [119, 126] cc => I, Pos: [119, 126] cc => I, Pos: [122, 125] cc => I, Pos: [122, 125] cc => I, Pos: [132, 149] cc => I, Pos: [132, 149] cc => I, Pos: [135, 141] cc => I, Pos: [135, 141] cc => I, Pos: [136, 143] cc => I, Pos: [136, 143] cc => I, Pos: [137, 145] cc => I, Pos: [137, 145] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [139, 144, 155] ccc => cc, Pos: [140, 147] cc => I, Pos: [140, 147] cc => I, Pos: [141, 148] cc => I, Pos: [141, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 156] cc => I, Pos: [148, 156] cc => I, Pos: [155, 174] cc => I, Pos: [155, 174] cc => I, Pos: [156, 159, 165] ccc => cc, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [173, 183] cc => I, Pos: [173, 183] cc => I, Pos: [184, 190] cc => I, Pos: [184, 190] cc => I, Pos: [185, 193] cc => I, Pos: [185, 193] cc => I, Pos: [186, 200] cc => I, Pos: [186, 200] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [190, 199] cc => I, Pos: [190, 199] cc => I, Pos: [191, 198] cc => I, Pos: [191, 198] cc => I, Pos: [194, 224] cc => I, Pos: [194, 224] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [200, 203, 211] ccc => cc, Pos: [202, 210] cc => I, Pos: [202, 210] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [209, 217] cc => I, Pos: [209, 217] cc => I, Pos: [217, 225, 227] ccc => cc, Pos: [220, 233] cc => I, Pos: [220, 233] cc => I, Pos: [221, 228] cc => I, Pos: [221, 228] cc => I, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [230, 244] cc => I, Pos: [230, 244] cc => I, Pos: [235, 241] cc => I, Pos: [235, 241] cc => I, Pos: [239, 245] cc => I, Pos: [239, 245] cc => I, Pos: [242, 249] cc => I, Pos: [242, 249] cc => I, Pos: [246, 253] cc => I, Pos: [246, 253] cc => I, Pos: [247, 252] cc => I, Pos: [247, 252] cc => I, Pos: [249, 255, 261] ccc => cc, Pos: [252, 260] cc => I, Pos: [252, 260] cc => I, Pos: [256, 267, 278] ccc => cc, Pos: [258, 263] cc => I, Pos: [258, 263] cc => I, Pos: [264, 273] cc => I, Pos: [264, 273] cc => I, Pos: [266, 274] cc => I, Pos: [266, 274] cc => I, Pos: [268, 279] cc => I, Pos: [268, 279] cc => I, Pos: [273, 280] cc => I, Pos: [273, 280] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [285, 294] cc => I, Pos: [285, 294] cc => I, Pos: [287, 293] cc => I, Pos: [287, 293] cc => I, Pos: [291, 300, 308] ccc => cc, Pos: [293, 309] cc => I, Pos: [293, 309] cc => I, Pos: [297, 304] cc => I, Pos: [297, 304] cc => I, Pos: [299, 313] cc => I, Pos: [299, 313] cc => I, Pos: [300, 308, 314] ccc => cc, Pos: [301, 306, 310] ccc => cc]

Plan: 1
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [16, 30] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [45, 54] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [55, 63] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [58, 65, 75] ccc => cc,
 Pos: [61, 67] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [98, 108] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [135, 141] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [139, 144, 155] ccc => cc,
 Pos: [140, 147] cc => I,
 Pos: [148, 156] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [184, 190] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [186, 200] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [191, 198] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [209, 217] cc => I,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [242, 249] cc => I,
 Pos: [246, 253] cc => I,
 Pos: [247, 252] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [264, 273] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [287, 293] cc => I,
 Pos: [291, 300, 308] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 68, Saving: 260

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [16, 30] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [45, 54] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [55, 63] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [58, 65, 75] ccc => cc,
 Pos: [61, 67] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [98, 108] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [135, 141] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [139, 144, 155] ccc => cc,
 Pos: [140, 147] cc => I,
 Pos: [148, 156] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [184, 190] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [186, 200] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [191, 198] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [209, 217] cc => I,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [242, 249] cc => I,
 Pos: [246, 253] cc => I,
 Pos: [247, 252] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [264, 273] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [287, 293] cc => I,
 Pos: [291, 300, 308] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 68, Saving: 260

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 14] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [16, 30] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 33] cc => I
Apply:  Pos: [34, 41] cc => I
Apply:  Pos: [35, 42] cc => I
Apply:  Pos: [45, 54] cc => I
Apply:  Pos: [50, 62] cc => I
Apply:  Pos: [51, 57, 64] ccc => cc
Apply:  Pos: [55, 63] cc => I
Apply:  Pos: [56, 68] cc => I
Apply:  Pos: [58, 65, 75] ccc => cc
Apply:  Pos: [61, 67] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [98, 108] cc => I
Apply:  Pos: [99, 116] cc => I
Apply:  Pos: [101, 109] cc => I
Apply:  Pos: [102, 107] cc => I
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [104, 111] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 131] cc => I
Apply:  Pos: [119, 126] cc => I
Apply:  Pos: [122, 125] cc => I
Apply:  Pos: [132, 149] cc => I
Apply:  Pos: [135, 141] cc => I
Apply:  Pos: [136, 143] cc => I
Apply:  Pos: [137, 145] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [139, 144, 155] ccc => cc
Apply:  Pos: [140, 147] cc => I
Apply:  Pos: [148, 156] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [173, 183] cc => I
Apply:  Pos: [184, 190] cc => I
Apply:  Pos: [185, 193] cc => I
Apply:  Pos: [186, 200] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [191, 198] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 210] cc => I
Apply:  Pos: [209, 217] cc => I
Apply:  Pos: [220, 233] cc => I
Apply:  Pos: [221, 228] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [224, 229] cc => I
Apply:  Pos: [230, 244] cc => I
Apply:  Pos: [235, 241] cc => I
Apply:  Pos: [239, 245] cc => I
Apply:  Pos: [242, 249] cc => I
Apply:  Pos: [246, 253] cc => I
Apply:  Pos: [247, 252] cc => I
Apply:  Pos: [256, 267, 278] ccc => cc
Apply:  Pos: [258, 263] cc => I
Apply:  Pos: [264, 273] cc => I
Apply:  Pos: [266, 274] cc => I
Apply:  Pos: [268, 279] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [285, 294] cc => I
Apply:  Pos: [287, 293] cc => I
Apply:  Pos: [291, 300, 308] ccc => cc
Apply:  Pos: [297, 304] cc => I
Apply:  Pos: [299, 313] cc => I
Apply:  Pos: [301, 306, 310] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [7, 19], [0, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 9], [7, 19], [13, 6], [8, 18], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [3, 16], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 11], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [3, 16], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [10, 11], [8, 13], [7, 17], [3, 16], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], [3, 16], ----End Timer [Execute Mapping]:  6.218745708465576

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 24]
[35, 38]
[107, 118]
[143, 164]
[174, 184]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 33, 41]
[77, 84, 93]
[154, 163, 171]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[74, 79, 81]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 24]
[35, 38]
[107, 118]
[143, 164]
[174, 184]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3276915550231934

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 24] cc => I, Pos: [10, 24] cc => I, Pos: [24, 33, 41] ccc => cc, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [74, 79, 81] ccc => cc, Pos: [77, 84, 93] ccc => cc, Pos: [107, 118] cc => I, Pos: [107, 118] cc => I, Pos: [143, 164] cc => I, Pos: [143, 164] cc => I, Pos: [154, 163, 171] ccc => cc, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I]

Plan: 1
[Pos: [10, 24] cc => I,
 Pos: [35, 38] cc => I,
 Pos: [74, 79, 81] ccc => cc,
 Pos: [77, 84, 93] ccc => cc,
 Pos: [107, 118] cc => I,
 Pos: [143, 164] cc => I,
 Pos: [154, 163, 171] ccc => cc,
 Pos: [174, 184] cc => I]
Change: 8, Saving: 26

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 24] cc => I,
 Pos: [35, 38] cc => I,
 Pos: [74, 79, 81] ccc => cc,
 Pos: [77, 84, 93] ccc => cc,
 Pos: [107, 118] cc => I,
 Pos: [143, 164] cc => I,
 Pos: [154, 163, 171] ccc => cc,
 Pos: [174, 184] cc => I]
Change: 8, Saving: 26

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 24] cc => I
Apply:  Pos: [35, 38] cc => I
Apply:  Pos: [74, 79, 81] ccc => cc
Apply:  Pos: [77, 84, 93] ccc => cc
Apply:  Pos: [107, 118] cc => I
Apply:  Pos: [143, 164] cc => I
Apply:  Pos: [154, 163, 171] ccc => cc
Apply:  Pos: [174, 184] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [8, 18], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [11, 9], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.3276915550231934

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[99, 112, 119]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.046440839767456

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [99, 112, 119] ccc => cc]

Plan: 1
[Pos: [99, 112, 119] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [99, 112, 119] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [99, 112, 119] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [13, 18], [8, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [11, 9], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [9, 14], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [1, 5], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.046440839767456

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.0141537189483643

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [8, 18], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 9], [11, 18], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [9, 14], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [1, 5], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.0141537189483643

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [171] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 342

Reduced: 
 - size: 144 (45.71%)
 - cycle: 288 (45.71%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12411308288574219

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [0, 7], [12, 3], [11, 9], [1, 5], [13, 18], [0, 7], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [11, 9], [2, 16], [13, 11], [7, 19], [5, 6], [3, 16], [18, 14], [13, 11], [18, 4], [2, 16], [1, 10], [0, 19], [9, 14], [5, 6], [13, 6], [12, 3], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [13, 6], [12, 3], [11, 18], [9, 14], [1, 10], [17, 19], [8, 0], [5, 13], [18, 4], [12, 2], [0, 7], [15, 3], [6, 17], [1, 10], [13, 6], [18, 14], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [12, 2], [13, 6], [0, 7], [17, 19], [2, 3], [11, 9], [18, 14], [4, 12], [5, 8], [13, 6], [12, 3], [2, 16], [11, 9], [0, 17], [4, 14], [7, 19], [1, 10], [8, 6], [12, 3], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [6, 4], [1, 5], [5, 8], [19, 2], [12, 3], [0, 17], [13, 11], [6, 4], [5, 6], [4, 12], [0, 17], [7, 19], [9, 14], [8, 13], [18, 15], [2, 3], [6, 12], [2, 16], [11, 9], [18, 15], [0, 17], [8, 13], [4, 14], [6, 12], [11, 9], [8, 0], [2, 3], [10, 13], [7, 19], [18, 4], [12, 2], [10, 11], [18, 14], [0, 7], [5, 8], [6, 17], [6, 12], [5, 8], [10, 11], [7, 17], [2, 3], [12, 2], [11, 9], [18, 4], [3, 16], [7, 19], [13, 6], [1, 5], [4, 12], [0, 7], [14, 15], [8, 13], [19, 2], [1, 5], [6, 17], [4, 12], [13, 18], [0, 7], [14, 15], [19, 2], [1, 5], [3, 16], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [8, 13], [1, 5], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [0, 17], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [0, 17], [5, 6], [3, 16], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [3, 16], [1, 5], [8, 0], [10, 18], [12, 16], [7, 19], [15, 3], [1, 5], [11, 9], [6, 4], [8, 0], [7, 19], [4, 15], [13, 6], [2, 16], [11, 9], [1, 5], [10, 18], [17, 12], [8, 13], [18, 14], [1, 5], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [8, 13], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 3], [13, 11], [4, 12], [5, 8], [0, 17], [1, 10], [18, 14], [7, 19], [3, 16], [10, 13], [15, 3], [0, 17], [7, 19], [12, 16], [6, 4], [18, 14], [5, 8], [11, 9], [10, 18], [5, 6], [9, 14], [12, 3], [19, 2], [13, 11], [10, 18], [5, 13], [14, 15], [12, 16], [19, 2], [7, 17], [8, 0], [10, 11], [5, 13], [3, 16], [4, 12], [8, 0], [7, 17], [18, 15], [13, 11], [1, 10], [6, 4], [17, 12], [14, 15], [8, 0], [5, 13], [8, 6], [17, 12], [18, 15], [7, 19], [2, 3], [10, 11], [4, 14], [13, 6], [7, 17], [0, 19], [4, 12], [18, 15], [2, 3], [8, 13], [0, 17], [6, 12], [1, 10], [4, 14], [18, 15], [11, 9], [5, 8], [3, 16], [6, 17], [9, 14], [13, 18], [7, 19], [4, 15], [5, 8], [13, 6], [15, 3], [17, 12], [7, 19], [9, 14], [10, 11], [8, 13], [6, 4], [7, 17], [11, 9], [3, 16], [10, 18], [12, 2], [10, 13], [6, 4], [17, 12], [18, 14], [5, 8], [15, 3], [7, 19], [10, 18], [4, 12], [17, 19], [11, 9], [3, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[51, 57, 64]
[58, 65, 75]
[139, 144, 155]
[156, 159, 165]
[200, 203, 211]
[217, 225, 227]
[249, 255, 261]
[256, 267, 278]
[291, 300, 308]
[301, 306, 310]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[300, 308, 314]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.140733957290649

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 14] cc => I, Pos: [9, 14] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [16, 30] cc => I, Pos: [16, 30] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 33] cc => I, Pos: [24, 33] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [34, 41] cc => I, Pos: [34, 41] cc => I, Pos: [35, 42] cc => I, Pos: [35, 42] cc => I, Pos: [45, 54] cc => I, Pos: [45, 54] cc => I, Pos: [50, 62] cc => I, Pos: [50, 62] cc => I, Pos: [51, 57, 64] ccc => cc, Pos: [54, 78] cc => I, Pos: [54, 78] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [56, 68] cc => I, Pos: [56, 68] cc => I, Pos: [58, 65, 75] ccc => cc, Pos: [61, 67] cc => I, Pos: [61, 67] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [67, 74] cc => I, Pos: [67, 74] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [75, 87] cc => I, Pos: [75, 87] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [98, 108] cc => I, Pos: [98, 108] cc => I, Pos: [99, 116] cc => I, Pos: [99, 116] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I, Pos: [102, 107] cc => I, Pos: [102, 107] cc => I, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 131] cc => I, Pos: [117, 131] cc => I, Pos: [119, 126] cc => I, Pos: [119, 126] cc => I, Pos: [122, 125] cc => I, Pos: [122, 125] cc => I, Pos: [132, 149] cc => I, Pos: [132, 149] cc => I, Pos: [135, 141] cc => I, Pos: [135, 141] cc => I, Pos: [136, 143] cc => I, Pos: [136, 143] cc => I, Pos: [137, 145] cc => I, Pos: [137, 145] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [139, 144, 155] ccc => cc, Pos: [140, 147] cc => I, Pos: [140, 147] cc => I, Pos: [141, 148] cc => I, Pos: [141, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 156] cc => I, Pos: [148, 156] cc => I, Pos: [155, 174] cc => I, Pos: [155, 174] cc => I, Pos: [156, 159, 165] ccc => cc, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [173, 183] cc => I, Pos: [173, 183] cc => I, Pos: [184, 190] cc => I, Pos: [184, 190] cc => I, Pos: [185, 193] cc => I, Pos: [185, 193] cc => I, Pos: [186, 200] cc => I, Pos: [186, 200] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [190, 199] cc => I, Pos: [190, 199] cc => I, Pos: [191, 198] cc => I, Pos: [191, 198] cc => I, Pos: [194, 224] cc => I, Pos: [194, 224] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [200, 203, 211] ccc => cc, Pos: [202, 210] cc => I, Pos: [202, 210] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [209, 217] cc => I, Pos: [209, 217] cc => I, Pos: [217, 225, 227] ccc => cc, Pos: [220, 233] cc => I, Pos: [220, 233] cc => I, Pos: [221, 228] cc => I, Pos: [221, 228] cc => I, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [230, 244] cc => I, Pos: [230, 244] cc => I, Pos: [235, 241] cc => I, Pos: [235, 241] cc => I, Pos: [239, 245] cc => I, Pos: [239, 245] cc => I, Pos: [242, 249] cc => I, Pos: [242, 249] cc => I, Pos: [246, 253] cc => I, Pos: [246, 253] cc => I, Pos: [247, 252] cc => I, Pos: [247, 252] cc => I, Pos: [249, 255, 261] ccc => cc, Pos: [252, 260] cc => I, Pos: [252, 260] cc => I, Pos: [256, 267, 278] ccc => cc, Pos: [258, 263] cc => I, Pos: [258, 263] cc => I, Pos: [264, 273] cc => I, Pos: [264, 273] cc => I, Pos: [266, 274] cc => I, Pos: [266, 274] cc => I, Pos: [268, 279] cc => I, Pos: [268, 279] cc => I, Pos: [273, 280] cc => I, Pos: [273, 280] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [285, 294] cc => I, Pos: [285, 294] cc => I, Pos: [287, 293] cc => I, Pos: [287, 293] cc => I, Pos: [291, 300, 308] ccc => cc, Pos: [293, 309] cc => I, Pos: [293, 309] cc => I, Pos: [297, 304] cc => I, Pos: [297, 304] cc => I, Pos: [299, 313] cc => I, Pos: [299, 313] cc => I, Pos: [300, 308, 314] ccc => cc, Pos: [301, 306, 310] ccc => cc]

Plan: 1
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [16, 30] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [45, 54] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [55, 63] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [58, 65, 75] ccc => cc,
 Pos: [61, 67] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [98, 108] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [135, 141] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [139, 144, 155] ccc => cc,
 Pos: [140, 147] cc => I,
 Pos: [148, 156] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [184, 190] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [186, 200] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [191, 198] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [209, 217] cc => I,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [242, 249] cc => I,
 Pos: [246, 253] cc => I,
 Pos: [247, 252] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [264, 273] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [287, 293] cc => I,
 Pos: [291, 300, 308] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 68, Saving: 69

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.1717817783355713

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [16, 30] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [45, 54] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [55, 63] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [58, 65, 75] ccc => cc,
 Pos: [61, 67] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [98, 108] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [135, 141] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [139, 144, 155] ccc => cc,
 Pos: [140, 147] cc => I,
 Pos: [148, 156] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [184, 190] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [186, 200] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [191, 198] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [209, 217] cc => I,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [242, 249] cc => I,
 Pos: [246, 253] cc => I,
 Pos: [247, 252] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [264, 273] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [287, 293] cc => I,
 Pos: [291, 300, 308] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 68, Saving: 69

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 14] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [16, 30] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 33] cc => I
Apply:  Pos: [34, 41] cc => I
Apply:  Pos: [35, 42] cc => I
Apply:  Pos: [45, 54] cc => I
Apply:  Pos: [50, 62] cc => I
Apply:  Pos: [51, 57, 64] ccc => cc
Apply:  Pos: [55, 63] cc => I
Apply:  Pos: [56, 68] cc => I
Apply:  Pos: [58, 65, 75] ccc => cc
Apply:  Pos: [61, 67] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [98, 108] cc => I
Apply:  Pos: [99, 116] cc => I
Apply:  Pos: [101, 109] cc => I
Apply:  Pos: [102, 107] cc => I
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [104, 111] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 131] cc => I
Apply:  Pos: [119, 126] cc => I
Apply:  Pos: [122, 125] cc => I
Apply:  Pos: [132, 149] cc => I
Apply:  Pos: [135, 141] cc => I
Apply:  Pos: [136, 143] cc => I
Apply:  Pos: [137, 145] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [139, 144, 155] ccc => cc
Apply:  Pos: [140, 147] cc => I
Apply:  Pos: [148, 156] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [173, 183] cc => I
Apply:  Pos: [184, 190] cc => I
Apply:  Pos: [185, 193] cc => I
Apply:  Pos: [186, 200] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [191, 198] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 210] cc => I
Apply:  Pos: [209, 217] cc => I
Apply:  Pos: [220, 233] cc => I
Apply:  Pos: [221, 228] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [224, 229] cc => I
Apply:  Pos: [230, 244] cc => I
Apply:  Pos: [235, 241] cc => I
Apply:  Pos: [239, 245] cc => I
Apply:  Pos: [242, 249] cc => I
Apply:  Pos: [246, 253] cc => I
Apply:  Pos: [247, 252] cc => I
Apply:  Pos: [256, 267, 278] ccc => cc
Apply:  Pos: [258, 263] cc => I
Apply:  Pos: [264, 273] cc => I
Apply:  Pos: [266, 274] cc => I
Apply:  Pos: [268, 279] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [285, 294] cc => I
Apply:  Pos: [287, 293] cc => I
Apply:  Pos: [291, 300, 308] ccc => cc
Apply:  Pos: [297, 304] cc => I
Apply:  Pos: [299, 313] cc => I
Apply:  Pos: [301, 306, 310] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [7, 19], [0, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 9], [7, 19], [13, 6], [8, 18], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [3, 16], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 11], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [3, 16], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [10, 11], [8, 13], [7, 17], [3, 16], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], [3, 16], ----End Timer [Execute Mapping]:  6.312515735626221

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 24]
[35, 38]
[107, 118]
[143, 164]
[174, 184]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 33, 41]
[77, 84, 93]
[154, 163, 171]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[74, 79, 81]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 24]
[35, 38]
[107, 118]
[143, 164]
[174, 184]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2977957725524902

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 24] cc => I, Pos: [10, 24] cc => I, Pos: [24, 33, 41] ccc => cc, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [74, 79, 81] ccc => cc, Pos: [77, 84, 93] ccc => cc, Pos: [107, 118] cc => I, Pos: [107, 118] cc => I, Pos: [143, 164] cc => I, Pos: [143, 164] cc => I, Pos: [154, 163, 171] ccc => cc, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I]

Plan: 1
[Pos: [10, 24] cc => I,
 Pos: [35, 38] cc => I,
 Pos: [74, 79, 81] ccc => cc,
 Pos: [77, 84, 93] ccc => cc,
 Pos: [107, 118] cc => I,
 Pos: [143, 164] cc => I,
 Pos: [154, 163, 171] ccc => cc,
 Pos: [174, 184] cc => I]
Change: 8, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015017986297607422

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 24] cc => I,
 Pos: [35, 38] cc => I,
 Pos: [74, 79, 81] ccc => cc,
 Pos: [77, 84, 93] ccc => cc,
 Pos: [107, 118] cc => I,
 Pos: [143, 164] cc => I,
 Pos: [154, 163, 171] ccc => cc,
 Pos: [174, 184] cc => I]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 24] cc => I
Apply:  Pos: [35, 38] cc => I
Apply:  Pos: [74, 79, 81] ccc => cc
Apply:  Pos: [77, 84, 93] ccc => cc
Apply:  Pos: [107, 118] cc => I
Apply:  Pos: [143, 164] cc => I
Apply:  Pos: [154, 163, 171] ccc => cc
Apply:  Pos: [174, 184] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [8, 18], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [11, 9], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.3128137588500977

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[99, 112, 119]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.015359401702881

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [99, 112, 119] ccc => cc]

Plan: 1
[Pos: [99, 112, 119] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [99, 112, 119] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [99, 112, 119] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [13, 18], [8, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [11, 9], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [9, 14], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [1, 5], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.015359401702881

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9999897480010986

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [8, 18], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 9], [11, 18], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [9, 14], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [1, 5], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  2.9999897480010986

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [171] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 342

Reduced: 
 - size: 144 (45.71%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500524520874023

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [0, 7], [12, 3], [11, 9], [1, 5], [13, 18], [0, 7], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [11, 9], [2, 16], [13, 11], [7, 19], [5, 6], [3, 16], [18, 14], [13, 11], [18, 4], [2, 16], [1, 10], [0, 19], [9, 14], [5, 6], [13, 6], [12, 3], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [13, 6], [12, 3], [11, 18], [9, 14], [1, 10], [17, 19], [8, 0], [5, 13], [18, 4], [12, 2], [0, 7], [15, 3], [6, 17], [1, 10], [13, 6], [18, 14], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [12, 2], [13, 6], [0, 7], [17, 19], [2, 3], [11, 9], [18, 14], [4, 12], [5, 8], [13, 6], [12, 3], [2, 16], [11, 9], [0, 17], [4, 14], [7, 19], [1, 10], [8, 6], [12, 3], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [6, 4], [1, 5], [5, 8], [19, 2], [12, 3], [0, 17], [13, 11], [6, 4], [5, 6], [4, 12], [0, 17], [7, 19], [9, 14], [8, 13], [18, 15], [2, 3], [6, 12], [2, 16], [11, 9], [18, 15], [0, 17], [8, 13], [4, 14], [6, 12], [11, 9], [8, 0], [2, 3], [10, 13], [7, 19], [18, 4], [12, 2], [10, 11], [18, 14], [0, 7], [5, 8], [6, 17], [6, 12], [5, 8], [10, 11], [7, 17], [2, 3], [12, 2], [11, 9], [18, 4], [3, 16], [7, 19], [13, 6], [1, 5], [4, 12], [0, 7], [14, 15], [8, 13], [19, 2], [1, 5], [6, 17], [4, 12], [13, 18], [0, 7], [14, 15], [19, 2], [1, 5], [3, 16], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [8, 13], [1, 5], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [0, 17], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [0, 17], [5, 6], [3, 16], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [3, 16], [1, 5], [8, 0], [10, 18], [12, 16], [7, 19], [15, 3], [1, 5], [11, 9], [6, 4], [8, 0], [7, 19], [4, 15], [13, 6], [2, 16], [11, 9], [1, 5], [10, 18], [17, 12], [8, 13], [18, 14], [1, 5], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [8, 13], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 3], [13, 11], [4, 12], [5, 8], [0, 17], [1, 10], [18, 14], [7, 19], [3, 16], [10, 13], [15, 3], [0, 17], [7, 19], [12, 16], [6, 4], [18, 14], [5, 8], [11, 9], [10, 18], [5, 6], [9, 14], [12, 3], [19, 2], [13, 11], [10, 18], [5, 13], [14, 15], [12, 16], [19, 2], [7, 17], [8, 0], [10, 11], [5, 13], [3, 16], [4, 12], [8, 0], [7, 17], [18, 15], [13, 11], [1, 10], [6, 4], [17, 12], [14, 15], [8, 0], [5, 13], [8, 6], [17, 12], [18, 15], [7, 19], [2, 3], [10, 11], [4, 14], [13, 6], [7, 17], [0, 19], [4, 12], [18, 15], [2, 3], [8, 13], [0, 17], [6, 12], [1, 10], [4, 14], [18, 15], [11, 9], [5, 8], [3, 16], [6, 17], [9, 14], [13, 18], [7, 19], [4, 15], [5, 8], [13, 6], [15, 3], [17, 12], [7, 19], [9, 14], [10, 11], [8, 13], [6, 4], [7, 17], [11, 9], [3, 16], [10, 18], [12, 2], [10, 13], [6, 4], [17, 12], [18, 14], [5, 8], [15, 3], [7, 19], [10, 18], [4, 12], [17, 19], [11, 9], [3, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[51, 57, 64]
[58, 65, 75]
[139, 144, 155]
[156, 159, 165]
[200, 203, 211]
[217, 225, 227]
[249, 255, 261]
[256, 267, 278]
[291, 300, 308]
[301, 306, 310]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[300, 308, 314]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.181229591369629

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 14] cc => I, Pos: [9, 14] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [16, 30] cc => I, Pos: [16, 30] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 33] cc => I, Pos: [24, 33] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [34, 41] cc => I, Pos: [34, 41] cc => I, Pos: [35, 42] cc => I, Pos: [35, 42] cc => I, Pos: [45, 54] cc => I, Pos: [45, 54] cc => I, Pos: [50, 62] cc => I, Pos: [50, 62] cc => I, Pos: [51, 57, 64] ccc => cc, Pos: [54, 78] cc => I, Pos: [54, 78] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [56, 68] cc => I, Pos: [56, 68] cc => I, Pos: [58, 65, 75] ccc => cc, Pos: [61, 67] cc => I, Pos: [61, 67] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [67, 74] cc => I, Pos: [67, 74] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [75, 87] cc => I, Pos: [75, 87] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [98, 108] cc => I, Pos: [98, 108] cc => I, Pos: [99, 116] cc => I, Pos: [99, 116] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I, Pos: [102, 107] cc => I, Pos: [102, 107] cc => I, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 131] cc => I, Pos: [117, 131] cc => I, Pos: [119, 126] cc => I, Pos: [119, 126] cc => I, Pos: [122, 125] cc => I, Pos: [122, 125] cc => I, Pos: [132, 149] cc => I, Pos: [132, 149] cc => I, Pos: [135, 141] cc => I, Pos: [135, 141] cc => I, Pos: [136, 143] cc => I, Pos: [136, 143] cc => I, Pos: [137, 145] cc => I, Pos: [137, 145] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [139, 144, 155] ccc => cc, Pos: [140, 147] cc => I, Pos: [140, 147] cc => I, Pos: [141, 148] cc => I, Pos: [141, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 156] cc => I, Pos: [148, 156] cc => I, Pos: [155, 174] cc => I, Pos: [155, 174] cc => I, Pos: [156, 159, 165] ccc => cc, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [173, 183] cc => I, Pos: [173, 183] cc => I, Pos: [184, 190] cc => I, Pos: [184, 190] cc => I, Pos: [185, 193] cc => I, Pos: [185, 193] cc => I, Pos: [186, 200] cc => I, Pos: [186, 200] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [190, 199] cc => I, Pos: [190, 199] cc => I, Pos: [191, 198] cc => I, Pos: [191, 198] cc => I, Pos: [194, 224] cc => I, Pos: [194, 224] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [200, 203, 211] ccc => cc, Pos: [202, 210] cc => I, Pos: [202, 210] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [209, 217] cc => I, Pos: [209, 217] cc => I, Pos: [217, 225, 227] ccc => cc, Pos: [220, 233] cc => I, Pos: [220, 233] cc => I, Pos: [221, 228] cc => I, Pos: [221, 228] cc => I, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [230, 244] cc => I, Pos: [230, 244] cc => I, Pos: [235, 241] cc => I, Pos: [235, 241] cc => I, Pos: [239, 245] cc => I, Pos: [239, 245] cc => I, Pos: [242, 249] cc => I, Pos: [242, 249] cc => I, Pos: [246, 253] cc => I, Pos: [246, 253] cc => I, Pos: [247, 252] cc => I, Pos: [247, 252] cc => I, Pos: [249, 255, 261] ccc => cc, Pos: [252, 260] cc => I, Pos: [252, 260] cc => I, Pos: [256, 267, 278] ccc => cc, Pos: [258, 263] cc => I, Pos: [258, 263] cc => I, Pos: [264, 273] cc => I, Pos: [264, 273] cc => I, Pos: [266, 274] cc => I, Pos: [266, 274] cc => I, Pos: [268, 279] cc => I, Pos: [268, 279] cc => I, Pos: [273, 280] cc => I, Pos: [273, 280] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [285, 294] cc => I, Pos: [285, 294] cc => I, Pos: [287, 293] cc => I, Pos: [287, 293] cc => I, Pos: [291, 300, 308] ccc => cc, Pos: [293, 309] cc => I, Pos: [293, 309] cc => I, Pos: [297, 304] cc => I, Pos: [297, 304] cc => I, Pos: [299, 313] cc => I, Pos: [299, 313] cc => I, Pos: [300, 308, 314] ccc => cc, Pos: [301, 306, 310] ccc => cc]

--------End Timer [Generate Plans]:  0.015636444091796875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [78, 84] cc => I,
 Pos: [55, 63] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [75, 87] cc => I,
 Pos: [61, 67] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [93, 98] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [141, 148] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [139, 144, 155] ccc => cc,
 Pos: [147, 153] cc => I,
 Pos: [156, 159, 165] ccc => cc,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [184, 190] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [200, 203, 211] ccc => cc,
 Pos: [194, 224] cc => I,
 Pos: [191, 198] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [217, 225, 227] ccc => cc,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [249, 255, 261] ccc => cc,
 Pos: [246, 253] cc => I,
 Pos: [252, 260] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [273, 280] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [287, 293] cc => I,
 Pos: [291, 300, 308] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 65, Saving: 242

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 14] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 33] cc => I
Apply:  Pos: [34, 41] cc => I
Apply:  Pos: [35, 42] cc => I
Apply:  Pos: [50, 62] cc => I
Apply:  Pos: [51, 57, 64] ccc => cc
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [55, 63] cc => I
Apply:  Pos: [56, 68] cc => I
Apply:  Pos: [75, 87] cc => I
Apply:  Pos: [61, 67] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [93, 98] cc => I
Apply:  Pos: [99, 116] cc => I
Apply:  Pos: [101, 109] cc => I
Apply:  Pos: [102, 107] cc => I
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [104, 111] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 131] cc => I
Apply:  Pos: [119, 126] cc => I
Apply:  Pos: [122, 125] cc => I
Apply:  Pos: [132, 149] cc => I
Apply:  Pos: [141, 148] cc => I
Apply:  Pos: [136, 143] cc => I
Apply:  Pos: [137, 145] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [139, 144, 155] ccc => cc
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [156, 159, 165] ccc => cc
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [173, 183] cc => I
Apply:  Pos: [184, 190] cc => I
Apply:  Pos: [185, 193] cc => I
Apply:  Pos: [200, 203, 211] ccc => cc
Apply:  Pos: [194, 224] cc => I
Apply:  Pos: [191, 198] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 210] cc => I
Apply:  Pos: [217, 225, 227] ccc => cc
Apply:  Pos: [220, 233] cc => I
Apply:  Pos: [221, 228] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [230, 244] cc => I
Apply:  Pos: [235, 241] cc => I
Apply:  Pos: [239, 245] cc => I
Apply:  Pos: [249, 255, 261] ccc => cc
Apply:  Pos: [246, 253] cc => I
Apply:  Pos: [252, 260] cc => I
Apply:  Pos: [256, 267, 278] ccc => cc
Apply:  Pos: [258, 263] cc => I
Apply:  Pos: [273, 280] cc => I
Apply:  Pos: [266, 274] cc => I
Apply:  Pos: [268, 279] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [285, 294] cc => I
Apply:  Pos: [287, 293] cc => I
Apply:  Pos: [291, 300, 308] ccc => cc
Apply:  Pos: [297, 304] cc => I
Apply:  Pos: [299, 313] cc => I
Apply:  Pos: [301, 306, 310] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [1, 10], [7, 19], [0, 17], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 9], [7, 19], [13, 6], [1, 5], [8, 18], [19, 2], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [7, 19], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [10, 14], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [7, 19], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [5, 13], [14, 15], [8, 0], [10, 11], [5, 11], [3, 16], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 6], [18, 15], [7, 19], [10, 11], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [3, 16], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [10, 11], [8, 13], [7, 17], [3, 16], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], [3, 16], ----End Timer [Execute Mapping]:  6.196866035461426

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[13, 39]
[117, 142]
[142, 163]
[154, 173]
[183, 193]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[25, 34, 43]
[80, 89, 98]
[164, 172, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 82, 86]
[140, 147, 154]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[13, 39]
[117, 142]
[142, 163]
[154, 173]
[183, 193]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4848098754882812

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 25] cc => I, Pos: [10, 25] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [25, 34, 43] ccc => cc, Pos: [77, 82, 86] ccc => cc, Pos: [80, 89, 98] ccc => cc, Pos: [117, 142] cc => I, Pos: [117, 142] cc => I, Pos: [140, 147, 154] ccc => cc, Pos: [142, 163] cc => I, Pos: [142, 163] cc => I, Pos: [154, 173] cc => I, Pos: [154, 173] cc => I, Pos: [164, 172, 180] ccc => cc, Pos: [183, 193] cc => I, Pos: [183, 193] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 25] cc => I,
 Pos: [13, 39] cc => I,
 Pos: [77, 82, 86] ccc => cc,
 Pos: [80, 89, 98] ccc => cc,
 Pos: [142, 163] cc => I,
 Pos: [140, 147, 154] ccc => cc,
 Pos: [164, 172, 180] ccc => cc,
 Pos: [183, 193] cc => I]
Change: 8, Saving: 24

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 25] cc => I
Apply:  Pos: [13, 39] cc => I
Apply:  Pos: [77, 82, 86] ccc => cc
Apply:  Pos: [80, 89, 98] ccc => cc
Apply:  Pos: [142, 163] cc => I
Apply:  Pos: [140, 147, 154] ccc => cc
Apply:  Pos: [164, 172, 180] ccc => cc
Apply:  Pos: [183, 193] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [7, 19], [0, 17], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [1, 5], [8, 18], [19, 2], [13, 18], [17, 4], [9, 14], [15, 3], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [7, 19], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [10, 14], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [17, 4], [6, 12], [1, 5], [9, 14], [15, 16], [2, 16], [13, 11], [4, 12], [1, 10], [12, 3], [10, 13], [6, 4], [11, 9], [5, 6], [9, 14], [3, 16], [13, 11], [5, 13], [14, 15], [8, 0], [5, 11], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 6], [18, 15], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [3, 16], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.4848098754882812

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[140, 164]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[140, 164]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.234443187713623

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [140, 164] cc => I, Pos: [140, 164] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [140, 164] cc => I]
Change: 1, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [140, 164] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [7, 19], [0, 17], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [1, 5], [8, 18], [19, 2], [13, 18], [17, 4], [9, 14], [15, 3], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [7, 19], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [10, 14], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 16], [13, 11], [4, 12], [1, 10], [12, 3], [10, 13], [6, 4], [11, 9], [5, 6], [9, 14], [13, 11], [5, 13], [14, 15], [8, 0], [10, 11], [5, 11], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 6], [18, 15], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.234443187713623

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1726763248443604

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [7, 19], [0, 17], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [1, 5], [8, 18], [19, 2], [13, 18], [17, 4], [9, 14], [15, 3], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [7, 19], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [10, 14], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [17, 4], [6, 12], [1, 5], [9, 14], [15, 16], [2, 16], [13, 11], [4, 12], [1, 10], [12, 3], [10, 13], [6, 4], [11, 9], [5, 6], [9, 14], [13, 11], [5, 13], [14, 15], [8, 0], [5, 11], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 6], [18, 15], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.1726763248443604

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 360

Reduced: 
 - size: 135 (42.86%)
 - cycle: 270 (42.86%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499070167541504

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [0, 7], [12, 3], [11, 9], [1, 5], [13, 18], [0, 7], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [11, 9], [2, 16], [13, 11], [7, 19], [5, 6], [3, 16], [18, 14], [13, 11], [18, 4], [2, 16], [1, 10], [0, 19], [9, 14], [5, 6], [13, 6], [12, 3], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [13, 6], [12, 3], [11, 18], [9, 14], [1, 10], [17, 19], [8, 0], [5, 13], [18, 4], [12, 2], [0, 7], [15, 3], [6, 17], [1, 10], [13, 6], [18, 14], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [12, 2], [13, 6], [0, 7], [17, 19], [2, 3], [11, 9], [18, 14], [4, 12], [5, 8], [13, 6], [12, 3], [2, 16], [11, 9], [0, 17], [4, 14], [7, 19], [1, 10], [8, 6], [12, 3], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [6, 4], [1, 5], [5, 8], [19, 2], [12, 3], [0, 17], [13, 11], [6, 4], [5, 6], [4, 12], [0, 17], [7, 19], [9, 14], [8, 13], [18, 15], [2, 3], [6, 12], [2, 16], [11, 9], [18, 15], [0, 17], [8, 13], [4, 14], [6, 12], [11, 9], [8, 0], [2, 3], [10, 13], [7, 19], [18, 4], [12, 2], [10, 11], [18, 14], [0, 7], [5, 8], [6, 17], [6, 12], [5, 8], [10, 11], [7, 17], [2, 3], [12, 2], [11, 9], [18, 4], [3, 16], [7, 19], [13, 6], [1, 5], [4, 12], [0, 7], [14, 15], [8, 13], [19, 2], [1, 5], [6, 17], [4, 12], [13, 18], [0, 7], [14, 15], [19, 2], [1, 5], [3, 16], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [8, 13], [1, 5], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [0, 17], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [0, 17], [5, 6], [3, 16], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [3, 16], [1, 5], [8, 0], [10, 18], [12, 16], [7, 19], [15, 3], [1, 5], [11, 9], [6, 4], [8, 0], [7, 19], [4, 15], [13, 6], [2, 16], [11, 9], [1, 5], [10, 18], [17, 12], [8, 13], [18, 14], [1, 5], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [8, 13], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 3], [13, 11], [4, 12], [5, 8], [0, 17], [1, 10], [18, 14], [7, 19], [3, 16], [10, 13], [15, 3], [0, 17], [7, 19], [12, 16], [6, 4], [18, 14], [5, 8], [11, 9], [10, 18], [5, 6], [9, 14], [12, 3], [19, 2], [13, 11], [10, 18], [5, 13], [14, 15], [12, 16], [19, 2], [7, 17], [8, 0], [10, 11], [5, 13], [3, 16], [4, 12], [8, 0], [7, 17], [18, 15], [13, 11], [1, 10], [6, 4], [17, 12], [14, 15], [8, 0], [5, 13], [8, 6], [17, 12], [18, 15], [7, 19], [2, 3], [10, 11], [4, 14], [13, 6], [7, 17], [0, 19], [4, 12], [18, 15], [2, 3], [8, 13], [0, 17], [6, 12], [1, 10], [4, 14], [18, 15], [11, 9], [5, 8], [3, 16], [6, 17], [9, 14], [13, 18], [7, 19], [4, 15], [5, 8], [13, 6], [15, 3], [17, 12], [7, 19], [9, 14], [10, 11], [8, 13], [6, 4], [7, 17], [11, 9], [3, 16], [10, 18], [12, 2], [10, 13], [6, 4], [17, 12], [18, 14], [5, 8], [15, 3], [7, 19], [10, 18], [4, 12], [17, 19], [11, 9], [3, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[51, 57, 64]
[58, 65, 75]
[139, 144, 155]
[156, 159, 165]
[200, 203, 211]
[217, 225, 227]
[249, 255, 261]
[256, 267, 278]
[291, 300, 308]
[301, 306, 310]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[300, 308, 314]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.297102451324463

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 14] cc => I, Pos: [9, 14] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [16, 30] cc => I, Pos: [16, 30] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 33] cc => I, Pos: [24, 33] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [34, 41] cc => I, Pos: [34, 41] cc => I, Pos: [35, 42] cc => I, Pos: [35, 42] cc => I, Pos: [45, 54] cc => I, Pos: [45, 54] cc => I, Pos: [50, 62] cc => I, Pos: [50, 62] cc => I, Pos: [51, 57, 64] ccc => cc, Pos: [54, 78] cc => I, Pos: [54, 78] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [56, 68] cc => I, Pos: [56, 68] cc => I, Pos: [58, 65, 75] ccc => cc, Pos: [61, 67] cc => I, Pos: [61, 67] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [67, 74] cc => I, Pos: [67, 74] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [75, 87] cc => I, Pos: [75, 87] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [98, 108] cc => I, Pos: [98, 108] cc => I, Pos: [99, 116] cc => I, Pos: [99, 116] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I, Pos: [102, 107] cc => I, Pos: [102, 107] cc => I, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 131] cc => I, Pos: [117, 131] cc => I, Pos: [119, 126] cc => I, Pos: [119, 126] cc => I, Pos: [122, 125] cc => I, Pos: [122, 125] cc => I, Pos: [132, 149] cc => I, Pos: [132, 149] cc => I, Pos: [135, 141] cc => I, Pos: [135, 141] cc => I, Pos: [136, 143] cc => I, Pos: [136, 143] cc => I, Pos: [137, 145] cc => I, Pos: [137, 145] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [139, 144, 155] ccc => cc, Pos: [140, 147] cc => I, Pos: [140, 147] cc => I, Pos: [141, 148] cc => I, Pos: [141, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 156] cc => I, Pos: [148, 156] cc => I, Pos: [155, 174] cc => I, Pos: [155, 174] cc => I, Pos: [156, 159, 165] ccc => cc, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [173, 183] cc => I, Pos: [173, 183] cc => I, Pos: [184, 190] cc => I, Pos: [184, 190] cc => I, Pos: [185, 193] cc => I, Pos: [185, 193] cc => I, Pos: [186, 200] cc => I, Pos: [186, 200] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [190, 199] cc => I, Pos: [190, 199] cc => I, Pos: [191, 198] cc => I, Pos: [191, 198] cc => I, Pos: [194, 224] cc => I, Pos: [194, 224] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [200, 203, 211] ccc => cc, Pos: [202, 210] cc => I, Pos: [202, 210] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [209, 217] cc => I, Pos: [209, 217] cc => I, Pos: [217, 225, 227] ccc => cc, Pos: [220, 233] cc => I, Pos: [220, 233] cc => I, Pos: [221, 228] cc => I, Pos: [221, 228] cc => I, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [230, 244] cc => I, Pos: [230, 244] cc => I, Pos: [235, 241] cc => I, Pos: [235, 241] cc => I, Pos: [239, 245] cc => I, Pos: [239, 245] cc => I, Pos: [242, 249] cc => I, Pos: [242, 249] cc => I, Pos: [246, 253] cc => I, Pos: [246, 253] cc => I, Pos: [247, 252] cc => I, Pos: [247, 252] cc => I, Pos: [249, 255, 261] ccc => cc, Pos: [252, 260] cc => I, Pos: [252, 260] cc => I, Pos: [256, 267, 278] ccc => cc, Pos: [258, 263] cc => I, Pos: [258, 263] cc => I, Pos: [264, 273] cc => I, Pos: [264, 273] cc => I, Pos: [266, 274] cc => I, Pos: [266, 274] cc => I, Pos: [268, 279] cc => I, Pos: [268, 279] cc => I, Pos: [273, 280] cc => I, Pos: [273, 280] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [285, 294] cc => I, Pos: [285, 294] cc => I, Pos: [287, 293] cc => I, Pos: [287, 293] cc => I, Pos: [291, 300, 308] ccc => cc, Pos: [293, 309] cc => I, Pos: [293, 309] cc => I, Pos: [297, 304] cc => I, Pos: [297, 304] cc => I, Pos: [299, 313] cc => I, Pos: [299, 313] cc => I, Pos: [300, 308, 314] ccc => cc, Pos: [301, 306, 310] ccc => cc]

--------End Timer [Generate Plans]:  0.18748807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [54, 78] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [75, 87] cc => I,
 Pos: [61, 67] cc => I,
 Pos: [80, 92] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [93, 98] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [135, 141] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [155, 174] cc => I,
 Pos: [140, 147] cc => I,
 Pos: [156, 159, 165] ccc => cc,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [190, 199] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [186, 200] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [191, 198] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [209, 217] cc => I,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [249, 255, 261] ccc => cc,
 Pos: [246, 253] cc => I,
 Pos: [252, 260] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [273, 280] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [293, 309] cc => I,
 Pos: [291, 300, 308] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 66, Saving: 68

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 14] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 33] cc => I
Apply:  Pos: [34, 41] cc => I
Apply:  Pos: [35, 42] cc => I
Apply:  Pos: [50, 62] cc => I
Apply:  Pos: [51, 57, 64] ccc => cc
Apply:  Pos: [54, 78] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [56, 68] cc => I
Apply:  Pos: [75, 87] cc => I
Apply:  Pos: [61, 67] cc => I
Apply:  Pos: [80, 92] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [93, 98] cc => I
Apply:  Pos: [99, 116] cc => I
Apply:  Pos: [101, 109] cc => I
Apply:  Pos: [102, 107] cc => I
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [104, 111] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 131] cc => I
Apply:  Pos: [119, 126] cc => I
Apply:  Pos: [122, 125] cc => I
Apply:  Pos: [132, 149] cc => I
Apply:  Pos: [135, 141] cc => I
Apply:  Pos: [136, 143] cc => I
Apply:  Pos: [137, 145] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [155, 174] cc => I
Apply:  Pos: [140, 147] cc => I
Apply:  Pos: [156, 159, 165] ccc => cc
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [173, 183] cc => I
Apply:  Pos: [190, 199] cc => I
Apply:  Pos: [185, 193] cc => I
Apply:  Pos: [186, 200] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [191, 198] cc => I
Apply:  Pos: [202, 210] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [209, 217] cc => I
Apply:  Pos: [220, 233] cc => I
Apply:  Pos: [221, 228] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [224, 229] cc => I
Apply:  Pos: [230, 244] cc => I
Apply:  Pos: [235, 241] cc => I
Apply:  Pos: [239, 245] cc => I
Apply:  Pos: [249, 255, 261] ccc => cc
Apply:  Pos: [246, 253] cc => I
Apply:  Pos: [252, 260] cc => I
Apply:  Pos: [256, 267, 278] ccc => cc
Apply:  Pos: [258, 263] cc => I
Apply:  Pos: [273, 280] cc => I
Apply:  Pos: [266, 274] cc => I
Apply:  Pos: [268, 279] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [285, 294] cc => I
Apply:  Pos: [293, 309] cc => I
Apply:  Pos: [291, 300, 308] ccc => cc
Apply:  Pos: [297, 304] cc => I
Apply:  Pos: [299, 313] cc => I
Apply:  Pos: [301, 306, 310] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 17], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [12, 3], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 9], [7, 19], [13, 6], [8, 13], [6, 17], [13, 18], [1, 5], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [1, 5], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [5, 13], [14, 15], [8, 0], [10, 11], [5, 11], [3, 16], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 6], [18, 15], [7, 19], [10, 11], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [3, 16], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 16], [17, 12], [10, 11], [8, 13], [7, 17], [3, 16], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [4, 12], [17, 19], [3, 16], ----End Timer [Execute Mapping]:  6.484590530395508

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[13, 57]
[110, 122]
[149, 168]
[179, 188]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[80, 88, 98]
[159, 167, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[13, 57]
[110, 122]
[149, 168]
[179, 188]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4539482593536377

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 25] cc => I, Pos: [10, 25] cc => I, Pos: [13, 57] cc => I, Pos: [13, 57] cc => I, Pos: [80, 88, 98] ccc => cc, Pos: [110, 122] cc => I, Pos: [110, 122] cc => I, Pos: [149, 168] cc => I, Pos: [149, 168] cc => I, Pos: [159, 167, 176] ccc => cc, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I]

--------End Timer [Generate Plans]:  0.015623092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 25] cc => I,
 Pos: [13, 57] cc => I,
 Pos: [80, 88, 98] ccc => cc,
 Pos: [110, 122] cc => I,
 Pos: [149, 168] cc => I,
 Pos: [159, 167, 176] ccc => cc,
 Pos: [179, 188] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 25] cc => I
Apply:  Pos: [13, 57] cc => I
Apply:  Pos: [80, 88, 98] ccc => cc
Apply:  Pos: [110, 122] cc => I
Apply:  Pos: [149, 168] cc => I
Apply:  Pos: [159, 167, 176] ccc => cc
Apply:  Pos: [179, 188] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 17], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [12, 3], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [6, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [8, 13], [6, 17], [13, 18], [1, 5], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [4, 12], [17, 19], [13, 6], [1, 5], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [11, 9], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [5, 13], [14, 15], [8, 0], [5, 11], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 6], [18, 15], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.469571352005005

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 117, 123]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1882030963897705

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [103, 117, 123] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [103, 117, 123] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [103, 117, 123] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 17], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [12, 3], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [6, 17], [7, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [8, 13], [6, 17], [13, 18], [1, 5], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [11, 9], [0, 7], [4, 12], [17, 19], [13, 6], [1, 5], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [9, 14], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [5, 13], [14, 15], [8, 0], [10, 11], [5, 11], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 6], [18, 15], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.1882030963897705

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.140902280807495

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 17], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [12, 3], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [8, 13], [6, 17], [13, 18], [1, 5], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 9], [11, 18], [0, 7], [4, 12], [17, 19], [13, 6], [1, 5], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [9, 14], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [5, 13], [14, 15], [8, 0], [5, 11], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 6], [18, 15], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.140902280807495

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [176] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 352

Reduced: 
 - size: 139 (44.13%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12484860420227051

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [0, 7], [12, 3], [11, 9], [1, 5], [13, 18], [0, 7], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [11, 9], [2, 16], [13, 11], [7, 19], [5, 6], [3, 16], [18, 14], [13, 11], [18, 4], [2, 16], [1, 10], [0, 19], [9, 14], [5, 6], [13, 6], [12, 3], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [13, 6], [12, 3], [11, 18], [9, 14], [1, 10], [17, 19], [8, 0], [5, 13], [18, 4], [12, 2], [0, 7], [15, 3], [6, 17], [1, 10], [13, 6], [18, 14], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [12, 2], [13, 6], [0, 7], [17, 19], [2, 3], [11, 9], [18, 14], [4, 12], [5, 8], [13, 6], [12, 3], [2, 16], [11, 9], [0, 17], [4, 14], [7, 19], [1, 10], [8, 6], [12, 3], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [6, 4], [1, 5], [5, 8], [19, 2], [12, 3], [0, 17], [13, 11], [6, 4], [5, 6], [4, 12], [0, 17], [7, 19], [9, 14], [8, 13], [18, 15], [2, 3], [6, 12], [2, 16], [11, 9], [18, 15], [0, 17], [8, 13], [4, 14], [6, 12], [11, 9], [8, 0], [2, 3], [10, 13], [7, 19], [18, 4], [12, 2], [10, 11], [18, 14], [0, 7], [5, 8], [6, 17], [6, 12], [5, 8], [10, 11], [7, 17], [2, 3], [12, 2], [11, 9], [18, 4], [3, 16], [7, 19], [13, 6], [1, 5], [4, 12], [0, 7], [14, 15], [8, 13], [19, 2], [1, 5], [6, 17], [4, 12], [13, 18], [0, 7], [14, 15], [19, 2], [1, 5], [3, 16], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [8, 13], [1, 5], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [0, 17], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [0, 17], [5, 6], [3, 16], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [3, 16], [1, 5], [8, 0], [10, 18], [12, 16], [7, 19], [15, 3], [1, 5], [11, 9], [6, 4], [8, 0], [7, 19], [4, 15], [13, 6], [2, 16], [11, 9], [1, 5], [10, 18], [17, 12], [8, 13], [18, 14], [1, 5], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [8, 13], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 3], [13, 11], [4, 12], [5, 8], [0, 17], [1, 10], [18, 14], [7, 19], [3, 16], [10, 13], [15, 3], [0, 17], [7, 19], [12, 16], [6, 4], [18, 14], [5, 8], [11, 9], [10, 18], [5, 6], [9, 14], [12, 3], [19, 2], [13, 11], [10, 18], [5, 13], [14, 15], [12, 16], [19, 2], [7, 17], [8, 0], [10, 11], [5, 13], [3, 16], [4, 12], [8, 0], [7, 17], [18, 15], [13, 11], [1, 10], [6, 4], [17, 12], [14, 15], [8, 0], [5, 13], [8, 6], [17, 12], [18, 15], [7, 19], [2, 3], [10, 11], [4, 14], [13, 6], [7, 17], [0, 19], [4, 12], [18, 15], [2, 3], [8, 13], [0, 17], [6, 12], [1, 10], [4, 14], [18, 15], [11, 9], [5, 8], [3, 16], [6, 17], [9, 14], [13, 18], [7, 19], [4, 15], [5, 8], [13, 6], [15, 3], [17, 12], [7, 19], [9, 14], [10, 11], [8, 13], [6, 4], [7, 17], [11, 9], [3, 16], [10, 18], [12, 2], [10, 13], [6, 4], [17, 12], [18, 14], [5, 8], [15, 3], [7, 19], [10, 18], [4, 12], [17, 19], [11, 9], [3, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[51, 57, 64]
[58, 65, 75]
[139, 144, 155]
[156, 159, 165]
[200, 203, 211]
[217, 225, 227]
[249, 255, 261]
[256, 267, 278]
[291, 300, 308]
[301, 306, 310]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[300, 308, 314]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.187416315078735

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 14] cc => I, Pos: [9, 14] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [16, 30] cc => I, Pos: [16, 30] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 33] cc => I, Pos: [24, 33] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [34, 41] cc => I, Pos: [34, 41] cc => I, Pos: [35, 42] cc => I, Pos: [35, 42] cc => I, Pos: [45, 54] cc => I, Pos: [45, 54] cc => I, Pos: [50, 62] cc => I, Pos: [50, 62] cc => I, Pos: [51, 57, 64] ccc => cc, Pos: [54, 78] cc => I, Pos: [54, 78] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [56, 68] cc => I, Pos: [56, 68] cc => I, Pos: [58, 65, 75] ccc => cc, Pos: [61, 67] cc => I, Pos: [61, 67] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [67, 74] cc => I, Pos: [67, 74] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [75, 87] cc => I, Pos: [75, 87] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [98, 108] cc => I, Pos: [98, 108] cc => I, Pos: [99, 116] cc => I, Pos: [99, 116] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I, Pos: [102, 107] cc => I, Pos: [102, 107] cc => I, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 131] cc => I, Pos: [117, 131] cc => I, Pos: [119, 126] cc => I, Pos: [119, 126] cc => I, Pos: [122, 125] cc => I, Pos: [122, 125] cc => I, Pos: [132, 149] cc => I, Pos: [132, 149] cc => I, Pos: [135, 141] cc => I, Pos: [135, 141] cc => I, Pos: [136, 143] cc => I, Pos: [136, 143] cc => I, Pos: [137, 145] cc => I, Pos: [137, 145] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [139, 144, 155] ccc => cc, Pos: [140, 147] cc => I, Pos: [140, 147] cc => I, Pos: [141, 148] cc => I, Pos: [141, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 156] cc => I, Pos: [148, 156] cc => I, Pos: [155, 174] cc => I, Pos: [155, 174] cc => I, Pos: [156, 159, 165] ccc => cc, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [173, 183] cc => I, Pos: [173, 183] cc => I, Pos: [184, 190] cc => I, Pos: [184, 190] cc => I, Pos: [185, 193] cc => I, Pos: [185, 193] cc => I, Pos: [186, 200] cc => I, Pos: [186, 200] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [190, 199] cc => I, Pos: [190, 199] cc => I, Pos: [191, 198] cc => I, Pos: [191, 198] cc => I, Pos: [194, 224] cc => I, Pos: [194, 224] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [200, 203, 211] ccc => cc, Pos: [202, 210] cc => I, Pos: [202, 210] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [209, 217] cc => I, Pos: [209, 217] cc => I, Pos: [217, 225, 227] ccc => cc, Pos: [220, 233] cc => I, Pos: [220, 233] cc => I, Pos: [221, 228] cc => I, Pos: [221, 228] cc => I, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [230, 244] cc => I, Pos: [230, 244] cc => I, Pos: [235, 241] cc => I, Pos: [235, 241] cc => I, Pos: [239, 245] cc => I, Pos: [239, 245] cc => I, Pos: [242, 249] cc => I, Pos: [242, 249] cc => I, Pos: [246, 253] cc => I, Pos: [246, 253] cc => I, Pos: [247, 252] cc => I, Pos: [247, 252] cc => I, Pos: [249, 255, 261] ccc => cc, Pos: [252, 260] cc => I, Pos: [252, 260] cc => I, Pos: [256, 267, 278] ccc => cc, Pos: [258, 263] cc => I, Pos: [258, 263] cc => I, Pos: [264, 273] cc => I, Pos: [264, 273] cc => I, Pos: [266, 274] cc => I, Pos: [266, 274] cc => I, Pos: [268, 279] cc => I, Pos: [268, 279] cc => I, Pos: [273, 280] cc => I, Pos: [273, 280] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [285, 294] cc => I, Pos: [285, 294] cc => I, Pos: [287, 293] cc => I, Pos: [287, 293] cc => I, Pos: [291, 300, 308] ccc => cc, Pos: [293, 309] cc => I, Pos: [293, 309] cc => I, Pos: [297, 304] cc => I, Pos: [297, 304] cc => I, Pos: [299, 313] cc => I, Pos: [299, 313] cc => I, Pos: [300, 308, 314] ccc => cc, Pos: [301, 306, 310] ccc => cc]

--------End Timer [Generate Plans]:  0.1718614101409912

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [54, 78] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [58, 65, 75] ccc => cc,
 Pos: [61, 67] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [93, 98] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [135, 141] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [155, 174] cc => I,
 Pos: [140, 147] cc => I,
 Pos: [148, 156] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [184, 190] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [186, 200] cc => I,
 Pos: [194, 224] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [209, 217] cc => I,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [242, 249] cc => I,
 Pos: [246, 253] cc => I,
 Pos: [247, 252] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [273, 280] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [287, 293] cc => I,
 Pos: [300, 308, 314] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 65, Saving: 66

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 14] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 33] cc => I
Apply:  Pos: [34, 41] cc => I
Apply:  Pos: [35, 42] cc => I
Apply:  Pos: [50, 62] cc => I
Apply:  Pos: [51, 57, 64] ccc => cc
Apply:  Pos: [54, 78] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [56, 68] cc => I
Apply:  Pos: [58, 65, 75] ccc => cc
Apply:  Pos: [61, 67] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [93, 98] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [99, 116] cc => I
Apply:  Pos: [101, 109] cc => I
Apply:  Pos: [102, 107] cc => I
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [104, 111] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 131] cc => I
Apply:  Pos: [119, 126] cc => I
Apply:  Pos: [122, 125] cc => I
Apply:  Pos: [132, 149] cc => I
Apply:  Pos: [135, 141] cc => I
Apply:  Pos: [136, 143] cc => I
Apply:  Pos: [137, 145] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [155, 174] cc => I
Apply:  Pos: [140, 147] cc => I
Apply:  Pos: [148, 156] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [173, 183] cc => I
Apply:  Pos: [184, 190] cc => I
Apply:  Pos: [185, 193] cc => I
Apply:  Pos: [186, 200] cc => I
Apply:  Pos: [194, 224] cc => I
Apply:  Pos: [198, 206] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [202, 210] cc => I
Apply:  Pos: [209, 217] cc => I
Apply:  Pos: [220, 233] cc => I
Apply:  Pos: [221, 228] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [230, 244] cc => I
Apply:  Pos: [235, 241] cc => I
Apply:  Pos: [239, 245] cc => I
Apply:  Pos: [242, 249] cc => I
Apply:  Pos: [246, 253] cc => I
Apply:  Pos: [247, 252] cc => I
Apply:  Pos: [256, 267, 278] ccc => cc
Apply:  Pos: [258, 263] cc => I
Apply:  Pos: [273, 280] cc => I
Apply:  Pos: [266, 274] cc => I
Apply:  Pos: [268, 279] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [285, 294] cc => I
Apply:  Pos: [287, 293] cc => I
Apply:  Pos: [300, 308, 314] ccc => cc
Apply:  Pos: [297, 304] cc => I
Apply:  Pos: [299, 313] cc => I
Apply:  Pos: [301, 306, 310] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 9], [7, 19], [13, 6], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [12, 16], [7, 19], [15, 3], [11, 9], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [17, 12], [18, 14], [12, 2], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [7, 19], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [3, 16], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [18, 15], [7, 19], [10, 11], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [3, 16], [6, 17], [13, 18], [4, 15], [13, 6], [15, 3], [17, 12], [10, 11], [8, 13], [7, 17], [15, 3], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [3, 16], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  6.359277725219727

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[36, 40]
[13, 56]
[59, 69]
[110, 124]
[115, 139]
[139, 159]
[148, 169]
[174, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[81, 88, 97]
[160, 168, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[36, 40]
[13, 56]
[59, 69]
[110, 124]
[115, 139]
[139, 159]
[148, 169]
[174, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.437539577484131

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 25] cc => I, Pos: [10, 25] cc => I, Pos: [13, 56] cc => I, Pos: [13, 56] cc => I, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [59, 69] cc => I, Pos: [59, 69] cc => I, Pos: [81, 88, 97] ccc => cc, Pos: [110, 124] cc => I, Pos: [110, 124] cc => I, Pos: [115, 139] cc => I, Pos: [115, 139] cc => I, Pos: [139, 159] cc => I, Pos: [139, 159] cc => I, Pos: [148, 169] cc => I, Pos: [148, 169] cc => I, Pos: [160, 168, 176] ccc => cc, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 25] cc => I,
 Pos: [13, 56] cc => I,
 Pos: [36, 40] cc => I,
 Pos: [59, 69] cc => I,
 Pos: [81, 88, 97] ccc => cc,
 Pos: [110, 124] cc => I,
 Pos: [139, 159] cc => I,
 Pos: [148, 169] cc => I,
 Pos: [160, 168, 176] ccc => cc,
 Pos: [174, 179] cc => I]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 25] cc => I
Apply:  Pos: [13, 56] cc => I
Apply:  Pos: [36, 40] cc => I
Apply:  Pos: [59, 69] cc => I
Apply:  Pos: [81, 88, 97] ccc => cc
Apply:  Pos: [110, 124] cc => I
Apply:  Pos: [139, 159] cc => I
Apply:  Pos: [148, 169] cc => I
Apply:  Pos: [160, 168, 176] ccc => cc
Apply:  Pos: [174, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [13, 6], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [6, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [7, 19], [15, 3], [11, 9], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [17, 12], [12, 2], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [18, 15], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [3, 16], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.4531631469726562

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[99, 107, 120]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.0156588554382324

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [99, 107, 120] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [99, 107, 120] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [99, 107, 120] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [13, 6], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [6, 17], [7, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [11, 9], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [7, 19], [15, 3], [9, 14], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [17, 12], [12, 2], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [18, 15], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [3, 16], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.0156588554382324

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9843504428863525

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [13, 6], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 9], [11, 18], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [7, 19], [15, 3], [9, 14], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [17, 12], [12, 2], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [18, 15], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [3, 16], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  2.9843504428863525

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [171] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 342

Reduced: 
 - size: 144 (45.71%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499666213989258

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [0, 7], [12, 3], [11, 9], [1, 5], [13, 18], [0, 7], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [11, 9], [2, 16], [13, 11], [7, 19], [5, 6], [3, 16], [18, 14], [13, 11], [18, 4], [2, 16], [1, 10], [0, 19], [9, 14], [5, 6], [13, 6], [12, 3], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [13, 6], [12, 3], [11, 18], [9, 14], [1, 10], [17, 19], [8, 0], [5, 13], [18, 4], [12, 2], [0, 7], [15, 3], [6, 17], [1, 10], [13, 6], [18, 14], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [12, 2], [13, 6], [0, 7], [17, 19], [2, 3], [11, 9], [18, 14], [4, 12], [5, 8], [13, 6], [12, 3], [2, 16], [11, 9], [0, 17], [4, 14], [7, 19], [1, 10], [8, 6], [12, 3], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [6, 4], [1, 5], [5, 8], [19, 2], [12, 3], [0, 17], [13, 11], [6, 4], [5, 6], [4, 12], [0, 17], [7, 19], [9, 14], [8, 13], [18, 15], [2, 3], [6, 12], [2, 16], [11, 9], [18, 15], [0, 17], [8, 13], [4, 14], [6, 12], [11, 9], [8, 0], [2, 3], [10, 13], [7, 19], [18, 4], [12, 2], [10, 11], [18, 14], [0, 7], [5, 8], [6, 17], [6, 12], [5, 8], [10, 11], [7, 17], [2, 3], [12, 2], [11, 9], [18, 4], [3, 16], [7, 19], [13, 6], [1, 5], [4, 12], [0, 7], [14, 15], [8, 13], [19, 2], [1, 5], [6, 17], [4, 12], [13, 18], [0, 7], [14, 15], [19, 2], [1, 5], [3, 16], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [8, 13], [1, 5], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [0, 17], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [0, 17], [5, 6], [3, 16], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [3, 16], [1, 5], [8, 0], [10, 18], [12, 16], [7, 19], [15, 3], [1, 5], [11, 9], [6, 4], [8, 0], [7, 19], [4, 15], [13, 6], [2, 16], [11, 9], [1, 5], [10, 18], [17, 12], [8, 13], [18, 14], [1, 5], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [8, 13], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 3], [13, 11], [4, 12], [5, 8], [0, 17], [1, 10], [18, 14], [7, 19], [3, 16], [10, 13], [15, 3], [0, 17], [7, 19], [12, 16], [6, 4], [18, 14], [5, 8], [11, 9], [10, 18], [5, 6], [9, 14], [12, 3], [19, 2], [13, 11], [10, 18], [5, 13], [14, 15], [12, 16], [19, 2], [7, 17], [8, 0], [10, 11], [5, 13], [3, 16], [4, 12], [8, 0], [7, 17], [18, 15], [13, 11], [1, 10], [6, 4], [17, 12], [14, 15], [8, 0], [5, 13], [8, 6], [17, 12], [18, 15], [7, 19], [2, 3], [10, 11], [4, 14], [13, 6], [7, 17], [0, 19], [4, 12], [18, 15], [2, 3], [8, 13], [0, 17], [6, 12], [1, 10], [4, 14], [18, 15], [11, 9], [5, 8], [3, 16], [6, 17], [9, 14], [13, 18], [7, 19], [4, 15], [5, 8], [13, 6], [15, 3], [17, 12], [7, 19], [9, 14], [10, 11], [8, 13], [6, 4], [7, 17], [11, 9], [3, 16], [10, 18], [12, 2], [10, 13], [6, 4], [17, 12], [18, 14], [5, 8], [15, 3], [7, 19], [10, 18], [4, 12], [17, 19], [11, 9], [3, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[51, 57, 64]
[58, 65, 75]
[139, 144, 155]
[156, 159, 165]
[200, 203, 211]
[217, 225, 227]
[249, 255, 261]
[256, 267, 278]
[291, 300, 308]
[301, 306, 310]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[300, 308, 314]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.167864084243774

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 14] cc => I, Pos: [9, 14] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [16, 30] cc => I, Pos: [16, 30] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 33] cc => I, Pos: [24, 33] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [34, 41] cc => I, Pos: [34, 41] cc => I, Pos: [35, 42] cc => I, Pos: [35, 42] cc => I, Pos: [45, 54] cc => I, Pos: [45, 54] cc => I, Pos: [50, 62] cc => I, Pos: [50, 62] cc => I, Pos: [51, 57, 64] ccc => cc, Pos: [54, 78] cc => I, Pos: [54, 78] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [56, 68] cc => I, Pos: [56, 68] cc => I, Pos: [58, 65, 75] ccc => cc, Pos: [61, 67] cc => I, Pos: [61, 67] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [67, 74] cc => I, Pos: [67, 74] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [75, 87] cc => I, Pos: [75, 87] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [98, 108] cc => I, Pos: [98, 108] cc => I, Pos: [99, 116] cc => I, Pos: [99, 116] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I, Pos: [102, 107] cc => I, Pos: [102, 107] cc => I, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 131] cc => I, Pos: [117, 131] cc => I, Pos: [119, 126] cc => I, Pos: [119, 126] cc => I, Pos: [122, 125] cc => I, Pos: [122, 125] cc => I, Pos: [132, 149] cc => I, Pos: [132, 149] cc => I, Pos: [135, 141] cc => I, Pos: [135, 141] cc => I, Pos: [136, 143] cc => I, Pos: [136, 143] cc => I, Pos: [137, 145] cc => I, Pos: [137, 145] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [139, 144, 155] ccc => cc, Pos: [140, 147] cc => I, Pos: [140, 147] cc => I, Pos: [141, 148] cc => I, Pos: [141, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 156] cc => I, Pos: [148, 156] cc => I, Pos: [155, 174] cc => I, Pos: [155, 174] cc => I, Pos: [156, 159, 165] ccc => cc, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [173, 183] cc => I, Pos: [173, 183] cc => I, Pos: [184, 190] cc => I, Pos: [184, 190] cc => I, Pos: [185, 193] cc => I, Pos: [185, 193] cc => I, Pos: [186, 200] cc => I, Pos: [186, 200] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [190, 199] cc => I, Pos: [190, 199] cc => I, Pos: [191, 198] cc => I, Pos: [191, 198] cc => I, Pos: [194, 224] cc => I, Pos: [194, 224] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [200, 203, 211] ccc => cc, Pos: [202, 210] cc => I, Pos: [202, 210] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [209, 217] cc => I, Pos: [209, 217] cc => I, Pos: [217, 225, 227] ccc => cc, Pos: [220, 233] cc => I, Pos: [220, 233] cc => I, Pos: [221, 228] cc => I, Pos: [221, 228] cc => I, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [230, 244] cc => I, Pos: [230, 244] cc => I, Pos: [235, 241] cc => I, Pos: [235, 241] cc => I, Pos: [239, 245] cc => I, Pos: [239, 245] cc => I, Pos: [242, 249] cc => I, Pos: [242, 249] cc => I, Pos: [246, 253] cc => I, Pos: [246, 253] cc => I, Pos: [247, 252] cc => I, Pos: [247, 252] cc => I, Pos: [249, 255, 261] ccc => cc, Pos: [252, 260] cc => I, Pos: [252, 260] cc => I, Pos: [256, 267, 278] ccc => cc, Pos: [258, 263] cc => I, Pos: [258, 263] cc => I, Pos: [264, 273] cc => I, Pos: [264, 273] cc => I, Pos: [266, 274] cc => I, Pos: [266, 274] cc => I, Pos: [268, 279] cc => I, Pos: [268, 279] cc => I, Pos: [273, 280] cc => I, Pos: [273, 280] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [285, 294] cc => I, Pos: [285, 294] cc => I, Pos: [287, 293] cc => I, Pos: [287, 293] cc => I, Pos: [291, 300, 308] ccc => cc, Pos: [293, 309] cc => I, Pos: [293, 309] cc => I, Pos: [297, 304] cc => I, Pos: [297, 304] cc => I, Pos: [299, 313] cc => I, Pos: [299, 313] cc => I, Pos: [300, 308, 314] ccc => cc, Pos: [301, 306, 310] ccc => cc]

--------End Timer [Generate Plans]:  0.18748712539672852

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [78, 84] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [58, 65, 75] ccc => cc,
 Pos: [67, 74] cc => I,
 Pos: [80, 92] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [98, 108] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [141, 148] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [155, 174] cc => I,
 Pos: [140, 147] cc => I,
 Pos: [156, 159, 165] ccc => cc,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [184, 190] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [200, 203, 211] ccc => cc,
 Pos: [188, 194] cc => I,
 Pos: [191, 198] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [217, 225, 227] ccc => cc,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [242, 249] cc => I,
 Pos: [246, 253] cc => I,
 Pos: [252, 260] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [264, 273] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [293, 309] cc => I,
 Pos: [291, 300, 308] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 67, Saving: 69

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 14] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 33] cc => I
Apply:  Pos: [34, 41] cc => I
Apply:  Pos: [35, 42] cc => I
Apply:  Pos: [50, 62] cc => I
Apply:  Pos: [51, 57, 64] ccc => cc
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [56, 68] cc => I
Apply:  Pos: [58, 65, 75] ccc => cc
Apply:  Pos: [67, 74] cc => I
Apply:  Pos: [80, 92] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [98, 108] cc => I
Apply:  Pos: [99, 116] cc => I
Apply:  Pos: [101, 109] cc => I
Apply:  Pos: [102, 107] cc => I
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [104, 111] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 131] cc => I
Apply:  Pos: [119, 126] cc => I
Apply:  Pos: [122, 125] cc => I
Apply:  Pos: [132, 149] cc => I
Apply:  Pos: [141, 148] cc => I
Apply:  Pos: [136, 143] cc => I
Apply:  Pos: [137, 145] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [155, 174] cc => I
Apply:  Pos: [140, 147] cc => I
Apply:  Pos: [156, 159, 165] ccc => cc
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [173, 183] cc => I
Apply:  Pos: [184, 190] cc => I
Apply:  Pos: [185, 193] cc => I
Apply:  Pos: [200, 203, 211] ccc => cc
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [191, 198] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [202, 210] cc => I
Apply:  Pos: [217, 225, 227] ccc => cc
Apply:  Pos: [220, 233] cc => I
Apply:  Pos: [221, 228] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [224, 229] cc => I
Apply:  Pos: [230, 244] cc => I
Apply:  Pos: [235, 241] cc => I
Apply:  Pos: [239, 245] cc => I
Apply:  Pos: [242, 249] cc => I
Apply:  Pos: [246, 253] cc => I
Apply:  Pos: [252, 260] cc => I
Apply:  Pos: [256, 267, 278] ccc => cc
Apply:  Pos: [258, 263] cc => I
Apply:  Pos: [264, 273] cc => I
Apply:  Pos: [266, 274] cc => I
Apply:  Pos: [268, 279] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [285, 294] cc => I
Apply:  Pos: [293, 309] cc => I
Apply:  Pos: [291, 300, 308] ccc => cc
Apply:  Pos: [297, 304] cc => I
Apply:  Pos: [299, 313] cc => I
Apply:  Pos: [301, 306, 310] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [1, 10], [13, 6], [7, 19], [0, 19], [3, 16], [1, 5], [11, 9], [17, 19], [2, 3], [4, 12], [5, 8], [12, 3], [2, 16], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 9], [7, 19], [13, 6], [1, 5], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [10, 14], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [17, 4], [6, 12], [9, 14], [2, 16], [15, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [8, 0], [10, 11], [3, 16], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [5, 13], [8, 6], [7, 19], [10, 11], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [3, 16], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 16], [17, 12], [10, 11], [8, 13], [7, 17], [3, 16], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [4, 12], [17, 19], [3, 16], ----End Timer [Execute Mapping]:  6.355351209640503

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[13, 39]
[36, 41]
[148, 168]
[179, 188]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[79, 87, 97]
[158, 167, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[137, 143, 148]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[13, 39]
[36, 41]
[148, 168]
[179, 188]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3615424633026123

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 25] cc => I, Pos: [10, 25] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [36, 41] cc => I, Pos: [36, 41] cc => I, Pos: [79, 87, 97] ccc => cc, Pos: [137, 143, 148] ccc => cc, Pos: [148, 168] cc => I, Pos: [148, 168] cc => I, Pos: [158, 167, 176] ccc => cc, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 25] cc => I,
 Pos: [13, 39] cc => I,
 Pos: [36, 41] cc => I,
 Pos: [79, 87, 97] ccc => cc,
 Pos: [137, 143, 148] ccc => cc,
 Pos: [158, 167, 176] ccc => cc,
 Pos: [179, 188] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 25] cc => I
Apply:  Pos: [13, 39] cc => I
Apply:  Pos: [36, 41] cc => I
Apply:  Pos: [79, 87, 97] ccc => cc
Apply:  Pos: [137, 143, 148] ccc => cc
Apply:  Pos: [158, 167, 176] ccc => cc
Apply:  Pos: [179, 188] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [13, 6], [7, 19], [3, 16], [1, 5], [11, 9], [17, 19], [2, 3], [4, 12], [5, 8], [12, 3], [2, 16], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [6, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [1, 5], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [10, 14], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [17, 4], [6, 12], [9, 14], [15, 16], [2, 16], [13, 11], [4, 12], [1, 10], [12, 3], [10, 13], [6, 4], [11, 9], [5, 6], [9, 14], [3, 16], [13, 11], [14, 15], [8, 0], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [3, 16], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.377166509628296

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[136, 160]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[136, 160]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.094397783279419

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [136, 160] cc => I, Pos: [136, 160] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [136, 160] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [136, 160] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [13, 6], [7, 19], [3, 16], [1, 5], [11, 9], [17, 19], [2, 3], [4, 12], [5, 8], [12, 3], [2, 16], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [6, 17], [7, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [1, 5], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [10, 14], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [17, 4], [6, 12], [9, 14], [2, 16], [15, 16], [13, 11], [4, 12], [1, 10], [12, 3], [10, 13], [6, 4], [11, 9], [5, 6], [9, 14], [13, 11], [14, 15], [8, 0], [10, 11], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.094397783279419

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.093829393386841

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [13, 6], [7, 19], [3, 16], [1, 5], [11, 9], [17, 19], [2, 3], [4, 12], [5, 8], [12, 3], [2, 16], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [1, 5], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [10, 14], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [17, 4], [6, 12], [9, 14], [15, 16], [2, 16], [13, 11], [4, 12], [1, 10], [12, 3], [10, 13], [6, 4], [11, 9], [5, 6], [9, 14], [13, 11], [14, 15], [8, 0], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.093829393386841

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [176] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 352

Reduced: 
 - size: 139 (44.13%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499713897705078

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [0, 7], [12, 3], [11, 9], [1, 5], [13, 18], [0, 7], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [11, 9], [2, 16], [13, 11], [7, 19], [5, 6], [3, 16], [18, 14], [13, 11], [18, 4], [2, 16], [1, 10], [0, 19], [9, 14], [5, 6], [13, 6], [12, 3], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [13, 6], [12, 3], [11, 18], [9, 14], [1, 10], [17, 19], [8, 0], [5, 13], [18, 4], [12, 2], [0, 7], [15, 3], [6, 17], [1, 10], [13, 6], [18, 14], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [12, 2], [13, 6], [0, 7], [17, 19], [2, 3], [11, 9], [18, 14], [4, 12], [5, 8], [13, 6], [12, 3], [2, 16], [11, 9], [0, 17], [4, 14], [7, 19], [1, 10], [8, 6], [12, 3], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [6, 4], [1, 5], [5, 8], [19, 2], [12, 3], [0, 17], [13, 11], [6, 4], [5, 6], [4, 12], [0, 17], [7, 19], [9, 14], [8, 13], [18, 15], [2, 3], [6, 12], [2, 16], [11, 9], [18, 15], [0, 17], [8, 13], [4, 14], [6, 12], [11, 9], [8, 0], [2, 3], [10, 13], [7, 19], [18, 4], [12, 2], [10, 11], [18, 14], [0, 7], [5, 8], [6, 17], [6, 12], [5, 8], [10, 11], [7, 17], [2, 3], [12, 2], [11, 9], [18, 4], [3, 16], [7, 19], [13, 6], [1, 5], [4, 12], [0, 7], [14, 15], [8, 13], [19, 2], [1, 5], [6, 17], [4, 12], [13, 18], [0, 7], [14, 15], [19, 2], [1, 5], [3, 16], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [8, 13], [1, 5], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [0, 17], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [0, 17], [5, 6], [3, 16], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [3, 16], [1, 5], [8, 0], [10, 18], [12, 16], [7, 19], [15, 3], [1, 5], [11, 9], [6, 4], [8, 0], [7, 19], [4, 15], [13, 6], [2, 16], [11, 9], [1, 5], [10, 18], [17, 12], [8, 13], [18, 14], [1, 5], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [8, 13], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 3], [13, 11], [4, 12], [5, 8], [0, 17], [1, 10], [18, 14], [7, 19], [3, 16], [10, 13], [15, 3], [0, 17], [7, 19], [12, 16], [6, 4], [18, 14], [5, 8], [11, 9], [10, 18], [5, 6], [9, 14], [12, 3], [19, 2], [13, 11], [10, 18], [5, 13], [14, 15], [12, 16], [19, 2], [7, 17], [8, 0], [10, 11], [5, 13], [3, 16], [4, 12], [8, 0], [7, 17], [18, 15], [13, 11], [1, 10], [6, 4], [17, 12], [14, 15], [8, 0], [5, 13], [8, 6], [17, 12], [18, 15], [7, 19], [2, 3], [10, 11], [4, 14], [13, 6], [7, 17], [0, 19], [4, 12], [18, 15], [2, 3], [8, 13], [0, 17], [6, 12], [1, 10], [4, 14], [18, 15], [11, 9], [5, 8], [3, 16], [6, 17], [9, 14], [13, 18], [7, 19], [4, 15], [5, 8], [13, 6], [15, 3], [17, 12], [7, 19], [9, 14], [10, 11], [8, 13], [6, 4], [7, 17], [11, 9], [3, 16], [10, 18], [12, 2], [10, 13], [6, 4], [17, 12], [18, 14], [5, 8], [15, 3], [7, 19], [10, 18], [4, 12], [17, 19], [11, 9], [3, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[51, 57, 64]
[58, 65, 75]
[139, 144, 155]
[156, 159, 165]
[200, 203, 211]
[217, 225, 227]
[249, 255, 261]
[256, 267, 278]
[291, 300, 308]
[301, 306, 310]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[300, 308, 314]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.263825178146362

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 14] cc => I, Pos: [9, 14] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [16, 30] cc => I, Pos: [16, 30] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 33] cc => I, Pos: [24, 33] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [34, 41] cc => I, Pos: [34, 41] cc => I, Pos: [35, 42] cc => I, Pos: [35, 42] cc => I, Pos: [45, 54] cc => I, Pos: [45, 54] cc => I, Pos: [50, 62] cc => I, Pos: [50, 62] cc => I, Pos: [51, 57, 64] ccc => cc, Pos: [54, 78] cc => I, Pos: [54, 78] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [56, 68] cc => I, Pos: [56, 68] cc => I, Pos: [58, 65, 75] ccc => cc, Pos: [61, 67] cc => I, Pos: [61, 67] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [67, 74] cc => I, Pos: [67, 74] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [75, 87] cc => I, Pos: [75, 87] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [98, 108] cc => I, Pos: [98, 108] cc => I, Pos: [99, 116] cc => I, Pos: [99, 116] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I, Pos: [102, 107] cc => I, Pos: [102, 107] cc => I, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 131] cc => I, Pos: [117, 131] cc => I, Pos: [119, 126] cc => I, Pos: [119, 126] cc => I, Pos: [122, 125] cc => I, Pos: [122, 125] cc => I, Pos: [132, 149] cc => I, Pos: [132, 149] cc => I, Pos: [135, 141] cc => I, Pos: [135, 141] cc => I, Pos: [136, 143] cc => I, Pos: [136, 143] cc => I, Pos: [137, 145] cc => I, Pos: [137, 145] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [139, 144, 155] ccc => cc, Pos: [140, 147] cc => I, Pos: [140, 147] cc => I, Pos: [141, 148] cc => I, Pos: [141, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 156] cc => I, Pos: [148, 156] cc => I, Pos: [155, 174] cc => I, Pos: [155, 174] cc => I, Pos: [156, 159, 165] ccc => cc, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [173, 183] cc => I, Pos: [173, 183] cc => I, Pos: [184, 190] cc => I, Pos: [184, 190] cc => I, Pos: [185, 193] cc => I, Pos: [185, 193] cc => I, Pos: [186, 200] cc => I, Pos: [186, 200] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [190, 199] cc => I, Pos: [190, 199] cc => I, Pos: [191, 198] cc => I, Pos: [191, 198] cc => I, Pos: [194, 224] cc => I, Pos: [194, 224] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [200, 203, 211] ccc => cc, Pos: [202, 210] cc => I, Pos: [202, 210] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [209, 217] cc => I, Pos: [209, 217] cc => I, Pos: [217, 225, 227] ccc => cc, Pos: [220, 233] cc => I, Pos: [220, 233] cc => I, Pos: [221, 228] cc => I, Pos: [221, 228] cc => I, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [230, 244] cc => I, Pos: [230, 244] cc => I, Pos: [235, 241] cc => I, Pos: [235, 241] cc => I, Pos: [239, 245] cc => I, Pos: [239, 245] cc => I, Pos: [242, 249] cc => I, Pos: [242, 249] cc => I, Pos: [246, 253] cc => I, Pos: [246, 253] cc => I, Pos: [247, 252] cc => I, Pos: [247, 252] cc => I, Pos: [249, 255, 261] ccc => cc, Pos: [252, 260] cc => I, Pos: [252, 260] cc => I, Pos: [256, 267, 278] ccc => cc, Pos: [258, 263] cc => I, Pos: [258, 263] cc => I, Pos: [264, 273] cc => I, Pos: [264, 273] cc => I, Pos: [266, 274] cc => I, Pos: [266, 274] cc => I, Pos: [268, 279] cc => I, Pos: [268, 279] cc => I, Pos: [273, 280] cc => I, Pos: [273, 280] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [285, 294] cc => I, Pos: [285, 294] cc => I, Pos: [287, 293] cc => I, Pos: [287, 293] cc => I, Pos: [291, 300, 308] ccc => cc, Pos: [293, 309] cc => I, Pos: [293, 309] cc => I, Pos: [297, 304] cc => I, Pos: [297, 304] cc => I, Pos: [299, 313] cc => I, Pos: [299, 313] cc => I, Pos: [300, 308, 314] ccc => cc, Pos: [301, 306, 310] ccc => cc]

--------End Timer [Generate Plans]:  0.17186427116394043

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [54, 78] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [75, 87] cc => I,
 Pos: [61, 67] cc => I,
 Pos: [80, 92] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [98, 108] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [141, 148] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [155, 174] cc => I,
 Pos: [140, 147] cc => I,
 Pos: [156, 159, 165] ccc => cc,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [184, 190] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [186, 200] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [217, 225, 227] ccc => cc,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [242, 249] cc => I,
 Pos: [246, 253] cc => I,
 Pos: [247, 252] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [273, 280] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [293, 309] cc => I,
 Pos: [291, 300, 308] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 66, Saving: 68

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 14] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 33] cc => I
Apply:  Pos: [34, 41] cc => I
Apply:  Pos: [35, 42] cc => I
Apply:  Pos: [50, 62] cc => I
Apply:  Pos: [51, 57, 64] ccc => cc
Apply:  Pos: [54, 78] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [56, 68] cc => I
Apply:  Pos: [75, 87] cc => I
Apply:  Pos: [61, 67] cc => I
Apply:  Pos: [80, 92] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [98, 108] cc => I
Apply:  Pos: [99, 116] cc => I
Apply:  Pos: [101, 109] cc => I
Apply:  Pos: [102, 107] cc => I
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [104, 111] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 131] cc => I
Apply:  Pos: [119, 126] cc => I
Apply:  Pos: [122, 125] cc => I
Apply:  Pos: [132, 149] cc => I
Apply:  Pos: [141, 148] cc => I
Apply:  Pos: [136, 143] cc => I
Apply:  Pos: [137, 145] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [155, 174] cc => I
Apply:  Pos: [140, 147] cc => I
Apply:  Pos: [156, 159, 165] ccc => cc
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [173, 183] cc => I
Apply:  Pos: [184, 190] cc => I
Apply:  Pos: [185, 193] cc => I
Apply:  Pos: [186, 200] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [198, 206] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [202, 210] cc => I
Apply:  Pos: [217, 225, 227] ccc => cc
Apply:  Pos: [220, 233] cc => I
Apply:  Pos: [221, 228] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [224, 229] cc => I
Apply:  Pos: [230, 244] cc => I
Apply:  Pos: [235, 241] cc => I
Apply:  Pos: [239, 245] cc => I
Apply:  Pos: [242, 249] cc => I
Apply:  Pos: [246, 253] cc => I
Apply:  Pos: [247, 252] cc => I
Apply:  Pos: [256, 267, 278] ccc => cc
Apply:  Pos: [258, 263] cc => I
Apply:  Pos: [273, 280] cc => I
Apply:  Pos: [266, 274] cc => I
Apply:  Pos: [268, 279] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [285, 294] cc => I
Apply:  Pos: [293, 309] cc => I
Apply:  Pos: [291, 300, 308] ccc => cc
Apply:  Pos: [297, 304] cc => I
Apply:  Pos: [299, 313] cc => I
Apply:  Pos: [301, 306, 310] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015623092651367188

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 17], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [12, 3], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [0, 17], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 9], [7, 19], [13, 6], [1, 5], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [11, 9], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [17, 12], [18, 14], [12, 2], [6, 4], [0, 17], [15, 3], [10, 18], [17, 4], [6, 12], [9, 14], [2, 16], [15, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [3, 16], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [18, 15], [7, 19], [10, 11], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [3, 16], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 16], [17, 12], [10, 11], [8, 13], [7, 17], [3, 16], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [4, 12], [17, 19], [3, 16], ----End Timer [Execute Mapping]:  6.45131254196167

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[13, 57]
[110, 123]
[147, 168]
[179, 188]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[80, 88, 98]
[159, 167, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[137, 143, 147]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[13, 57]
[110, 123]
[147, 168]
[179, 188]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4379329681396484

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 25] cc => I, Pos: [10, 25] cc => I, Pos: [13, 57] cc => I, Pos: [13, 57] cc => I, Pos: [80, 88, 98] ccc => cc, Pos: [110, 123] cc => I, Pos: [110, 123] cc => I, Pos: [137, 143, 147] ccc => cc, Pos: [147, 168] cc => I, Pos: [147, 168] cc => I, Pos: [159, 167, 176] ccc => cc, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I]

--------End Timer [Generate Plans]:  0.0312347412109375

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 25] cc => I,
 Pos: [13, 57] cc => I,
 Pos: [80, 88, 98] ccc => cc,
 Pos: [110, 123] cc => I,
 Pos: [147, 168] cc => I,
 Pos: [159, 167, 176] ccc => cc,
 Pos: [179, 188] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 25] cc => I
Apply:  Pos: [13, 57] cc => I
Apply:  Pos: [80, 88, 98] ccc => cc
Apply:  Pos: [110, 123] cc => I
Apply:  Pos: [147, 168] cc => I
Apply:  Pos: [159, 167, 176] ccc => cc
Apply:  Pos: [179, 188] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 17], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [12, 3], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [0, 17], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [6, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [1, 5], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [11, 9], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [17, 12], [12, 2], [6, 4], [0, 17], [15, 3], [10, 18], [17, 4], [6, 12], [9, 14], [15, 16], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [18, 15], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.469167709350586

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 110, 124]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.172154188156128

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [103, 110, 124] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [103, 110, 124] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [103, 110, 124] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 17], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [12, 3], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [0, 17], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [6, 17], [7, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [1, 5], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [11, 9], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [9, 14], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [17, 12], [12, 2], [6, 4], [0, 17], [15, 3], [10, 18], [17, 4], [6, 12], [2, 16], [15, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [18, 15], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.172154188156128

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.156557321548462

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 17], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [12, 3], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [0, 17], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [1, 5], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 9], [11, 18], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [9, 14], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [17, 12], [12, 2], [6, 4], [0, 17], [15, 3], [10, 18], [17, 4], [6, 12], [15, 16], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [18, 15], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.156557321548462

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [176] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 42 - (small)
 - circuit cycle: 352

Reduced: 
 - size: 139 (44.13%)
 - depth: 3 (6.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499260902404785

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [0, 7], [12, 3], [11, 9], [1, 5], [13, 18], [0, 7], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [11, 9], [2, 16], [13, 11], [7, 19], [5, 6], [3, 16], [18, 14], [13, 11], [18, 4], [2, 16], [1, 10], [0, 19], [9, 14], [5, 6], [13, 6], [12, 3], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [13, 6], [12, 3], [11, 18], [9, 14], [1, 10], [17, 19], [8, 0], [5, 13], [18, 4], [12, 2], [0, 7], [15, 3], [6, 17], [1, 10], [13, 6], [18, 14], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [12, 2], [13, 6], [0, 7], [17, 19], [2, 3], [11, 9], [18, 14], [4, 12], [5, 8], [13, 6], [12, 3], [2, 16], [11, 9], [0, 17], [4, 14], [7, 19], [1, 10], [8, 6], [12, 3], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [6, 4], [1, 5], [5, 8], [19, 2], [12, 3], [0, 17], [13, 11], [6, 4], [5, 6], [4, 12], [0, 17], [7, 19], [9, 14], [8, 13], [18, 15], [2, 3], [6, 12], [2, 16], [11, 9], [18, 15], [0, 17], [8, 13], [4, 14], [6, 12], [11, 9], [8, 0], [2, 3], [10, 13], [7, 19], [18, 4], [12, 2], [10, 11], [18, 14], [0, 7], [5, 8], [6, 17], [6, 12], [5, 8], [10, 11], [7, 17], [2, 3], [12, 2], [11, 9], [18, 4], [3, 16], [7, 19], [13, 6], [1, 5], [4, 12], [0, 7], [14, 15], [8, 13], [19, 2], [1, 5], [6, 17], [4, 12], [13, 18], [0, 7], [14, 15], [19, 2], [1, 5], [3, 16], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [8, 13], [1, 5], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [0, 17], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [0, 17], [5, 6], [3, 16], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [3, 16], [1, 5], [8, 0], [10, 18], [12, 16], [7, 19], [15, 3], [1, 5], [11, 9], [6, 4], [8, 0], [7, 19], [4, 15], [13, 6], [2, 16], [11, 9], [1, 5], [10, 18], [17, 12], [8, 13], [18, 14], [1, 5], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [8, 13], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 3], [13, 11], [4, 12], [5, 8], [0, 17], [1, 10], [18, 14], [7, 19], [3, 16], [10, 13], [15, 3], [0, 17], [7, 19], [12, 16], [6, 4], [18, 14], [5, 8], [11, 9], [10, 18], [5, 6], [9, 14], [12, 3], [19, 2], [13, 11], [10, 18], [5, 13], [14, 15], [12, 16], [19, 2], [7, 17], [8, 0], [10, 11], [5, 13], [3, 16], [4, 12], [8, 0], [7, 17], [18, 15], [13, 11], [1, 10], [6, 4], [17, 12], [14, 15], [8, 0], [5, 13], [8, 6], [17, 12], [18, 15], [7, 19], [2, 3], [10, 11], [4, 14], [13, 6], [7, 17], [0, 19], [4, 12], [18, 15], [2, 3], [8, 13], [0, 17], [6, 12], [1, 10], [4, 14], [18, 15], [11, 9], [5, 8], [3, 16], [6, 17], [9, 14], [13, 18], [7, 19], [4, 15], [5, 8], [13, 6], [15, 3], [17, 12], [7, 19], [9, 14], [10, 11], [8, 13], [6, 4], [7, 17], [11, 9], [3, 16], [10, 18], [12, 2], [10, 13], [6, 4], [17, 12], [18, 14], [5, 8], [15, 3], [7, 19], [10, 18], [4, 12], [17, 19], [11, 9], [3, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[51, 57, 64]
[58, 65, 75]
[139, 144, 155]
[156, 159, 165]
[200, 203, 211]
[217, 225, 227]
[249, 255, 261]
[256, 267, 278]
[291, 300, 308]
[301, 306, 310]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[300, 308, 314]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.203094005584717

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 14] cc => I, Pos: [9, 14] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [16, 30] cc => I, Pos: [16, 30] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 33] cc => I, Pos: [24, 33] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [34, 41] cc => I, Pos: [34, 41] cc => I, Pos: [35, 42] cc => I, Pos: [35, 42] cc => I, Pos: [45, 54] cc => I, Pos: [45, 54] cc => I, Pos: [50, 62] cc => I, Pos: [50, 62] cc => I, Pos: [51, 57, 64] ccc => cc, Pos: [54, 78] cc => I, Pos: [54, 78] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [56, 68] cc => I, Pos: [56, 68] cc => I, Pos: [58, 65, 75] ccc => cc, Pos: [61, 67] cc => I, Pos: [61, 67] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [67, 74] cc => I, Pos: [67, 74] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [75, 87] cc => I, Pos: [75, 87] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [98, 108] cc => I, Pos: [98, 108] cc => I, Pos: [99, 116] cc => I, Pos: [99, 116] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I, Pos: [102, 107] cc => I, Pos: [102, 107] cc => I, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 131] cc => I, Pos: [117, 131] cc => I, Pos: [119, 126] cc => I, Pos: [119, 126] cc => I, Pos: [122, 125] cc => I, Pos: [122, 125] cc => I, Pos: [132, 149] cc => I, Pos: [132, 149] cc => I, Pos: [135, 141] cc => I, Pos: [135, 141] cc => I, Pos: [136, 143] cc => I, Pos: [136, 143] cc => I, Pos: [137, 145] cc => I, Pos: [137, 145] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [139, 144, 155] ccc => cc, Pos: [140, 147] cc => I, Pos: [140, 147] cc => I, Pos: [141, 148] cc => I, Pos: [141, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 156] cc => I, Pos: [148, 156] cc => I, Pos: [155, 174] cc => I, Pos: [155, 174] cc => I, Pos: [156, 159, 165] ccc => cc, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [173, 183] cc => I, Pos: [173, 183] cc => I, Pos: [184, 190] cc => I, Pos: [184, 190] cc => I, Pos: [185, 193] cc => I, Pos: [185, 193] cc => I, Pos: [186, 200] cc => I, Pos: [186, 200] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [190, 199] cc => I, Pos: [190, 199] cc => I, Pos: [191, 198] cc => I, Pos: [191, 198] cc => I, Pos: [194, 224] cc => I, Pos: [194, 224] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [200, 203, 211] ccc => cc, Pos: [202, 210] cc => I, Pos: [202, 210] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [209, 217] cc => I, Pos: [209, 217] cc => I, Pos: [217, 225, 227] ccc => cc, Pos: [220, 233] cc => I, Pos: [220, 233] cc => I, Pos: [221, 228] cc => I, Pos: [221, 228] cc => I, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [230, 244] cc => I, Pos: [230, 244] cc => I, Pos: [235, 241] cc => I, Pos: [235, 241] cc => I, Pos: [239, 245] cc => I, Pos: [239, 245] cc => I, Pos: [242, 249] cc => I, Pos: [242, 249] cc => I, Pos: [246, 253] cc => I, Pos: [246, 253] cc => I, Pos: [247, 252] cc => I, Pos: [247, 252] cc => I, Pos: [249, 255, 261] ccc => cc, Pos: [252, 260] cc => I, Pos: [252, 260] cc => I, Pos: [256, 267, 278] ccc => cc, Pos: [258, 263] cc => I, Pos: [258, 263] cc => I, Pos: [264, 273] cc => I, Pos: [264, 273] cc => I, Pos: [266, 274] cc => I, Pos: [266, 274] cc => I, Pos: [268, 279] cc => I, Pos: [268, 279] cc => I, Pos: [273, 280] cc => I, Pos: [273, 280] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [285, 294] cc => I, Pos: [285, 294] cc => I, Pos: [287, 293] cc => I, Pos: [287, 293] cc => I, Pos: [291, 300, 308] ccc => cc, Pos: [293, 309] cc => I, Pos: [293, 309] cc => I, Pos: [297, 304] cc => I, Pos: [297, 304] cc => I, Pos: [299, 313] cc => I, Pos: [299, 313] cc => I, Pos: [300, 308, 314] ccc => cc, Pos: [301, 306, 310] ccc => cc]

--------End Timer [Generate Plans]:  0.17186498641967773

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [16, 30] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [45, 54] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [63, 71] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [75, 87] cc => I,
 Pos: [67, 74] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [93, 98] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [135, 141] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [139, 144, 155] ccc => cc,
 Pos: [140, 147] cc => I,
 Pos: [148, 156] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [184, 190] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [200, 203, 211] ccc => cc,
 Pos: [194, 224] cc => I,
 Pos: [191, 198] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [209, 217] cc => I,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [242, 249] cc => I,
 Pos: [246, 253] cc => I,
 Pos: [247, 252] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [264, 273] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [287, 293] cc => I,
 Pos: [300, 308, 314] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 66, Saving: 67

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 14] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [16, 30] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 33] cc => I
Apply:  Pos: [34, 41] cc => I
Apply:  Pos: [35, 42] cc => I
Apply:  Pos: [45, 54] cc => I
Apply:  Pos: [50, 62] cc => I
Apply:  Pos: [51, 57, 64] ccc => cc
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [56, 68] cc => I
Apply:  Pos: [75, 87] cc => I
Apply:  Pos: [67, 74] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [93, 98] cc => I
Apply:  Pos: [99, 116] cc => I
Apply:  Pos: [101, 109] cc => I
Apply:  Pos: [102, 107] cc => I
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [104, 111] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 131] cc => I
Apply:  Pos: [119, 126] cc => I
Apply:  Pos: [122, 125] cc => I
Apply:  Pos: [132, 149] cc => I
Apply:  Pos: [135, 141] cc => I
Apply:  Pos: [136, 143] cc => I
Apply:  Pos: [137, 145] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [139, 144, 155] ccc => cc
Apply:  Pos: [140, 147] cc => I
Apply:  Pos: [148, 156] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [173, 183] cc => I
Apply:  Pos: [184, 190] cc => I
Apply:  Pos: [185, 193] cc => I
Apply:  Pos: [200, 203, 211] ccc => cc
Apply:  Pos: [194, 224] cc => I
Apply:  Pos: [191, 198] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 210] cc => I
Apply:  Pos: [209, 217] cc => I
Apply:  Pos: [220, 233] cc => I
Apply:  Pos: [221, 228] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [230, 244] cc => I
Apply:  Pos: [235, 241] cc => I
Apply:  Pos: [239, 245] cc => I
Apply:  Pos: [242, 249] cc => I
Apply:  Pos: [246, 253] cc => I
Apply:  Pos: [247, 252] cc => I
Apply:  Pos: [256, 267, 278] ccc => cc
Apply:  Pos: [258, 263] cc => I
Apply:  Pos: [264, 273] cc => I
Apply:  Pos: [266, 274] cc => I
Apply:  Pos: [268, 279] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [285, 294] cc => I
Apply:  Pos: [287, 293] cc => I
Apply:  Pos: [300, 308, 314] ccc => cc
Apply:  Pos: [297, 304] cc => I
Apply:  Pos: [299, 313] cc => I
Apply:  Pos: [301, 306, 310] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [17, 19], [2, 3], [4, 12], [5, 8], [2, 16], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 9], [7, 19], [13, 6], [8, 18], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [7, 19], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [10, 14], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [7, 19], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [3, 16], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 11], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [3, 16], [6, 17], [13, 18], [4, 15], [13, 6], [15, 3], [17, 12], [10, 11], [8, 13], [7, 17], [15, 3], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [3, 16], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  6.3749589920043945

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 24]
[114, 138]
[138, 157]
[147, 168]
[173, 178]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[78, 85, 94]
[158, 167, 175]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[75, 80, 82]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 24]
[114, 138]
[138, 157]
[147, 168]
[173, 178]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.421922206878662

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 24] cc => I, Pos: [10, 24] cc => I, Pos: [75, 80, 82] ccc => cc, Pos: [78, 85, 94] ccc => cc, Pos: [114, 138] cc => I, Pos: [114, 138] cc => I, Pos: [138, 157] cc => I, Pos: [138, 157] cc => I, Pos: [147, 168] cc => I, Pos: [147, 168] cc => I, Pos: [158, 167, 175] ccc => cc, Pos: [173, 178] cc => I, Pos: [173, 178] cc => I]

--------End Timer [Generate Plans]:  0.015623092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 24] cc => I,
 Pos: [75, 80, 82] ccc => cc,
 Pos: [78, 85, 94] ccc => cc,
 Pos: [138, 157] cc => I,
 Pos: [147, 168] cc => I,
 Pos: [158, 167, 175] ccc => cc,
 Pos: [173, 178] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 24] cc => I
Apply:  Pos: [75, 80, 82] ccc => cc
Apply:  Pos: [78, 85, 94] ccc => cc
Apply:  Pos: [138, 157] cc => I
Apply:  Pos: [147, 168] cc => I
Apply:  Pos: [158, 167, 175] ccc => cc
Apply:  Pos: [173, 178] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [17, 19], [2, 3], [4, 12], [5, 8], [2, 16], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [8, 18], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [7, 19], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [10, 14], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [3, 16], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.4531822204589844

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.156214952468872

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [17, 19], [2, 3], [4, 12], [5, 8], [2, 16], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [13, 18], [8, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [7, 19], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [10, 14], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [3, 16], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.156214952468872

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [178] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 356

Reduced: 
 - size: 137 (43.49%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12503290176391602

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [0, 7], [12, 3], [11, 9], [1, 5], [13, 18], [0, 7], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [11, 9], [2, 16], [13, 11], [7, 19], [5, 6], [3, 16], [18, 14], [13, 11], [18, 4], [2, 16], [1, 10], [0, 19], [9, 14], [5, 6], [13, 6], [12, 3], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [13, 6], [12, 3], [11, 18], [9, 14], [1, 10], [17, 19], [8, 0], [5, 13], [18, 4], [12, 2], [0, 7], [15, 3], [6, 17], [1, 10], [13, 6], [18, 14], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [12, 2], [13, 6], [0, 7], [17, 19], [2, 3], [11, 9], [18, 14], [4, 12], [5, 8], [13, 6], [12, 3], [2, 16], [11, 9], [0, 17], [4, 14], [7, 19], [1, 10], [8, 6], [12, 3], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [6, 4], [1, 5], [5, 8], [19, 2], [12, 3], [0, 17], [13, 11], [6, 4], [5, 6], [4, 12], [0, 17], [7, 19], [9, 14], [8, 13], [18, 15], [2, 3], [6, 12], [2, 16], [11, 9], [18, 15], [0, 17], [8, 13], [4, 14], [6, 12], [11, 9], [8, 0], [2, 3], [10, 13], [7, 19], [18, 4], [12, 2], [10, 11], [18, 14], [0, 7], [5, 8], [6, 17], [6, 12], [5, 8], [10, 11], [7, 17], [2, 3], [12, 2], [11, 9], [18, 4], [3, 16], [7, 19], [13, 6], [1, 5], [4, 12], [0, 7], [14, 15], [8, 13], [19, 2], [1, 5], [6, 17], [4, 12], [13, 18], [0, 7], [14, 15], [19, 2], [1, 5], [3, 16], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [8, 13], [1, 5], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [0, 17], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [0, 17], [5, 6], [3, 16], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [3, 16], [1, 5], [8, 0], [10, 18], [12, 16], [7, 19], [15, 3], [1, 5], [11, 9], [6, 4], [8, 0], [7, 19], [4, 15], [13, 6], [2, 16], [11, 9], [1, 5], [10, 18], [17, 12], [8, 13], [18, 14], [1, 5], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [8, 13], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 3], [13, 11], [4, 12], [5, 8], [0, 17], [1, 10], [18, 14], [7, 19], [3, 16], [10, 13], [15, 3], [0, 17], [7, 19], [12, 16], [6, 4], [18, 14], [5, 8], [11, 9], [10, 18], [5, 6], [9, 14], [12, 3], [19, 2], [13, 11], [10, 18], [5, 13], [14, 15], [12, 16], [19, 2], [7, 17], [8, 0], [10, 11], [5, 13], [3, 16], [4, 12], [8, 0], [7, 17], [18, 15], [13, 11], [1, 10], [6, 4], [17, 12], [14, 15], [8, 0], [5, 13], [8, 6], [17, 12], [18, 15], [7, 19], [2, 3], [10, 11], [4, 14], [13, 6], [7, 17], [0, 19], [4, 12], [18, 15], [2, 3], [8, 13], [0, 17], [6, 12], [1, 10], [4, 14], [18, 15], [11, 9], [5, 8], [3, 16], [6, 17], [9, 14], [13, 18], [7, 19], [4, 15], [5, 8], [13, 6], [15, 3], [17, 12], [7, 19], [9, 14], [10, 11], [8, 13], [6, 4], [7, 17], [11, 9], [3, 16], [10, 18], [12, 2], [10, 13], [6, 4], [17, 12], [18, 14], [5, 8], [15, 3], [7, 19], [10, 18], [4, 12], [17, 19], [11, 9], [3, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[51, 57, 64]
[58, 65, 75]
[139, 144, 155]
[156, 159, 165]
[200, 203, 211]
[217, 225, 227]
[249, 255, 261]
[256, 267, 278]
[291, 300, 308]
[301, 306, 310]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[300, 308, 314]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.1874918937683105

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 14] cc => I, Pos: [9, 14] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [16, 30] cc => I, Pos: [16, 30] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 33] cc => I, Pos: [24, 33] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [34, 41] cc => I, Pos: [34, 41] cc => I, Pos: [35, 42] cc => I, Pos: [35, 42] cc => I, Pos: [45, 54] cc => I, Pos: [45, 54] cc => I, Pos: [50, 62] cc => I, Pos: [50, 62] cc => I, Pos: [51, 57, 64] ccc => cc, Pos: [54, 78] cc => I, Pos: [54, 78] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [56, 68] cc => I, Pos: [56, 68] cc => I, Pos: [58, 65, 75] ccc => cc, Pos: [61, 67] cc => I, Pos: [61, 67] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [67, 74] cc => I, Pos: [67, 74] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [75, 87] cc => I, Pos: [75, 87] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [98, 108] cc => I, Pos: [98, 108] cc => I, Pos: [99, 116] cc => I, Pos: [99, 116] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I, Pos: [102, 107] cc => I, Pos: [102, 107] cc => I, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 131] cc => I, Pos: [117, 131] cc => I, Pos: [119, 126] cc => I, Pos: [119, 126] cc => I, Pos: [122, 125] cc => I, Pos: [122, 125] cc => I, Pos: [132, 149] cc => I, Pos: [132, 149] cc => I, Pos: [135, 141] cc => I, Pos: [135, 141] cc => I, Pos: [136, 143] cc => I, Pos: [136, 143] cc => I, Pos: [137, 145] cc => I, Pos: [137, 145] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [139, 144, 155] ccc => cc, Pos: [140, 147] cc => I, Pos: [140, 147] cc => I, Pos: [141, 148] cc => I, Pos: [141, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 156] cc => I, Pos: [148, 156] cc => I, Pos: [155, 174] cc => I, Pos: [155, 174] cc => I, Pos: [156, 159, 165] ccc => cc, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [173, 183] cc => I, Pos: [173, 183] cc => I, Pos: [184, 190] cc => I, Pos: [184, 190] cc => I, Pos: [185, 193] cc => I, Pos: [185, 193] cc => I, Pos: [186, 200] cc => I, Pos: [186, 200] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [190, 199] cc => I, Pos: [190, 199] cc => I, Pos: [191, 198] cc => I, Pos: [191, 198] cc => I, Pos: [194, 224] cc => I, Pos: [194, 224] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [200, 203, 211] ccc => cc, Pos: [202, 210] cc => I, Pos: [202, 210] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [209, 217] cc => I, Pos: [209, 217] cc => I, Pos: [217, 225, 227] ccc => cc, Pos: [220, 233] cc => I, Pos: [220, 233] cc => I, Pos: [221, 228] cc => I, Pos: [221, 228] cc => I, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [230, 244] cc => I, Pos: [230, 244] cc => I, Pos: [235, 241] cc => I, Pos: [235, 241] cc => I, Pos: [239, 245] cc => I, Pos: [239, 245] cc => I, Pos: [242, 249] cc => I, Pos: [242, 249] cc => I, Pos: [246, 253] cc => I, Pos: [246, 253] cc => I, Pos: [247, 252] cc => I, Pos: [247, 252] cc => I, Pos: [249, 255, 261] ccc => cc, Pos: [252, 260] cc => I, Pos: [252, 260] cc => I, Pos: [256, 267, 278] ccc => cc, Pos: [258, 263] cc => I, Pos: [258, 263] cc => I, Pos: [264, 273] cc => I, Pos: [264, 273] cc => I, Pos: [266, 274] cc => I, Pos: [266, 274] cc => I, Pos: [268, 279] cc => I, Pos: [268, 279] cc => I, Pos: [273, 280] cc => I, Pos: [273, 280] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [285, 294] cc => I, Pos: [285, 294] cc => I, Pos: [287, 293] cc => I, Pos: [287, 293] cc => I, Pos: [291, 300, 308] ccc => cc, Pos: [293, 309] cc => I, Pos: [293, 309] cc => I, Pos: [297, 304] cc => I, Pos: [297, 304] cc => I, Pos: [299, 313] cc => I, Pos: [299, 313] cc => I, Pos: [300, 308, 314] ccc => cc, Pos: [301, 306, 310] ccc => cc]

--------End Timer [Generate Plans]:  0.1718590259552002

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [54, 78] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [58, 65, 75] ccc => cc,
 Pos: [61, 67] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [93, 98] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [141, 148] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [155, 174] cc => I,
 Pos: [140, 147] cc => I,
 Pos: [156, 159, 165] ccc => cc,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [184, 190] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [200, 203, 211] ccc => cc,
 Pos: [188, 194] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [209, 217] cc => I,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [242, 249] cc => I,
 Pos: [246, 253] cc => I,
 Pos: [247, 252] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [264, 273] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [287, 293] cc => I,
 Pos: [291, 300, 308] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 66, Saving: 67

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 14] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 33] cc => I
Apply:  Pos: [34, 41] cc => I
Apply:  Pos: [35, 42] cc => I
Apply:  Pos: [50, 62] cc => I
Apply:  Pos: [51, 57, 64] ccc => cc
Apply:  Pos: [54, 78] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [56, 68] cc => I
Apply:  Pos: [58, 65, 75] ccc => cc
Apply:  Pos: [61, 67] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [93, 98] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [99, 116] cc => I
Apply:  Pos: [101, 109] cc => I
Apply:  Pos: [102, 107] cc => I
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [104, 111] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 131] cc => I
Apply:  Pos: [119, 126] cc => I
Apply:  Pos: [122, 125] cc => I
Apply:  Pos: [132, 149] cc => I
Apply:  Pos: [141, 148] cc => I
Apply:  Pos: [136, 143] cc => I
Apply:  Pos: [137, 145] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [155, 174] cc => I
Apply:  Pos: [140, 147] cc => I
Apply:  Pos: [156, 159, 165] ccc => cc
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [173, 183] cc => I
Apply:  Pos: [184, 190] cc => I
Apply:  Pos: [185, 193] cc => I
Apply:  Pos: [200, 203, 211] ccc => cc
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [198, 206] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [202, 210] cc => I
Apply:  Pos: [209, 217] cc => I
Apply:  Pos: [220, 233] cc => I
Apply:  Pos: [221, 228] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [224, 229] cc => I
Apply:  Pos: [230, 244] cc => I
Apply:  Pos: [235, 241] cc => I
Apply:  Pos: [239, 245] cc => I
Apply:  Pos: [242, 249] cc => I
Apply:  Pos: [246, 253] cc => I
Apply:  Pos: [247, 252] cc => I
Apply:  Pos: [256, 267, 278] ccc => cc
Apply:  Pos: [258, 263] cc => I
Apply:  Pos: [264, 273] cc => I
Apply:  Pos: [266, 274] cc => I
Apply:  Pos: [268, 279] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [285, 294] cc => I
Apply:  Pos: [287, 293] cc => I
Apply:  Pos: [291, 300, 308] ccc => cc
Apply:  Pos: [297, 304] cc => I
Apply:  Pos: [299, 313] cc => I
Apply:  Pos: [301, 306, 310] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [13, 6], [7, 19], [0, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 9], [7, 19], [13, 6], [1, 5], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [15, 3], [11, 9], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [10, 14], [17, 12], [18, 14], [12, 2], [6, 4], [0, 17], [17, 4], [6, 12], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [3, 16], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 11], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [3, 16], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [10, 11], [8, 13], [7, 17], [3, 16], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], [3, 16], ----End Timer [Execute Mapping]:  6.359350919723511

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[36, 40]
[13, 56]
[59, 69]
[148, 169]
[179, 189]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[81, 89, 99]
[159, 168, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[36, 40]
[13, 56]
[59, 69]
[148, 169]
[179, 189]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.421875

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 25] cc => I, Pos: [10, 25] cc => I, Pos: [13, 56] cc => I, Pos: [13, 56] cc => I, Pos: [36, 40] cc => I, Pos: [36, 40] cc => I, Pos: [59, 69] cc => I, Pos: [59, 69] cc => I, Pos: [81, 89, 99] ccc => cc, Pos: [148, 169] cc => I, Pos: [148, 169] cc => I, Pos: [159, 168, 176] ccc => cc, Pos: [179, 189] cc => I, Pos: [179, 189] cc => I]

--------End Timer [Generate Plans]:  0.01562952995300293

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 25] cc => I,
 Pos: [13, 56] cc => I,
 Pos: [36, 40] cc => I,
 Pos: [59, 69] cc => I,
 Pos: [81, 89, 99] ccc => cc,
 Pos: [148, 169] cc => I,
 Pos: [159, 168, 176] ccc => cc,
 Pos: [179, 189] cc => I]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 25] cc => I
Apply:  Pos: [13, 56] cc => I
Apply:  Pos: [36, 40] cc => I
Apply:  Pos: [59, 69] cc => I
Apply:  Pos: [81, 89, 99] ccc => cc
Apply:  Pos: [148, 169] cc => I
Apply:  Pos: [159, 168, 176] ccc => cc
Apply:  Pos: [179, 189] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [13, 6], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [6, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [1, 5], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [15, 3], [11, 9], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [10, 14], [17, 12], [18, 14], [12, 2], [6, 4], [0, 17], [17, 4], [6, 12], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.437504529953003

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1094307899475098

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [13, 6], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [6, 17], [7, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [1, 5], [8, 13], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [1, 6], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [10, 18], [12, 16], [15, 3], [11, 9], [6, 4], [4, 15], [13, 6], [2, 16], [1, 5], [10, 14], [17, 12], [18, 14], [12, 2], [6, 4], [0, 17], [17, 4], [6, 12], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.1094307899475098

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [176] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 352

Reduced: 
 - size: 139 (44.13%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936594009399414

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [0, 7], [12, 3], [11, 9], [1, 5], [13, 18], [0, 7], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [11, 9], [2, 16], [13, 11], [7, 19], [5, 6], [3, 16], [18, 14], [13, 11], [18, 4], [2, 16], [1, 10], [0, 19], [9, 14], [5, 6], [13, 6], [12, 3], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [13, 6], [12, 3], [11, 18], [9, 14], [1, 10], [17, 19], [8, 0], [5, 13], [18, 4], [12, 2], [0, 7], [15, 3], [6, 17], [1, 10], [13, 6], [18, 14], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [12, 2], [13, 6], [0, 7], [17, 19], [2, 3], [11, 9], [18, 14], [4, 12], [5, 8], [13, 6], [12, 3], [2, 16], [11, 9], [0, 17], [4, 14], [7, 19], [1, 10], [8, 6], [12, 3], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [6, 4], [1, 5], [5, 8], [19, 2], [12, 3], [0, 17], [13, 11], [6, 4], [5, 6], [4, 12], [0, 17], [7, 19], [9, 14], [8, 13], [18, 15], [2, 3], [6, 12], [2, 16], [11, 9], [18, 15], [0, 17], [8, 13], [4, 14], [6, 12], [11, 9], [8, 0], [2, 3], [10, 13], [7, 19], [18, 4], [12, 2], [10, 11], [18, 14], [0, 7], [5, 8], [6, 17], [6, 12], [5, 8], [10, 11], [7, 17], [2, 3], [12, 2], [11, 9], [18, 4], [3, 16], [7, 19], [13, 6], [1, 5], [4, 12], [0, 7], [14, 15], [8, 13], [19, 2], [1, 5], [6, 17], [4, 12], [13, 18], [0, 7], [14, 15], [19, 2], [1, 5], [3, 16], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [8, 13], [1, 5], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [0, 17], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [0, 17], [5, 6], [3, 16], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [3, 16], [1, 5], [8, 0], [10, 18], [12, 16], [7, 19], [15, 3], [1, 5], [11, 9], [6, 4], [8, 0], [7, 19], [4, 15], [13, 6], [2, 16], [11, 9], [1, 5], [10, 18], [17, 12], [8, 13], [18, 14], [1, 5], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [8, 13], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 3], [13, 11], [4, 12], [5, 8], [0, 17], [1, 10], [18, 14], [7, 19], [3, 16], [10, 13], [15, 3], [0, 17], [7, 19], [12, 16], [6, 4], [18, 14], [5, 8], [11, 9], [10, 18], [5, 6], [9, 14], [12, 3], [19, 2], [13, 11], [10, 18], [5, 13], [14, 15], [12, 16], [19, 2], [7, 17], [8, 0], [10, 11], [5, 13], [3, 16], [4, 12], [8, 0], [7, 17], [18, 15], [13, 11], [1, 10], [6, 4], [17, 12], [14, 15], [8, 0], [5, 13], [8, 6], [17, 12], [18, 15], [7, 19], [2, 3], [10, 11], [4, 14], [13, 6], [7, 17], [0, 19], [4, 12], [18, 15], [2, 3], [8, 13], [0, 17], [6, 12], [1, 10], [4, 14], [18, 15], [11, 9], [5, 8], [3, 16], [6, 17], [9, 14], [13, 18], [7, 19], [4, 15], [5, 8], [13, 6], [15, 3], [17, 12], [7, 19], [9, 14], [10, 11], [8, 13], [6, 4], [7, 17], [11, 9], [3, 16], [10, 18], [12, 2], [10, 13], [6, 4], [17, 12], [18, 14], [5, 8], [15, 3], [7, 19], [10, 18], [4, 12], [17, 19], [11, 9], [3, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[51, 57, 64]
[58, 65, 75]
[139, 144, 155]
[156, 159, 165]
[200, 203, 211]
[217, 225, 227]
[249, 255, 261]
[256, 267, 278]
[291, 300, 308]
[301, 306, 310]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[300, 308, 314]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.250174045562744

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 14] cc => I, Pos: [9, 14] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [16, 30] cc => I, Pos: [16, 30] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 33] cc => I, Pos: [24, 33] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [34, 41] cc => I, Pos: [34, 41] cc => I, Pos: [35, 42] cc => I, Pos: [35, 42] cc => I, Pos: [45, 54] cc => I, Pos: [45, 54] cc => I, Pos: [50, 62] cc => I, Pos: [50, 62] cc => I, Pos: [51, 57, 64] ccc => cc, Pos: [54, 78] cc => I, Pos: [54, 78] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [56, 68] cc => I, Pos: [56, 68] cc => I, Pos: [58, 65, 75] ccc => cc, Pos: [61, 67] cc => I, Pos: [61, 67] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [67, 74] cc => I, Pos: [67, 74] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [75, 87] cc => I, Pos: [75, 87] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [98, 108] cc => I, Pos: [98, 108] cc => I, Pos: [99, 116] cc => I, Pos: [99, 116] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I, Pos: [102, 107] cc => I, Pos: [102, 107] cc => I, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 131] cc => I, Pos: [117, 131] cc => I, Pos: [119, 126] cc => I, Pos: [119, 126] cc => I, Pos: [122, 125] cc => I, Pos: [122, 125] cc => I, Pos: [132, 149] cc => I, Pos: [132, 149] cc => I, Pos: [135, 141] cc => I, Pos: [135, 141] cc => I, Pos: [136, 143] cc => I, Pos: [136, 143] cc => I, Pos: [137, 145] cc => I, Pos: [137, 145] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [139, 144, 155] ccc => cc, Pos: [140, 147] cc => I, Pos: [140, 147] cc => I, Pos: [141, 148] cc => I, Pos: [141, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 156] cc => I, Pos: [148, 156] cc => I, Pos: [155, 174] cc => I, Pos: [155, 174] cc => I, Pos: [156, 159, 165] ccc => cc, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [173, 183] cc => I, Pos: [173, 183] cc => I, Pos: [184, 190] cc => I, Pos: [184, 190] cc => I, Pos: [185, 193] cc => I, Pos: [185, 193] cc => I, Pos: [186, 200] cc => I, Pos: [186, 200] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [190, 199] cc => I, Pos: [190, 199] cc => I, Pos: [191, 198] cc => I, Pos: [191, 198] cc => I, Pos: [194, 224] cc => I, Pos: [194, 224] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [200, 203, 211] ccc => cc, Pos: [202, 210] cc => I, Pos: [202, 210] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [209, 217] cc => I, Pos: [209, 217] cc => I, Pos: [217, 225, 227] ccc => cc, Pos: [220, 233] cc => I, Pos: [220, 233] cc => I, Pos: [221, 228] cc => I, Pos: [221, 228] cc => I, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [230, 244] cc => I, Pos: [230, 244] cc => I, Pos: [235, 241] cc => I, Pos: [235, 241] cc => I, Pos: [239, 245] cc => I, Pos: [239, 245] cc => I, Pos: [242, 249] cc => I, Pos: [242, 249] cc => I, Pos: [246, 253] cc => I, Pos: [246, 253] cc => I, Pos: [247, 252] cc => I, Pos: [247, 252] cc => I, Pos: [249, 255, 261] ccc => cc, Pos: [252, 260] cc => I, Pos: [252, 260] cc => I, Pos: [256, 267, 278] ccc => cc, Pos: [258, 263] cc => I, Pos: [258, 263] cc => I, Pos: [264, 273] cc => I, Pos: [264, 273] cc => I, Pos: [266, 274] cc => I, Pos: [266, 274] cc => I, Pos: [268, 279] cc => I, Pos: [268, 279] cc => I, Pos: [273, 280] cc => I, Pos: [273, 280] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [285, 294] cc => I, Pos: [285, 294] cc => I, Pos: [287, 293] cc => I, Pos: [287, 293] cc => I, Pos: [291, 300, 308] ccc => cc, Pos: [293, 309] cc => I, Pos: [293, 309] cc => I, Pos: [297, 304] cc => I, Pos: [297, 304] cc => I, Pos: [299, 313] cc => I, Pos: [299, 313] cc => I, Pos: [300, 308, 314] ccc => cc, Pos: [301, 306, 310] ccc => cc]

--------End Timer [Generate Plans]:  0.17166876792907715

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [78, 84] cc => I,
 Pos: [55, 63] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [75, 87] cc => I,
 Pos: [67, 74] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [93, 98] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [135, 141] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [155, 174] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [148, 156] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [190, 199] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [186, 200] cc => I,
 Pos: [194, 224] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [209, 217] cc => I,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [242, 249] cc => I,
 Pos: [246, 253] cc => I,
 Pos: [247, 252] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [273, 280] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [293, 309] cc => I,
 Pos: [300, 308, 314] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 65, Saving: 66

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 14] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 33] cc => I
Apply:  Pos: [34, 41] cc => I
Apply:  Pos: [35, 42] cc => I
Apply:  Pos: [50, 62] cc => I
Apply:  Pos: [51, 57, 64] ccc => cc
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [55, 63] cc => I
Apply:  Pos: [56, 68] cc => I
Apply:  Pos: [75, 87] cc => I
Apply:  Pos: [67, 74] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [93, 98] cc => I
Apply:  Pos: [99, 116] cc => I
Apply:  Pos: [101, 109] cc => I
Apply:  Pos: [102, 107] cc => I
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [104, 111] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 131] cc => I
Apply:  Pos: [119, 126] cc => I
Apply:  Pos: [122, 125] cc => I
Apply:  Pos: [132, 149] cc => I
Apply:  Pos: [135, 141] cc => I
Apply:  Pos: [136, 143] cc => I
Apply:  Pos: [137, 145] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [155, 174] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [148, 156] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [173, 183] cc => I
Apply:  Pos: [190, 199] cc => I
Apply:  Pos: [185, 193] cc => I
Apply:  Pos: [186, 200] cc => I
Apply:  Pos: [194, 224] cc => I
Apply:  Pos: [198, 206] cc => I
Apply:  Pos: [202, 210] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [209, 217] cc => I
Apply:  Pos: [220, 233] cc => I
Apply:  Pos: [221, 228] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [230, 244] cc => I
Apply:  Pos: [235, 241] cc => I
Apply:  Pos: [239, 245] cc => I
Apply:  Pos: [242, 249] cc => I
Apply:  Pos: [246, 253] cc => I
Apply:  Pos: [247, 252] cc => I
Apply:  Pos: [256, 267, 278] ccc => cc
Apply:  Pos: [258, 263] cc => I
Apply:  Pos: [273, 280] cc => I
Apply:  Pos: [266, 274] cc => I
Apply:  Pos: [268, 279] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [285, 294] cc => I
Apply:  Pos: [293, 309] cc => I
Apply:  Pos: [300, 308, 314] ccc => cc
Apply:  Pos: [297, 304] cc => I
Apply:  Pos: [299, 313] cc => I
Apply:  Pos: [301, 306, 310] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [1, 10], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 9], [7, 19], [13, 6], [8, 13], [19, 2], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [1, 5], [12, 16], [7, 19], [15, 3], [11, 9], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [18, 14], [12, 2], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [7, 19], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [3, 16], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [18, 15], [7, 19], [10, 11], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [3, 16], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [15, 3], [17, 12], [10, 11], [8, 13], [7, 17], [15, 3], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [3, 16], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  6.421842813491821

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[13, 39]
[109, 123]
[115, 138]
[138, 158]
[147, 168]
[174, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[25, 34, 43]
[80, 88, 96]
[159, 167, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 25]
[13, 39]
[109, 123]
[115, 138]
[138, 158]
[147, 168]
[174, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4218361377716064

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 25] cc => I, Pos: [10, 25] cc => I, Pos: [13, 39] cc => I, Pos: [13, 39] cc => I, Pos: [25, 34, 43] ccc => cc, Pos: [80, 88, 96] ccc => cc, Pos: [109, 123] cc => I, Pos: [109, 123] cc => I, Pos: [115, 138] cc => I, Pos: [115, 138] cc => I, Pos: [138, 158] cc => I, Pos: [138, 158] cc => I, Pos: [147, 168] cc => I, Pos: [147, 168] cc => I, Pos: [159, 167, 176] ccc => cc, Pos: [174, 179] cc => I, Pos: [174, 179] cc => I]

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 34, 43] ccc => cc,
 Pos: [13, 39] cc => I,
 Pos: [80, 88, 96] ccc => cc,
 Pos: [109, 123] cc => I,
 Pos: [115, 138] cc => I,
 Pos: [147, 168] cc => I,
 Pos: [159, 167, 176] ccc => cc,
 Pos: [174, 179] cc => I]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 34, 43] ccc => cc
Apply:  Pos: [13, 39] cc => I
Apply:  Pos: [80, 88, 96] ccc => cc
Apply:  Pos: [109, 123] cc => I
Apply:  Pos: [115, 138] cc => I
Apply:  Pos: [147, 168] cc => I
Apply:  Pos: [159, 167, 176] ccc => cc
Apply:  Pos: [174, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [1, 13], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [7, 19], [0, 17], [3, 16], [11, 9], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [6, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [8, 13], [19, 2], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [9, 14], [0, 7], [4, 12], [17, 19], [13, 6], [1, 5], [12, 16], [15, 3], [11, 9], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [18, 15], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [3, 16], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.437459945678711

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 111, 123]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.124253511428833

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [103, 111, 123] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [103, 111, 123] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [103, 111, 123] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [1, 13], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [7, 19], [0, 17], [3, 16], [11, 9], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [6, 17], [7, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [8, 13], [19, 2], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 18], [11, 9], [0, 7], [4, 12], [17, 19], [13, 6], [1, 5], [12, 16], [15, 3], [9, 14], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [18, 15], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [3, 16], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.124253511428833

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.0937294960021973

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [1, 13], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [7, 19], [0, 17], [3, 16], [11, 9], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [0, 17], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 14], [7, 19], [13, 6], [8, 13], [19, 2], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [19, 2], [11, 9], [11, 18], [0, 7], [4, 12], [17, 19], [13, 6], [1, 5], [12, 16], [15, 3], [9, 14], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [18, 15], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [11, 9], [6, 17], [13, 18], [7, 19], [4, 15], [13, 6], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [3, 16], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.0937294960021973

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [175] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 350

Reduced: 
 - size: 140 (44.44%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14062833786010742

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [0, 7], [12, 3], [11, 9], [1, 5], [13, 18], [0, 7], [17, 19], [1, 10], [8, 6], [14, 15], [4, 12], [11, 9], [2, 16], [13, 11], [7, 19], [5, 6], [3, 16], [18, 14], [13, 11], [18, 4], [2, 16], [1, 10], [0, 19], [9, 14], [5, 6], [13, 6], [12, 3], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [13, 6], [12, 3], [11, 18], [9, 14], [1, 10], [17, 19], [8, 0], [5, 13], [18, 4], [12, 2], [0, 7], [15, 3], [6, 17], [1, 10], [13, 6], [18, 14], [7, 19], [0, 17], [3, 16], [1, 5], [11, 9], [12, 2], [13, 6], [0, 7], [17, 19], [2, 3], [11, 9], [18, 14], [4, 12], [5, 8], [13, 6], [12, 3], [2, 16], [11, 9], [0, 17], [4, 14], [7, 19], [1, 10], [8, 6], [12, 3], [5, 13], [19, 2], [4, 15], [1, 10], [8, 13], [12, 2], [0, 17], [6, 4], [1, 5], [5, 8], [19, 2], [12, 3], [0, 17], [13, 11], [6, 4], [5, 6], [4, 12], [0, 17], [7, 19], [9, 14], [8, 13], [18, 15], [2, 3], [6, 12], [2, 16], [11, 9], [18, 15], [0, 17], [8, 13], [4, 14], [6, 12], [11, 9], [8, 0], [2, 3], [10, 13], [7, 19], [18, 4], [12, 2], [10, 11], [18, 14], [0, 7], [5, 8], [6, 17], [6, 12], [5, 8], [10, 11], [7, 17], [2, 3], [12, 2], [11, 9], [18, 4], [3, 16], [7, 19], [13, 6], [1, 5], [4, 12], [0, 7], [14, 15], [8, 13], [19, 2], [1, 5], [6, 17], [4, 12], [13, 18], [0, 7], [14, 15], [19, 2], [1, 5], [3, 16], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [8, 13], [1, 5], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [0, 17], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [0, 17], [5, 6], [3, 16], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [3, 16], [1, 5], [8, 0], [10, 18], [12, 16], [7, 19], [15, 3], [1, 5], [11, 9], [6, 4], [8, 0], [7, 19], [4, 15], [13, 6], [2, 16], [11, 9], [1, 5], [10, 18], [17, 12], [8, 13], [18, 14], [1, 5], [12, 2], [11, 9], [6, 4], [0, 17], [15, 3], [8, 13], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [15, 3], [13, 11], [4, 12], [5, 8], [0, 17], [1, 10], [18, 14], [7, 19], [3, 16], [10, 13], [15, 3], [0, 17], [7, 19], [12, 16], [6, 4], [18, 14], [5, 8], [11, 9], [10, 18], [5, 6], [9, 14], [12, 3], [19, 2], [13, 11], [10, 18], [5, 13], [14, 15], [12, 16], [19, 2], [7, 17], [8, 0], [10, 11], [5, 13], [3, 16], [4, 12], [8, 0], [7, 17], [18, 15], [13, 11], [1, 10], [6, 4], [17, 12], [14, 15], [8, 0], [5, 13], [8, 6], [17, 12], [18, 15], [7, 19], [2, 3], [10, 11], [4, 14], [13, 6], [7, 17], [0, 19], [4, 12], [18, 15], [2, 3], [8, 13], [0, 17], [6, 12], [1, 10], [4, 14], [18, 15], [11, 9], [5, 8], [3, 16], [6, 17], [9, 14], [13, 18], [7, 19], [4, 15], [5, 8], [13, 6], [15, 3], [17, 12], [7, 19], [9, 14], [10, 11], [8, 13], [6, 4], [7, 17], [11, 9], [3, 16], [10, 18], [12, 2], [10, 13], [6, 4], [17, 12], [18, 14], [5, 8], [15, 3], [7, 19], [10, 18], [4, 12], [17, 19], [11, 9], [3, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[51, 57, 64]
[58, 65, 75]
[139, 144, 155]
[156, 159, 165]
[200, 203, 211]
[217, 225, 227]
[249, 255, 261]
[256, 267, 278]
[291, 300, 308]
[301, 306, 310]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[300, 308, 314]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[9, 14]
[11, 20]
[22, 27]
[16, 30]
[24, 33]
[34, 41]
[35, 42]
[30, 45]
[45, 54]
[50, 62]
[55, 63]
[61, 67]
[56, 68]
[63, 71]
[67, 74]
[54, 78]
[72, 80]
[78, 84]
[75, 87]
[80, 92]
[87, 93]
[88, 95]
[93, 98]
[102, 107]
[98, 108]
[101, 109]
[104, 111]
[106, 112]
[103, 114]
[99, 116]
[122, 125]
[119, 126]
[117, 131]
[135, 141]
[136, 143]
[137, 145]
[138, 146]
[140, 147]
[141, 148]
[132, 149]
[147, 153]
[148, 156]
[164, 171]
[155, 174]
[173, 183]
[184, 190]
[185, 193]
[188, 194]
[191, 198]
[190, 199]
[186, 200]
[199, 204]
[198, 206]
[202, 210]
[204, 214]
[209, 217]
[194, 224]
[221, 228]
[224, 229]
[223, 232]
[220, 233]
[235, 241]
[230, 244]
[239, 245]
[242, 249]
[247, 252]
[246, 253]
[252, 260]
[258, 263]
[264, 273]
[266, 274]
[268, 279]
[273, 280]
[282, 289]
[287, 293]
[285, 294]
[297, 304]
[293, 309]
[299, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.140615940093994

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 14] cc => I, Pos: [9, 14] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [16, 30] cc => I, Pos: [16, 30] cc => I, Pos: [22, 27] cc => I, Pos: [22, 27] cc => I, Pos: [24, 33] cc => I, Pos: [24, 33] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [34, 41] cc => I, Pos: [34, 41] cc => I, Pos: [35, 42] cc => I, Pos: [35, 42] cc => I, Pos: [45, 54] cc => I, Pos: [45, 54] cc => I, Pos: [50, 62] cc => I, Pos: [50, 62] cc => I, Pos: [51, 57, 64] ccc => cc, Pos: [54, 78] cc => I, Pos: [54, 78] cc => I, Pos: [55, 63] cc => I, Pos: [55, 63] cc => I, Pos: [56, 68] cc => I, Pos: [56, 68] cc => I, Pos: [58, 65, 75] ccc => cc, Pos: [61, 67] cc => I, Pos: [61, 67] cc => I, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [67, 74] cc => I, Pos: [67, 74] cc => I, Pos: [72, 80] cc => I, Pos: [72, 80] cc => I, Pos: [75, 87] cc => I, Pos: [75, 87] cc => I, Pos: [78, 84] cc => I, Pos: [78, 84] cc => I, Pos: [80, 92] cc => I, Pos: [80, 92] cc => I, Pos: [87, 93] cc => I, Pos: [87, 93] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [93, 98] cc => I, Pos: [93, 98] cc => I, Pos: [98, 108] cc => I, Pos: [98, 108] cc => I, Pos: [99, 116] cc => I, Pos: [99, 116] cc => I, Pos: [101, 109] cc => I, Pos: [101, 109] cc => I, Pos: [102, 107] cc => I, Pos: [102, 107] cc => I, Pos: [103, 114] cc => I, Pos: [103, 114] cc => I, Pos: [104, 111] cc => I, Pos: [104, 111] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [117, 131] cc => I, Pos: [117, 131] cc => I, Pos: [119, 126] cc => I, Pos: [119, 126] cc => I, Pos: [122, 125] cc => I, Pos: [122, 125] cc => I, Pos: [132, 149] cc => I, Pos: [132, 149] cc => I, Pos: [135, 141] cc => I, Pos: [135, 141] cc => I, Pos: [136, 143] cc => I, Pos: [136, 143] cc => I, Pos: [137, 145] cc => I, Pos: [137, 145] cc => I, Pos: [138, 146] cc => I, Pos: [138, 146] cc => I, Pos: [139, 144, 155] ccc => cc, Pos: [140, 147] cc => I, Pos: [140, 147] cc => I, Pos: [141, 148] cc => I, Pos: [141, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 156] cc => I, Pos: [148, 156] cc => I, Pos: [155, 174] cc => I, Pos: [155, 174] cc => I, Pos: [156, 159, 165] ccc => cc, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [173, 183] cc => I, Pos: [173, 183] cc => I, Pos: [184, 190] cc => I, Pos: [184, 190] cc => I, Pos: [185, 193] cc => I, Pos: [185, 193] cc => I, Pos: [186, 200] cc => I, Pos: [186, 200] cc => I, Pos: [188, 194] cc => I, Pos: [188, 194] cc => I, Pos: [190, 199] cc => I, Pos: [190, 199] cc => I, Pos: [191, 198] cc => I, Pos: [191, 198] cc => I, Pos: [194, 224] cc => I, Pos: [194, 224] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [200, 203, 211] ccc => cc, Pos: [202, 210] cc => I, Pos: [202, 210] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [209, 217] cc => I, Pos: [209, 217] cc => I, Pos: [217, 225, 227] ccc => cc, Pos: [220, 233] cc => I, Pos: [220, 233] cc => I, Pos: [221, 228] cc => I, Pos: [221, 228] cc => I, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [224, 229] cc => I, Pos: [224, 229] cc => I, Pos: [230, 244] cc => I, Pos: [230, 244] cc => I, Pos: [235, 241] cc => I, Pos: [235, 241] cc => I, Pos: [239, 245] cc => I, Pos: [239, 245] cc => I, Pos: [242, 249] cc => I, Pos: [242, 249] cc => I, Pos: [246, 253] cc => I, Pos: [246, 253] cc => I, Pos: [247, 252] cc => I, Pos: [247, 252] cc => I, Pos: [249, 255, 261] ccc => cc, Pos: [252, 260] cc => I, Pos: [252, 260] cc => I, Pos: [256, 267, 278] ccc => cc, Pos: [258, 263] cc => I, Pos: [258, 263] cc => I, Pos: [264, 273] cc => I, Pos: [264, 273] cc => I, Pos: [266, 274] cc => I, Pos: [266, 274] cc => I, Pos: [268, 279] cc => I, Pos: [268, 279] cc => I, Pos: [273, 280] cc => I, Pos: [273, 280] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [285, 294] cc => I, Pos: [285, 294] cc => I, Pos: [287, 293] cc => I, Pos: [287, 293] cc => I, Pos: [291, 300, 308] ccc => cc, Pos: [293, 309] cc => I, Pos: [293, 309] cc => I, Pos: [297, 304] cc => I, Pos: [297, 304] cc => I, Pos: [299, 313] cc => I, Pos: [299, 313] cc => I, Pos: [300, 308, 314] ccc => cc, Pos: [301, 306, 310] ccc => cc]

Plan: 1
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [16, 30] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [45, 54] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [55, 63] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [58, 65, 75] ccc => cc,
 Pos: [61, 67] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [98, 108] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [135, 141] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [139, 144, 155] ccc => cc,
 Pos: [140, 147] cc => I,
 Pos: [148, 156] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [184, 190] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [186, 200] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [191, 198] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [209, 217] cc => I,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [242, 249] cc => I,
 Pos: [246, 253] cc => I,
 Pos: [247, 252] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [264, 273] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [287, 293] cc => I,
 Pos: [291, 300, 308] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 68, Saving: 69

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.17186379432678223

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 14] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [16, 30] cc => I,
 Pos: [22, 27] cc => I,
 Pos: [24, 33] cc => I,
 Pos: [34, 41] cc => I,
 Pos: [35, 42] cc => I,
 Pos: [45, 54] cc => I,
 Pos: [50, 62] cc => I,
 Pos: [51, 57, 64] ccc => cc,
 Pos: [55, 63] cc => I,
 Pos: [56, 68] cc => I,
 Pos: [58, 65, 75] ccc => cc,
 Pos: [61, 67] cc => I,
 Pos: [72, 80] cc => I,
 Pos: [78, 84] cc => I,
 Pos: [87, 93] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [98, 108] cc => I,
 Pos: [99, 116] cc => I,
 Pos: [101, 109] cc => I,
 Pos: [102, 107] cc => I,
 Pos: [103, 114] cc => I,
 Pos: [104, 111] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [117, 131] cc => I,
 Pos: [119, 126] cc => I,
 Pos: [122, 125] cc => I,
 Pos: [132, 149] cc => I,
 Pos: [135, 141] cc => I,
 Pos: [136, 143] cc => I,
 Pos: [137, 145] cc => I,
 Pos: [138, 146] cc => I,
 Pos: [139, 144, 155] ccc => cc,
 Pos: [140, 147] cc => I,
 Pos: [148, 156] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [173, 183] cc => I,
 Pos: [184, 190] cc => I,
 Pos: [185, 193] cc => I,
 Pos: [186, 200] cc => I,
 Pos: [188, 194] cc => I,
 Pos: [191, 198] cc => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 210] cc => I,
 Pos: [209, 217] cc => I,
 Pos: [220, 233] cc => I,
 Pos: [221, 228] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [224, 229] cc => I,
 Pos: [230, 244] cc => I,
 Pos: [235, 241] cc => I,
 Pos: [239, 245] cc => I,
 Pos: [242, 249] cc => I,
 Pos: [246, 253] cc => I,
 Pos: [247, 252] cc => I,
 Pos: [256, 267, 278] ccc => cc,
 Pos: [258, 263] cc => I,
 Pos: [264, 273] cc => I,
 Pos: [266, 274] cc => I,
 Pos: [268, 279] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [285, 294] cc => I,
 Pos: [287, 293] cc => I,
 Pos: [291, 300, 308] ccc => cc,
 Pos: [297, 304] cc => I,
 Pos: [299, 313] cc => I,
 Pos: [301, 306, 310] ccc => cc]
Change: 68, Saving: 69

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 14] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [16, 30] cc => I
Apply:  Pos: [22, 27] cc => I
Apply:  Pos: [24, 33] cc => I
Apply:  Pos: [34, 41] cc => I
Apply:  Pos: [35, 42] cc => I
Apply:  Pos: [45, 54] cc => I
Apply:  Pos: [50, 62] cc => I
Apply:  Pos: [51, 57, 64] ccc => cc
Apply:  Pos: [55, 63] cc => I
Apply:  Pos: [56, 68] cc => I
Apply:  Pos: [58, 65, 75] ccc => cc
Apply:  Pos: [61, 67] cc => I
Apply:  Pos: [72, 80] cc => I
Apply:  Pos: [78, 84] cc => I
Apply:  Pos: [87, 93] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [98, 108] cc => I
Apply:  Pos: [99, 116] cc => I
Apply:  Pos: [101, 109] cc => I
Apply:  Pos: [102, 107] cc => I
Apply:  Pos: [103, 114] cc => I
Apply:  Pos: [104, 111] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [117, 131] cc => I
Apply:  Pos: [119, 126] cc => I
Apply:  Pos: [122, 125] cc => I
Apply:  Pos: [132, 149] cc => I
Apply:  Pos: [135, 141] cc => I
Apply:  Pos: [136, 143] cc => I
Apply:  Pos: [137, 145] cc => I
Apply:  Pos: [138, 146] cc => I
Apply:  Pos: [139, 144, 155] ccc => cc
Apply:  Pos: [140, 147] cc => I
Apply:  Pos: [148, 156] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [173, 183] cc => I
Apply:  Pos: [184, 190] cc => I
Apply:  Pos: [185, 193] cc => I
Apply:  Pos: [186, 200] cc => I
Apply:  Pos: [188, 194] cc => I
Apply:  Pos: [191, 198] cc => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 210] cc => I
Apply:  Pos: [209, 217] cc => I
Apply:  Pos: [220, 233] cc => I
Apply:  Pos: [221, 228] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [224, 229] cc => I
Apply:  Pos: [230, 244] cc => I
Apply:  Pos: [235, 241] cc => I
Apply:  Pos: [239, 245] cc => I
Apply:  Pos: [242, 249] cc => I
Apply:  Pos: [246, 253] cc => I
Apply:  Pos: [247, 252] cc => I
Apply:  Pos: [256, 267, 278] ccc => cc
Apply:  Pos: [258, 263] cc => I
Apply:  Pos: [264, 273] cc => I
Apply:  Pos: [266, 274] cc => I
Apply:  Pos: [268, 279] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [285, 294] cc => I
Apply:  Pos: [287, 293] cc => I
Apply:  Pos: [291, 300, 308] ccc => cc
Apply:  Pos: [297, 304] cc => I
Apply:  Pos: [299, 313] cc => I
Apply:  Pos: [301, 306, 310] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [1, 5], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [1, 5], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [0, 19], [15, 3], [6, 17], [7, 19], [0, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 17], [6, 12], [7, 17], [2, 3], [12, 2], [11, 9], [7, 19], [13, 6], [8, 18], [6, 17], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [11, 9], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [18, 14], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [18, 14], [12, 2], [11, 9], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [3, 16], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 11], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [3, 16], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [10, 11], [8, 13], [7, 17], [3, 16], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], [3, 16], ----End Timer [Execute Mapping]:  6.312479734420776

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 24]
[35, 38]
[107, 118]
[143, 164]
[174, 184]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 33, 41]
[77, 84, 93]
[154, 163, 171]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[74, 79, 81]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[10, 24]
[35, 38]
[107, 118]
[143, 164]
[174, 184]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2805898189544678

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 24] cc => I, Pos: [10, 24] cc => I, Pos: [24, 33, 41] ccc => cc, Pos: [35, 38] cc => I, Pos: [35, 38] cc => I, Pos: [74, 79, 81] ccc => cc, Pos: [77, 84, 93] ccc => cc, Pos: [107, 118] cc => I, Pos: [107, 118] cc => I, Pos: [143, 164] cc => I, Pos: [143, 164] cc => I, Pos: [154, 163, 171] ccc => cc, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I]

Plan: 1
[Pos: [10, 24] cc => I,
 Pos: [35, 38] cc => I,
 Pos: [74, 79, 81] ccc => cc,
 Pos: [77, 84, 93] ccc => cc,
 Pos: [107, 118] cc => I,
 Pos: [143, 164] cc => I,
 Pos: [154, 163, 171] ccc => cc,
 Pos: [174, 184] cc => I]
Change: 8, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015637874603271484

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 24] cc => I,
 Pos: [35, 38] cc => I,
 Pos: [74, 79, 81] ccc => cc,
 Pos: [77, 84, 93] ccc => cc,
 Pos: [107, 118] cc => I,
 Pos: [143, 164] cc => I,
 Pos: [154, 163, 171] ccc => cc,
 Pos: [174, 184] cc => I]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [10, 24] cc => I
Apply:  Pos: [35, 38] cc => I
Apply:  Pos: [74, 79, 81] ccc => cc
Apply:  Pos: [77, 84, 93] ccc => cc
Apply:  Pos: [107, 118] cc => I
Apply:  Pos: [143, 164] cc => I
Apply:  Pos: [154, 163, 171] ccc => cc
Apply:  Pos: [174, 184] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [8, 18], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [9, 14], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [11, 9], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [1, 5], [9, 14], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.2962276935577393

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[99, 112, 119]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.9844603538513184

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [99, 112, 119] ccc => cc]

Plan: 1
[Pos: [99, 112, 119] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015642881393432617

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [99, 112, 119] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [99, 112, 119] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 14], [18, 4], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [13, 18], [8, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 18], [11, 9], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [9, 14], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [1, 5], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [13, 11], [1, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  3.000103235244751

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.984309673309326

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[13, 11], [19, 2], [17, 4], [1, 10], [9, 14], [8, 0], [10, 13], [18, 14], [6, 17], [12, 3], [13, 18], [17, 19], [8, 6], [14, 15], [4, 12], [2, 16], [7, 19], [3, 16], [18, 4], [18, 14], [2, 16], [0, 19], [9, 14], [0, 17], [4, 14], [18, 15], [19, 2], [11, 18], [9, 14], [17, 19], [8, 0], [5, 13], [18, 4], [15, 3], [6, 17], [7, 19], [3, 16], [1, 5], [17, 19], [2, 3], [4, 12], [5, 8], [13, 6], [2, 16], [11, 9], [4, 14], [7, 19], [8, 6], [5, 13], [19, 2], [4, 15], [8, 13], [12, 2], [1, 5], [5, 8], [19, 2], [12, 3], [13, 11], [5, 6], [4, 12], [9, 14], [2, 16], [4, 14], [8, 0], [10, 13], [12, 2], [18, 14], [0, 7], [6, 12], [7, 17], [13, 6], [2, 3], [12, 2], [11, 14], [7, 19], [6, 17], [8, 18], [13, 18], [17, 4], [9, 14], [15, 3], [19, 2], [6, 12], [7, 17], [2, 16], [5, 6], [12, 3], [8, 0], [18, 14], [1, 5], [10, 11], [12, 16], [8, 6], [18, 4], [14, 15], [5, 6], [8, 13], [19, 2], [11, 9], [11, 18], [0, 7], [4, 12], [17, 19], [13, 6], [12, 16], [15, 3], [6, 4], [4, 15], [13, 6], [2, 16], [17, 12], [12, 2], [9, 14], [6, 4], [0, 17], [10, 18], [17, 4], [6, 12], [1, 5], [2, 16], [13, 11], [4, 12], [1, 10], [3, 16], [10, 13], [15, 3], [6, 4], [11, 9], [5, 6], [9, 14], [12, 3], [13, 11], [14, 15], [10, 11], [4, 12], [18, 15], [1, 11], [13, 11], [6, 4], [14, 15], [8, 0], [5, 13], [8, 6], [7, 19], [10, 9], [13, 6], [7, 17], [0, 19], [4, 12], [8, 13], [0, 17], [6, 12], [18, 15], [11, 9], [6, 17], [13, 18], [4, 15], [13, 6], [15, 16], [17, 12], [8, 13], [7, 17], [10, 14], [12, 2], [10, 13], [17, 12], [18, 14], [5, 8], [7, 19], [4, 12], [17, 19], ----End Timer [Execute Mapping]:  2.984309673309326

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [171] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 342

Reduced: 
 - size: 144 (45.71%)
 - depth: 6 (13.33%)

