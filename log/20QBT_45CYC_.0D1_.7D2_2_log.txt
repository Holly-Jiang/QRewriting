----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.15623784065246582

[2, 7], [5, 0], [18, 9], [10, 11], [4, 16], [15, 8], [12, 1], [6, 17], [2, 7], [17, 3], [5, 0], [6, 1], [14, 12], [18, 9], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [6, 17], [15, 8], [9, 7], [5, 18], [6, 17], [14, 12], [4, 19], [13, 10], [11, 2], [9, 7], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [1, 17], [13, 10], [4, 19], [5, 18], [8, 11], [14, 12], [3, 7], [2, 7], [4, 16], [14, 12], [1, 17], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [10, 8], [4, 16], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [10, 8], [11, 2], [5, 0], [10, 9], [4, 19], [15, 8], [18, 1], [14, 12], [17, 3], [0, 13], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [0, 13], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [4, 16], [8, 11], [0, 15], [1, 17], [19, 13], [5, 0], [8, 11], [2, 7], [12, 6], [9, 3], [6, 1], [19, 13], [4, 16], [2, 7], [10, 9], [17, 3], [14, 5], [6, 1], [12, 17], [4, 19], [10, 11], [16, 18], [3, 7], [14, 5], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [12, 17], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [14, 12], [9, 3], [19, 13], [6, 1], [10, 8], [14, 12], [9, 3], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [1, 10], [14, 18], [9, 3], [2, 7], [4, 19], [17, 3], [19, 5], [9, 2], [13, 8], [1, 10], [14, 18], [0, 15], [9, 3], [14, 18], [2, 7], [10, 8], [12, 6], [4, 16], [0, 15], [1, 17], [3, 2], [10, 9], [19, 5], [15, 8], [14, 18], [4, 16], [1, 17], [2, 7], [13, 11], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [9, 2], [1, 10], [17, 3], [5, 0], [4, 16], [13, 11], [9, 7], [13, 8], [19, 0], [14, 12], [6, 1], [17, 3], [4, 16], [9, 7], [10, 8], [17, 3], [0, 13], [5, 18], [6, 1], [4, 16], [9, 2], [8, 11], [5, 18], [19, 0], [1, 17], [16, 14], [2, 7], [8, 11], [13, 10], [19, 5], [0, 15], [1, 17], [16, 18], [14, 12], [2, 7], [16, 14], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [18, 10], [5, 0], [9, 7], [18, 10], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [5, 0], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [4, 16], [17, 3], [3, 7], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [3, 7], [14, 18], [13, 8], [11, 2], [1, 9], [16, 5], [3, 7], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [3, 7], [11, 2], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [0, 13], [11, 2], [16, 18], [12, 17], [1, 10], [18, 9], [12, 6], [0, 13], [17, 3], [14, 5], [1, 10], [14, 18], [4, 16], [13, 8], [3, 2], [10, 9], [19, 0], [12, 6], [14, 18], [10, 11], [12, 17], [15, 8], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [19, 0], [15, 8], [11, 2], [18, 9], [13, 8], [0, 15], [11, 2], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 165, 171]
[167, 175, 181]
[185, 193, 200]
[202, 210, 212]
[224, 231, 239]
[288, 294, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 74, 82]
[145, 149, 156]
[156, 162, 169]
[219, 226, 228]
[231, 239, 243]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.203060865402222

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [2, 13] cc => I, Pos: [2, 13] cc => I, Pos: [5, 20] cc => I, Pos: [5, 20] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [22, 39] cc => I, Pos: [22, 39] cc => I, Pos: [36, 46] cc => I, Pos: [36, 46] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [44, 55] cc => I, Pos: [44, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [60, 65] cc => I, Pos: [60, 65] cc => I, Pos: [65, 77] cc => I, Pos: [65, 77] cc => I, Pos: [68, 74, 82] ccc => cc, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [84, 96] cc => I, Pos: [84, 96] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [102, 114] cc => I, Pos: [102, 114] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [121, 126] cc => I, Pos: [121, 126] cc => I, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [131, 159] cc => I, Pos: [131, 159] cc => I, Pos: [140, 170] cc => I, Pos: [140, 170] cc => I, Pos: [142, 151] cc => I, Pos: [142, 151] cc => I, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [145, 149, 156] ccc => cc, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [152, 155] cc => I, Pos: [152, 155] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [155, 166] cc => I, Pos: [155, 166] cc => I, Pos: [156, 162, 169] ccc => cc, Pos: [159, 167] cc => I, Pos: [159, 167] cc => I, Pos: [160, 165, 171] ccc => cc, Pos: [161, 168] cc => I, Pos: [161, 168] cc => I, Pos: [167, 175, 181] ccc => cc, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [174, 194] cc => I, Pos: [174, 194] cc => I, Pos: [177, 197] cc => I, Pos: [177, 197] cc => I, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I, Pos: [181, 189] cc => I, Pos: [181, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [185, 193, 200] ccc => cc, Pos: [187, 195] cc => I, Pos: [187, 195] cc => I, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 208] cc => I, Pos: [201, 208] cc => I, Pos: [202, 210, 212] ccc => cc, Pos: [203, 211] cc => I, Pos: [203, 211] cc => I, Pos: [218, 221] cc => I, Pos: [218, 221] cc => I, Pos: [219, 226, 228] ccc => cc, Pos: [224, 231, 239] ccc => cc, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [231, 239, 243] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [249, 255] cc => I, Pos: [249, 255] cc => I, Pos: [252, 262] cc => I, Pos: [252, 262] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [255, 261] cc => I, Pos: [255, 261] cc => I, Pos: [262, 272] cc => I, Pos: [262, 272] cc => I, Pos: [271, 278] cc => I, Pos: [271, 278] cc => I, Pos: [275, 281] cc => I, Pos: [275, 281] cc => I, Pos: [277, 288] cc => I, Pos: [277, 288] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [287, 300] cc => I, Pos: [287, 300] cc => I, Pos: [288, 294, 297] ccc => cc, Pos: [292, 301] cc => I, Pos: [292, 301] cc => I, Pos: [302, 306] cc => I, Pos: [302, 306] cc => I]

Plan: 1
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [59, 68] cc => I,
 Pos: [60, 65] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [115, 122] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [131, 159] cc => I,
 Pos: [140, 170] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [145, 149, 156] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [155, 166] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [167, 175, 181] ccc => cc,
 Pos: [174, 194] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [179, 188] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [219, 226, 228] ccc => cc,
 Pos: [224, 231, 239] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [248, 253] cc => I,
 Pos: [252, 262] cc => I,
 Pos: [255, 261] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [277, 288] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 59, Saving: 224

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [59, 68] cc => I,
 Pos: [60, 65] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [115, 122] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [131, 159] cc => I,
 Pos: [140, 170] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [145, 149, 156] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [155, 166] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [167, 175, 181] ccc => cc,
 Pos: [174, 194] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [179, 188] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [219, 226, 228] ccc => cc,
 Pos: [224, 231, 239] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [248, 253] cc => I,
 Pos: [252, 262] cc => I,
 Pos: [255, 261] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [277, 288] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 59, Saving: 224

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [2, 13] cc => I
Apply:  Pos: [5, 20] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [22, 39] cc => I
Apply:  Pos: [36, 46] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [44, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [59, 68] cc => I
Apply:  Pos: [60, 65] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [84, 96] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [102, 114] cc => I
Apply:  Pos: [115, 122] cc => I
Apply:  Pos: [121, 126] cc => I
Apply:  Pos: [131, 159] cc => I
Apply:  Pos: [140, 170] cc => I
Apply:  Pos: [142, 151] cc => I
Apply:  Pos: [143, 152] cc => I
Apply:  Pos: [145, 149, 156] ccc => cc
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [155, 166] cc => I
Apply:  Pos: [161, 168] cc => I
Apply:  Pos: [167, 175, 181] ccc => cc
Apply:  Pos: [174, 194] cc => I
Apply:  Pos: [177, 197] cc => I
Apply:  Pos: [179, 188] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [185, 193, 200] ccc => cc
Apply:  Pos: [187, 195] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 208] cc => I
Apply:  Pos: [202, 210, 212] ccc => cc
Apply:  Pos: [203, 211] cc => I
Apply:  Pos: [218, 221] cc => I
Apply:  Pos: [219, 226, 228] ccc => cc
Apply:  Pos: [224, 231, 239] ccc => cc
Apply:  Pos: [241, 249] cc => I
Apply:  Pos: [248, 253] cc => I
Apply:  Pos: [252, 262] cc => I
Apply:  Pos: [255, 261] cc => I
Apply:  Pos: [271, 278] cc => I
Apply:  Pos: [275, 281] cc => I
Apply:  Pos: [277, 288] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [287, 300] cc => I
Apply:  Pos: [292, 301] cc => I
Apply:  Pos: [302, 306] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015624046325683594

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 7], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [4, 19], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [5, 18], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [14, 5], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [5, 0], [2, 7], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [17, 3], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [13, 8], [3, 2], [10, 9], [10, 11], [12, 17], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [18, 9], [13, 8], [0, 15], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----End Timer [Execute Mapping]:  6.218684911727905

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[47, 61]
[86, 120]
[138, 147]
[142, 152]
[180, 193]
[192, 197]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[24, 25, 30]
[185, 190, 202]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[47, 61]
[86, 120]
[138, 147]
[142, 152]
[180, 193]
[192, 197]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.749633550643921

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 32] cc => I, Pos: [14, 32] cc => I, Pos: [24, 25, 30] ccc => cc, Pos: [47, 61] cc => I, Pos: [47, 61] cc => I, Pos: [86, 120] cc => I, Pos: [86, 120] cc => I, Pos: [138, 147] cc => I, Pos: [138, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [180, 193] cc => I, Pos: [180, 193] cc => I, Pos: [185, 190, 202] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I]

Plan: 1
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [47, 61] cc => I,
 Pos: [86, 120] cc => I,
 Pos: [138, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [180, 193] cc => I,
 Pos: [185, 190, 202] ccc => cc,
 Pos: [192, 197] cc => I]
Change: 9, Saving: 32

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [47, 61] cc => I,
 Pos: [86, 120] cc => I,
 Pos: [138, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [180, 193] cc => I,
 Pos: [185, 190, 202] ccc => cc,
 Pos: [192, 197] cc => I]
Change: 9, Saving: 32

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 32] cc => I
Apply:  Pos: [24, 25, 30] ccc => cc
Apply:  Pos: [47, 61] cc => I
Apply:  Pos: [86, 120] cc => I
Apply:  Pos: [138, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [180, 193] cc => I
Apply:  Pos: [185, 190, 202] ccc => cc
Apply:  Pos: [192, 197] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [13, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 2], [9, 3], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [14, 5], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [3, 2], [10, 11], [10, 9], [12, 17], [3, 2], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.749633550643921

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 143]
[169, 173]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[22, 28, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 143]
[169, 173]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3593876361846924

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 28, 29] ccc => cc, Pos: [125, 143] cc => I, Pos: [125, 143] cc => I, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I]

Plan: 1
[Pos: [22, 28, 29] ccc => cc, Pos: [125, 143] cc => I, Pos: [169, 173] cc => I]
Change: 3, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 28, 29] ccc => cc, Pos: [125, 143] cc => I, Pos: [169, 173] cc => I]
Change: 3, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 28, 29] ccc => cc
Apply:  Pos: [125, 143] cc => I
Apply:  Pos: [169, 173] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [12, 17], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.3593876361846924

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[161, 163, 168]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2502026557922363

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [161, 163, 168] ccc => cc]

Plan: 1
[Pos: [161, 163, 168] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [161, 163, 168] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [161, 163, 168] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 2], [9, 3], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 11], [10, 9], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2502026557922363

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2499823570251465

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2499823570251465

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [181] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 362

Reduced: 
 - size: 134 (42.54%)
 - cycle: 268 (42.54%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12452840805053711

[2, 7], [5, 0], [18, 9], [10, 11], [4, 16], [15, 8], [12, 1], [6, 17], [2, 7], [17, 3], [5, 0], [6, 1], [14, 12], [18, 9], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [6, 17], [15, 8], [9, 7], [5, 18], [6, 17], [14, 12], [4, 19], [13, 10], [11, 2], [9, 7], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [1, 17], [13, 10], [4, 19], [5, 18], [8, 11], [14, 12], [3, 7], [2, 7], [4, 16], [14, 12], [1, 17], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [10, 8], [4, 16], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [10, 8], [11, 2], [5, 0], [10, 9], [4, 19], [15, 8], [18, 1], [14, 12], [17, 3], [0, 13], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [0, 13], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [4, 16], [8, 11], [0, 15], [1, 17], [19, 13], [5, 0], [8, 11], [2, 7], [12, 6], [9, 3], [6, 1], [19, 13], [4, 16], [2, 7], [10, 9], [17, 3], [14, 5], [6, 1], [12, 17], [4, 19], [10, 11], [16, 18], [3, 7], [14, 5], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [12, 17], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [14, 12], [9, 3], [19, 13], [6, 1], [10, 8], [14, 12], [9, 3], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [1, 10], [14, 18], [9, 3], [2, 7], [4, 19], [17, 3], [19, 5], [9, 2], [13, 8], [1, 10], [14, 18], [0, 15], [9, 3], [14, 18], [2, 7], [10, 8], [12, 6], [4, 16], [0, 15], [1, 17], [3, 2], [10, 9], [19, 5], [15, 8], [14, 18], [4, 16], [1, 17], [2, 7], [13, 11], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [9, 2], [1, 10], [17, 3], [5, 0], [4, 16], [13, 11], [9, 7], [13, 8], [19, 0], [14, 12], [6, 1], [17, 3], [4, 16], [9, 7], [10, 8], [17, 3], [0, 13], [5, 18], [6, 1], [4, 16], [9, 2], [8, 11], [5, 18], [19, 0], [1, 17], [16, 14], [2, 7], [8, 11], [13, 10], [19, 5], [0, 15], [1, 17], [16, 18], [14, 12], [2, 7], [16, 14], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [18, 10], [5, 0], [9, 7], [18, 10], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [5, 0], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [4, 16], [17, 3], [3, 7], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [3, 7], [14, 18], [13, 8], [11, 2], [1, 9], [16, 5], [3, 7], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [3, 7], [11, 2], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [0, 13], [11, 2], [16, 18], [12, 17], [1, 10], [18, 9], [12, 6], [0, 13], [17, 3], [14, 5], [1, 10], [14, 18], [4, 16], [13, 8], [3, 2], [10, 9], [19, 0], [12, 6], [14, 18], [10, 11], [12, 17], [15, 8], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [19, 0], [15, 8], [11, 2], [18, 9], [13, 8], [0, 15], [11, 2], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 165, 171]
[167, 175, 181]
[185, 193, 200]
[202, 210, 212]
[224, 231, 239]
[288, 294, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 74, 82]
[145, 149, 156]
[156, 162, 169]
[219, 226, 228]
[231, 239, 243]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.125077247619629

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [2, 13] cc => I, Pos: [2, 13] cc => I, Pos: [5, 20] cc => I, Pos: [5, 20] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [22, 39] cc => I, Pos: [22, 39] cc => I, Pos: [36, 46] cc => I, Pos: [36, 46] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [44, 55] cc => I, Pos: [44, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [60, 65] cc => I, Pos: [60, 65] cc => I, Pos: [65, 77] cc => I, Pos: [65, 77] cc => I, Pos: [68, 74, 82] ccc => cc, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [84, 96] cc => I, Pos: [84, 96] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [102, 114] cc => I, Pos: [102, 114] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [121, 126] cc => I, Pos: [121, 126] cc => I, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [131, 159] cc => I, Pos: [131, 159] cc => I, Pos: [140, 170] cc => I, Pos: [140, 170] cc => I, Pos: [142, 151] cc => I, Pos: [142, 151] cc => I, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [145, 149, 156] ccc => cc, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [152, 155] cc => I, Pos: [152, 155] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [155, 166] cc => I, Pos: [155, 166] cc => I, Pos: [156, 162, 169] ccc => cc, Pos: [159, 167] cc => I, Pos: [159, 167] cc => I, Pos: [160, 165, 171] ccc => cc, Pos: [161, 168] cc => I, Pos: [161, 168] cc => I, Pos: [167, 175, 181] ccc => cc, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [174, 194] cc => I, Pos: [174, 194] cc => I, Pos: [177, 197] cc => I, Pos: [177, 197] cc => I, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I, Pos: [181, 189] cc => I, Pos: [181, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [185, 193, 200] ccc => cc, Pos: [187, 195] cc => I, Pos: [187, 195] cc => I, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 208] cc => I, Pos: [201, 208] cc => I, Pos: [202, 210, 212] ccc => cc, Pos: [203, 211] cc => I, Pos: [203, 211] cc => I, Pos: [218, 221] cc => I, Pos: [218, 221] cc => I, Pos: [219, 226, 228] ccc => cc, Pos: [224, 231, 239] ccc => cc, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [231, 239, 243] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [249, 255] cc => I, Pos: [249, 255] cc => I, Pos: [252, 262] cc => I, Pos: [252, 262] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [255, 261] cc => I, Pos: [255, 261] cc => I, Pos: [262, 272] cc => I, Pos: [262, 272] cc => I, Pos: [271, 278] cc => I, Pos: [271, 278] cc => I, Pos: [275, 281] cc => I, Pos: [275, 281] cc => I, Pos: [277, 288] cc => I, Pos: [277, 288] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [287, 300] cc => I, Pos: [287, 300] cc => I, Pos: [288, 294, 297] ccc => cc, Pos: [292, 301] cc => I, Pos: [292, 301] cc => I, Pos: [302, 306] cc => I, Pos: [302, 306] cc => I]

Plan: 1
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [59, 68] cc => I,
 Pos: [60, 65] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [115, 122] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [131, 159] cc => I,
 Pos: [140, 170] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [145, 149, 156] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [155, 166] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [167, 175, 181] ccc => cc,
 Pos: [174, 194] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [179, 188] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [219, 226, 228] ccc => cc,
 Pos: [224, 231, 239] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [248, 253] cc => I,
 Pos: [252, 262] cc => I,
 Pos: [255, 261] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [277, 288] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 59, Saving: 61

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.15622615814208984

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [59, 68] cc => I,
 Pos: [60, 65] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [115, 122] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [131, 159] cc => I,
 Pos: [140, 170] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [145, 149, 156] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [155, 166] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [167, 175, 181] ccc => cc,
 Pos: [174, 194] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [179, 188] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [219, 226, 228] ccc => cc,
 Pos: [224, 231, 239] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [248, 253] cc => I,
 Pos: [252, 262] cc => I,
 Pos: [255, 261] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [277, 288] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 59, Saving: 61

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [2, 13] cc => I
Apply:  Pos: [5, 20] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [22, 39] cc => I
Apply:  Pos: [36, 46] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [44, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [59, 68] cc => I
Apply:  Pos: [60, 65] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [84, 96] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [102, 114] cc => I
Apply:  Pos: [115, 122] cc => I
Apply:  Pos: [121, 126] cc => I
Apply:  Pos: [131, 159] cc => I
Apply:  Pos: [140, 170] cc => I
Apply:  Pos: [142, 151] cc => I
Apply:  Pos: [143, 152] cc => I
Apply:  Pos: [145, 149, 156] ccc => cc
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [155, 166] cc => I
Apply:  Pos: [161, 168] cc => I
Apply:  Pos: [167, 175, 181] ccc => cc
Apply:  Pos: [174, 194] cc => I
Apply:  Pos: [177, 197] cc => I
Apply:  Pos: [179, 188] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [185, 193, 200] ccc => cc
Apply:  Pos: [187, 195] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 208] cc => I
Apply:  Pos: [202, 210, 212] ccc => cc
Apply:  Pos: [203, 211] cc => I
Apply:  Pos: [218, 221] cc => I
Apply:  Pos: [219, 226, 228] ccc => cc
Apply:  Pos: [224, 231, 239] ccc => cc
Apply:  Pos: [241, 249] cc => I
Apply:  Pos: [248, 253] cc => I
Apply:  Pos: [252, 262] cc => I
Apply:  Pos: [255, 261] cc => I
Apply:  Pos: [271, 278] cc => I
Apply:  Pos: [275, 281] cc => I
Apply:  Pos: [277, 288] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [287, 300] cc => I
Apply:  Pos: [292, 301] cc => I
Apply:  Pos: [302, 306] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 7], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [4, 19], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [5, 18], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [14, 5], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [5, 0], [2, 7], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [17, 3], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [13, 8], [3, 2], [10, 9], [10, 11], [12, 17], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [18, 9], [13, 8], [0, 15], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----End Timer [Execute Mapping]:  6.281303405761719

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[47, 61]
[86, 120]
[138, 147]
[142, 152]
[180, 193]
[192, 197]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[24, 25, 30]
[185, 190, 202]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[47, 61]
[86, 120]
[138, 147]
[142, 152]
[180, 193]
[192, 197]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6720244884490967

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 32] cc => I, Pos: [14, 32] cc => I, Pos: [24, 25, 30] ccc => cc, Pos: [47, 61] cc => I, Pos: [47, 61] cc => I, Pos: [86, 120] cc => I, Pos: [86, 120] cc => I, Pos: [138, 147] cc => I, Pos: [138, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [180, 193] cc => I, Pos: [180, 193] cc => I, Pos: [185, 190, 202] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I]

Plan: 1
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [47, 61] cc => I,
 Pos: [86, 120] cc => I,
 Pos: [138, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [180, 193] cc => I,
 Pos: [185, 190, 202] ccc => cc,
 Pos: [192, 197] cc => I]
Change: 9, Saving: 9

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [47, 61] cc => I,
 Pos: [86, 120] cc => I,
 Pos: [138, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [180, 193] cc => I,
 Pos: [185, 190, 202] ccc => cc,
 Pos: [192, 197] cc => I]
Change: 9, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 32] cc => I
Apply:  Pos: [24, 25, 30] ccc => cc
Apply:  Pos: [47, 61] cc => I
Apply:  Pos: [86, 120] cc => I
Apply:  Pos: [138, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [180, 193] cc => I
Apply:  Pos: [185, 190, 202] ccc => cc
Apply:  Pos: [192, 197] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [13, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 2], [9, 3], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [14, 5], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [3, 2], [10, 11], [10, 9], [12, 17], [3, 2], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.6876485347747803

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 143]
[169, 173]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[22, 28, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 143]
[169, 173]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.328101873397827

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 28, 29] ccc => cc, Pos: [125, 143] cc => I, Pos: [125, 143] cc => I, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I]

Plan: 1
[Pos: [22, 28, 29] ccc => cc, Pos: [125, 143] cc => I, Pos: [169, 173] cc => I]
Change: 3, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.016118288040161133

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 28, 29] ccc => cc, Pos: [125, 143] cc => I, Pos: [169, 173] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 28, 29] ccc => cc
Apply:  Pos: [125, 143] cc => I
Apply:  Pos: [169, 173] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [12, 17], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.3442201614379883

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[161, 163, 168]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2183961868286133

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [161, 163, 168] ccc => cc]

Plan: 1
[Pos: [161, 163, 168] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [161, 163, 168] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [161, 163, 168] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 2], [9, 3], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 11], [10, 9], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2183961868286133

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.202739953994751

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.202739953994751

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [181] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 362

Reduced: 
 - size: 134 (42.54%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.11089539527893066

[2, 7], [5, 0], [18, 9], [10, 11], [4, 16], [15, 8], [12, 1], [6, 17], [2, 7], [17, 3], [5, 0], [6, 1], [14, 12], [18, 9], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [6, 17], [15, 8], [9, 7], [5, 18], [6, 17], [14, 12], [4, 19], [13, 10], [11, 2], [9, 7], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [1, 17], [13, 10], [4, 19], [5, 18], [8, 11], [14, 12], [3, 7], [2, 7], [4, 16], [14, 12], [1, 17], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [10, 8], [4, 16], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [10, 8], [11, 2], [5, 0], [10, 9], [4, 19], [15, 8], [18, 1], [14, 12], [17, 3], [0, 13], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [0, 13], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [4, 16], [8, 11], [0, 15], [1, 17], [19, 13], [5, 0], [8, 11], [2, 7], [12, 6], [9, 3], [6, 1], [19, 13], [4, 16], [2, 7], [10, 9], [17, 3], [14, 5], [6, 1], [12, 17], [4, 19], [10, 11], [16, 18], [3, 7], [14, 5], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [12, 17], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [14, 12], [9, 3], [19, 13], [6, 1], [10, 8], [14, 12], [9, 3], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [1, 10], [14, 18], [9, 3], [2, 7], [4, 19], [17, 3], [19, 5], [9, 2], [13, 8], [1, 10], [14, 18], [0, 15], [9, 3], [14, 18], [2, 7], [10, 8], [12, 6], [4, 16], [0, 15], [1, 17], [3, 2], [10, 9], [19, 5], [15, 8], [14, 18], [4, 16], [1, 17], [2, 7], [13, 11], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [9, 2], [1, 10], [17, 3], [5, 0], [4, 16], [13, 11], [9, 7], [13, 8], [19, 0], [14, 12], [6, 1], [17, 3], [4, 16], [9, 7], [10, 8], [17, 3], [0, 13], [5, 18], [6, 1], [4, 16], [9, 2], [8, 11], [5, 18], [19, 0], [1, 17], [16, 14], [2, 7], [8, 11], [13, 10], [19, 5], [0, 15], [1, 17], [16, 18], [14, 12], [2, 7], [16, 14], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [18, 10], [5, 0], [9, 7], [18, 10], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [5, 0], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [4, 16], [17, 3], [3, 7], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [3, 7], [14, 18], [13, 8], [11, 2], [1, 9], [16, 5], [3, 7], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [3, 7], [11, 2], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [0, 13], [11, 2], [16, 18], [12, 17], [1, 10], [18, 9], [12, 6], [0, 13], [17, 3], [14, 5], [1, 10], [14, 18], [4, 16], [13, 8], [3, 2], [10, 9], [19, 0], [12, 6], [14, 18], [10, 11], [12, 17], [15, 8], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [19, 0], [15, 8], [11, 2], [18, 9], [13, 8], [0, 15], [11, 2], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 165, 171]
[167, 175, 181]
[185, 193, 200]
[202, 210, 212]
[224, 231, 239]
[288, 294, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 74, 82]
[145, 149, 156]
[156, 162, 169]
[219, 226, 228]
[231, 239, 243]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.13647985458374

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [2, 13] cc => I, Pos: [2, 13] cc => I, Pos: [5, 20] cc => I, Pos: [5, 20] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [22, 39] cc => I, Pos: [22, 39] cc => I, Pos: [36, 46] cc => I, Pos: [36, 46] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [44, 55] cc => I, Pos: [44, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [60, 65] cc => I, Pos: [60, 65] cc => I, Pos: [65, 77] cc => I, Pos: [65, 77] cc => I, Pos: [68, 74, 82] ccc => cc, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [84, 96] cc => I, Pos: [84, 96] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [102, 114] cc => I, Pos: [102, 114] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [121, 126] cc => I, Pos: [121, 126] cc => I, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [131, 159] cc => I, Pos: [131, 159] cc => I, Pos: [140, 170] cc => I, Pos: [140, 170] cc => I, Pos: [142, 151] cc => I, Pos: [142, 151] cc => I, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [145, 149, 156] ccc => cc, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [152, 155] cc => I, Pos: [152, 155] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [155, 166] cc => I, Pos: [155, 166] cc => I, Pos: [156, 162, 169] ccc => cc, Pos: [159, 167] cc => I, Pos: [159, 167] cc => I, Pos: [160, 165, 171] ccc => cc, Pos: [161, 168] cc => I, Pos: [161, 168] cc => I, Pos: [167, 175, 181] ccc => cc, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [174, 194] cc => I, Pos: [174, 194] cc => I, Pos: [177, 197] cc => I, Pos: [177, 197] cc => I, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I, Pos: [181, 189] cc => I, Pos: [181, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [185, 193, 200] ccc => cc, Pos: [187, 195] cc => I, Pos: [187, 195] cc => I, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 208] cc => I, Pos: [201, 208] cc => I, Pos: [202, 210, 212] ccc => cc, Pos: [203, 211] cc => I, Pos: [203, 211] cc => I, Pos: [218, 221] cc => I, Pos: [218, 221] cc => I, Pos: [219, 226, 228] ccc => cc, Pos: [224, 231, 239] ccc => cc, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [231, 239, 243] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [249, 255] cc => I, Pos: [249, 255] cc => I, Pos: [252, 262] cc => I, Pos: [252, 262] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [255, 261] cc => I, Pos: [255, 261] cc => I, Pos: [262, 272] cc => I, Pos: [262, 272] cc => I, Pos: [271, 278] cc => I, Pos: [271, 278] cc => I, Pos: [275, 281] cc => I, Pos: [275, 281] cc => I, Pos: [277, 288] cc => I, Pos: [277, 288] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [287, 300] cc => I, Pos: [287, 300] cc => I, Pos: [288, 294, 297] ccc => cc, Pos: [292, 301] cc => I, Pos: [292, 301] cc => I, Pos: [302, 306] cc => I, Pos: [302, 306] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [59, 68] cc => I,
 Pos: [65, 77] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [131, 159] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [156, 162, 169] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [155, 166] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [181, 189] cc => I,
 Pos: [174, 194] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [179, 188] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [231, 239, 243] ccc => cc,
 Pos: [249, 255] cc => I,
 Pos: [253, 259] cc => I,
 Pos: [252, 262] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [288, 294, 297] ccc => cc,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 57, Saving: 218

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [2, 13] cc => I
Apply:  Pos: [5, 20] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [22, 39] cc => I
Apply:  Pos: [36, 46] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [44, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [59, 68] cc => I
Apply:  Pos: [65, 77] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [84, 96] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [102, 114] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [121, 126] cc => I
Apply:  Pos: [131, 159] cc => I
Apply:  Pos: [170, 182] cc => I
Apply:  Pos: [142, 151] cc => I
Apply:  Pos: [143, 152] cc => I
Apply:  Pos: [156, 162, 169] ccc => cc
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [155, 166] cc => I
Apply:  Pos: [161, 168] cc => I
Apply:  Pos: [181, 189] cc => I
Apply:  Pos: [174, 194] cc => I
Apply:  Pos: [177, 197] cc => I
Apply:  Pos: [179, 188] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [185, 193, 200] ccc => cc
Apply:  Pos: [187, 195] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 208] cc => I
Apply:  Pos: [202, 210, 212] ccc => cc
Apply:  Pos: [203, 211] cc => I
Apply:  Pos: [218, 221] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [231, 239, 243] ccc => cc
Apply:  Pos: [249, 255] cc => I
Apply:  Pos: [253, 259] cc => I
Apply:  Pos: [252, 262] cc => I
Apply:  Pos: [271, 278] cc => I
Apply:  Pos: [275, 281] cc => I
Apply:  Pos: [288, 294, 297] ccc => cc
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [287, 300] cc => I
Apply:  Pos: [292, 301] cc => I
Apply:  Pos: [302, 306] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 7], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [9, 7], [14, 5], [9, 3], [4, 19], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [4, 19], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [5, 18], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [6, 17], [10, 9], [4, 16], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [16, 18], [17, 3], [3, 7], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [3, 7], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [13, 8], [3, 2], [10, 9], [12, 1], [10, 11], [12, 17], [2, 7], [6, 1], [16, 5], [18, 10], [3, 7], [1, 9], [18, 9], [13, 8], [0, 15], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----End Timer [Execute Mapping]:  6.13647985458374

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[36, 61]
[86, 121]
[137, 144]
[139, 155]
[152, 166]
[183, 196]
[195, 200]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[24, 25, 30]
[189, 193, 205]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[36, 61]
[86, 121]
[137, 144]
[139, 155]
[152, 166]
[183, 196]
[195, 200]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7829833030700684

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 32] cc => I, Pos: [14, 32] cc => I, Pos: [24, 25, 30] ccc => cc, Pos: [36, 61] cc => I, Pos: [36, 61] cc => I, Pos: [86, 121] cc => I, Pos: [86, 121] cc => I, Pos: [137, 144] cc => I, Pos: [137, 144] cc => I, Pos: [139, 155] cc => I, Pos: [139, 155] cc => I, Pos: [152, 166] cc => I, Pos: [152, 166] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [189, 193, 205] ccc => cc, Pos: [195, 200] cc => I, Pos: [195, 200] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [36, 61] cc => I,
 Pos: [86, 121] cc => I,
 Pos: [137, 144] cc => I,
 Pos: [139, 155] cc => I,
 Pos: [152, 166] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [189, 193, 205] ccc => cc,
 Pos: [195, 200] cc => I]
Change: 10, Saving: 36

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 32] cc => I
Apply:  Pos: [24, 25, 30] ccc => cc
Apply:  Pos: [36, 61] cc => I
Apply:  Pos: [86, 121] cc => I
Apply:  Pos: [137, 144] cc => I
Apply:  Pos: [139, 155] cc => I
Apply:  Pos: [152, 166] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [189, 193, 205] ccc => cc
Apply:  Pos: [195, 200] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [13, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [16, 18], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [3, 2], [10, 9], [12, 1], [10, 11], [12, 17], [3, 2], [6, 1], [16, 5], [18, 10], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.7829833030700684

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[119, 140]
[170, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[22, 28, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[119, 140]
[170, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4047839641571045

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 28, 29] ccc => cc, Pos: [119, 140] cc => I, Pos: [119, 140] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 28, 29] ccc => cc, Pos: [119, 140] cc => I, Pos: [170, 175] cc => I]
Change: 3, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 28, 29] ccc => cc
Apply:  Pos: [119, 140] cc => I
Apply:  Pos: [170, 175] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [10, 9], [12, 1], [10, 11], [12, 17], [6, 1], [16, 5], [18, 10], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.4047839641571045

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[161, 164, 170]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2520477771759033

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [161, 164, 170] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [161, 164, 170] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [161, 164, 170] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [10, 9], [12, 1], [10, 11], [6, 1], [16, 5], [18, 10], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2520477771759033

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2032082080841064

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [10, 9], [12, 1], [10, 11], [6, 1], [16, 5], [18, 10], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2032082080841064

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 133 (42.22%)
 - cycle: 266 (42.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936689376831055

[2, 7], [5, 0], [18, 9], [10, 11], [4, 16], [15, 8], [12, 1], [6, 17], [2, 7], [17, 3], [5, 0], [6, 1], [14, 12], [18, 9], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [6, 17], [15, 8], [9, 7], [5, 18], [6, 17], [14, 12], [4, 19], [13, 10], [11, 2], [9, 7], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [1, 17], [13, 10], [4, 19], [5, 18], [8, 11], [14, 12], [3, 7], [2, 7], [4, 16], [14, 12], [1, 17], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [10, 8], [4, 16], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [10, 8], [11, 2], [5, 0], [10, 9], [4, 19], [15, 8], [18, 1], [14, 12], [17, 3], [0, 13], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [0, 13], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [4, 16], [8, 11], [0, 15], [1, 17], [19, 13], [5, 0], [8, 11], [2, 7], [12, 6], [9, 3], [6, 1], [19, 13], [4, 16], [2, 7], [10, 9], [17, 3], [14, 5], [6, 1], [12, 17], [4, 19], [10, 11], [16, 18], [3, 7], [14, 5], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [12, 17], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [14, 12], [9, 3], [19, 13], [6, 1], [10, 8], [14, 12], [9, 3], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [1, 10], [14, 18], [9, 3], [2, 7], [4, 19], [17, 3], [19, 5], [9, 2], [13, 8], [1, 10], [14, 18], [0, 15], [9, 3], [14, 18], [2, 7], [10, 8], [12, 6], [4, 16], [0, 15], [1, 17], [3, 2], [10, 9], [19, 5], [15, 8], [14, 18], [4, 16], [1, 17], [2, 7], [13, 11], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [9, 2], [1, 10], [17, 3], [5, 0], [4, 16], [13, 11], [9, 7], [13, 8], [19, 0], [14, 12], [6, 1], [17, 3], [4, 16], [9, 7], [10, 8], [17, 3], [0, 13], [5, 18], [6, 1], [4, 16], [9, 2], [8, 11], [5, 18], [19, 0], [1, 17], [16, 14], [2, 7], [8, 11], [13, 10], [19, 5], [0, 15], [1, 17], [16, 18], [14, 12], [2, 7], [16, 14], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [18, 10], [5, 0], [9, 7], [18, 10], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [5, 0], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [4, 16], [17, 3], [3, 7], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [3, 7], [14, 18], [13, 8], [11, 2], [1, 9], [16, 5], [3, 7], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [3, 7], [11, 2], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [0, 13], [11, 2], [16, 18], [12, 17], [1, 10], [18, 9], [12, 6], [0, 13], [17, 3], [14, 5], [1, 10], [14, 18], [4, 16], [13, 8], [3, 2], [10, 9], [19, 0], [12, 6], [14, 18], [10, 11], [12, 17], [15, 8], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [19, 0], [15, 8], [11, 2], [18, 9], [13, 8], [0, 15], [11, 2], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 165, 171]
[167, 175, 181]
[185, 193, 200]
[202, 210, 212]
[224, 231, 239]
[288, 294, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 74, 82]
[145, 149, 156]
[156, 162, 169]
[219, 226, 228]
[231, 239, 243]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.216918468475342

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [2, 13] cc => I, Pos: [2, 13] cc => I, Pos: [5, 20] cc => I, Pos: [5, 20] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [22, 39] cc => I, Pos: [22, 39] cc => I, Pos: [36, 46] cc => I, Pos: [36, 46] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [44, 55] cc => I, Pos: [44, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [60, 65] cc => I, Pos: [60, 65] cc => I, Pos: [65, 77] cc => I, Pos: [65, 77] cc => I, Pos: [68, 74, 82] ccc => cc, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [84, 96] cc => I, Pos: [84, 96] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [102, 114] cc => I, Pos: [102, 114] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [121, 126] cc => I, Pos: [121, 126] cc => I, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [131, 159] cc => I, Pos: [131, 159] cc => I, Pos: [140, 170] cc => I, Pos: [140, 170] cc => I, Pos: [142, 151] cc => I, Pos: [142, 151] cc => I, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [145, 149, 156] ccc => cc, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [152, 155] cc => I, Pos: [152, 155] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [155, 166] cc => I, Pos: [155, 166] cc => I, Pos: [156, 162, 169] ccc => cc, Pos: [159, 167] cc => I, Pos: [159, 167] cc => I, Pos: [160, 165, 171] ccc => cc, Pos: [161, 168] cc => I, Pos: [161, 168] cc => I, Pos: [167, 175, 181] ccc => cc, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [174, 194] cc => I, Pos: [174, 194] cc => I, Pos: [177, 197] cc => I, Pos: [177, 197] cc => I, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I, Pos: [181, 189] cc => I, Pos: [181, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [185, 193, 200] ccc => cc, Pos: [187, 195] cc => I, Pos: [187, 195] cc => I, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 208] cc => I, Pos: [201, 208] cc => I, Pos: [202, 210, 212] ccc => cc, Pos: [203, 211] cc => I, Pos: [203, 211] cc => I, Pos: [218, 221] cc => I, Pos: [218, 221] cc => I, Pos: [219, 226, 228] ccc => cc, Pos: [224, 231, 239] ccc => cc, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [231, 239, 243] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [249, 255] cc => I, Pos: [249, 255] cc => I, Pos: [252, 262] cc => I, Pos: [252, 262] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [255, 261] cc => I, Pos: [255, 261] cc => I, Pos: [262, 272] cc => I, Pos: [262, 272] cc => I, Pos: [271, 278] cc => I, Pos: [271, 278] cc => I, Pos: [275, 281] cc => I, Pos: [275, 281] cc => I, Pos: [277, 288] cc => I, Pos: [277, 288] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [287, 300] cc => I, Pos: [287, 300] cc => I, Pos: [288, 294, 297] ccc => cc, Pos: [292, 301] cc => I, Pos: [292, 301] cc => I, Pos: [302, 306] cc => I, Pos: [302, 306] cc => I]

--------End Timer [Generate Plans]:  0.15622496604919434

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [68, 74, 82] ccc => cc,
 Pos: [60, 65] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [131, 159] cc => I,
 Pos: [140, 170] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [145, 149, 156] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [155, 166] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [181, 189] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [188, 192] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [231, 239, 243] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [248, 253] cc => I,
 Pos: [252, 262] cc => I,
 Pos: [255, 261] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [277, 288] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 58, Saving: 58

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [2, 13] cc => I
Apply:  Pos: [5, 20] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [22, 39] cc => I
Apply:  Pos: [36, 46] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [44, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [68, 74, 82] ccc => cc
Apply:  Pos: [60, 65] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [84, 96] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [102, 114] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [121, 126] cc => I
Apply:  Pos: [131, 159] cc => I
Apply:  Pos: [140, 170] cc => I
Apply:  Pos: [142, 151] cc => I
Apply:  Pos: [143, 152] cc => I
Apply:  Pos: [145, 149, 156] ccc => cc
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [155, 166] cc => I
Apply:  Pos: [161, 168] cc => I
Apply:  Pos: [181, 189] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [177, 197] cc => I
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [185, 193, 200] ccc => cc
Apply:  Pos: [187, 195] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 208] cc => I
Apply:  Pos: [202, 210, 212] ccc => cc
Apply:  Pos: [203, 211] cc => I
Apply:  Pos: [218, 221] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [231, 239, 243] ccc => cc
Apply:  Pos: [241, 249] cc => I
Apply:  Pos: [248, 253] cc => I
Apply:  Pos: [252, 262] cc => I
Apply:  Pos: [255, 261] cc => I
Apply:  Pos: [271, 278] cc => I
Apply:  Pos: [275, 281] cc => I
Apply:  Pos: [277, 288] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [287, 300] cc => I
Apply:  Pos: [292, 301] cc => I
Apply:  Pos: [302, 306] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 7], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [9, 7], [14, 5], [9, 3], [14, 12], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [16, 14], [17, 3], [16, 5], [9, 2], [6, 17], [14, 12], [1, 10], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [4, 19], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [1, 10], [17, 3], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [6, 17], [10, 9], [4, 16], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [16, 18], [17, 3], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [13, 8], [3, 2], [10, 9], [10, 11], [12, 17], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [18, 9], [13, 8], [0, 15], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----End Timer [Execute Mapping]:  6.373143434524536

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[49, 62]
[87, 110]
[138, 145]
[140, 155]
[181, 194]
[193, 198]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[36, 42, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[24, 25, 30]
[186, 191, 203]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[49, 62]
[87, 110]
[138, 145]
[140, 155]
[181, 194]
[193, 198]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.765859842300415

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 32] cc => I, Pos: [14, 32] cc => I, Pos: [24, 25, 30] ccc => cc, Pos: [36, 42, 47] ccc => cc, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [87, 110] cc => I, Pos: [87, 110] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [140, 155] cc => I, Pos: [140, 155] cc => I, Pos: [181, 194] cc => I, Pos: [181, 194] cc => I, Pos: [186, 191, 203] ccc => cc, Pos: [193, 198] cc => I, Pos: [193, 198] cc => I]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [36, 42, 47] ccc => cc,
 Pos: [49, 62] cc => I,
 Pos: [87, 110] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [140, 155] cc => I,
 Pos: [181, 194] cc => I,
 Pos: [186, 191, 203] ccc => cc,
 Pos: [193, 198] cc => I]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 32] cc => I
Apply:  Pos: [24, 25, 30] ccc => cc
Apply:  Pos: [36, 42, 47] ccc => cc
Apply:  Pos: [49, 62] cc => I
Apply:  Pos: [87, 110] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [140, 155] cc => I
Apply:  Pos: [181, 194] cc => I
Apply:  Pos: [186, 191, 203] ccc => cc
Apply:  Pos: [193, 198] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [13, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 2], [9, 3], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [17, 3], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [16, 18], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [3, 2], [10, 11], [10, 9], [12, 17], [3, 2], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.7814838886260986

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[119, 140]
[169, 173]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[22, 28, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[119, 140]
[169, 173]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.359858751296997

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 28, 29] ccc => cc, Pos: [119, 140] cc => I, Pos: [119, 140] cc => I, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I]

--------End Timer [Generate Plans]:  0.015625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 28, 29] ccc => cc, Pos: [119, 140] cc => I, Pos: [169, 173] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 28, 29] ccc => cc
Apply:  Pos: [119, 140] cc => I
Apply:  Pos: [169, 173] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [17, 3], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [12, 17], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.375483751296997

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[161, 163, 168]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.281747579574585

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [161, 163, 168] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [161, 163, 168] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [161, 163, 168] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 2], [9, 3], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [17, 3], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 11], [10, 9], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.281747579574585

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2188940048217773

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [17, 3], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2188940048217773

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [181] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 362

Reduced: 
 - size: 134 (42.54%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12497615814208984

[2, 7], [5, 0], [18, 9], [10, 11], [4, 16], [15, 8], [12, 1], [6, 17], [2, 7], [17, 3], [5, 0], [6, 1], [14, 12], [18, 9], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [6, 17], [15, 8], [9, 7], [5, 18], [6, 17], [14, 12], [4, 19], [13, 10], [11, 2], [9, 7], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [1, 17], [13, 10], [4, 19], [5, 18], [8, 11], [14, 12], [3, 7], [2, 7], [4, 16], [14, 12], [1, 17], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [10, 8], [4, 16], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [10, 8], [11, 2], [5, 0], [10, 9], [4, 19], [15, 8], [18, 1], [14, 12], [17, 3], [0, 13], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [0, 13], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [4, 16], [8, 11], [0, 15], [1, 17], [19, 13], [5, 0], [8, 11], [2, 7], [12, 6], [9, 3], [6, 1], [19, 13], [4, 16], [2, 7], [10, 9], [17, 3], [14, 5], [6, 1], [12, 17], [4, 19], [10, 11], [16, 18], [3, 7], [14, 5], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [12, 17], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [14, 12], [9, 3], [19, 13], [6, 1], [10, 8], [14, 12], [9, 3], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [1, 10], [14, 18], [9, 3], [2, 7], [4, 19], [17, 3], [19, 5], [9, 2], [13, 8], [1, 10], [14, 18], [0, 15], [9, 3], [14, 18], [2, 7], [10, 8], [12, 6], [4, 16], [0, 15], [1, 17], [3, 2], [10, 9], [19, 5], [15, 8], [14, 18], [4, 16], [1, 17], [2, 7], [13, 11], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [9, 2], [1, 10], [17, 3], [5, 0], [4, 16], [13, 11], [9, 7], [13, 8], [19, 0], [14, 12], [6, 1], [17, 3], [4, 16], [9, 7], [10, 8], [17, 3], [0, 13], [5, 18], [6, 1], [4, 16], [9, 2], [8, 11], [5, 18], [19, 0], [1, 17], [16, 14], [2, 7], [8, 11], [13, 10], [19, 5], [0, 15], [1, 17], [16, 18], [14, 12], [2, 7], [16, 14], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [18, 10], [5, 0], [9, 7], [18, 10], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [5, 0], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [4, 16], [17, 3], [3, 7], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [3, 7], [14, 18], [13, 8], [11, 2], [1, 9], [16, 5], [3, 7], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [3, 7], [11, 2], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [0, 13], [11, 2], [16, 18], [12, 17], [1, 10], [18, 9], [12, 6], [0, 13], [17, 3], [14, 5], [1, 10], [14, 18], [4, 16], [13, 8], [3, 2], [10, 9], [19, 0], [12, 6], [14, 18], [10, 11], [12, 17], [15, 8], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [19, 0], [15, 8], [11, 2], [18, 9], [13, 8], [0, 15], [11, 2], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 165, 171]
[167, 175, 181]
[185, 193, 200]
[202, 210, 212]
[224, 231, 239]
[288, 294, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 74, 82]
[145, 149, 156]
[156, 162, 169]
[219, 226, 228]
[231, 239, 243]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.203083038330078

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [2, 13] cc => I, Pos: [2, 13] cc => I, Pos: [5, 20] cc => I, Pos: [5, 20] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [22, 39] cc => I, Pos: [22, 39] cc => I, Pos: [36, 46] cc => I, Pos: [36, 46] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [44, 55] cc => I, Pos: [44, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [60, 65] cc => I, Pos: [60, 65] cc => I, Pos: [65, 77] cc => I, Pos: [65, 77] cc => I, Pos: [68, 74, 82] ccc => cc, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [84, 96] cc => I, Pos: [84, 96] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [102, 114] cc => I, Pos: [102, 114] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [121, 126] cc => I, Pos: [121, 126] cc => I, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [131, 159] cc => I, Pos: [131, 159] cc => I, Pos: [140, 170] cc => I, Pos: [140, 170] cc => I, Pos: [142, 151] cc => I, Pos: [142, 151] cc => I, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [145, 149, 156] ccc => cc, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [152, 155] cc => I, Pos: [152, 155] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [155, 166] cc => I, Pos: [155, 166] cc => I, Pos: [156, 162, 169] ccc => cc, Pos: [159, 167] cc => I, Pos: [159, 167] cc => I, Pos: [160, 165, 171] ccc => cc, Pos: [161, 168] cc => I, Pos: [161, 168] cc => I, Pos: [167, 175, 181] ccc => cc, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [174, 194] cc => I, Pos: [174, 194] cc => I, Pos: [177, 197] cc => I, Pos: [177, 197] cc => I, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I, Pos: [181, 189] cc => I, Pos: [181, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [185, 193, 200] ccc => cc, Pos: [187, 195] cc => I, Pos: [187, 195] cc => I, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 208] cc => I, Pos: [201, 208] cc => I, Pos: [202, 210, 212] ccc => cc, Pos: [203, 211] cc => I, Pos: [203, 211] cc => I, Pos: [218, 221] cc => I, Pos: [218, 221] cc => I, Pos: [219, 226, 228] ccc => cc, Pos: [224, 231, 239] ccc => cc, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [231, 239, 243] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [249, 255] cc => I, Pos: [249, 255] cc => I, Pos: [252, 262] cc => I, Pos: [252, 262] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [255, 261] cc => I, Pos: [255, 261] cc => I, Pos: [262, 272] cc => I, Pos: [262, 272] cc => I, Pos: [271, 278] cc => I, Pos: [271, 278] cc => I, Pos: [275, 281] cc => I, Pos: [275, 281] cc => I, Pos: [277, 288] cc => I, Pos: [277, 288] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [287, 300] cc => I, Pos: [287, 300] cc => I, Pos: [288, 294, 297] ccc => cc, Pos: [292, 301] cc => I, Pos: [292, 301] cc => I, Pos: [302, 306] cc => I, Pos: [302, 306] cc => I]

--------End Timer [Generate Plans]:  0.14061474800109863

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [59, 68] cc => I,
 Pos: [60, 65] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [159, 167] cc => I,
 Pos: [140, 170] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [156, 162, 169] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [155, 166] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [174, 194] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [179, 188] cc => I,
 Pos: [181, 189] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [231, 239, 243] ccc => cc,
 Pos: [249, 255] cc => I,
 Pos: [253, 259] cc => I,
 Pos: [262, 272] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [288, 294, 297] ccc => cc,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 57, Saving: 58

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [2, 13] cc => I
Apply:  Pos: [5, 20] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [22, 39] cc => I
Apply:  Pos: [36, 46] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [44, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [59, 68] cc => I
Apply:  Pos: [60, 65] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [84, 96] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [102, 114] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [121, 126] cc => I
Apply:  Pos: [159, 167] cc => I
Apply:  Pos: [140, 170] cc => I
Apply:  Pos: [142, 151] cc => I
Apply:  Pos: [143, 152] cc => I
Apply:  Pos: [156, 162, 169] ccc => cc
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [155, 166] cc => I
Apply:  Pos: [161, 168] cc => I
Apply:  Pos: [174, 194] cc => I
Apply:  Pos: [177, 197] cc => I
Apply:  Pos: [179, 188] cc => I
Apply:  Pos: [181, 189] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [185, 193, 200] ccc => cc
Apply:  Pos: [187, 195] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 208] cc => I
Apply:  Pos: [202, 210, 212] ccc => cc
Apply:  Pos: [203, 211] cc => I
Apply:  Pos: [218, 221] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [231, 239, 243] ccc => cc
Apply:  Pos: [249, 255] cc => I
Apply:  Pos: [253, 259] cc => I
Apply:  Pos: [262, 272] cc => I
Apply:  Pos: [271, 278] cc => I
Apply:  Pos: [275, 281] cc => I
Apply:  Pos: [288, 294, 297] ccc => cc
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [287, 300] cc => I
Apply:  Pos: [292, 301] cc => I
Apply:  Pos: [302, 306] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 7], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [4, 19], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [5, 18], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [6, 17], [10, 9], [4, 16], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [16, 18], [17, 3], [3, 7], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [3, 7], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 17], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [13, 8], [3, 2], [10, 9], [12, 1], [10, 11], [12, 17], [2, 7], [6, 1], [16, 5], [18, 10], [3, 7], [1, 9], [18, 9], [13, 8], [0, 15], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----End Timer [Execute Mapping]:  6.343697786331177

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[47, 61]
[87, 121]
[137, 144]
[139, 155]
[152, 167]
[183, 196]
[195, 200]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[24, 25, 30]
[189, 193, 205]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[47, 61]
[87, 121]
[137, 144]
[139, 155]
[152, 167]
[183, 196]
[195, 200]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.796952962875366

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 32] cc => I, Pos: [14, 32] cc => I, Pos: [24, 25, 30] ccc => cc, Pos: [47, 61] cc => I, Pos: [47, 61] cc => I, Pos: [87, 121] cc => I, Pos: [87, 121] cc => I, Pos: [137, 144] cc => I, Pos: [137, 144] cc => I, Pos: [139, 155] cc => I, Pos: [139, 155] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [189, 193, 205] ccc => cc, Pos: [195, 200] cc => I, Pos: [195, 200] cc => I]

--------End Timer [Generate Plans]:  0.031252145767211914

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [47, 61] cc => I,
 Pos: [87, 121] cc => I,
 Pos: [137, 144] cc => I,
 Pos: [139, 155] cc => I,
 Pos: [152, 167] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [189, 193, 205] ccc => cc,
 Pos: [195, 200] cc => I]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 32] cc => I
Apply:  Pos: [24, 25, 30] ccc => cc
Apply:  Pos: [47, 61] cc => I
Apply:  Pos: [87, 121] cc => I
Apply:  Pos: [137, 144] cc => I
Apply:  Pos: [139, 155] cc => I
Apply:  Pos: [152, 167] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [189, 193, 205] ccc => cc
Apply:  Pos: [195, 200] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [13, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [16, 18], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 17], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [3, 2], [10, 9], [12, 1], [10, 11], [12, 17], [3, 2], [6, 1], [16, 5], [18, 10], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.828205108642578

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[119, 140]
[170, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[22, 28, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[119, 140]
[170, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3437392711639404

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 28, 29] ccc => cc, Pos: [119, 140] cc => I, Pos: [119, 140] cc => I, Pos: [170, 175] cc => I, Pos: [170, 175] cc => I]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 28, 29] ccc => cc, Pos: [119, 140] cc => I, Pos: [170, 175] cc => I]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 28, 29] ccc => cc
Apply:  Pos: [119, 140] cc => I
Apply:  Pos: [170, 175] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 17], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [10, 9], [12, 1], [10, 11], [12, 17], [6, 1], [16, 5], [18, 10], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.359363555908203

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[161, 164, 170]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.265291213989258

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [161, 164, 170] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [161, 164, 170] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [161, 164, 170] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 3], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [10, 9], [12, 1], [10, 11], [6, 1], [16, 5], [18, 10], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.265291213989258

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2500057220458984

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 3], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [10, 9], [12, 1], [10, 11], [6, 1], [16, 5], [18, 10], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2500057220458984

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 133 (42.22%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499189376831055

[2, 7], [5, 0], [18, 9], [10, 11], [4, 16], [15, 8], [12, 1], [6, 17], [2, 7], [17, 3], [5, 0], [6, 1], [14, 12], [18, 9], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [6, 17], [15, 8], [9, 7], [5, 18], [6, 17], [14, 12], [4, 19], [13, 10], [11, 2], [9, 7], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [1, 17], [13, 10], [4, 19], [5, 18], [8, 11], [14, 12], [3, 7], [2, 7], [4, 16], [14, 12], [1, 17], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [10, 8], [4, 16], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [10, 8], [11, 2], [5, 0], [10, 9], [4, 19], [15, 8], [18, 1], [14, 12], [17, 3], [0, 13], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [0, 13], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [4, 16], [8, 11], [0, 15], [1, 17], [19, 13], [5, 0], [8, 11], [2, 7], [12, 6], [9, 3], [6, 1], [19, 13], [4, 16], [2, 7], [10, 9], [17, 3], [14, 5], [6, 1], [12, 17], [4, 19], [10, 11], [16, 18], [3, 7], [14, 5], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [12, 17], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [14, 12], [9, 3], [19, 13], [6, 1], [10, 8], [14, 12], [9, 3], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [1, 10], [14, 18], [9, 3], [2, 7], [4, 19], [17, 3], [19, 5], [9, 2], [13, 8], [1, 10], [14, 18], [0, 15], [9, 3], [14, 18], [2, 7], [10, 8], [12, 6], [4, 16], [0, 15], [1, 17], [3, 2], [10, 9], [19, 5], [15, 8], [14, 18], [4, 16], [1, 17], [2, 7], [13, 11], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [9, 2], [1, 10], [17, 3], [5, 0], [4, 16], [13, 11], [9, 7], [13, 8], [19, 0], [14, 12], [6, 1], [17, 3], [4, 16], [9, 7], [10, 8], [17, 3], [0, 13], [5, 18], [6, 1], [4, 16], [9, 2], [8, 11], [5, 18], [19, 0], [1, 17], [16, 14], [2, 7], [8, 11], [13, 10], [19, 5], [0, 15], [1, 17], [16, 18], [14, 12], [2, 7], [16, 14], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [18, 10], [5, 0], [9, 7], [18, 10], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [5, 0], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [4, 16], [17, 3], [3, 7], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [3, 7], [14, 18], [13, 8], [11, 2], [1, 9], [16, 5], [3, 7], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [3, 7], [11, 2], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [0, 13], [11, 2], [16, 18], [12, 17], [1, 10], [18, 9], [12, 6], [0, 13], [17, 3], [14, 5], [1, 10], [14, 18], [4, 16], [13, 8], [3, 2], [10, 9], [19, 0], [12, 6], [14, 18], [10, 11], [12, 17], [15, 8], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [19, 0], [15, 8], [11, 2], [18, 9], [13, 8], [0, 15], [11, 2], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 165, 171]
[167, 175, 181]
[185, 193, 200]
[202, 210, 212]
[224, 231, 239]
[288, 294, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 74, 82]
[145, 149, 156]
[156, 162, 169]
[219, 226, 228]
[231, 239, 243]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.078678607940674

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [2, 13] cc => I, Pos: [2, 13] cc => I, Pos: [5, 20] cc => I, Pos: [5, 20] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [22, 39] cc => I, Pos: [22, 39] cc => I, Pos: [36, 46] cc => I, Pos: [36, 46] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [44, 55] cc => I, Pos: [44, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [60, 65] cc => I, Pos: [60, 65] cc => I, Pos: [65, 77] cc => I, Pos: [65, 77] cc => I, Pos: [68, 74, 82] ccc => cc, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [84, 96] cc => I, Pos: [84, 96] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [102, 114] cc => I, Pos: [102, 114] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [121, 126] cc => I, Pos: [121, 126] cc => I, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [131, 159] cc => I, Pos: [131, 159] cc => I, Pos: [140, 170] cc => I, Pos: [140, 170] cc => I, Pos: [142, 151] cc => I, Pos: [142, 151] cc => I, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [145, 149, 156] ccc => cc, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [152, 155] cc => I, Pos: [152, 155] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [155, 166] cc => I, Pos: [155, 166] cc => I, Pos: [156, 162, 169] ccc => cc, Pos: [159, 167] cc => I, Pos: [159, 167] cc => I, Pos: [160, 165, 171] ccc => cc, Pos: [161, 168] cc => I, Pos: [161, 168] cc => I, Pos: [167, 175, 181] ccc => cc, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [174, 194] cc => I, Pos: [174, 194] cc => I, Pos: [177, 197] cc => I, Pos: [177, 197] cc => I, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I, Pos: [181, 189] cc => I, Pos: [181, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [185, 193, 200] ccc => cc, Pos: [187, 195] cc => I, Pos: [187, 195] cc => I, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 208] cc => I, Pos: [201, 208] cc => I, Pos: [202, 210, 212] ccc => cc, Pos: [203, 211] cc => I, Pos: [203, 211] cc => I, Pos: [218, 221] cc => I, Pos: [218, 221] cc => I, Pos: [219, 226, 228] ccc => cc, Pos: [224, 231, 239] ccc => cc, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [231, 239, 243] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [249, 255] cc => I, Pos: [249, 255] cc => I, Pos: [252, 262] cc => I, Pos: [252, 262] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [255, 261] cc => I, Pos: [255, 261] cc => I, Pos: [262, 272] cc => I, Pos: [262, 272] cc => I, Pos: [271, 278] cc => I, Pos: [271, 278] cc => I, Pos: [275, 281] cc => I, Pos: [275, 281] cc => I, Pos: [277, 288] cc => I, Pos: [277, 288] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [287, 300] cc => I, Pos: [287, 300] cc => I, Pos: [288, 294, 297] ccc => cc, Pos: [292, 301] cc => I, Pos: [292, 301] cc => I, Pos: [302, 306] cc => I, Pos: [302, 306] cc => I]

--------End Timer [Generate Plans]:  0.14059686660766602

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [68, 74, 82] ccc => cc,
 Pos: [65, 77] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [131, 159] cc => I,
 Pos: [140, 170] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [152, 155] cc => I,
 Pos: [145, 149, 156] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [160, 165, 171] ccc => cc,
 Pos: [161, 168] cc => I,
 Pos: [181, 189] cc => I,
 Pos: [174, 194] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [188, 192] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [219, 226, 228] ccc => cc,
 Pos: [224, 231, 239] ccc => cc,
 Pos: [249, 255] cc => I,
 Pos: [253, 259] cc => I,
 Pos: [252, 262] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [277, 288] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 56, Saving: 58

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [2, 13] cc => I
Apply:  Pos: [5, 20] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [22, 39] cc => I
Apply:  Pos: [36, 46] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [44, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [68, 74, 82] ccc => cc
Apply:  Pos: [65, 77] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [84, 96] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [102, 114] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [121, 126] cc => I
Apply:  Pos: [131, 159] cc => I
Apply:  Pos: [140, 170] cc => I
Apply:  Pos: [142, 151] cc => I
Apply:  Pos: [152, 155] cc => I
Apply:  Pos: [145, 149, 156] ccc => cc
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [160, 165, 171] ccc => cc
Apply:  Pos: [161, 168] cc => I
Apply:  Pos: [181, 189] cc => I
Apply:  Pos: [174, 194] cc => I
Apply:  Pos: [177, 197] cc => I
Apply:  Pos: [188, 192] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [185, 193, 200] ccc => cc
Apply:  Pos: [187, 195] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 208] cc => I
Apply:  Pos: [202, 210, 212] ccc => cc
Apply:  Pos: [203, 211] cc => I
Apply:  Pos: [218, 221] cc => I
Apply:  Pos: [219, 226, 228] ccc => cc
Apply:  Pos: [224, 231, 239] ccc => cc
Apply:  Pos: [249, 255] cc => I
Apply:  Pos: [253, 259] cc => I
Apply:  Pos: [252, 262] cc => I
Apply:  Pos: [271, 278] cc => I
Apply:  Pos: [275, 281] cc => I
Apply:  Pos: [277, 288] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [287, 300] cc => I
Apply:  Pos: [292, 301] cc => I
Apply:  Pos: [302, 306] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 7], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [16, 14], [17, 3], [16, 5], [9, 2], [6, 17], [14, 12], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [4, 19], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [14, 18], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [0, 15], [9, 3], [10, 8], [12, 6], [0, 8], [3, 2], [10, 9], [15, 8], [14, 18], [4, 16], [2, 7], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [17, 3], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [0, 13], [4, 16], [5, 18], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [14, 5], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [5, 0], [2, 7], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [17, 3], [3, 7], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [3, 7], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [13, 8], [3, 2], [10, 9], [10, 11], [12, 17], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [18, 9], [13, 8], [0, 15], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----End Timer [Execute Mapping]:  6.21927547454834

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[37, 62]
[93, 108]
[143, 152]
[147, 158]
[156, 171]
[187, 200]
[199, 204]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[36, 43, 48]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[24, 25, 30]
[192, 197, 209]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[37, 62]
[93, 108]
[143, 152]
[147, 158]
[156, 171]
[187, 200]
[199, 204]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.829547882080078

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 32] cc => I, Pos: [14, 32] cc => I, Pos: [24, 25, 30] ccc => cc, Pos: [36, 43, 48] ccc => cc, Pos: [37, 62] cc => I, Pos: [37, 62] cc => I, Pos: [93, 108] cc => I, Pos: [93, 108] cc => I, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [147, 158] cc => I, Pos: [147, 158] cc => I, Pos: [156, 171] cc => I, Pos: [156, 171] cc => I, Pos: [187, 200] cc => I, Pos: [187, 200] cc => I, Pos: [192, 197, 209] ccc => cc, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I]

--------End Timer [Generate Plans]:  0.03124856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [36, 43, 48] ccc => cc,
 Pos: [37, 62] cc => I,
 Pos: [93, 108] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [147, 158] cc => I,
 Pos: [156, 171] cc => I,
 Pos: [187, 200] cc => I,
 Pos: [192, 197, 209] ccc => cc,
 Pos: [199, 204] cc => I]
Change: 11, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 32] cc => I
Apply:  Pos: [24, 25, 30] ccc => cc
Apply:  Pos: [36, 43, 48] ccc => cc
Apply:  Pos: [37, 62] cc => I
Apply:  Pos: [93, 108] cc => I
Apply:  Pos: [143, 152] cc => I
Apply:  Pos: [147, 158] cc => I
Apply:  Pos: [156, 171] cc => I
Apply:  Pos: [187, 200] cc => I
Apply:  Pos: [192, 197, 209] ccc => cc
Apply:  Pos: [199, 204] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [13, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 2], [9, 3], [4, 19], [17, 3], [2, 7], [13, 8], [0, 15], [9, 3], [10, 8], [12, 6], [0, 8], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [17, 3], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [0, 13], [4, 16], [5, 18], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [14, 5], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [3, 2], [10, 11], [10, 9], [12, 17], [3, 2], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.8607964515686035

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[81, 117]
[129, 147]
[173, 177]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[22, 28, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[81, 117]
[129, 147]
[173, 177]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.421887159347534

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 28, 29] ccc => cc, Pos: [81, 117] cc => I, Pos: [81, 117] cc => I, Pos: [129, 147] cc => I, Pos: [129, 147] cc => I, Pos: [173, 177] cc => I, Pos: [173, 177] cc => I]

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 28, 29] ccc => cc,
 Pos: [81, 117] cc => I,
 Pos: [129, 147] cc => I,
 Pos: [173, 177] cc => I]
Change: 4, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 28, 29] ccc => cc
Apply:  Pos: [81, 117] cc => I
Apply:  Pos: [129, 147] cc => I
Apply:  Pos: [173, 177] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [0, 15], [9, 3], [10, 8], [12, 6], [0, 8], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [17, 3], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [12, 17], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.437511920928955

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[163, 165, 170]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.250319719314575

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [163, 165, 170] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [163, 165, 170] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [163, 165, 170] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 2], [9, 3], [4, 19], [17, 3], [2, 7], [13, 8], [0, 15], [9, 3], [10, 8], [12, 6], [0, 8], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [17, 3], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 11], [10, 9], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.250319719314575

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2190239429473877

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [0, 15], [9, 3], [10, 8], [12, 6], [0, 8], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [17, 3], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2190239429473877

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [183] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 132 (41.90%)
 - depth: 0 (0.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938143730163574

[2, 7], [5, 0], [18, 9], [10, 11], [4, 16], [15, 8], [12, 1], [6, 17], [2, 7], [17, 3], [5, 0], [6, 1], [14, 12], [18, 9], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [6, 17], [15, 8], [9, 7], [5, 18], [6, 17], [14, 12], [4, 19], [13, 10], [11, 2], [9, 7], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [1, 17], [13, 10], [4, 19], [5, 18], [8, 11], [14, 12], [3, 7], [2, 7], [4, 16], [14, 12], [1, 17], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [10, 8], [4, 16], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [10, 8], [11, 2], [5, 0], [10, 9], [4, 19], [15, 8], [18, 1], [14, 12], [17, 3], [0, 13], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [0, 13], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [4, 16], [8, 11], [0, 15], [1, 17], [19, 13], [5, 0], [8, 11], [2, 7], [12, 6], [9, 3], [6, 1], [19, 13], [4, 16], [2, 7], [10, 9], [17, 3], [14, 5], [6, 1], [12, 17], [4, 19], [10, 11], [16, 18], [3, 7], [14, 5], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [12, 17], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [14, 12], [9, 3], [19, 13], [6, 1], [10, 8], [14, 12], [9, 3], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [1, 10], [14, 18], [9, 3], [2, 7], [4, 19], [17, 3], [19, 5], [9, 2], [13, 8], [1, 10], [14, 18], [0, 15], [9, 3], [14, 18], [2, 7], [10, 8], [12, 6], [4, 16], [0, 15], [1, 17], [3, 2], [10, 9], [19, 5], [15, 8], [14, 18], [4, 16], [1, 17], [2, 7], [13, 11], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [9, 2], [1, 10], [17, 3], [5, 0], [4, 16], [13, 11], [9, 7], [13, 8], [19, 0], [14, 12], [6, 1], [17, 3], [4, 16], [9, 7], [10, 8], [17, 3], [0, 13], [5, 18], [6, 1], [4, 16], [9, 2], [8, 11], [5, 18], [19, 0], [1, 17], [16, 14], [2, 7], [8, 11], [13, 10], [19, 5], [0, 15], [1, 17], [16, 18], [14, 12], [2, 7], [16, 14], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [18, 10], [5, 0], [9, 7], [18, 10], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [5, 0], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [4, 16], [17, 3], [3, 7], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [3, 7], [14, 18], [13, 8], [11, 2], [1, 9], [16, 5], [3, 7], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [3, 7], [11, 2], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [0, 13], [11, 2], [16, 18], [12, 17], [1, 10], [18, 9], [12, 6], [0, 13], [17, 3], [14, 5], [1, 10], [14, 18], [4, 16], [13, 8], [3, 2], [10, 9], [19, 0], [12, 6], [14, 18], [10, 11], [12, 17], [15, 8], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [19, 0], [15, 8], [11, 2], [18, 9], [13, 8], [0, 15], [11, 2], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 165, 171]
[167, 175, 181]
[185, 193, 200]
[202, 210, 212]
[224, 231, 239]
[288, 294, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 74, 82]
[145, 149, 156]
[156, 162, 169]
[219, 226, 228]
[231, 239, 243]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.2796032428741455

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [2, 13] cc => I, Pos: [2, 13] cc => I, Pos: [5, 20] cc => I, Pos: [5, 20] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [22, 39] cc => I, Pos: [22, 39] cc => I, Pos: [36, 46] cc => I, Pos: [36, 46] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [44, 55] cc => I, Pos: [44, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [60, 65] cc => I, Pos: [60, 65] cc => I, Pos: [65, 77] cc => I, Pos: [65, 77] cc => I, Pos: [68, 74, 82] ccc => cc, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [84, 96] cc => I, Pos: [84, 96] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [102, 114] cc => I, Pos: [102, 114] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [121, 126] cc => I, Pos: [121, 126] cc => I, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [131, 159] cc => I, Pos: [131, 159] cc => I, Pos: [140, 170] cc => I, Pos: [140, 170] cc => I, Pos: [142, 151] cc => I, Pos: [142, 151] cc => I, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [145, 149, 156] ccc => cc, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [152, 155] cc => I, Pos: [152, 155] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [155, 166] cc => I, Pos: [155, 166] cc => I, Pos: [156, 162, 169] ccc => cc, Pos: [159, 167] cc => I, Pos: [159, 167] cc => I, Pos: [160, 165, 171] ccc => cc, Pos: [161, 168] cc => I, Pos: [161, 168] cc => I, Pos: [167, 175, 181] ccc => cc, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [174, 194] cc => I, Pos: [174, 194] cc => I, Pos: [177, 197] cc => I, Pos: [177, 197] cc => I, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I, Pos: [181, 189] cc => I, Pos: [181, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [185, 193, 200] ccc => cc, Pos: [187, 195] cc => I, Pos: [187, 195] cc => I, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 208] cc => I, Pos: [201, 208] cc => I, Pos: [202, 210, 212] ccc => cc, Pos: [203, 211] cc => I, Pos: [203, 211] cc => I, Pos: [218, 221] cc => I, Pos: [218, 221] cc => I, Pos: [219, 226, 228] ccc => cc, Pos: [224, 231, 239] ccc => cc, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [231, 239, 243] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [249, 255] cc => I, Pos: [249, 255] cc => I, Pos: [252, 262] cc => I, Pos: [252, 262] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [255, 261] cc => I, Pos: [255, 261] cc => I, Pos: [262, 272] cc => I, Pos: [262, 272] cc => I, Pos: [271, 278] cc => I, Pos: [271, 278] cc => I, Pos: [275, 281] cc => I, Pos: [275, 281] cc => I, Pos: [277, 288] cc => I, Pos: [277, 288] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [287, 300] cc => I, Pos: [287, 300] cc => I, Pos: [288, 294, 297] ccc => cc, Pos: [292, 301] cc => I, Pos: [292, 301] cc => I, Pos: [302, 306] cc => I, Pos: [302, 306] cc => I]

--------End Timer [Generate Plans]:  0.15623974800109863

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [59, 68] cc => I,
 Pos: [60, 65] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [159, 167] cc => I,
 Pos: [140, 170] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [156, 162, 169] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [155, 166] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [174, 194] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [179, 188] cc => I,
 Pos: [181, 189] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [219, 226, 228] ccc => cc,
 Pos: [231, 239, 243] ccc => cc,
 Pos: [249, 255] cc => I,
 Pos: [248, 253] cc => I,
 Pos: [262, 272] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [288, 294, 297] ccc => cc,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 57, Saving: 59

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [2, 13] cc => I
Apply:  Pos: [5, 20] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [22, 39] cc => I
Apply:  Pos: [36, 46] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [44, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [59, 68] cc => I
Apply:  Pos: [60, 65] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [84, 96] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [102, 114] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [121, 126] cc => I
Apply:  Pos: [159, 167] cc => I
Apply:  Pos: [140, 170] cc => I
Apply:  Pos: [142, 151] cc => I
Apply:  Pos: [143, 152] cc => I
Apply:  Pos: [156, 162, 169] ccc => cc
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [155, 166] cc => I
Apply:  Pos: [161, 168] cc => I
Apply:  Pos: [174, 194] cc => I
Apply:  Pos: [177, 197] cc => I
Apply:  Pos: [179, 188] cc => I
Apply:  Pos: [181, 189] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [185, 193, 200] ccc => cc
Apply:  Pos: [187, 195] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 208] cc => I
Apply:  Pos: [202, 210, 212] ccc => cc
Apply:  Pos: [203, 211] cc => I
Apply:  Pos: [218, 221] cc => I
Apply:  Pos: [219, 226, 228] ccc => cc
Apply:  Pos: [231, 239, 243] ccc => cc
Apply:  Pos: [249, 255] cc => I
Apply:  Pos: [248, 253] cc => I
Apply:  Pos: [262, 272] cc => I
Apply:  Pos: [271, 278] cc => I
Apply:  Pos: [275, 281] cc => I
Apply:  Pos: [288, 294, 297] ccc => cc
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [287, 300] cc => I
Apply:  Pos: [292, 301] cc => I
Apply:  Pos: [302, 306] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 7], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [4, 19], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [5, 18], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [14, 5], [9, 7], [19, 13], [6, 1], [4, 16], [8, 11], [5, 0], [2, 7], [6, 17], [10, 9], [4, 16], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [16, 18], [17, 3], [3, 7], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [3, 7], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 17], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [13, 8], [3, 2], [10, 9], [12, 1], [10, 11], [12, 17], [2, 7], [6, 1], [16, 5], [18, 10], [3, 7], [1, 9], [18, 9], [13, 8], [0, 15], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----End Timer [Execute Mapping]:  6.435842990875244

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[47, 61]
[87, 121]
[137, 144]
[139, 148]
[153, 168]
[184, 197]
[196, 201]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[24, 25, 30]
[190, 194, 206]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[47, 61]
[87, 121]
[137, 144]
[139, 148]
[153, 168]
[184, 197]
[196, 201]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.906677484512329

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 32] cc => I, Pos: [14, 32] cc => I, Pos: [24, 25, 30] ccc => cc, Pos: [47, 61] cc => I, Pos: [47, 61] cc => I, Pos: [87, 121] cc => I, Pos: [87, 121] cc => I, Pos: [137, 144] cc => I, Pos: [137, 144] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [184, 197] cc => I, Pos: [184, 197] cc => I, Pos: [190, 194, 206] ccc => cc, Pos: [196, 201] cc => I, Pos: [196, 201] cc => I]

--------End Timer [Generate Plans]:  0.031248092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [47, 61] cc => I,
 Pos: [87, 121] cc => I,
 Pos: [137, 144] cc => I,
 Pos: [139, 148] cc => I,
 Pos: [153, 168] cc => I,
 Pos: [184, 197] cc => I,
 Pos: [190, 194, 206] ccc => cc,
 Pos: [196, 201] cc => I]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 32] cc => I
Apply:  Pos: [24, 25, 30] ccc => cc
Apply:  Pos: [47, 61] cc => I
Apply:  Pos: [87, 121] cc => I
Apply:  Pos: [137, 144] cc => I
Apply:  Pos: [139, 148] cc => I
Apply:  Pos: [153, 168] cc => I
Apply:  Pos: [184, 197] cc => I
Apply:  Pos: [190, 194, 206] ccc => cc
Apply:  Pos: [196, 201] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [13, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [14, 5], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [16, 18], [17, 3], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 17], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [3, 2], [10, 9], [12, 1], [10, 11], [12, 17], [3, 2], [6, 1], [16, 5], [18, 10], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.9379255771636963

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[119, 140]
[126, 144]
[171, 176]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[22, 28, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[119, 140]
[126, 144]
[171, 176]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.436894655227661

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 28, 29] ccc => cc, Pos: [119, 140] cc => I, Pos: [119, 140] cc => I, Pos: [126, 144] cc => I, Pos: [126, 144] cc => I, Pos: [171, 176] cc => I, Pos: [171, 176] cc => I]

--------End Timer [Generate Plans]:  0.015622377395629883

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 28, 29] ccc => cc,
 Pos: [119, 140] cc => I,
 Pos: [126, 144] cc => I,
 Pos: [171, 176] cc => I]
Change: 4, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 28, 29] ccc => cc
Apply:  Pos: [119, 140] cc => I
Apply:  Pos: [126, 144] cc => I
Apply:  Pos: [171, 176] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 17], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [10, 9], [12, 1], [10, 11], [12, 17], [6, 1], [16, 5], [18, 10], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.452517032623291

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 163, 169]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2970664501190186

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [160, 163, 169] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [160, 163, 169] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [160, 163, 169] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 3], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [10, 9], [12, 1], [10, 11], [6, 1], [16, 5], [18, 10], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2970664501190186

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.281895399093628

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 3], [18, 9], [12, 6], [17, 3], [14, 5], [4, 16], [10, 9], [12, 1], [10, 11], [6, 1], [16, 5], [18, 10], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.281895399093628

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [181] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 362

Reduced: 
 - size: 134 (42.54%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12518000602722168

[2, 7], [5, 0], [18, 9], [10, 11], [4, 16], [15, 8], [12, 1], [6, 17], [2, 7], [17, 3], [5, 0], [6, 1], [14, 12], [18, 9], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [6, 17], [15, 8], [9, 7], [5, 18], [6, 17], [14, 12], [4, 19], [13, 10], [11, 2], [9, 7], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [1, 17], [13, 10], [4, 19], [5, 18], [8, 11], [14, 12], [3, 7], [2, 7], [4, 16], [14, 12], [1, 17], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [10, 8], [4, 16], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [10, 8], [11, 2], [5, 0], [10, 9], [4, 19], [15, 8], [18, 1], [14, 12], [17, 3], [0, 13], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [0, 13], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [4, 16], [8, 11], [0, 15], [1, 17], [19, 13], [5, 0], [8, 11], [2, 7], [12, 6], [9, 3], [6, 1], [19, 13], [4, 16], [2, 7], [10, 9], [17, 3], [14, 5], [6, 1], [12, 17], [4, 19], [10, 11], [16, 18], [3, 7], [14, 5], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [12, 17], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [14, 12], [9, 3], [19, 13], [6, 1], [10, 8], [14, 12], [9, 3], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [1, 10], [14, 18], [9, 3], [2, 7], [4, 19], [17, 3], [19, 5], [9, 2], [13, 8], [1, 10], [14, 18], [0, 15], [9, 3], [14, 18], [2, 7], [10, 8], [12, 6], [4, 16], [0, 15], [1, 17], [3, 2], [10, 9], [19, 5], [15, 8], [14, 18], [4, 16], [1, 17], [2, 7], [13, 11], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [9, 2], [1, 10], [17, 3], [5, 0], [4, 16], [13, 11], [9, 7], [13, 8], [19, 0], [14, 12], [6, 1], [17, 3], [4, 16], [9, 7], [10, 8], [17, 3], [0, 13], [5, 18], [6, 1], [4, 16], [9, 2], [8, 11], [5, 18], [19, 0], [1, 17], [16, 14], [2, 7], [8, 11], [13, 10], [19, 5], [0, 15], [1, 17], [16, 18], [14, 12], [2, 7], [16, 14], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [18, 10], [5, 0], [9, 7], [18, 10], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [5, 0], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [4, 16], [17, 3], [3, 7], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [3, 7], [14, 18], [13, 8], [11, 2], [1, 9], [16, 5], [3, 7], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [3, 7], [11, 2], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [0, 13], [11, 2], [16, 18], [12, 17], [1, 10], [18, 9], [12, 6], [0, 13], [17, 3], [14, 5], [1, 10], [14, 18], [4, 16], [13, 8], [3, 2], [10, 9], [19, 0], [12, 6], [14, 18], [10, 11], [12, 17], [15, 8], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [19, 0], [15, 8], [11, 2], [18, 9], [13, 8], [0, 15], [11, 2], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 165, 171]
[167, 175, 181]
[185, 193, 200]
[202, 210, 212]
[224, 231, 239]
[288, 294, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 74, 82]
[145, 149, 156]
[156, 162, 169]
[219, 226, 228]
[231, 239, 243]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.187284231185913

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [2, 13] cc => I, Pos: [2, 13] cc => I, Pos: [5, 20] cc => I, Pos: [5, 20] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [22, 39] cc => I, Pos: [22, 39] cc => I, Pos: [36, 46] cc => I, Pos: [36, 46] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [44, 55] cc => I, Pos: [44, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [60, 65] cc => I, Pos: [60, 65] cc => I, Pos: [65, 77] cc => I, Pos: [65, 77] cc => I, Pos: [68, 74, 82] ccc => cc, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [84, 96] cc => I, Pos: [84, 96] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [102, 114] cc => I, Pos: [102, 114] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [121, 126] cc => I, Pos: [121, 126] cc => I, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [131, 159] cc => I, Pos: [131, 159] cc => I, Pos: [140, 170] cc => I, Pos: [140, 170] cc => I, Pos: [142, 151] cc => I, Pos: [142, 151] cc => I, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [145, 149, 156] ccc => cc, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [152, 155] cc => I, Pos: [152, 155] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [155, 166] cc => I, Pos: [155, 166] cc => I, Pos: [156, 162, 169] ccc => cc, Pos: [159, 167] cc => I, Pos: [159, 167] cc => I, Pos: [160, 165, 171] ccc => cc, Pos: [161, 168] cc => I, Pos: [161, 168] cc => I, Pos: [167, 175, 181] ccc => cc, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [174, 194] cc => I, Pos: [174, 194] cc => I, Pos: [177, 197] cc => I, Pos: [177, 197] cc => I, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I, Pos: [181, 189] cc => I, Pos: [181, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [185, 193, 200] ccc => cc, Pos: [187, 195] cc => I, Pos: [187, 195] cc => I, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 208] cc => I, Pos: [201, 208] cc => I, Pos: [202, 210, 212] ccc => cc, Pos: [203, 211] cc => I, Pos: [203, 211] cc => I, Pos: [218, 221] cc => I, Pos: [218, 221] cc => I, Pos: [219, 226, 228] ccc => cc, Pos: [224, 231, 239] ccc => cc, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [231, 239, 243] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [249, 255] cc => I, Pos: [249, 255] cc => I, Pos: [252, 262] cc => I, Pos: [252, 262] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [255, 261] cc => I, Pos: [255, 261] cc => I, Pos: [262, 272] cc => I, Pos: [262, 272] cc => I, Pos: [271, 278] cc => I, Pos: [271, 278] cc => I, Pos: [275, 281] cc => I, Pos: [275, 281] cc => I, Pos: [277, 288] cc => I, Pos: [277, 288] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [287, 300] cc => I, Pos: [287, 300] cc => I, Pos: [288, 294, 297] ccc => cc, Pos: [292, 301] cc => I, Pos: [292, 301] cc => I, Pos: [302, 306] cc => I, Pos: [302, 306] cc => I]

--------End Timer [Generate Plans]:  0.1410212516784668

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [68, 74, 82] ccc => cc,
 Pos: [60, 65] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [115, 122] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [131, 159] cc => I,
 Pos: [140, 170] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [156, 162, 169] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [155, 166] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [181, 189] cc => I,
 Pos: [174, 194] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [179, 188] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [231, 239, 243] ccc => cc,
 Pos: [249, 255] cc => I,
 Pos: [253, 259] cc => I,
 Pos: [252, 262] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [277, 288] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 57, Saving: 58

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [2, 13] cc => I
Apply:  Pos: [5, 20] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [22, 39] cc => I
Apply:  Pos: [36, 46] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [44, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [68, 74, 82] ccc => cc
Apply:  Pos: [60, 65] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [84, 96] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [102, 114] cc => I
Apply:  Pos: [115, 122] cc => I
Apply:  Pos: [121, 126] cc => I
Apply:  Pos: [131, 159] cc => I
Apply:  Pos: [140, 170] cc => I
Apply:  Pos: [142, 151] cc => I
Apply:  Pos: [143, 152] cc => I
Apply:  Pos: [156, 162, 169] ccc => cc
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [155, 166] cc => I
Apply:  Pos: [161, 168] cc => I
Apply:  Pos: [181, 189] cc => I
Apply:  Pos: [174, 194] cc => I
Apply:  Pos: [177, 197] cc => I
Apply:  Pos: [179, 188] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [185, 193, 200] ccc => cc
Apply:  Pos: [187, 195] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 208] cc => I
Apply:  Pos: [202, 210, 212] ccc => cc
Apply:  Pos: [203, 211] cc => I
Apply:  Pos: [218, 221] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [231, 239, 243] ccc => cc
Apply:  Pos: [249, 255] cc => I
Apply:  Pos: [253, 259] cc => I
Apply:  Pos: [252, 262] cc => I
Apply:  Pos: [271, 278] cc => I
Apply:  Pos: [275, 281] cc => I
Apply:  Pos: [277, 288] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [287, 300] cc => I
Apply:  Pos: [292, 301] cc => I
Apply:  Pos: [302, 306] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 7], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [9, 7], [14, 5], [9, 3], [14, 12], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [16, 14], [17, 3], [16, 5], [9, 2], [6, 17], [14, 12], [1, 10], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [4, 19], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [5, 18], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [6, 17], [10, 9], [4, 16], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [16, 18], [17, 3], [3, 7], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [3, 7], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [13, 8], [3, 2], [10, 9], [10, 11], [12, 17], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [18, 9], [13, 8], [0, 15], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----End Timer [Execute Mapping]:  6.343810558319092

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[49, 62]
[87, 122]
[138, 145]
[140, 156]
[153, 167]
[183, 196]
[195, 200]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[36, 42, 47]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[24, 25, 30]
[188, 193, 205]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[49, 62]
[87, 122]
[138, 145]
[140, 156]
[153, 167]
[183, 196]
[195, 200]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7971127033233643

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 32] cc => I, Pos: [14, 32] cc => I, Pos: [24, 25, 30] ccc => cc, Pos: [36, 42, 47] ccc => cc, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [87, 122] cc => I, Pos: [87, 122] cc => I, Pos: [138, 145] cc => I, Pos: [138, 145] cc => I, Pos: [140, 156] cc => I, Pos: [140, 156] cc => I, Pos: [153, 167] cc => I, Pos: [153, 167] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [188, 193, 205] ccc => cc, Pos: [195, 200] cc => I, Pos: [195, 200] cc => I]

--------End Timer [Generate Plans]:  0.015629291534423828

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [36, 42, 47] ccc => cc,
 Pos: [49, 62] cc => I,
 Pos: [87, 122] cc => I,
 Pos: [138, 145] cc => I,
 Pos: [140, 156] cc => I,
 Pos: [153, 167] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [188, 193, 205] ccc => cc,
 Pos: [195, 200] cc => I]
Change: 11, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 32] cc => I
Apply:  Pos: [24, 25, 30] ccc => cc
Apply:  Pos: [36, 42, 47] ccc => cc
Apply:  Pos: [49, 62] cc => I
Apply:  Pos: [87, 122] cc => I
Apply:  Pos: [138, 145] cc => I
Apply:  Pos: [140, 156] cc => I
Apply:  Pos: [153, 167] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [188, 193, 205] ccc => cc
Apply:  Pos: [195, 200] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015622615814208984

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [13, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [16, 18], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [3, 2], [10, 11], [10, 9], [12, 17], [3, 2], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.828364610671997

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[119, 140]
[169, 173]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[22, 28, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[119, 140]
[169, 173]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3903746604919434

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 28, 29] ccc => cc, Pos: [119, 140] cc => I, Pos: [119, 140] cc => I, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 28, 29] ccc => cc, Pos: [119, 140] cc => I, Pos: [169, 173] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 28, 29] ccc => cc
Apply:  Pos: [119, 140] cc => I
Apply:  Pos: [169, 173] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [12, 17], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.3903746604919434

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[161, 163, 168]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2656309604644775

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [161, 163, 168] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [161, 163, 168] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [161, 163, 168] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 11], [10, 9], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2656309604644775

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2187914848327637

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2187914848327637

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [181] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 362

Reduced: 
 - size: 134 (42.54%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936737060546875

[2, 7], [5, 0], [18, 9], [10, 11], [4, 16], [15, 8], [12, 1], [6, 17], [2, 7], [17, 3], [5, 0], [6, 1], [14, 12], [18, 9], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [6, 17], [15, 8], [9, 7], [5, 18], [6, 17], [14, 12], [4, 19], [13, 10], [11, 2], [9, 7], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [1, 17], [13, 10], [4, 19], [5, 18], [8, 11], [14, 12], [3, 7], [2, 7], [4, 16], [14, 12], [1, 17], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [10, 8], [4, 16], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [10, 8], [11, 2], [5, 0], [10, 9], [4, 19], [15, 8], [18, 1], [14, 12], [17, 3], [0, 13], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [0, 13], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [4, 16], [8, 11], [0, 15], [1, 17], [19, 13], [5, 0], [8, 11], [2, 7], [12, 6], [9, 3], [6, 1], [19, 13], [4, 16], [2, 7], [10, 9], [17, 3], [14, 5], [6, 1], [12, 17], [4, 19], [10, 11], [16, 18], [3, 7], [14, 5], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [12, 17], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [14, 12], [9, 3], [19, 13], [6, 1], [10, 8], [14, 12], [9, 3], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [1, 10], [14, 18], [9, 3], [2, 7], [4, 19], [17, 3], [19, 5], [9, 2], [13, 8], [1, 10], [14, 18], [0, 15], [9, 3], [14, 18], [2, 7], [10, 8], [12, 6], [4, 16], [0, 15], [1, 17], [3, 2], [10, 9], [19, 5], [15, 8], [14, 18], [4, 16], [1, 17], [2, 7], [13, 11], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [9, 2], [1, 10], [17, 3], [5, 0], [4, 16], [13, 11], [9, 7], [13, 8], [19, 0], [14, 12], [6, 1], [17, 3], [4, 16], [9, 7], [10, 8], [17, 3], [0, 13], [5, 18], [6, 1], [4, 16], [9, 2], [8, 11], [5, 18], [19, 0], [1, 17], [16, 14], [2, 7], [8, 11], [13, 10], [19, 5], [0, 15], [1, 17], [16, 18], [14, 12], [2, 7], [16, 14], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [18, 10], [5, 0], [9, 7], [18, 10], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [5, 0], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [4, 16], [17, 3], [3, 7], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [3, 7], [14, 18], [13, 8], [11, 2], [1, 9], [16, 5], [3, 7], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [3, 7], [11, 2], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [0, 13], [11, 2], [16, 18], [12, 17], [1, 10], [18, 9], [12, 6], [0, 13], [17, 3], [14, 5], [1, 10], [14, 18], [4, 16], [13, 8], [3, 2], [10, 9], [19, 0], [12, 6], [14, 18], [10, 11], [12, 17], [15, 8], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [19, 0], [15, 8], [11, 2], [18, 9], [13, 8], [0, 15], [11, 2], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 165, 171]
[167, 175, 181]
[185, 193, 200]
[202, 210, 212]
[224, 231, 239]
[288, 294, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 74, 82]
[145, 149, 156]
[156, 162, 169]
[219, 226, 228]
[231, 239, 243]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.1875317096710205

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [2, 13] cc => I, Pos: [2, 13] cc => I, Pos: [5, 20] cc => I, Pos: [5, 20] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [22, 39] cc => I, Pos: [22, 39] cc => I, Pos: [36, 46] cc => I, Pos: [36, 46] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [44, 55] cc => I, Pos: [44, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [60, 65] cc => I, Pos: [60, 65] cc => I, Pos: [65, 77] cc => I, Pos: [65, 77] cc => I, Pos: [68, 74, 82] ccc => cc, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [84, 96] cc => I, Pos: [84, 96] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [102, 114] cc => I, Pos: [102, 114] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [121, 126] cc => I, Pos: [121, 126] cc => I, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [131, 159] cc => I, Pos: [131, 159] cc => I, Pos: [140, 170] cc => I, Pos: [140, 170] cc => I, Pos: [142, 151] cc => I, Pos: [142, 151] cc => I, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [145, 149, 156] ccc => cc, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [152, 155] cc => I, Pos: [152, 155] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [155, 166] cc => I, Pos: [155, 166] cc => I, Pos: [156, 162, 169] ccc => cc, Pos: [159, 167] cc => I, Pos: [159, 167] cc => I, Pos: [160, 165, 171] ccc => cc, Pos: [161, 168] cc => I, Pos: [161, 168] cc => I, Pos: [167, 175, 181] ccc => cc, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [174, 194] cc => I, Pos: [174, 194] cc => I, Pos: [177, 197] cc => I, Pos: [177, 197] cc => I, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I, Pos: [181, 189] cc => I, Pos: [181, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [185, 193, 200] ccc => cc, Pos: [187, 195] cc => I, Pos: [187, 195] cc => I, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 208] cc => I, Pos: [201, 208] cc => I, Pos: [202, 210, 212] ccc => cc, Pos: [203, 211] cc => I, Pos: [203, 211] cc => I, Pos: [218, 221] cc => I, Pos: [218, 221] cc => I, Pos: [219, 226, 228] ccc => cc, Pos: [224, 231, 239] ccc => cc, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [231, 239, 243] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [249, 255] cc => I, Pos: [249, 255] cc => I, Pos: [252, 262] cc => I, Pos: [252, 262] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [255, 261] cc => I, Pos: [255, 261] cc => I, Pos: [262, 272] cc => I, Pos: [262, 272] cc => I, Pos: [271, 278] cc => I, Pos: [271, 278] cc => I, Pos: [275, 281] cc => I, Pos: [275, 281] cc => I, Pos: [277, 288] cc => I, Pos: [277, 288] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [287, 300] cc => I, Pos: [287, 300] cc => I, Pos: [288, 294, 297] ccc => cc, Pos: [292, 301] cc => I, Pos: [292, 301] cc => I, Pos: [302, 306] cc => I, Pos: [302, 306] cc => I]

--------End Timer [Generate Plans]:  0.14062905311584473

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [68, 74, 82] ccc => cc,
 Pos: [65, 77] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [131, 159] cc => I,
 Pos: [140, 170] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [152, 155] cc => I,
 Pos: [145, 149, 156] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [181, 189] cc => I,
 Pos: [194, 199] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [179, 188] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [228, 236] cc => I,
 Pos: [231, 239, 243] ccc => cc,
 Pos: [249, 255] cc => I,
 Pos: [253, 259] cc => I,
 Pos: [252, 262] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [277, 288] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 56, Saving: 56

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [2, 13] cc => I
Apply:  Pos: [5, 20] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [22, 39] cc => I
Apply:  Pos: [36, 46] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [44, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [68, 74, 82] ccc => cc
Apply:  Pos: [65, 77] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [84, 96] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [102, 114] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [121, 126] cc => I
Apply:  Pos: [131, 159] cc => I
Apply:  Pos: [140, 170] cc => I
Apply:  Pos: [142, 151] cc => I
Apply:  Pos: [152, 155] cc => I
Apply:  Pos: [145, 149, 156] ccc => cc
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [161, 168] cc => I
Apply:  Pos: [181, 189] cc => I
Apply:  Pos: [194, 199] cc => I
Apply:  Pos: [177, 197] cc => I
Apply:  Pos: [179, 188] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [185, 193, 200] ccc => cc
Apply:  Pos: [187, 195] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 208] cc => I
Apply:  Pos: [202, 210, 212] ccc => cc
Apply:  Pos: [203, 211] cc => I
Apply:  Pos: [218, 221] cc => I
Apply:  Pos: [228, 236] cc => I
Apply:  Pos: [231, 239, 243] ccc => cc
Apply:  Pos: [249, 255] cc => I
Apply:  Pos: [253, 259] cc => I
Apply:  Pos: [252, 262] cc => I
Apply:  Pos: [271, 278] cc => I
Apply:  Pos: [275, 281] cc => I
Apply:  Pos: [277, 288] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [287, 300] cc => I
Apply:  Pos: [292, 301] cc => I
Apply:  Pos: [302, 306] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 7], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [16, 14], [17, 3], [16, 5], [9, 2], [6, 17], [14, 12], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [4, 19], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [14, 18], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [14, 18], [4, 16], [2, 7], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [6, 17], [10, 9], [4, 16], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [16, 18], [17, 3], [3, 7], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [3, 7], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [13, 8], [3, 2], [10, 9], [10, 11], [12, 17], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [18, 9], [13, 8], [0, 15], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----End Timer [Execute Mapping]:  6.328160762786865

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[37, 62]
[93, 106]
[140, 147]
[142, 158]
[155, 169]
[185, 198]
[197, 202]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[36, 43, 48]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[24, 25, 30]
[190, 195, 207]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[37, 62]
[93, 106]
[140, 147]
[142, 158]
[155, 169]
[185, 198]
[197, 202]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.8589532375335693

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 32] cc => I, Pos: [14, 32] cc => I, Pos: [24, 25, 30] ccc => cc, Pos: [36, 43, 48] ccc => cc, Pos: [37, 62] cc => I, Pos: [37, 62] cc => I, Pos: [93, 106] cc => I, Pos: [93, 106] cc => I, Pos: [140, 147] cc => I, Pos: [140, 147] cc => I, Pos: [142, 158] cc => I, Pos: [142, 158] cc => I, Pos: [155, 169] cc => I, Pos: [155, 169] cc => I, Pos: [185, 198] cc => I, Pos: [185, 198] cc => I, Pos: [190, 195, 207] ccc => cc, Pos: [197, 202] cc => I, Pos: [197, 202] cc => I]

--------End Timer [Generate Plans]:  0.015625476837158203

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [36, 43, 48] ccc => cc,
 Pos: [37, 62] cc => I,
 Pos: [93, 106] cc => I,
 Pos: [140, 147] cc => I,
 Pos: [142, 158] cc => I,
 Pos: [155, 169] cc => I,
 Pos: [185, 198] cc => I,
 Pos: [190, 195, 207] ccc => cc,
 Pos: [197, 202] cc => I]
Change: 11, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 32] cc => I
Apply:  Pos: [24, 25, 30] ccc => cc
Apply:  Pos: [36, 43, 48] ccc => cc
Apply:  Pos: [37, 62] cc => I
Apply:  Pos: [93, 106] cc => I
Apply:  Pos: [140, 147] cc => I
Apply:  Pos: [142, 158] cc => I
Apply:  Pos: [155, 169] cc => I
Apply:  Pos: [185, 198] cc => I
Apply:  Pos: [190, 195, 207] ccc => cc
Apply:  Pos: [197, 202] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.01562190055847168

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [13, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 2], [9, 3], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [16, 18], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [3, 2], [10, 11], [10, 9], [12, 17], [3, 2], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.890200614929199

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[81, 104]
[121, 142]
[171, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[22, 28, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[81, 104]
[121, 142]
[171, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4062724113464355

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 28, 29] ccc => cc, Pos: [81, 104] cc => I, Pos: [81, 104] cc => I, Pos: [121, 142] cc => I, Pos: [121, 142] cc => I, Pos: [171, 175] cc => I, Pos: [171, 175] cc => I]

--------End Timer [Generate Plans]:  0.015625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 28, 29] ccc => cc,
 Pos: [81, 104] cc => I,
 Pos: [121, 142] cc => I,
 Pos: [171, 175] cc => I]
Change: 4, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 28, 29] ccc => cc
Apply:  Pos: [81, 104] cc => I
Apply:  Pos: [121, 142] cc => I
Apply:  Pos: [171, 175] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [12, 17], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.4218974113464355

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[161, 163, 168]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2656397819519043

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [161, 163, 168] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [161, 163, 168] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [161, 163, 168] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 2], [9, 3], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 11], [10, 9], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2656397819519043

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.234337329864502

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [16, 14], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [14, 12], [17, 3], [16, 5], [9, 2], [6, 17], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 16], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [5, 0], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.234337329864502

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [181] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 362

Reduced: 
 - size: 134 (42.54%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12497806549072266

[2, 7], [5, 0], [18, 9], [10, 11], [4, 16], [15, 8], [12, 1], [6, 17], [2, 7], [17, 3], [5, 0], [6, 1], [14, 12], [18, 9], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [6, 17], [15, 8], [9, 7], [5, 18], [6, 17], [14, 12], [4, 19], [13, 10], [11, 2], [9, 7], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [1, 17], [13, 10], [4, 19], [5, 18], [8, 11], [14, 12], [3, 7], [2, 7], [4, 16], [14, 12], [1, 17], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [10, 8], [4, 16], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [10, 8], [11, 2], [5, 0], [10, 9], [4, 19], [15, 8], [18, 1], [14, 12], [17, 3], [0, 13], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [0, 13], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [4, 16], [8, 11], [0, 15], [1, 17], [19, 13], [5, 0], [8, 11], [2, 7], [12, 6], [9, 3], [6, 1], [19, 13], [4, 16], [2, 7], [10, 9], [17, 3], [14, 5], [6, 1], [12, 17], [4, 19], [10, 11], [16, 18], [3, 7], [14, 5], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [12, 17], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [14, 12], [9, 3], [19, 13], [6, 1], [10, 8], [14, 12], [9, 3], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [1, 10], [14, 18], [9, 3], [2, 7], [4, 19], [17, 3], [19, 5], [9, 2], [13, 8], [1, 10], [14, 18], [0, 15], [9, 3], [14, 18], [2, 7], [10, 8], [12, 6], [4, 16], [0, 15], [1, 17], [3, 2], [10, 9], [19, 5], [15, 8], [14, 18], [4, 16], [1, 17], [2, 7], [13, 11], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [9, 2], [1, 10], [17, 3], [5, 0], [4, 16], [13, 11], [9, 7], [13, 8], [19, 0], [14, 12], [6, 1], [17, 3], [4, 16], [9, 7], [10, 8], [17, 3], [0, 13], [5, 18], [6, 1], [4, 16], [9, 2], [8, 11], [5, 18], [19, 0], [1, 17], [16, 14], [2, 7], [8, 11], [13, 10], [19, 5], [0, 15], [1, 17], [16, 18], [14, 12], [2, 7], [16, 14], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [18, 10], [5, 0], [9, 7], [18, 10], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [5, 0], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [4, 16], [17, 3], [3, 7], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [3, 7], [14, 18], [13, 8], [11, 2], [1, 9], [16, 5], [3, 7], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [3, 7], [11, 2], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [0, 13], [11, 2], [16, 18], [12, 17], [1, 10], [18, 9], [12, 6], [0, 13], [17, 3], [14, 5], [1, 10], [14, 18], [4, 16], [13, 8], [3, 2], [10, 9], [19, 0], [12, 6], [14, 18], [10, 11], [12, 17], [15, 8], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [19, 0], [15, 8], [11, 2], [18, 9], [13, 8], [0, 15], [11, 2], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 165, 171]
[167, 175, 181]
[185, 193, 200]
[202, 210, 212]
[224, 231, 239]
[288, 294, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 74, 82]
[145, 149, 156]
[156, 162, 169]
[219, 226, 228]
[231, 239, 243]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.312608003616333

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [2, 13] cc => I, Pos: [2, 13] cc => I, Pos: [5, 20] cc => I, Pos: [5, 20] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [22, 39] cc => I, Pos: [22, 39] cc => I, Pos: [36, 46] cc => I, Pos: [36, 46] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [44, 55] cc => I, Pos: [44, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [60, 65] cc => I, Pos: [60, 65] cc => I, Pos: [65, 77] cc => I, Pos: [65, 77] cc => I, Pos: [68, 74, 82] ccc => cc, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [84, 96] cc => I, Pos: [84, 96] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [102, 114] cc => I, Pos: [102, 114] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [121, 126] cc => I, Pos: [121, 126] cc => I, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [131, 159] cc => I, Pos: [131, 159] cc => I, Pos: [140, 170] cc => I, Pos: [140, 170] cc => I, Pos: [142, 151] cc => I, Pos: [142, 151] cc => I, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [145, 149, 156] ccc => cc, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [152, 155] cc => I, Pos: [152, 155] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [155, 166] cc => I, Pos: [155, 166] cc => I, Pos: [156, 162, 169] ccc => cc, Pos: [159, 167] cc => I, Pos: [159, 167] cc => I, Pos: [160, 165, 171] ccc => cc, Pos: [161, 168] cc => I, Pos: [161, 168] cc => I, Pos: [167, 175, 181] ccc => cc, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [174, 194] cc => I, Pos: [174, 194] cc => I, Pos: [177, 197] cc => I, Pos: [177, 197] cc => I, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I, Pos: [181, 189] cc => I, Pos: [181, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [185, 193, 200] ccc => cc, Pos: [187, 195] cc => I, Pos: [187, 195] cc => I, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 208] cc => I, Pos: [201, 208] cc => I, Pos: [202, 210, 212] ccc => cc, Pos: [203, 211] cc => I, Pos: [203, 211] cc => I, Pos: [218, 221] cc => I, Pos: [218, 221] cc => I, Pos: [219, 226, 228] ccc => cc, Pos: [224, 231, 239] ccc => cc, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [231, 239, 243] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [249, 255] cc => I, Pos: [249, 255] cc => I, Pos: [252, 262] cc => I, Pos: [252, 262] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [255, 261] cc => I, Pos: [255, 261] cc => I, Pos: [262, 272] cc => I, Pos: [262, 272] cc => I, Pos: [271, 278] cc => I, Pos: [271, 278] cc => I, Pos: [275, 281] cc => I, Pos: [275, 281] cc => I, Pos: [277, 288] cc => I, Pos: [277, 288] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [287, 300] cc => I, Pos: [287, 300] cc => I, Pos: [288, 294, 297] ccc => cc, Pos: [292, 301] cc => I, Pos: [292, 301] cc => I, Pos: [302, 306] cc => I, Pos: [302, 306] cc => I]

--------End Timer [Generate Plans]:  0.1564018726348877

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [59, 68] cc => I,
 Pos: [65, 77] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [122, 127] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [131, 159] cc => I,
 Pos: [170, 182] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [156, 162, 169] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [155, 166] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [181, 189] cc => I,
 Pos: [174, 194] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [179, 188] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [219, 226, 228] ccc => cc,
 Pos: [231, 239, 243] ccc => cc,
 Pos: [249, 255] cc => I,
 Pos: [253, 259] cc => I,
 Pos: [262, 272] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [277, 288] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 57, Saving: 59

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [2, 13] cc => I
Apply:  Pos: [5, 20] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [22, 39] cc => I
Apply:  Pos: [36, 46] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [44, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [59, 68] cc => I
Apply:  Pos: [65, 77] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [84, 96] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [102, 114] cc => I
Apply:  Pos: [122, 127] cc => I
Apply:  Pos: [121, 126] cc => I
Apply:  Pos: [131, 159] cc => I
Apply:  Pos: [170, 182] cc => I
Apply:  Pos: [142, 151] cc => I
Apply:  Pos: [143, 152] cc => I
Apply:  Pos: [156, 162, 169] ccc => cc
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [155, 166] cc => I
Apply:  Pos: [161, 168] cc => I
Apply:  Pos: [181, 189] cc => I
Apply:  Pos: [174, 194] cc => I
Apply:  Pos: [177, 197] cc => I
Apply:  Pos: [179, 188] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [185, 193, 200] ccc => cc
Apply:  Pos: [187, 195] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 208] cc => I
Apply:  Pos: [202, 210, 212] ccc => cc
Apply:  Pos: [203, 211] cc => I
Apply:  Pos: [218, 221] cc => I
Apply:  Pos: [219, 226, 228] ccc => cc
Apply:  Pos: [231, 239, 243] ccc => cc
Apply:  Pos: [249, 255] cc => I
Apply:  Pos: [253, 259] cc => I
Apply:  Pos: [262, 272] cc => I
Apply:  Pos: [271, 278] cc => I
Apply:  Pos: [275, 281] cc => I
Apply:  Pos: [277, 288] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [287, 300] cc => I
Apply:  Pos: [292, 301] cc => I
Apply:  Pos: [302, 306] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 7], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [9, 7], [14, 5], [9, 3], [4, 19], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [4, 19], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [5, 18], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [14, 5], [9, 7], [19, 13], [6, 1], [4, 16], [8, 11], [5, 0], [2, 7], [6, 17], [10, 9], [4, 16], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [16, 18], [17, 3], [3, 7], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [3, 7], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [13, 8], [3, 2], [10, 9], [10, 11], [12, 17], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [18, 9], [13, 8], [0, 15], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----End Timer [Execute Mapping]:  6.469009876251221

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[36, 61]
[86, 121]
[137, 144]
[139, 148]
[153, 168]
[183, 196]
[195, 200]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[24, 25, 30]
[188, 193, 205]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[36, 61]
[86, 121]
[137, 144]
[139, 148]
[153, 168]
[183, 196]
[195, 200]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.859563112258911

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 32] cc => I, Pos: [14, 32] cc => I, Pos: [24, 25, 30] ccc => cc, Pos: [36, 61] cc => I, Pos: [36, 61] cc => I, Pos: [86, 121] cc => I, Pos: [86, 121] cc => I, Pos: [137, 144] cc => I, Pos: [137, 144] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [153, 168] cc => I, Pos: [153, 168] cc => I, Pos: [183, 196] cc => I, Pos: [183, 196] cc => I, Pos: [188, 193, 205] ccc => cc, Pos: [195, 200] cc => I, Pos: [195, 200] cc => I]

--------End Timer [Generate Plans]:  0.03116607666015625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [36, 61] cc => I,
 Pos: [86, 121] cc => I,
 Pos: [137, 144] cc => I,
 Pos: [139, 148] cc => I,
 Pos: [153, 168] cc => I,
 Pos: [183, 196] cc => I,
 Pos: [188, 193, 205] ccc => cc,
 Pos: [195, 200] cc => I]
Change: 10, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 32] cc => I
Apply:  Pos: [24, 25, 30] ccc => cc
Apply:  Pos: [36, 61] cc => I
Apply:  Pos: [86, 121] cc => I
Apply:  Pos: [137, 144] cc => I
Apply:  Pos: [139, 148] cc => I
Apply:  Pos: [153, 168] cc => I
Apply:  Pos: [183, 196] cc => I
Apply:  Pos: [188, 193, 205] ccc => cc
Apply:  Pos: [195, 200] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [13, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [14, 5], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [16, 18], [17, 3], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [3, 2], [10, 11], [10, 9], [12, 17], [3, 2], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.8907291889190674

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[119, 140]
[126, 144]
[170, 174]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[22, 28, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[119, 140]
[126, 144]
[170, 174]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3750131130218506

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 28, 29] ccc => cc, Pos: [119, 140] cc => I, Pos: [119, 140] cc => I, Pos: [126, 144] cc => I, Pos: [126, 144] cc => I, Pos: [170, 174] cc => I, Pos: [170, 174] cc => I]

--------End Timer [Generate Plans]:  0.015606880187988281

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 28, 29] ccc => cc,
 Pos: [119, 140] cc => I,
 Pos: [126, 144] cc => I,
 Pos: [170, 174] cc => I]
Change: 4, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 28, 29] ccc => cc
Apply:  Pos: [119, 140] cc => I
Apply:  Pos: [126, 144] cc => I
Apply:  Pos: [170, 174] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [12, 17], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.390619993209839

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 162, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2343366146087646

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [160, 162, 167] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [160, 162, 167] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [160, 162, 167] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 11], [10, 9], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2343366146087646

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.234496831893921

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [9, 3], [2, 7], [4, 19], [17, 3], [9, 2], [13, 8], [9, 3], [3, 2], [10, 8], [12, 6], [2, 7], [10, 9], [15, 8], [4, 16], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [4, 16], [16, 12], [13, 10], [19, 5], [0, 15], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [1, 9], [14, 18], [13, 8], [11, 2], [16, 5], [4, 16], [14, 5], [15, 8], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.234496831893921

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 360

Reduced: 
 - size: 135 (42.86%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500429153442383

[2, 7], [5, 0], [18, 9], [10, 11], [4, 16], [15, 8], [12, 1], [6, 17], [2, 7], [17, 3], [5, 0], [6, 1], [14, 12], [18, 9], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [6, 17], [15, 8], [9, 7], [5, 18], [6, 17], [14, 12], [4, 19], [13, 10], [11, 2], [9, 7], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [1, 17], [13, 10], [4, 19], [5, 18], [8, 11], [14, 12], [3, 7], [2, 7], [4, 16], [14, 12], [1, 17], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [10, 8], [4, 16], [9, 7], [14, 5], [9, 3], [14, 12], [4, 19], [10, 8], [11, 2], [5, 0], [10, 9], [4, 19], [15, 8], [18, 1], [14, 12], [17, 3], [0, 13], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [0, 13], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [4, 16], [8, 11], [0, 15], [1, 17], [19, 13], [5, 0], [8, 11], [2, 7], [12, 6], [9, 3], [6, 1], [19, 13], [4, 16], [2, 7], [10, 9], [17, 3], [14, 5], [6, 1], [12, 17], [4, 19], [10, 11], [16, 18], [3, 7], [14, 5], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [12, 17], [9, 3], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [14, 12], [9, 3], [19, 13], [6, 1], [10, 8], [14, 12], [9, 3], [18, 10], [19, 5], [0, 13], [4, 16], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [13, 11], [15, 8], [1, 10], [14, 18], [9, 3], [2, 7], [4, 19], [17, 3], [19, 5], [9, 2], [13, 8], [1, 10], [14, 18], [0, 15], [9, 3], [14, 18], [2, 7], [10, 8], [12, 6], [4, 16], [0, 15], [1, 17], [3, 2], [10, 9], [19, 5], [15, 8], [14, 18], [4, 16], [1, 17], [2, 7], [13, 11], [0, 15], [6, 17], [10, 8], [5, 18], [16, 14], [1, 9], [9, 2], [1, 10], [17, 3], [5, 0], [4, 16], [13, 11], [9, 7], [13, 8], [19, 0], [14, 12], [6, 1], [17, 3], [4, 16], [9, 7], [10, 8], [17, 3], [0, 13], [5, 18], [6, 1], [4, 16], [9, 2], [8, 11], [5, 18], [19, 0], [1, 17], [16, 14], [2, 7], [8, 11], [13, 10], [19, 5], [0, 15], [1, 17], [16, 18], [14, 12], [2, 7], [16, 14], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [18, 10], [5, 0], [9, 7], [18, 10], [19, 13], [6, 1], [4, 16], [8, 11], [14, 5], [2, 7], [5, 0], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [4, 16], [17, 3], [3, 7], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [1, 9], [3, 7], [14, 18], [13, 8], [11, 2], [1, 9], [16, 5], [3, 7], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [3, 7], [11, 2], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [0, 13], [11, 2], [16, 18], [12, 17], [1, 10], [18, 9], [12, 6], [0, 13], [17, 3], [14, 5], [1, 10], [14, 18], [4, 16], [13, 8], [3, 2], [10, 9], [19, 0], [12, 6], [14, 18], [10, 11], [12, 17], [15, 8], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [19, 0], [15, 8], [11, 2], [18, 9], [13, 8], [0, 15], [11, 2], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[160, 165, 171]
[167, 175, 181]
[185, 193, 200]
[202, 210, 212]
[224, 231, 239]
[288, 294, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[68, 74, 82]
[145, 149, 156]
[156, 162, 169]
[219, 226, 228]
[231, 239, 243]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 8]
[1, 10]
[2, 13]
[5, 20]
[19, 23]
[12, 24]
[21, 28]
[22, 39]
[41, 45]
[36, 46]
[44, 55]
[54, 61]
[60, 65]
[59, 68]
[70, 76]
[65, 77]
[85, 90]
[88, 95]
[84, 96]
[91, 97]
[94, 101]
[100, 107]
[102, 114]
[115, 122]
[121, 126]
[122, 127]
[142, 151]
[143, 152]
[152, 155]
[131, 159]
[153, 160]
[148, 164]
[155, 166]
[159, 167]
[161, 168]
[140, 170]
[170, 182]
[179, 188]
[181, 189]
[183, 190]
[188, 192]
[174, 194]
[187, 195]
[189, 196]
[177, 197]
[194, 199]
[198, 204]
[201, 208]
[203, 211]
[218, 221]
[228, 236]
[241, 249]
[248, 253]
[249, 255]
[253, 259]
[255, 261]
[252, 262]
[262, 272]
[271, 278]
[275, 281]
[277, 288]
[282, 289]
[287, 300]
[292, 301]
[302, 306]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.171860218048096

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] cc => I, Pos: [0, 8] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [2, 13] cc => I, Pos: [2, 13] cc => I, Pos: [5, 20] cc => I, Pos: [5, 20] cc => I, Pos: [12, 24] cc => I, Pos: [12, 24] cc => I, Pos: [19, 23] cc => I, Pos: [19, 23] cc => I, Pos: [21, 28] cc => I, Pos: [21, 28] cc => I, Pos: [22, 39] cc => I, Pos: [22, 39] cc => I, Pos: [36, 46] cc => I, Pos: [36, 46] cc => I, Pos: [41, 45] cc => I, Pos: [41, 45] cc => I, Pos: [44, 55] cc => I, Pos: [44, 55] cc => I, Pos: [54, 61] cc => I, Pos: [54, 61] cc => I, Pos: [59, 68] cc => I, Pos: [59, 68] cc => I, Pos: [60, 65] cc => I, Pos: [60, 65] cc => I, Pos: [65, 77] cc => I, Pos: [65, 77] cc => I, Pos: [68, 74, 82] ccc => cc, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [84, 96] cc => I, Pos: [84, 96] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 95] cc => I, Pos: [88, 95] cc => I, Pos: [91, 97] cc => I, Pos: [91, 97] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [100, 107] cc => I, Pos: [100, 107] cc => I, Pos: [102, 114] cc => I, Pos: [102, 114] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [121, 126] cc => I, Pos: [121, 126] cc => I, Pos: [122, 127] cc => I, Pos: [122, 127] cc => I, Pos: [131, 159] cc => I, Pos: [131, 159] cc => I, Pos: [140, 170] cc => I, Pos: [140, 170] cc => I, Pos: [142, 151] cc => I, Pos: [142, 151] cc => I, Pos: [143, 152] cc => I, Pos: [143, 152] cc => I, Pos: [145, 149, 156] ccc => cc, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [152, 155] cc => I, Pos: [152, 155] cc => I, Pos: [153, 160] cc => I, Pos: [153, 160] cc => I, Pos: [155, 166] cc => I, Pos: [155, 166] cc => I, Pos: [156, 162, 169] ccc => cc, Pos: [159, 167] cc => I, Pos: [159, 167] cc => I, Pos: [160, 165, 171] ccc => cc, Pos: [161, 168] cc => I, Pos: [161, 168] cc => I, Pos: [167, 175, 181] ccc => cc, Pos: [170, 182] cc => I, Pos: [170, 182] cc => I, Pos: [174, 194] cc => I, Pos: [174, 194] cc => I, Pos: [177, 197] cc => I, Pos: [177, 197] cc => I, Pos: [179, 188] cc => I, Pos: [179, 188] cc => I, Pos: [181, 189] cc => I, Pos: [181, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [185, 193, 200] ccc => cc, Pos: [187, 195] cc => I, Pos: [187, 195] cc => I, Pos: [188, 192] cc => I, Pos: [188, 192] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [194, 199] cc => I, Pos: [194, 199] cc => I, Pos: [198, 204] cc => I, Pos: [198, 204] cc => I, Pos: [201, 208] cc => I, Pos: [201, 208] cc => I, Pos: [202, 210, 212] ccc => cc, Pos: [203, 211] cc => I, Pos: [203, 211] cc => I, Pos: [218, 221] cc => I, Pos: [218, 221] cc => I, Pos: [219, 226, 228] ccc => cc, Pos: [224, 231, 239] ccc => cc, Pos: [228, 236] cc => I, Pos: [228, 236] cc => I, Pos: [231, 239, 243] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [249, 255] cc => I, Pos: [249, 255] cc => I, Pos: [252, 262] cc => I, Pos: [252, 262] cc => I, Pos: [253, 259] cc => I, Pos: [253, 259] cc => I, Pos: [255, 261] cc => I, Pos: [255, 261] cc => I, Pos: [262, 272] cc => I, Pos: [262, 272] cc => I, Pos: [271, 278] cc => I, Pos: [271, 278] cc => I, Pos: [275, 281] cc => I, Pos: [275, 281] cc => I, Pos: [277, 288] cc => I, Pos: [277, 288] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [287, 300] cc => I, Pos: [287, 300] cc => I, Pos: [288, 294, 297] ccc => cc, Pos: [292, 301] cc => I, Pos: [292, 301] cc => I, Pos: [302, 306] cc => I, Pos: [302, 306] cc => I]

Plan: 1
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [59, 68] cc => I,
 Pos: [60, 65] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [115, 122] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [131, 159] cc => I,
 Pos: [140, 170] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [145, 149, 156] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [155, 166] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [167, 175, 181] ccc => cc,
 Pos: [174, 194] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [179, 188] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [219, 226, 228] ccc => cc,
 Pos: [224, 231, 239] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [248, 253] cc => I,
 Pos: [252, 262] cc => I,
 Pos: [255, 261] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [277, 288] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 59, Saving: 61

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.15696454048156738

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [2, 13] cc => I,
 Pos: [5, 20] cc => I,
 Pos: [12, 24] cc => I,
 Pos: [19, 23] cc => I,
 Pos: [21, 28] cc => I,
 Pos: [22, 39] cc => I,
 Pos: [36, 46] cc => I,
 Pos: [41, 45] cc => I,
 Pos: [44, 55] cc => I,
 Pos: [54, 61] cc => I,
 Pos: [59, 68] cc => I,
 Pos: [60, 65] cc => I,
 Pos: [70, 76] cc => I,
 Pos: [84, 96] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 95] cc => I,
 Pos: [91, 97] cc => I,
 Pos: [94, 101] cc => I,
 Pos: [100, 107] cc => I,
 Pos: [102, 114] cc => I,
 Pos: [115, 122] cc => I,
 Pos: [121, 126] cc => I,
 Pos: [131, 159] cc => I,
 Pos: [140, 170] cc => I,
 Pos: [142, 151] cc => I,
 Pos: [143, 152] cc => I,
 Pos: [145, 149, 156] ccc => cc,
 Pos: [148, 164] cc => I,
 Pos: [153, 160] cc => I,
 Pos: [155, 166] cc => I,
 Pos: [161, 168] cc => I,
 Pos: [167, 175, 181] ccc => cc,
 Pos: [174, 194] cc => I,
 Pos: [177, 197] cc => I,
 Pos: [179, 188] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [185, 193, 200] ccc => cc,
 Pos: [187, 195] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [198, 204] cc => I,
 Pos: [201, 208] cc => I,
 Pos: [202, 210, 212] ccc => cc,
 Pos: [203, 211] cc => I,
 Pos: [218, 221] cc => I,
 Pos: [219, 226, 228] ccc => cc,
 Pos: [224, 231, 239] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [248, 253] cc => I,
 Pos: [252, 262] cc => I,
 Pos: [255, 261] cc => I,
 Pos: [271, 278] cc => I,
 Pos: [275, 281] cc => I,
 Pos: [277, 288] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [287, 300] cc => I,
 Pos: [292, 301] cc => I,
 Pos: [302, 306] cc => I]
Change: 59, Saving: 61

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 8] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [2, 13] cc => I
Apply:  Pos: [5, 20] cc => I
Apply:  Pos: [12, 24] cc => I
Apply:  Pos: [19, 23] cc => I
Apply:  Pos: [21, 28] cc => I
Apply:  Pos: [22, 39] cc => I
Apply:  Pos: [36, 46] cc => I
Apply:  Pos: [41, 45] cc => I
Apply:  Pos: [44, 55] cc => I
Apply:  Pos: [54, 61] cc => I
Apply:  Pos: [59, 68] cc => I
Apply:  Pos: [60, 65] cc => I
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [84, 96] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 95] cc => I
Apply:  Pos: [91, 97] cc => I
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [100, 107] cc => I
Apply:  Pos: [102, 114] cc => I
Apply:  Pos: [115, 122] cc => I
Apply:  Pos: [121, 126] cc => I
Apply:  Pos: [131, 159] cc => I
Apply:  Pos: [140, 170] cc => I
Apply:  Pos: [142, 151] cc => I
Apply:  Pos: [143, 152] cc => I
Apply:  Pos: [145, 149, 156] ccc => cc
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [153, 160] cc => I
Apply:  Pos: [155, 166] cc => I
Apply:  Pos: [161, 168] cc => I
Apply:  Pos: [167, 175, 181] ccc => cc
Apply:  Pos: [174, 194] cc => I
Apply:  Pos: [177, 197] cc => I
Apply:  Pos: [179, 188] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [185, 193, 200] ccc => cc
Apply:  Pos: [187, 195] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [198, 204] cc => I
Apply:  Pos: [201, 208] cc => I
Apply:  Pos: [202, 210, 212] ccc => cc
Apply:  Pos: [203, 211] cc => I
Apply:  Pos: [218, 221] cc => I
Apply:  Pos: [219, 226, 228] ccc => cc
Apply:  Pos: [224, 231, 239] ccc => cc
Apply:  Pos: [241, 249] cc => I
Apply:  Pos: [248, 253] cc => I
Apply:  Pos: [252, 262] cc => I
Apply:  Pos: [255, 261] cc => I
Apply:  Pos: [271, 278] cc => I
Apply:  Pos: [275, 281] cc => I
Apply:  Pos: [277, 288] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [287, 300] cc => I
Apply:  Pos: [292, 301] cc => I
Apply:  Pos: [302, 306] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [12, 17], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 7], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [3, 2], [13, 11], [12, 17], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [4, 19], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [4, 19], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [5, 18], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [5, 18], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [14, 5], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [5, 0], [2, 7], [6, 17], [10, 9], [16, 18], [4, 19], [12, 1], [9, 7], [10, 11], [5, 0], [13, 8], [6, 1], [17, 3], [8, 11], [16, 18], [19, 13], [14, 5], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [13, 8], [3, 2], [10, 9], [10, 11], [12, 17], [2, 7], [6, 1], [16, 5], [18, 10], [12, 6], [3, 7], [1, 9], [18, 9], [13, 8], [0, 15], [6, 17], [19, 5], [1, 9], [16, 18], [14, 5], [12, 17], [8, 11], [3, 2], ----End Timer [Execute Mapping]:  6.328824758529663

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[47, 61]
[86, 120]
[138, 147]
[142, 152]
[180, 193]
[192, 197]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[24, 25, 30]
[185, 190, 202]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 32]
[47, 61]
[86, 120]
[138, 147]
[142, 152]
[180, 193]
[192, 197]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6719274520874023

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 32] cc => I, Pos: [14, 32] cc => I, Pos: [24, 25, 30] ccc => cc, Pos: [47, 61] cc => I, Pos: [47, 61] cc => I, Pos: [86, 120] cc => I, Pos: [86, 120] cc => I, Pos: [138, 147] cc => I, Pos: [138, 147] cc => I, Pos: [142, 152] cc => I, Pos: [142, 152] cc => I, Pos: [180, 193] cc => I, Pos: [180, 193] cc => I, Pos: [185, 190, 202] ccc => cc, Pos: [192, 197] cc => I, Pos: [192, 197] cc => I]

Plan: 1
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [47, 61] cc => I,
 Pos: [86, 120] cc => I,
 Pos: [138, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [180, 193] cc => I,
 Pos: [185, 190, 202] ccc => cc,
 Pos: [192, 197] cc => I]
Change: 9, Saving: 9

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 32] cc => I,
 Pos: [24, 25, 30] ccc => cc,
 Pos: [47, 61] cc => I,
 Pos: [86, 120] cc => I,
 Pos: [138, 147] cc => I,
 Pos: [142, 152] cc => I,
 Pos: [180, 193] cc => I,
 Pos: [185, 190, 202] ccc => cc,
 Pos: [192, 197] cc => I]
Change: 9, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [14, 32] cc => I
Apply:  Pos: [24, 25, 30] ccc => cc
Apply:  Pos: [47, 61] cc => I
Apply:  Pos: [86, 120] cc => I
Apply:  Pos: [138, 147] cc => I
Apply:  Pos: [142, 152] cc => I
Apply:  Pos: [180, 193] cc => I
Apply:  Pos: [185, 190, 202] ccc => cc
Apply:  Pos: [192, 197] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [8, 11], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [13, 8], [13, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 2], [9, 3], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [14, 5], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [14, 5], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [3, 2], [10, 11], [10, 9], [12, 17], [3, 2], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.687551498413086

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 143]
[169, 173]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[22, 28, 29]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[125, 143]
[169, 173]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.328245162963867

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 28, 29] ccc => cc, Pos: [125, 143] cc => I, Pos: [125, 143] cc => I, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I]

Plan: 1
[Pos: [22, 28, 29] ccc => cc, Pos: [125, 143] cc => I, Pos: [169, 173] cc => I]
Change: 3, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015627384185791016

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 28, 29] ccc => cc, Pos: [125, 143] cc => I, Pos: [169, 173] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 28, 29] ccc => cc
Apply:  Pos: [125, 143] cc => I
Apply:  Pos: [169, 173] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 17], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [12, 17], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.343872547149658

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[161, 163, 168]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.218674421310425

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [161, 163, 168] ccc => cc]

Plan: 1
[Pos: [161, 163, 168] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [161, 163, 168] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [161, 163, 168] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [11, 2], [3, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 2], [9, 3], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 10], [1, 9], [5, 0], [13, 8], [13, 11], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 11], [10, 9], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.218674421310425

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.187577962875366

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[10, 11], [4, 16], [12, 1], [6, 17], [17, 3], [6, 1], [3, 7], [13, 11], [1, 9], [18, 10], [19, 0], [4, 19], [13, 10], [3, 2], [11, 2], [1, 10], [16, 14], [19, 13], [5, 0], [9, 2], [13, 10], [4, 19], [13, 8], [3, 2], [2, 7], [0, 15], [10, 9], [19, 5], [8, 11], [9, 7], [14, 5], [9, 3], [11, 2], [5, 0], [10, 9], [15, 8], [18, 1], [17, 3], [16, 5], [9, 2], [6, 17], [16, 14], [1, 10], [5, 18], [3, 7], [1, 9], [18, 10], [14, 12], [3, 2], [0, 15], [1, 17], [5, 0], [12, 6], [9, 3], [10, 9], [17, 3], [10, 11], [16, 18], [3, 7], [1, 9], [5, 18], [8, 11], [0, 13], [16, 14], [3, 2], [10, 11], [19, 0], [16, 5], [13, 8], [2, 7], [19, 13], [6, 1], [10, 8], [9, 3], [18, 10], [19, 5], [0, 13], [11, 2], [17, 3], [19, 13], [0, 15], [12, 1], [9, 7], [6, 17], [15, 8], [9, 3], [9, 2], [4, 19], [17, 3], [2, 7], [13, 8], [9, 3], [10, 8], [12, 6], [3, 2], [10, 9], [15, 8], [4, 14], [2, 7], [0, 15], [6, 17], [10, 8], [16, 14], [1, 9], [1, 10], [5, 0], [13, 11], [13, 8], [19, 13], [14, 12], [10, 8], [17, 3], [0, 13], [16, 12], [13, 10], [19, 5], [0, 15], [16, 18], [14, 12], [12, 1], [4, 19], [15, 8], [9, 3], [13, 11], [9, 7], [19, 13], [6, 1], [4, 18], [8, 11], [2, 7], [6, 17], [10, 9], [4, 19], [12, 1], [9, 7], [10, 11], [13, 8], [6, 1], [17, 3], [8, 11], [19, 13], [12, 17], [0, 15], [14, 18], [13, 8], [16, 5], [4, 16], [14, 5], [15, 8], [1, 9], [13, 10], [0, 15], [18, 10], [1, 17], [16, 14], [13, 8], [9, 7], [19, 5], [15, 8], [11, 2], [16, 18], [12, 3], [18, 9], [17, 3], [14, 5], [4, 16], [10, 9], [10, 11], [6, 1], [16, 5], [18, 10], [12, 6], [2, 7], [18, 9], [0, 15], [6, 17], [19, 5], [16, 18], [14, 5], [12, 17], [8, 11], ----End Timer [Execute Mapping]:  3.2031896114349365

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [181] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 362

Reduced: 
 - size: 134 (42.54%)
 - depth: 1 (2.22%)

