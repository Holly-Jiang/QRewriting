----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.140733003616333

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [10, 16], [8, 14], [9, 12], [17, 6], [2, 3], [13, 5], [2, 9], [18, 19], [17, 11], [0, 1], [13, 5], [17, 11], [9, 14], [1, 8], [0, 19], [15, 2], [10, 16], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [19, 17], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [7, 10], [14, 12], [19, 17], [6, 3], [4, 13], [0, 1], [9, 14], [0, 19], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [7, 10], [0, 19], [9, 14], [0, 16], [17, 11], [7, 18], [4, 13], [1, 8], [14, 12], [4, 13], [15, 8], [16, 3], [9, 5], [19, 6], [7, 18], [0, 1], [9, 12], [8, 14], [17, 11], [7, 10], [3, 13], [19, 16], [1, 2], [14, 12], [17, 6], [7, 18], [13, 5], [1, 15], [3, 4], [19, 16], [14, 12], [15, 8], [3, 4], [10, 16], [2, 9], [13, 5], [17, 6], [9, 14], [17, 6], [10, 16], [2, 8], [1, 15], [5, 12], [4, 13], [9, 14], [10, 19], [4, 13], [16, 2], [1, 15], [17, 6], [9, 12], [19, 6], [15, 2], [0, 1], [13, 5], [8, 14], [17, 11], [9, 12], [0, 1], [19, 17], [14, 5], [15, 2], [16, 3], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [16, 3], [17, 6], [0, 1], [9, 12], [1, 2], [0, 19], [17, 11], [6, 13], [14, 5], [3, 4], [10, 16], [15, 8], [14, 12], [6, 13], [10, 19], [1, 2], [15, 8], [0, 16], [11, 4], [14, 12], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [10, 0], [9, 5], [4, 13], [8, 14], [3, 4], [18, 17], [16, 2], [5, 12], [8, 14], [1, 15], [10, 0], [3, 9], [16, 2], [17, 11], [18, 19], [1, 8], [7, 10], [6, 13], [3, 9], [18, 17], [15, 2], [8, 14], [10, 19], [18, 17], [3, 13], [11, 4], [9, 5], [0, 16], [14, 5], [15, 2], [0, 16], [18, 17], [7, 10], [6, 13], [1, 8], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [5, 12], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [5, 12], [15, 2], [19, 16], [10, 0], [9, 14], [18, 6], [4, 13], [13, 5], [16, 9], [1, 8], [18, 6], [0, 19], [11, 4], [13, 5], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [8, 14], [18, 17], [11, 4], [13, 5], [8, 14], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [1, 15], [10, 0], [9, 14], [13, 5], [17, 6], [3, 9], [18, 19], [17, 6], [8, 14], [1, 15], [10, 0], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [16, 2], [1, 8], [17, 11], [10, 0], [6, 3], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [9, 5], [15, 8], [7, 10], [0, 19], [11, 4], [3, 4], [8, 14], [7, 10], [19, 6], [0, 16], [9, 5], [17, 11], [2, 3], [6, 4], [5, 12], [17, 11], [16, 9], [10, 0], [8, 14], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [16, 9], [7, 18], [3, 13], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [7, 10], [9, 12], [16, 2], [19, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], [7, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[153, 161, 167]
[164, 170, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[156, 163, 169]
[170, 180, 189]
[203, 207, 213]
[214, 219, 234]
[257, 261, 266]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[293, 299, 306]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.171772480010986

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 26] cc => I, Pos: [10, 26] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [30, 39] cc => I, Pos: [30, 39] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [39, 55] cc => I, Pos: [39, 55] cc => I, Pos: [46, 56] cc => I, Pos: [46, 56] cc => I, Pos: [55, 74] cc => I, Pos: [55, 74] cc => I, Pos: [59, 73] cc => I, Pos: [59, 73] cc => I, Pos: [60, 69] cc => I, Pos: [60, 69] cc => I, Pos: [61, 64] cc => I, Pos: [61, 64] cc => I, Pos: [69, 80] cc => I, Pos: [69, 80] cc => I, Pos: [73, 111] cc => I, Pos: [73, 111] cc => I, Pos: [76, 84] cc => I, Pos: [76, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [83, 87] cc => I, Pos: [83, 87] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [91, 93] cc => I, Pos: [91, 93] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 104] cc => I, Pos: [93, 104] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [98, 101] cc => I, Pos: [98, 101] cc => I, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [107, 116] cc => I, Pos: [107, 116] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [127, 138] cc => I, Pos: [127, 138] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [145, 153] cc => I, Pos: [145, 153] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 161, 167] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 163, 169] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I, Pos: [164, 170, 180] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [168, 177] cc => I, Pos: [168, 177] cc => I, Pos: [170, 180, 189] ccc => cc, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [175, 178] cc => I, Pos: [175, 178] cc => I, Pos: [182, 208] cc => I, Pos: [182, 208] cc => I, Pos: [191, 199] cc => I, Pos: [191, 199] cc => I, Pos: [198, 203] cc => I, Pos: [198, 203] cc => I, Pos: [203, 207, 213] ccc => cc, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [214, 219, 234] ccc => cc, Pos: [223, 227] cc => I, Pos: [223, 227] cc => I, Pos: [226, 237] cc => I, Pos: [226, 237] cc => I, Pos: [233, 250] cc => I, Pos: [233, 250] cc => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [235, 244] cc => I, Pos: [235, 244] cc => I, Pos: [238, 241] cc => I, Pos: [238, 241] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [250, 259] cc => I, Pos: [250, 259] cc => I, Pos: [254, 258] cc => I, Pos: [254, 258] cc => I, Pos: [257, 261, 266] ccc => cc, Pos: [260, 270] cc => I, Pos: [260, 270] cc => I, Pos: [262, 267] cc => I, Pos: [262, 267] cc => I, Pos: [266, 278] cc => I, Pos: [266, 278] cc => I, Pos: [271, 275] cc => I, Pos: [271, 275] cc => I, Pos: [276, 284] cc => I, Pos: [276, 284] cc => I, Pos: [279, 285] cc => I, Pos: [279, 285] cc => I, Pos: [280, 286] cc => I, Pos: [280, 286] cc => I, Pos: [285, 289] cc => I, Pos: [285, 289] cc => I, Pos: [286, 294] cc => I, Pos: [286, 294] cc => I, Pos: [293, 299, 306] ccc => cc, Pos: [296, 314] cc => I, Pos: [296, 314] cc => I, Pos: [299, 309] cc => I, Pos: [299, 309] cc => I]

Plan: 1
[Pos: [7, 15] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [30, 39] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [55, 74] cc => I,
 Pos: [59, 73] cc => I,
 Pos: [60, 69] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 104] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [145, 153] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [164, 170, 180] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [168, 177] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [214, 219, 234] ccc => cc,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [233, 250] cc => I,
 Pos: [235, 244] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [257, 261, 266] ccc => cc,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [279, 285] cc => I,
 Pos: [280, 286] cc => I,
 Pos: [293, 299, 306] ccc => cc,
 Pos: [296, 314] cc => I]
Change: 58, Saving: 224

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 15] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [30, 39] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [55, 74] cc => I,
 Pos: [59, 73] cc => I,
 Pos: [60, 69] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 104] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [145, 153] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [164, 170, 180] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [168, 177] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [214, 219, 234] ccc => cc,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [233, 250] cc => I,
 Pos: [235, 244] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [257, 261, 266] ccc => cc,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [279, 285] cc => I,
 Pos: [280, 286] cc => I,
 Pos: [293, 299, 306] ccc => cc,
 Pos: [296, 314] cc => I]
Change: 58, Saving: 224

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 26] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [30, 39] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [46, 56] cc => I
Apply:  Pos: [55, 74] cc => I
Apply:  Pos: [59, 73] cc => I
Apply:  Pos: [60, 69] cc => I
Apply:  Pos: [61, 64] cc => I
Apply:  Pos: [76, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [83, 87] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 104] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [98, 101] cc => I
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [107, 116] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [127, 138] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [145, 153] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [159, 166] cc => I
Apply:  Pos: [164, 170, 180] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [168, 177] cc => I
Apply:  Pos: [175, 178] cc => I
Apply:  Pos: [182, 208] cc => I
Apply:  Pos: [191, 199] cc => I
Apply:  Pos: [198, 203] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [214, 219, 234] ccc => cc
Apply:  Pos: [223, 227] cc => I
Apply:  Pos: [226, 237] cc => I
Apply:  Pos: [233, 250] cc => I
Apply:  Pos: [235, 244] cc => I
Apply:  Pos: [238, 241] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [257, 261, 266] ccc => cc
Apply:  Pos: [260, 270] cc => I
Apply:  Pos: [262, 267] cc => I
Apply:  Pos: [271, 275] cc => I
Apply:  Pos: [276, 284] cc => I
Apply:  Pos: [279, 285] cc => I
Apply:  Pos: [280, 286] cc => I
Apply:  Pos: [293, 299, 306] ccc => cc
Apply:  Pos: [296, 314] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 9], [2, 8], [5, 12], [10, 19], [16, 2], [19, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [1, 8], [9, 5], [4, 13], [3, 4], [5, 12], [1, 15], [17, 11], [18, 19], [1, 8], [7, 19], [6, 13], [8, 14], [10, 19], [3, 13], [11, 4], [9, 5], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [9, 14], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [1, 15], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [9, 14], [3, 9], [18, 19], [8, 14], [1, 15], [4, 13], [5, 12], [9, 12], [13, 5], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [8, 14], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [8, 14], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  6.171772480010986

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 98]
[95, 112]
[102, 115]
[130, 147]
[136, 151]
[164, 174]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 63, 65]
[61, 64, 74]
[154, 155, 172]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 98]
[95, 112]
[102, 115]
[130, 147]
[136, 151]
[164, 174]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7353131771087646

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [51, 63, 65] ccc => cc, Pos: [61, 64, 74] ccc => cc, Pos: [90, 98] cc => I, Pos: [90, 98] cc => I, Pos: [95, 112] cc => I, Pos: [95, 112] cc => I, Pos: [102, 115] cc => I, Pos: [102, 115] cc => I, Pos: [130, 147] cc => I, Pos: [130, 147] cc => I, Pos: [136, 151] cc => I, Pos: [136, 151] cc => I, Pos: [154, 155, 172] ccc => cc, Pos: [164, 174] cc => I, Pos: [164, 174] cc => I]

Plan: 1
[Pos: [51, 63, 65] ccc => cc,
 Pos: [61, 64, 74] ccc => cc,
 Pos: [90, 98] cc => I,
 Pos: [95, 112] cc => I,
 Pos: [102, 115] cc => I,
 Pos: [130, 147] cc => I,
 Pos: [136, 151] cc => I,
 Pos: [154, 155, 172] ccc => cc,
 Pos: [164, 174] cc => I]
Change: 9, Saving: 30

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [51, 63, 65] ccc => cc,
 Pos: [61, 64, 74] ccc => cc,
 Pos: [90, 98] cc => I,
 Pos: [95, 112] cc => I,
 Pos: [102, 115] cc => I,
 Pos: [130, 147] cc => I,
 Pos: [136, 151] cc => I,
 Pos: [154, 155, 172] ccc => cc,
 Pos: [164, 174] cc => I]
Change: 9, Saving: 30

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [51, 63, 65] ccc => cc
Apply:  Pos: [61, 64, 74] ccc => cc
Apply:  Pos: [90, 98] cc => I
Apply:  Pos: [95, 112] cc => I
Apply:  Pos: [102, 115] cc => I
Apply:  Pos: [130, 147] cc => I
Apply:  Pos: [136, 151] cc => I
Apply:  Pos: [154, 155, 172] ccc => cc
Apply:  Pos: [164, 174] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 2], [16, 9], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 5], [4, 13], [3, 4], [5, 12], [17, 11], [18, 19], [7, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [9, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.7353131771087646

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[88, 91, 99]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 26, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4216465950012207

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26, 29] ccc => cc, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [88, 91, 99] ccc => cc]

Plan: 1
[Pos: [20, 26, 29] ccc => cc,
 Pos: [30, 38] cc => I,
 Pos: [88, 91, 99] ccc => cc]
Change: 3, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26, 29] ccc => cc,
 Pos: [30, 38] cc => I,
 Pos: [88, 91, 99] ccc => cc]
Change: 3, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 26, 29] ccc => cc
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [88, 91, 99] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [10, 16], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 12], [4, 13], [3, 4], [5, 12], [17, 11], [7, 19], [18, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 9], [3, 4], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.4216465950012207

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2968814373016357

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [73, 85] cc => I, Pos: [73, 85] cc => I]

Plan: 1
[Pos: [73, 85] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [73, 85] cc => I]
Change: 1, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [73, 85] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [17, 11], [18, 19], [7, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.2968814373016357

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2500522136688232

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [0, 1], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [17, 11], [7, 19], [18, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 9], [3, 4], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.2500522136688232

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 133 (42.22%)
 - cycle: 266 (42.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061546325683594

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [10, 16], [8, 14], [9, 12], [17, 6], [2, 3], [13, 5], [2, 9], [18, 19], [17, 11], [0, 1], [13, 5], [17, 11], [9, 14], [1, 8], [0, 19], [15, 2], [10, 16], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [19, 17], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [7, 10], [14, 12], [19, 17], [6, 3], [4, 13], [0, 1], [9, 14], [0, 19], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [7, 10], [0, 19], [9, 14], [0, 16], [17, 11], [7, 18], [4, 13], [1, 8], [14, 12], [4, 13], [15, 8], [16, 3], [9, 5], [19, 6], [7, 18], [0, 1], [9, 12], [8, 14], [17, 11], [7, 10], [3, 13], [19, 16], [1, 2], [14, 12], [17, 6], [7, 18], [13, 5], [1, 15], [3, 4], [19, 16], [14, 12], [15, 8], [3, 4], [10, 16], [2, 9], [13, 5], [17, 6], [9, 14], [17, 6], [10, 16], [2, 8], [1, 15], [5, 12], [4, 13], [9, 14], [10, 19], [4, 13], [16, 2], [1, 15], [17, 6], [9, 12], [19, 6], [15, 2], [0, 1], [13, 5], [8, 14], [17, 11], [9, 12], [0, 1], [19, 17], [14, 5], [15, 2], [16, 3], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [16, 3], [17, 6], [0, 1], [9, 12], [1, 2], [0, 19], [17, 11], [6, 13], [14, 5], [3, 4], [10, 16], [15, 8], [14, 12], [6, 13], [10, 19], [1, 2], [15, 8], [0, 16], [11, 4], [14, 12], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [10, 0], [9, 5], [4, 13], [8, 14], [3, 4], [18, 17], [16, 2], [5, 12], [8, 14], [1, 15], [10, 0], [3, 9], [16, 2], [17, 11], [18, 19], [1, 8], [7, 10], [6, 13], [3, 9], [18, 17], [15, 2], [8, 14], [10, 19], [18, 17], [3, 13], [11, 4], [9, 5], [0, 16], [14, 5], [15, 2], [0, 16], [18, 17], [7, 10], [6, 13], [1, 8], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [5, 12], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [5, 12], [15, 2], [19, 16], [10, 0], [9, 14], [18, 6], [4, 13], [13, 5], [16, 9], [1, 8], [18, 6], [0, 19], [11, 4], [13, 5], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [8, 14], [18, 17], [11, 4], [13, 5], [8, 14], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [1, 15], [10, 0], [9, 14], [13, 5], [17, 6], [3, 9], [18, 19], [17, 6], [8, 14], [1, 15], [10, 0], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [16, 2], [1, 8], [17, 11], [10, 0], [6, 3], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [9, 5], [15, 8], [7, 10], [0, 19], [11, 4], [3, 4], [8, 14], [7, 10], [19, 6], [0, 16], [9, 5], [17, 11], [2, 3], [6, 4], [5, 12], [17, 11], [16, 9], [10, 0], [8, 14], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [16, 9], [7, 18], [3, 13], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [7, 10], [9, 12], [16, 2], [19, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], [7, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[153, 161, 167]
[164, 170, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[156, 163, 169]
[170, 180, 189]
[203, 207, 213]
[214, 219, 234]
[257, 261, 266]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[293, 299, 306]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.124969959259033

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 26] cc => I, Pos: [10, 26] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [30, 39] cc => I, Pos: [30, 39] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [39, 55] cc => I, Pos: [39, 55] cc => I, Pos: [46, 56] cc => I, Pos: [46, 56] cc => I, Pos: [55, 74] cc => I, Pos: [55, 74] cc => I, Pos: [59, 73] cc => I, Pos: [59, 73] cc => I, Pos: [60, 69] cc => I, Pos: [60, 69] cc => I, Pos: [61, 64] cc => I, Pos: [61, 64] cc => I, Pos: [69, 80] cc => I, Pos: [69, 80] cc => I, Pos: [73, 111] cc => I, Pos: [73, 111] cc => I, Pos: [76, 84] cc => I, Pos: [76, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [83, 87] cc => I, Pos: [83, 87] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [91, 93] cc => I, Pos: [91, 93] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 104] cc => I, Pos: [93, 104] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [98, 101] cc => I, Pos: [98, 101] cc => I, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [107, 116] cc => I, Pos: [107, 116] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [127, 138] cc => I, Pos: [127, 138] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [145, 153] cc => I, Pos: [145, 153] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 161, 167] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 163, 169] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I, Pos: [164, 170, 180] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [168, 177] cc => I, Pos: [168, 177] cc => I, Pos: [170, 180, 189] ccc => cc, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [175, 178] cc => I, Pos: [175, 178] cc => I, Pos: [182, 208] cc => I, Pos: [182, 208] cc => I, Pos: [191, 199] cc => I, Pos: [191, 199] cc => I, Pos: [198, 203] cc => I, Pos: [198, 203] cc => I, Pos: [203, 207, 213] ccc => cc, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [214, 219, 234] ccc => cc, Pos: [223, 227] cc => I, Pos: [223, 227] cc => I, Pos: [226, 237] cc => I, Pos: [226, 237] cc => I, Pos: [233, 250] cc => I, Pos: [233, 250] cc => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [235, 244] cc => I, Pos: [235, 244] cc => I, Pos: [238, 241] cc => I, Pos: [238, 241] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [250, 259] cc => I, Pos: [250, 259] cc => I, Pos: [254, 258] cc => I, Pos: [254, 258] cc => I, Pos: [257, 261, 266] ccc => cc, Pos: [260, 270] cc => I, Pos: [260, 270] cc => I, Pos: [262, 267] cc => I, Pos: [262, 267] cc => I, Pos: [266, 278] cc => I, Pos: [266, 278] cc => I, Pos: [271, 275] cc => I, Pos: [271, 275] cc => I, Pos: [276, 284] cc => I, Pos: [276, 284] cc => I, Pos: [279, 285] cc => I, Pos: [279, 285] cc => I, Pos: [280, 286] cc => I, Pos: [280, 286] cc => I, Pos: [285, 289] cc => I, Pos: [285, 289] cc => I, Pos: [286, 294] cc => I, Pos: [286, 294] cc => I, Pos: [293, 299, 306] ccc => cc, Pos: [296, 314] cc => I, Pos: [296, 314] cc => I, Pos: [299, 309] cc => I, Pos: [299, 309] cc => I]

Plan: 1
[Pos: [7, 15] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [30, 39] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [55, 74] cc => I,
 Pos: [59, 73] cc => I,
 Pos: [60, 69] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 104] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [145, 153] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [164, 170, 180] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [168, 177] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [214, 219, 234] ccc => cc,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [233, 250] cc => I,
 Pos: [235, 244] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [257, 261, 266] ccc => cc,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [279, 285] cc => I,
 Pos: [280, 286] cc => I,
 Pos: [293, 299, 306] ccc => cc,
 Pos: [296, 314] cc => I]
Change: 58, Saving: 59

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.14061522483825684

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 15] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [30, 39] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [55, 74] cc => I,
 Pos: [59, 73] cc => I,
 Pos: [60, 69] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 104] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [145, 153] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [164, 170, 180] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [168, 177] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [214, 219, 234] ccc => cc,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [233, 250] cc => I,
 Pos: [235, 244] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [257, 261, 266] ccc => cc,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [279, 285] cc => I,
 Pos: [280, 286] cc => I,
 Pos: [293, 299, 306] ccc => cc,
 Pos: [296, 314] cc => I]
Change: 58, Saving: 59

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 26] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [30, 39] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [46, 56] cc => I
Apply:  Pos: [55, 74] cc => I
Apply:  Pos: [59, 73] cc => I
Apply:  Pos: [60, 69] cc => I
Apply:  Pos: [61, 64] cc => I
Apply:  Pos: [76, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [83, 87] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 104] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [98, 101] cc => I
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [107, 116] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [127, 138] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [145, 153] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [159, 166] cc => I
Apply:  Pos: [164, 170, 180] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [168, 177] cc => I
Apply:  Pos: [175, 178] cc => I
Apply:  Pos: [182, 208] cc => I
Apply:  Pos: [191, 199] cc => I
Apply:  Pos: [198, 203] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [214, 219, 234] ccc => cc
Apply:  Pos: [223, 227] cc => I
Apply:  Pos: [226, 237] cc => I
Apply:  Pos: [233, 250] cc => I
Apply:  Pos: [235, 244] cc => I
Apply:  Pos: [238, 241] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [257, 261, 266] ccc => cc
Apply:  Pos: [260, 270] cc => I
Apply:  Pos: [262, 267] cc => I
Apply:  Pos: [271, 275] cc => I
Apply:  Pos: [276, 284] cc => I
Apply:  Pos: [279, 285] cc => I
Apply:  Pos: [280, 286] cc => I
Apply:  Pos: [293, 299, 306] ccc => cc
Apply:  Pos: [296, 314] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 9], [2, 8], [5, 12], [10, 19], [16, 2], [19, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [1, 8], [9, 5], [4, 13], [3, 4], [5, 12], [1, 15], [17, 11], [18, 19], [1, 8], [7, 19], [6, 13], [8, 14], [10, 19], [3, 13], [11, 4], [9, 5], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [9, 14], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [1, 15], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [9, 14], [3, 9], [18, 19], [8, 14], [1, 15], [4, 13], [5, 12], [9, 12], [13, 5], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [8, 14], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [8, 14], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  6.26558518409729

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 98]
[95, 112]
[102, 115]
[130, 147]
[136, 151]
[164, 174]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 63, 65]
[61, 64, 74]
[154, 155, 172]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 98]
[95, 112]
[102, 115]
[130, 147]
[136, 151]
[164, 174]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7031428813934326

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [51, 63, 65] ccc => cc, Pos: [61, 64, 74] ccc => cc, Pos: [90, 98] cc => I, Pos: [90, 98] cc => I, Pos: [95, 112] cc => I, Pos: [95, 112] cc => I, Pos: [102, 115] cc => I, Pos: [102, 115] cc => I, Pos: [130, 147] cc => I, Pos: [130, 147] cc => I, Pos: [136, 151] cc => I, Pos: [136, 151] cc => I, Pos: [154, 155, 172] ccc => cc, Pos: [164, 174] cc => I, Pos: [164, 174] cc => I]

Plan: 1
[Pos: [51, 63, 65] ccc => cc,
 Pos: [61, 64, 74] ccc => cc,
 Pos: [90, 98] cc => I,
 Pos: [95, 112] cc => I,
 Pos: [102, 115] cc => I,
 Pos: [130, 147] cc => I,
 Pos: [136, 151] cc => I,
 Pos: [154, 155, 172] ccc => cc,
 Pos: [164, 174] cc => I]
Change: 9, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015630245208740234

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [51, 63, 65] ccc => cc,
 Pos: [61, 64, 74] ccc => cc,
 Pos: [90, 98] cc => I,
 Pos: [95, 112] cc => I,
 Pos: [102, 115] cc => I,
 Pos: [130, 147] cc => I,
 Pos: [136, 151] cc => I,
 Pos: [154, 155, 172] ccc => cc,
 Pos: [164, 174] cc => I]
Change: 9, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [51, 63, 65] ccc => cc
Apply:  Pos: [61, 64, 74] ccc => cc
Apply:  Pos: [90, 98] cc => I
Apply:  Pos: [95, 112] cc => I
Apply:  Pos: [102, 115] cc => I
Apply:  Pos: [130, 147] cc => I
Apply:  Pos: [136, 151] cc => I
Apply:  Pos: [154, 155, 172] ccc => cc
Apply:  Pos: [164, 174] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 2], [16, 9], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 5], [4, 13], [3, 4], [5, 12], [17, 11], [18, 19], [7, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [9, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.718773126602173

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[88, 91, 99]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 26, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4218928813934326

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26, 29] ccc => cc, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [88, 91, 99] ccc => cc]

Plan: 1
[Pos: [20, 26, 29] ccc => cc,
 Pos: [30, 38] cc => I,
 Pos: [88, 91, 99] ccc => cc]
Change: 3, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26, 29] ccc => cc,
 Pos: [30, 38] cc => I,
 Pos: [88, 91, 99] ccc => cc]
Change: 3, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 26, 29] ccc => cc
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [88, 91, 99] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [10, 16], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 12], [4, 13], [3, 4], [5, 12], [17, 11], [7, 19], [18, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 9], [3, 4], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.437516927719116

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2656309604644775

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [73, 85] cc => I, Pos: [73, 85] cc => I]

Plan: 1
[Pos: [73, 85] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [73, 85] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [73, 85] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [17, 11], [18, 19], [7, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.2656309604644775

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.218708038330078

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [0, 1], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [17, 11], [7, 19], [18, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 9], [3, 4], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.218708038330078

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 133 (42.22%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499094009399414

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [10, 16], [8, 14], [9, 12], [17, 6], [2, 3], [13, 5], [2, 9], [18, 19], [17, 11], [0, 1], [13, 5], [17, 11], [9, 14], [1, 8], [0, 19], [15, 2], [10, 16], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [19, 17], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [7, 10], [14, 12], [19, 17], [6, 3], [4, 13], [0, 1], [9, 14], [0, 19], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [7, 10], [0, 19], [9, 14], [0, 16], [17, 11], [7, 18], [4, 13], [1, 8], [14, 12], [4, 13], [15, 8], [16, 3], [9, 5], [19, 6], [7, 18], [0, 1], [9, 12], [8, 14], [17, 11], [7, 10], [3, 13], [19, 16], [1, 2], [14, 12], [17, 6], [7, 18], [13, 5], [1, 15], [3, 4], [19, 16], [14, 12], [15, 8], [3, 4], [10, 16], [2, 9], [13, 5], [17, 6], [9, 14], [17, 6], [10, 16], [2, 8], [1, 15], [5, 12], [4, 13], [9, 14], [10, 19], [4, 13], [16, 2], [1, 15], [17, 6], [9, 12], [19, 6], [15, 2], [0, 1], [13, 5], [8, 14], [17, 11], [9, 12], [0, 1], [19, 17], [14, 5], [15, 2], [16, 3], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [16, 3], [17, 6], [0, 1], [9, 12], [1, 2], [0, 19], [17, 11], [6, 13], [14, 5], [3, 4], [10, 16], [15, 8], [14, 12], [6, 13], [10, 19], [1, 2], [15, 8], [0, 16], [11, 4], [14, 12], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [10, 0], [9, 5], [4, 13], [8, 14], [3, 4], [18, 17], [16, 2], [5, 12], [8, 14], [1, 15], [10, 0], [3, 9], [16, 2], [17, 11], [18, 19], [1, 8], [7, 10], [6, 13], [3, 9], [18, 17], [15, 2], [8, 14], [10, 19], [18, 17], [3, 13], [11, 4], [9, 5], [0, 16], [14, 5], [15, 2], [0, 16], [18, 17], [7, 10], [6, 13], [1, 8], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [5, 12], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [5, 12], [15, 2], [19, 16], [10, 0], [9, 14], [18, 6], [4, 13], [13, 5], [16, 9], [1, 8], [18, 6], [0, 19], [11, 4], [13, 5], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [8, 14], [18, 17], [11, 4], [13, 5], [8, 14], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [1, 15], [10, 0], [9, 14], [13, 5], [17, 6], [3, 9], [18, 19], [17, 6], [8, 14], [1, 15], [10, 0], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [16, 2], [1, 8], [17, 11], [10, 0], [6, 3], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [9, 5], [15, 8], [7, 10], [0, 19], [11, 4], [3, 4], [8, 14], [7, 10], [19, 6], [0, 16], [9, 5], [17, 11], [2, 3], [6, 4], [5, 12], [17, 11], [16, 9], [10, 0], [8, 14], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [16, 9], [7, 18], [3, 13], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [7, 10], [9, 12], [16, 2], [19, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], [7, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[153, 161, 167]
[164, 170, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[156, 163, 169]
[170, 180, 189]
[203, 207, 213]
[214, 219, 234]
[257, 261, 266]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[293, 299, 306]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.121301651000977

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 26] cc => I, Pos: [10, 26] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [30, 39] cc => I, Pos: [30, 39] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [39, 55] cc => I, Pos: [39, 55] cc => I, Pos: [46, 56] cc => I, Pos: [46, 56] cc => I, Pos: [55, 74] cc => I, Pos: [55, 74] cc => I, Pos: [59, 73] cc => I, Pos: [59, 73] cc => I, Pos: [60, 69] cc => I, Pos: [60, 69] cc => I, Pos: [61, 64] cc => I, Pos: [61, 64] cc => I, Pos: [69, 80] cc => I, Pos: [69, 80] cc => I, Pos: [73, 111] cc => I, Pos: [73, 111] cc => I, Pos: [76, 84] cc => I, Pos: [76, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [83, 87] cc => I, Pos: [83, 87] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [91, 93] cc => I, Pos: [91, 93] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 104] cc => I, Pos: [93, 104] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [98, 101] cc => I, Pos: [98, 101] cc => I, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [107, 116] cc => I, Pos: [107, 116] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [127, 138] cc => I, Pos: [127, 138] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [145, 153] cc => I, Pos: [145, 153] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 161, 167] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 163, 169] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I, Pos: [164, 170, 180] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [168, 177] cc => I, Pos: [168, 177] cc => I, Pos: [170, 180, 189] ccc => cc, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [175, 178] cc => I, Pos: [175, 178] cc => I, Pos: [182, 208] cc => I, Pos: [182, 208] cc => I, Pos: [191, 199] cc => I, Pos: [191, 199] cc => I, Pos: [198, 203] cc => I, Pos: [198, 203] cc => I, Pos: [203, 207, 213] ccc => cc, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [214, 219, 234] ccc => cc, Pos: [223, 227] cc => I, Pos: [223, 227] cc => I, Pos: [226, 237] cc => I, Pos: [226, 237] cc => I, Pos: [233, 250] cc => I, Pos: [233, 250] cc => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [235, 244] cc => I, Pos: [235, 244] cc => I, Pos: [238, 241] cc => I, Pos: [238, 241] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [250, 259] cc => I, Pos: [250, 259] cc => I, Pos: [254, 258] cc => I, Pos: [254, 258] cc => I, Pos: [257, 261, 266] ccc => cc, Pos: [260, 270] cc => I, Pos: [260, 270] cc => I, Pos: [262, 267] cc => I, Pos: [262, 267] cc => I, Pos: [266, 278] cc => I, Pos: [266, 278] cc => I, Pos: [271, 275] cc => I, Pos: [271, 275] cc => I, Pos: [276, 284] cc => I, Pos: [276, 284] cc => I, Pos: [279, 285] cc => I, Pos: [279, 285] cc => I, Pos: [280, 286] cc => I, Pos: [280, 286] cc => I, Pos: [285, 289] cc => I, Pos: [285, 289] cc => I, Pos: [286, 294] cc => I, Pos: [286, 294] cc => I, Pos: [293, 299, 306] ccc => cc, Pos: [296, 314] cc => I, Pos: [296, 314] cc => I, Pos: [299, 309] cc => I, Pos: [299, 309] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 20] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [30, 39] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [55, 74] cc => I,
 Pos: [59, 73] cc => I,
 Pos: [69, 80] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 104] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [145, 153] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [164, 170, 180] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [168, 177] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [234, 243] cc => I,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [250, 259] cc => I,
 Pos: [235, 244] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [266, 278] cc => I,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [279, 285] cc => I,
 Pos: [280, 286] cc => I,
 Pos: [299, 309] cc => I,
 Pos: [296, 314] cc => I]
Change: 58, Saving: 230

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [10, 26] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [30, 39] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [46, 56] cc => I
Apply:  Pos: [55, 74] cc => I
Apply:  Pos: [59, 73] cc => I
Apply:  Pos: [69, 80] cc => I
Apply:  Pos: [61, 64] cc => I
Apply:  Pos: [76, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [83, 87] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 104] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [98, 101] cc => I
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [107, 116] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [127, 138] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [145, 153] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [159, 166] cc => I
Apply:  Pos: [164, 170, 180] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [168, 177] cc => I
Apply:  Pos: [175, 178] cc => I
Apply:  Pos: [182, 208] cc => I
Apply:  Pos: [191, 199] cc => I
Apply:  Pos: [198, 203] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [223, 227] cc => I
Apply:  Pos: [226, 237] cc => I
Apply:  Pos: [250, 259] cc => I
Apply:  Pos: [235, 244] cc => I
Apply:  Pos: [238, 241] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [266, 278] cc => I
Apply:  Pos: [260, 270] cc => I
Apply:  Pos: [262, 267] cc => I
Apply:  Pos: [271, 275] cc => I
Apply:  Pos: [276, 284] cc => I
Apply:  Pos: [279, 285] cc => I
Apply:  Pos: [280, 286] cc => I
Apply:  Pos: [299, 309] cc => I
Apply:  Pos: [296, 314] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [7, 18], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [1, 15], [15, 8], [2, 9], [2, 8], [5, 12], [10, 19], [16, 2], [19, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [1, 8], [9, 5], [4, 13], [3, 4], [5, 12], [1, 15], [17, 11], [18, 19], [1, 8], [7, 19], [6, 13], [8, 14], [10, 19], [3, 13], [11, 4], [9, 5], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [9, 14], [3, 9], [18, 19], [8, 14], [4, 13], [5, 12], [9, 12], [13, 5], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [8, 14], [6, 3], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  6.121301651000977

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 98]
[95, 112]
[102, 115]
[130, 148]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 63, 65]
[61, 64, 74]
[154, 155, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 98]
[95, 112]
[102, 115]
[130, 148]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.608001232147217

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [52, 63, 65] ccc => cc, Pos: [61, 64, 74] ccc => cc, Pos: [90, 98] cc => I, Pos: [90, 98] cc => I, Pos: [95, 112] cc => I, Pos: [95, 112] cc => I, Pos: [102, 115] cc => I, Pos: [102, 115] cc => I, Pos: [130, 148] cc => I, Pos: [130, 148] cc => I, Pos: [154, 155, 171] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [52, 63, 65] ccc => cc,
 Pos: [61, 64, 74] ccc => cc,
 Pos: [90, 98] cc => I,
 Pos: [95, 112] cc => I,
 Pos: [102, 115] cc => I,
 Pos: [130, 148] cc => I,
 Pos: [154, 155, 171] ccc => cc]
Change: 7, Saving: 22

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [52, 63, 65] ccc => cc
Apply:  Pos: [61, 64, 74] ccc => cc
Apply:  Pos: [90, 98] cc => I
Apply:  Pos: [95, 112] cc => I
Apply:  Pos: [102, 115] cc => I
Apply:  Pos: [130, 148] cc => I
Apply:  Pos: [154, 155, 171] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 2], [16, 9], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [7, 18], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 15], [1, 2], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 5], [4, 13], [3, 4], [5, 12], [17, 11], [18, 19], [7, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [9, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [8, 14], [6, 3], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.608001232147217

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[88, 91, 99]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 26, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3924059867858887

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26, 29] ccc => cc, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [88, 91, 99] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26, 29] ccc => cc,
 Pos: [30, 38] cc => I,
 Pos: [88, 91, 99] ccc => cc]
Change: 3, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 26, 29] ccc => cc
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [88, 91, 99] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [7, 18], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [10, 16], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 12], [4, 13], [3, 4], [5, 12], [17, 11], [7, 19], [18, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [8, 14], [6, 3], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.3924059867858887

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2660458087921143

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [73, 85] cc => I, Pos: [73, 85] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [73, 85] cc => I]
Change: 1, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [73, 85] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [7, 18], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 15], [1, 2], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [17, 11], [18, 19], [7, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [8, 14], [6, 3], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.2660458087921143

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.235136032104492

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [7, 18], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [0, 1], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [17, 11], [7, 19], [18, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [8, 14], [6, 3], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.235136032104492

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [183] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 132 (41.90%)
 - cycle: 264 (41.90%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12498641014099121

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [10, 16], [8, 14], [9, 12], [17, 6], [2, 3], [13, 5], [2, 9], [18, 19], [17, 11], [0, 1], [13, 5], [17, 11], [9, 14], [1, 8], [0, 19], [15, 2], [10, 16], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [19, 17], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [7, 10], [14, 12], [19, 17], [6, 3], [4, 13], [0, 1], [9, 14], [0, 19], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [7, 10], [0, 19], [9, 14], [0, 16], [17, 11], [7, 18], [4, 13], [1, 8], [14, 12], [4, 13], [15, 8], [16, 3], [9, 5], [19, 6], [7, 18], [0, 1], [9, 12], [8, 14], [17, 11], [7, 10], [3, 13], [19, 16], [1, 2], [14, 12], [17, 6], [7, 18], [13, 5], [1, 15], [3, 4], [19, 16], [14, 12], [15, 8], [3, 4], [10, 16], [2, 9], [13, 5], [17, 6], [9, 14], [17, 6], [10, 16], [2, 8], [1, 15], [5, 12], [4, 13], [9, 14], [10, 19], [4, 13], [16, 2], [1, 15], [17, 6], [9, 12], [19, 6], [15, 2], [0, 1], [13, 5], [8, 14], [17, 11], [9, 12], [0, 1], [19, 17], [14, 5], [15, 2], [16, 3], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [16, 3], [17, 6], [0, 1], [9, 12], [1, 2], [0, 19], [17, 11], [6, 13], [14, 5], [3, 4], [10, 16], [15, 8], [14, 12], [6, 13], [10, 19], [1, 2], [15, 8], [0, 16], [11, 4], [14, 12], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [10, 0], [9, 5], [4, 13], [8, 14], [3, 4], [18, 17], [16, 2], [5, 12], [8, 14], [1, 15], [10, 0], [3, 9], [16, 2], [17, 11], [18, 19], [1, 8], [7, 10], [6, 13], [3, 9], [18, 17], [15, 2], [8, 14], [10, 19], [18, 17], [3, 13], [11, 4], [9, 5], [0, 16], [14, 5], [15, 2], [0, 16], [18, 17], [7, 10], [6, 13], [1, 8], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [5, 12], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [5, 12], [15, 2], [19, 16], [10, 0], [9, 14], [18, 6], [4, 13], [13, 5], [16, 9], [1, 8], [18, 6], [0, 19], [11, 4], [13, 5], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [8, 14], [18, 17], [11, 4], [13, 5], [8, 14], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [1, 15], [10, 0], [9, 14], [13, 5], [17, 6], [3, 9], [18, 19], [17, 6], [8, 14], [1, 15], [10, 0], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [16, 2], [1, 8], [17, 11], [10, 0], [6, 3], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [9, 5], [15, 8], [7, 10], [0, 19], [11, 4], [3, 4], [8, 14], [7, 10], [19, 6], [0, 16], [9, 5], [17, 11], [2, 3], [6, 4], [5, 12], [17, 11], [16, 9], [10, 0], [8, 14], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [16, 9], [7, 18], [3, 13], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [7, 10], [9, 12], [16, 2], [19, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], [7, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[153, 161, 167]
[164, 170, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[156, 163, 169]
[170, 180, 189]
[203, 207, 213]
[214, 219, 234]
[257, 261, 266]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[293, 299, 306]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.243335485458374

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 26] cc => I, Pos: [10, 26] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [30, 39] cc => I, Pos: [30, 39] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [39, 55] cc => I, Pos: [39, 55] cc => I, Pos: [46, 56] cc => I, Pos: [46, 56] cc => I, Pos: [55, 74] cc => I, Pos: [55, 74] cc => I, Pos: [59, 73] cc => I, Pos: [59, 73] cc => I, Pos: [60, 69] cc => I, Pos: [60, 69] cc => I, Pos: [61, 64] cc => I, Pos: [61, 64] cc => I, Pos: [69, 80] cc => I, Pos: [69, 80] cc => I, Pos: [73, 111] cc => I, Pos: [73, 111] cc => I, Pos: [76, 84] cc => I, Pos: [76, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [83, 87] cc => I, Pos: [83, 87] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [91, 93] cc => I, Pos: [91, 93] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 104] cc => I, Pos: [93, 104] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [98, 101] cc => I, Pos: [98, 101] cc => I, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [107, 116] cc => I, Pos: [107, 116] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [127, 138] cc => I, Pos: [127, 138] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [145, 153] cc => I, Pos: [145, 153] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 161, 167] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 163, 169] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I, Pos: [164, 170, 180] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [168, 177] cc => I, Pos: [168, 177] cc => I, Pos: [170, 180, 189] ccc => cc, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [175, 178] cc => I, Pos: [175, 178] cc => I, Pos: [182, 208] cc => I, Pos: [182, 208] cc => I, Pos: [191, 199] cc => I, Pos: [191, 199] cc => I, Pos: [198, 203] cc => I, Pos: [198, 203] cc => I, Pos: [203, 207, 213] ccc => cc, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [214, 219, 234] ccc => cc, Pos: [223, 227] cc => I, Pos: [223, 227] cc => I, Pos: [226, 237] cc => I, Pos: [226, 237] cc => I, Pos: [233, 250] cc => I, Pos: [233, 250] cc => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [235, 244] cc => I, Pos: [235, 244] cc => I, Pos: [238, 241] cc => I, Pos: [238, 241] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [250, 259] cc => I, Pos: [250, 259] cc => I, Pos: [254, 258] cc => I, Pos: [254, 258] cc => I, Pos: [257, 261, 266] ccc => cc, Pos: [260, 270] cc => I, Pos: [260, 270] cc => I, Pos: [262, 267] cc => I, Pos: [262, 267] cc => I, Pos: [266, 278] cc => I, Pos: [266, 278] cc => I, Pos: [271, 275] cc => I, Pos: [271, 275] cc => I, Pos: [276, 284] cc => I, Pos: [276, 284] cc => I, Pos: [279, 285] cc => I, Pos: [279, 285] cc => I, Pos: [280, 286] cc => I, Pos: [280, 286] cc => I, Pos: [285, 289] cc => I, Pos: [285, 289] cc => I, Pos: [286, 294] cc => I, Pos: [286, 294] cc => I, Pos: [293, 299, 306] ccc => cc, Pos: [296, 314] cc => I, Pos: [296, 314] cc => I, Pos: [299, 309] cc => I, Pos: [299, 309] cc => I]

--------End Timer [Generate Plans]:  0.15623855590820312

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 15] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [30, 39] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [55, 74] cc => I,
 Pos: [59, 73] cc => I,
 Pos: [60, 69] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [91, 93] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [153, 161, 167] ccc => cc,
 Pos: [148, 158] cc => I,
 Pos: [156, 163, 169] ccc => cc,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [170, 180, 189] ccc => cc,
 Pos: [168, 177] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [234, 243] cc => I,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [250, 259] cc => I,
 Pos: [235, 244] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [254, 258] cc => I,
 Pos: [257, 261, 266] ccc => cc,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [285, 289] cc => I,
 Pos: [280, 286] cc => I,
 Pos: [299, 309] cc => I,
 Pos: [296, 314] cc => I]
Change: 57, Saving: 57

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 26] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [30, 39] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [46, 56] cc => I
Apply:  Pos: [55, 74] cc => I
Apply:  Pos: [59, 73] cc => I
Apply:  Pos: [60, 69] cc => I
Apply:  Pos: [61, 64] cc => I
Apply:  Pos: [76, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [91, 93] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [83, 87] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [98, 101] cc => I
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [107, 116] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [127, 138] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [153, 161, 167] ccc => cc
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [156, 163, 169] ccc => cc
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [159, 166] cc => I
Apply:  Pos: [170, 180, 189] ccc => cc
Apply:  Pos: [168, 177] cc => I
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [175, 178] cc => I
Apply:  Pos: [182, 208] cc => I
Apply:  Pos: [191, 199] cc => I
Apply:  Pos: [198, 203] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [223, 227] cc => I
Apply:  Pos: [226, 237] cc => I
Apply:  Pos: [250, 259] cc => I
Apply:  Pos: [235, 244] cc => I
Apply:  Pos: [238, 241] cc => I
Apply:  Pos: [254, 258] cc => I
Apply:  Pos: [257, 261, 266] ccc => cc
Apply:  Pos: [260, 270] cc => I
Apply:  Pos: [262, 267] cc => I
Apply:  Pos: [271, 275] cc => I
Apply:  Pos: [276, 284] cc => I
Apply:  Pos: [285, 289] cc => I
Apply:  Pos: [280, 286] cc => I
Apply:  Pos: [299, 309] cc => I
Apply:  Pos: [296, 314] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [17, 6], [7, 18], [1, 15], [15, 8], [2, 9], [2, 8], [5, 12], [10, 19], [16, 2], [17, 6], [19, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [9, 5], [4, 13], [8, 14], [3, 4], [18, 11], [5, 12], [1, 8], [1, 15], [17, 11], [18, 19], [8, 14], [7, 10], [6, 13], [7, 10], [3, 13], [11, 4], [9, 5], [14, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [9, 14], [3, 9], [18, 19], [8, 14], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [8, 14], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [8, 14], [7, 18], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  6.399574041366577

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[105, 107]
[100, 117]
[134, 152]
[143, 157]
[167, 177]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[93, 96, 101]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[62, 65, 76]
[96, 101, 104]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[105, 107]
[100, 117]
[134, 152]
[143, 157]
[167, 177]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.766369342803955

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [62, 65, 76] ccc => cc, Pos: [93, 96, 101] ccc => cc, Pos: [96, 101, 104] ccc => cc, Pos: [100, 117] cc => I, Pos: [100, 117] cc => I, Pos: [105, 107] cc => I, Pos: [105, 107] cc => I, Pos: [134, 152] cc => I, Pos: [134, 152] cc => I, Pos: [143, 157] cc => I, Pos: [143, 157] cc => I, Pos: [167, 177] cc => I, Pos: [167, 177] cc => I]

--------End Timer [Generate Plans]:  0.015626192092895508

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [62, 65, 76] ccc => cc,
 Pos: [96, 101, 104] ccc => cc,
 Pos: [100, 117] cc => I,
 Pos: [105, 107] cc => I,
 Pos: [134, 152] cc => I,
 Pos: [143, 157] cc => I,
 Pos: [167, 177] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [62, 65, 76] ccc => cc
Apply:  Pos: [96, 101, 104] ccc => cc
Apply:  Pos: [100, 117] cc => I
Apply:  Pos: [105, 107] cc => I
Apply:  Pos: [134, 152] cc => I
Apply:  Pos: [143, 157] cc => I
Apply:  Pos: [167, 177] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 2], [16, 9], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [17, 6], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [17, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [9, 5], [4, 13], [1, 8], [3, 4], [18, 11], [5, 12], [8, 14], [17, 11], [18, 19], [6, 13], [3, 13], [11, 4], [14, 5], [9, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.7819955348968506

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]
[57, 66]
[92, 95]
[103, 108]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[93, 98, 105]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 26, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]
[57, 66]
[92, 95]
[103, 108]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.532111883163452

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26, 29] ccc => cc, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [57, 66] cc => I, Pos: [57, 66] cc => I, Pos: [92, 95] cc => I, Pos: [92, 95] cc => I, Pos: [93, 98, 105] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I]

--------End Timer [Generate Plans]:  0.015636444091796875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26, 29] ccc => cc,
 Pos: [30, 38] cc => I,
 Pos: [57, 66] cc => I,
 Pos: [92, 95] cc => I,
 Pos: [93, 98, 105] ccc => cc,
 Pos: [103, 108] cc => I]
Change: 6, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 26, 29] ccc => cc
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [57, 66] cc => I
Apply:  Pos: [92, 95] cc => I
Apply:  Pos: [93, 98, 105] ccc => cc
Apply:  Pos: [103, 108] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [10, 16], [0, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [9, 12], [4, 13], [3, 4], [18, 11], [5, 12], [8, 14], [17, 11], [18, 19], [3, 13], [11, 4], [14, 5], [10, 19], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.547748327255249

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 87]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[48, 60, 62]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 87]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.281651496887207

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 60, 62] ccc => cc, Pos: [74, 87] cc => I, Pos: [74, 87] cc => I]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 60, 62] ccc => cc, Pos: [74, 87] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 60, 62] ccc => cc
Apply:  Pos: [74, 87] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [4, 13], [3, 4], [18, 11], [5, 12], [8, 14], [17, 11], [18, 19], [3, 13], [11, 4], [14, 5], [10, 19], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.2972750663757324

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.235419750213623

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [0, 1], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [4, 13], [3, 4], [18, 11], [5, 12], [8, 14], [17, 11], [18, 19], [3, 13], [11, 4], [14, 5], [10, 19], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.235419750213623

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 360

Reduced: 
 - size: 135 (42.86%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499094009399414

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [10, 16], [8, 14], [9, 12], [17, 6], [2, 3], [13, 5], [2, 9], [18, 19], [17, 11], [0, 1], [13, 5], [17, 11], [9, 14], [1, 8], [0, 19], [15, 2], [10, 16], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [19, 17], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [7, 10], [14, 12], [19, 17], [6, 3], [4, 13], [0, 1], [9, 14], [0, 19], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [7, 10], [0, 19], [9, 14], [0, 16], [17, 11], [7, 18], [4, 13], [1, 8], [14, 12], [4, 13], [15, 8], [16, 3], [9, 5], [19, 6], [7, 18], [0, 1], [9, 12], [8, 14], [17, 11], [7, 10], [3, 13], [19, 16], [1, 2], [14, 12], [17, 6], [7, 18], [13, 5], [1, 15], [3, 4], [19, 16], [14, 12], [15, 8], [3, 4], [10, 16], [2, 9], [13, 5], [17, 6], [9, 14], [17, 6], [10, 16], [2, 8], [1, 15], [5, 12], [4, 13], [9, 14], [10, 19], [4, 13], [16, 2], [1, 15], [17, 6], [9, 12], [19, 6], [15, 2], [0, 1], [13, 5], [8, 14], [17, 11], [9, 12], [0, 1], [19, 17], [14, 5], [15, 2], [16, 3], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [16, 3], [17, 6], [0, 1], [9, 12], [1, 2], [0, 19], [17, 11], [6, 13], [14, 5], [3, 4], [10, 16], [15, 8], [14, 12], [6, 13], [10, 19], [1, 2], [15, 8], [0, 16], [11, 4], [14, 12], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [10, 0], [9, 5], [4, 13], [8, 14], [3, 4], [18, 17], [16, 2], [5, 12], [8, 14], [1, 15], [10, 0], [3, 9], [16, 2], [17, 11], [18, 19], [1, 8], [7, 10], [6, 13], [3, 9], [18, 17], [15, 2], [8, 14], [10, 19], [18, 17], [3, 13], [11, 4], [9, 5], [0, 16], [14, 5], [15, 2], [0, 16], [18, 17], [7, 10], [6, 13], [1, 8], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [5, 12], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [5, 12], [15, 2], [19, 16], [10, 0], [9, 14], [18, 6], [4, 13], [13, 5], [16, 9], [1, 8], [18, 6], [0, 19], [11, 4], [13, 5], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [8, 14], [18, 17], [11, 4], [13, 5], [8, 14], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [1, 15], [10, 0], [9, 14], [13, 5], [17, 6], [3, 9], [18, 19], [17, 6], [8, 14], [1, 15], [10, 0], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [16, 2], [1, 8], [17, 11], [10, 0], [6, 3], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [9, 5], [15, 8], [7, 10], [0, 19], [11, 4], [3, 4], [8, 14], [7, 10], [19, 6], [0, 16], [9, 5], [17, 11], [2, 3], [6, 4], [5, 12], [17, 11], [16, 9], [10, 0], [8, 14], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [16, 9], [7, 18], [3, 13], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [7, 10], [9, 12], [16, 2], [19, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], [7, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[153, 161, 167]
[164, 170, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[156, 163, 169]
[170, 180, 189]
[203, 207, 213]
[214, 219, 234]
[257, 261, 266]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[293, 299, 306]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.21880841255188

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 26] cc => I, Pos: [10, 26] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [30, 39] cc => I, Pos: [30, 39] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [39, 55] cc => I, Pos: [39, 55] cc => I, Pos: [46, 56] cc => I, Pos: [46, 56] cc => I, Pos: [55, 74] cc => I, Pos: [55, 74] cc => I, Pos: [59, 73] cc => I, Pos: [59, 73] cc => I, Pos: [60, 69] cc => I, Pos: [60, 69] cc => I, Pos: [61, 64] cc => I, Pos: [61, 64] cc => I, Pos: [69, 80] cc => I, Pos: [69, 80] cc => I, Pos: [73, 111] cc => I, Pos: [73, 111] cc => I, Pos: [76, 84] cc => I, Pos: [76, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [83, 87] cc => I, Pos: [83, 87] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [91, 93] cc => I, Pos: [91, 93] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 104] cc => I, Pos: [93, 104] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [98, 101] cc => I, Pos: [98, 101] cc => I, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [107, 116] cc => I, Pos: [107, 116] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [127, 138] cc => I, Pos: [127, 138] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [145, 153] cc => I, Pos: [145, 153] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 161, 167] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 163, 169] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I, Pos: [164, 170, 180] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [168, 177] cc => I, Pos: [168, 177] cc => I, Pos: [170, 180, 189] ccc => cc, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [175, 178] cc => I, Pos: [175, 178] cc => I, Pos: [182, 208] cc => I, Pos: [182, 208] cc => I, Pos: [191, 199] cc => I, Pos: [191, 199] cc => I, Pos: [198, 203] cc => I, Pos: [198, 203] cc => I, Pos: [203, 207, 213] ccc => cc, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [214, 219, 234] ccc => cc, Pos: [223, 227] cc => I, Pos: [223, 227] cc => I, Pos: [226, 237] cc => I, Pos: [226, 237] cc => I, Pos: [233, 250] cc => I, Pos: [233, 250] cc => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [235, 244] cc => I, Pos: [235, 244] cc => I, Pos: [238, 241] cc => I, Pos: [238, 241] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [250, 259] cc => I, Pos: [250, 259] cc => I, Pos: [254, 258] cc => I, Pos: [254, 258] cc => I, Pos: [257, 261, 266] ccc => cc, Pos: [260, 270] cc => I, Pos: [260, 270] cc => I, Pos: [262, 267] cc => I, Pos: [262, 267] cc => I, Pos: [266, 278] cc => I, Pos: [266, 278] cc => I, Pos: [271, 275] cc => I, Pos: [271, 275] cc => I, Pos: [276, 284] cc => I, Pos: [276, 284] cc => I, Pos: [279, 285] cc => I, Pos: [279, 285] cc => I, Pos: [280, 286] cc => I, Pos: [280, 286] cc => I, Pos: [285, 289] cc => I, Pos: [285, 289] cc => I, Pos: [286, 294] cc => I, Pos: [286, 294] cc => I, Pos: [293, 299, 306] ccc => cc, Pos: [296, 314] cc => I, Pos: [296, 314] cc => I, Pos: [299, 309] cc => I, Pos: [299, 309] cc => I]

--------End Timer [Generate Plans]:  0.14063358306884766

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 15] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [39, 55] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [73, 111] cc => I,
 Pos: [60, 69] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [91, 93] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [113, 125] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [153, 161, 167] ccc => cc,
 Pos: [148, 158] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [170, 180, 189] ccc => cc,
 Pos: [168, 177] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [203, 207, 213] ccc => cc,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [234, 243] cc => I,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [233, 250] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [254, 258] cc => I,
 Pos: [257, 261, 266] ccc => cc,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [285, 289] cc => I,
 Pos: [286, 294] cc => I,
 Pos: [299, 309] cc => I,
 Pos: [296, 314] cc => I]
Change: 56, Saving: 56

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 26] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [39, 55] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [46, 56] cc => I
Apply:  Pos: [73, 111] cc => I
Apply:  Pos: [60, 69] cc => I
Apply:  Pos: [61, 64] cc => I
Apply:  Pos: [76, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [91, 93] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [83, 87] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [98, 101] cc => I
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [107, 116] cc => I
Apply:  Pos: [113, 125] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [127, 138] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [153, 161, 167] ccc => cc
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [159, 166] cc => I
Apply:  Pos: [170, 180, 189] ccc => cc
Apply:  Pos: [168, 177] cc => I
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [175, 178] cc => I
Apply:  Pos: [182, 208] cc => I
Apply:  Pos: [191, 199] cc => I
Apply:  Pos: [203, 207, 213] ccc => cc
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [223, 227] cc => I
Apply:  Pos: [226, 237] cc => I
Apply:  Pos: [233, 250] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [238, 241] cc => I
Apply:  Pos: [254, 258] cc => I
Apply:  Pos: [257, 261, 266] ccc => cc
Apply:  Pos: [260, 270] cc => I
Apply:  Pos: [262, 267] cc => I
Apply:  Pos: [271, 275] cc => I
Apply:  Pos: [276, 284] cc => I
Apply:  Pos: [285, 289] cc => I
Apply:  Pos: [286, 294] cc => I
Apply:  Pos: [299, 309] cc => I
Apply:  Pos: [296, 314] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [17, 11], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [7, 10], [3, 13], [1, 2], [17, 6], [7, 18], [1, 15], [15, 8], [2, 9], [2, 8], [5, 12], [10, 19], [16, 2], [17, 6], [19, 6], [0, 1], [13, 5], [8, 14], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [17, 6], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [9, 5], [4, 13], [3, 4], [18, 11], [5, 12], [1, 15], [17, 11], [18, 19], [1, 8], [7, 10], [6, 13], [8, 14], [7, 10], [3, 13], [11, 4], [9, 5], [14, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [15, 2], [19, 16], [10, 0], [16, 9], [4, 13], [9, 14], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [10, 0], [9, 14], [3, 9], [18, 19], [8, 14], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [15, 8], [16, 2], [8, 14], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [8, 14], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  6.375071048736572

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 24]
[24, 57]
[95, 104]
[105, 108]
[101, 118]
[134, 154]
[145, 159]
[169, 179]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 68, 79]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 24]
[24, 57]
[95, 104]
[105, 108]
[101, 118]
[134, 154]
[145, 159]
[169, 179]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.812486410140991

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 24] cc => I, Pos: [6, 24] cc => I, Pos: [24, 57] cc => I, Pos: [24, 57] cc => I, Pos: [65, 68, 79] ccc => cc, Pos: [95, 104] cc => I, Pos: [95, 104] cc => I, Pos: [101, 118] cc => I, Pos: [101, 118] cc => I, Pos: [105, 108] cc => I, Pos: [105, 108] cc => I, Pos: [134, 154] cc => I, Pos: [134, 154] cc => I, Pos: [145, 159] cc => I, Pos: [145, 159] cc => I, Pos: [169, 179] cc => I, Pos: [169, 179] cc => I]

--------End Timer [Generate Plans]:  0.015637874603271484

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [24, 57] cc => I,
 Pos: [65, 68, 79] ccc => cc,
 Pos: [95, 104] cc => I,
 Pos: [101, 118] cc => I,
 Pos: [105, 108] cc => I,
 Pos: [134, 154] cc => I,
 Pos: [145, 159] cc => I,
 Pos: [169, 179] cc => I]
Change: 8, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [24, 57] cc => I
Apply:  Pos: [65, 68, 79] ccc => cc
Apply:  Pos: [95, 104] cc => I
Apply:  Pos: [101, 118] cc => I
Apply:  Pos: [105, 108] cc => I
Apply:  Pos: [134, 154] cc => I
Apply:  Pos: [145, 159] cc => I
Apply:  Pos: [169, 179] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 2], [16, 9], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [17, 11], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [17, 6], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [17, 6], [0, 1], [13, 5], [8, 14], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [9, 5], [4, 13], [3, 4], [18, 11], [5, 12], [17, 11], [18, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [9, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [15, 2], [19, 16], [10, 0], [16, 9], [4, 13], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [15, 8], [16, 2], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [3, 13], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.8281242847442627

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]
[58, 67]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[92, 96, 103]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 26, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 68, 72]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]
[58, 67]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.453106164932251

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26, 29] ccc => cc, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [58, 67] cc => I, Pos: [58, 67] cc => I, Pos: [67, 68, 72] ccc => cc, Pos: [92, 96, 103] ccc => cc]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26, 29] ccc => cc,
 Pos: [30, 38] cc => I,
 Pos: [58, 67] cc => I,
 Pos: [92, 96, 103] ccc => cc]
Change: 4, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 26, 29] ccc => cc
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [58, 67] cc => I
Apply:  Pos: [92, 96, 103] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [17, 11], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [0, 1], [13, 5], [8, 14], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [10, 16], [0, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [9, 12], [4, 13], [3, 4], [18, 11], [5, 12], [17, 11], [18, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [15, 2], [19, 16], [10, 0], [16, 9], [4, 13], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [15, 8], [16, 2], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.4687304496765137

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 87]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 61, 63]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 87]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3906471729278564

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [49, 61, 63] ccc => cc, Pos: [74, 87] cc => I, Pos: [74, 87] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [49, 61, 63] ccc => cc, Pos: [74, 87] cc => I]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [49, 61, 63] ccc => cc
Apply:  Pos: [74, 87] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [17, 11], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [0, 1], [13, 5], [8, 14], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [4, 13], [3, 4], [18, 11], [5, 12], [17, 11], [18, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [15, 2], [19, 16], [10, 0], [16, 9], [4, 13], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [15, 8], [16, 2], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [3, 13], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.3906471729278564

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2812986373901367

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [17, 11], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [0, 1], [13, 5], [8, 14], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [4, 13], [3, 4], [18, 11], [5, 12], [17, 11], [18, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [15, 2], [19, 16], [10, 0], [16, 9], [4, 13], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [15, 8], [16, 2], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.2812986373901367

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [183] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 132 (41.90%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936713218688965

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [10, 16], [8, 14], [9, 12], [17, 6], [2, 3], [13, 5], [2, 9], [18, 19], [17, 11], [0, 1], [13, 5], [17, 11], [9, 14], [1, 8], [0, 19], [15, 2], [10, 16], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [19, 17], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [7, 10], [14, 12], [19, 17], [6, 3], [4, 13], [0, 1], [9, 14], [0, 19], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [7, 10], [0, 19], [9, 14], [0, 16], [17, 11], [7, 18], [4, 13], [1, 8], [14, 12], [4, 13], [15, 8], [16, 3], [9, 5], [19, 6], [7, 18], [0, 1], [9, 12], [8, 14], [17, 11], [7, 10], [3, 13], [19, 16], [1, 2], [14, 12], [17, 6], [7, 18], [13, 5], [1, 15], [3, 4], [19, 16], [14, 12], [15, 8], [3, 4], [10, 16], [2, 9], [13, 5], [17, 6], [9, 14], [17, 6], [10, 16], [2, 8], [1, 15], [5, 12], [4, 13], [9, 14], [10, 19], [4, 13], [16, 2], [1, 15], [17, 6], [9, 12], [19, 6], [15, 2], [0, 1], [13, 5], [8, 14], [17, 11], [9, 12], [0, 1], [19, 17], [14, 5], [15, 2], [16, 3], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [16, 3], [17, 6], [0, 1], [9, 12], [1, 2], [0, 19], [17, 11], [6, 13], [14, 5], [3, 4], [10, 16], [15, 8], [14, 12], [6, 13], [10, 19], [1, 2], [15, 8], [0, 16], [11, 4], [14, 12], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [10, 0], [9, 5], [4, 13], [8, 14], [3, 4], [18, 17], [16, 2], [5, 12], [8, 14], [1, 15], [10, 0], [3, 9], [16, 2], [17, 11], [18, 19], [1, 8], [7, 10], [6, 13], [3, 9], [18, 17], [15, 2], [8, 14], [10, 19], [18, 17], [3, 13], [11, 4], [9, 5], [0, 16], [14, 5], [15, 2], [0, 16], [18, 17], [7, 10], [6, 13], [1, 8], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [5, 12], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [5, 12], [15, 2], [19, 16], [10, 0], [9, 14], [18, 6], [4, 13], [13, 5], [16, 9], [1, 8], [18, 6], [0, 19], [11, 4], [13, 5], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [8, 14], [18, 17], [11, 4], [13, 5], [8, 14], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [1, 15], [10, 0], [9, 14], [13, 5], [17, 6], [3, 9], [18, 19], [17, 6], [8, 14], [1, 15], [10, 0], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [16, 2], [1, 8], [17, 11], [10, 0], [6, 3], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [9, 5], [15, 8], [7, 10], [0, 19], [11, 4], [3, 4], [8, 14], [7, 10], [19, 6], [0, 16], [9, 5], [17, 11], [2, 3], [6, 4], [5, 12], [17, 11], [16, 9], [10, 0], [8, 14], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [16, 9], [7, 18], [3, 13], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [7, 10], [9, 12], [16, 2], [19, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], [7, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[153, 161, 167]
[164, 170, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[156, 163, 169]
[170, 180, 189]
[203, 207, 213]
[214, 219, 234]
[257, 261, 266]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[293, 299, 306]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.109898090362549

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 26] cc => I, Pos: [10, 26] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [30, 39] cc => I, Pos: [30, 39] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [39, 55] cc => I, Pos: [39, 55] cc => I, Pos: [46, 56] cc => I, Pos: [46, 56] cc => I, Pos: [55, 74] cc => I, Pos: [55, 74] cc => I, Pos: [59, 73] cc => I, Pos: [59, 73] cc => I, Pos: [60, 69] cc => I, Pos: [60, 69] cc => I, Pos: [61, 64] cc => I, Pos: [61, 64] cc => I, Pos: [69, 80] cc => I, Pos: [69, 80] cc => I, Pos: [73, 111] cc => I, Pos: [73, 111] cc => I, Pos: [76, 84] cc => I, Pos: [76, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [83, 87] cc => I, Pos: [83, 87] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [91, 93] cc => I, Pos: [91, 93] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 104] cc => I, Pos: [93, 104] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [98, 101] cc => I, Pos: [98, 101] cc => I, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [107, 116] cc => I, Pos: [107, 116] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [127, 138] cc => I, Pos: [127, 138] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [145, 153] cc => I, Pos: [145, 153] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 161, 167] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 163, 169] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I, Pos: [164, 170, 180] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [168, 177] cc => I, Pos: [168, 177] cc => I, Pos: [170, 180, 189] ccc => cc, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [175, 178] cc => I, Pos: [175, 178] cc => I, Pos: [182, 208] cc => I, Pos: [182, 208] cc => I, Pos: [191, 199] cc => I, Pos: [191, 199] cc => I, Pos: [198, 203] cc => I, Pos: [198, 203] cc => I, Pos: [203, 207, 213] ccc => cc, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [214, 219, 234] ccc => cc, Pos: [223, 227] cc => I, Pos: [223, 227] cc => I, Pos: [226, 237] cc => I, Pos: [226, 237] cc => I, Pos: [233, 250] cc => I, Pos: [233, 250] cc => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [235, 244] cc => I, Pos: [235, 244] cc => I, Pos: [238, 241] cc => I, Pos: [238, 241] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [250, 259] cc => I, Pos: [250, 259] cc => I, Pos: [254, 258] cc => I, Pos: [254, 258] cc => I, Pos: [257, 261, 266] ccc => cc, Pos: [260, 270] cc => I, Pos: [260, 270] cc => I, Pos: [262, 267] cc => I, Pos: [262, 267] cc => I, Pos: [266, 278] cc => I, Pos: [266, 278] cc => I, Pos: [271, 275] cc => I, Pos: [271, 275] cc => I, Pos: [276, 284] cc => I, Pos: [276, 284] cc => I, Pos: [279, 285] cc => I, Pos: [279, 285] cc => I, Pos: [280, 286] cc => I, Pos: [280, 286] cc => I, Pos: [285, 289] cc => I, Pos: [285, 289] cc => I, Pos: [286, 294] cc => I, Pos: [286, 294] cc => I, Pos: [293, 299, 306] ccc => cc, Pos: [296, 314] cc => I, Pos: [296, 314] cc => I, Pos: [299, 309] cc => I, Pos: [299, 309] cc => I]

--------End Timer [Generate Plans]:  0.15622687339782715

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 15] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [39, 55] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [59, 73] cc => I,
 Pos: [60, 69] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 104] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [145, 153] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [156, 163, 169] ccc => cc,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [170, 180, 189] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [168, 177] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [214, 219, 234] ccc => cc,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [250, 259] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [254, 258] cc => I,
 Pos: [266, 278] cc => I,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [285, 289] cc => I,
 Pos: [280, 286] cc => I,
 Pos: [299, 309] cc => I,
 Pos: [296, 314] cc => I]
Change: 57, Saving: 57

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 26] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [39, 55] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [46, 56] cc => I
Apply:  Pos: [59, 73] cc => I
Apply:  Pos: [60, 69] cc => I
Apply:  Pos: [61, 64] cc => I
Apply:  Pos: [76, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [83, 87] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 104] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [98, 101] cc => I
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [107, 116] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [127, 138] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [145, 153] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [156, 163, 169] ccc => cc
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [159, 166] cc => I
Apply:  Pos: [170, 180, 189] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [168, 177] cc => I
Apply:  Pos: [175, 178] cc => I
Apply:  Pos: [182, 208] cc => I
Apply:  Pos: [191, 199] cc => I
Apply:  Pos: [198, 203] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [214, 219, 234] ccc => cc
Apply:  Pos: [223, 227] cc => I
Apply:  Pos: [226, 237] cc => I
Apply:  Pos: [250, 259] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [238, 241] cc => I
Apply:  Pos: [254, 258] cc => I
Apply:  Pos: [266, 278] cc => I
Apply:  Pos: [260, 270] cc => I
Apply:  Pos: [262, 267] cc => I
Apply:  Pos: [271, 275] cc => I
Apply:  Pos: [276, 284] cc => I
Apply:  Pos: [285, 289] cc => I
Apply:  Pos: [280, 286] cc => I
Apply:  Pos: [299, 309] cc => I
Apply:  Pos: [296, 314] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [7, 10], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 9], [2, 8], [5, 12], [10, 19], [16, 2], [19, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [1, 8], [9, 5], [4, 13], [8, 14], [3, 4], [5, 12], [1, 8], [1, 15], [17, 11], [18, 19], [8, 14], [7, 10], [6, 13], [7, 10], [3, 13], [11, 4], [9, 5], [14, 5], [18, 17], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [9, 14], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [1, 15], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [9, 14], [3, 9], [18, 19], [8, 14], [1, 15], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  6.266124963760376

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 24]
[24, 56]
[103, 105]
[98, 116]
[133, 152]
[139, 156]
[142, 158]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[92, 95, 99]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 66, 76]
[95, 99, 102]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 24]
[24, 56]
[103, 105]
[98, 116]
[133, 152]
[139, 156]
[142, 158]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.703355550765991

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 24] cc => I, Pos: [6, 24] cc => I, Pos: [24, 56] cc => I, Pos: [24, 56] cc => I, Pos: [63, 66, 76] ccc => cc, Pos: [92, 95, 99] ccc => cc, Pos: [95, 99, 102] ccc => cc, Pos: [98, 116] cc => I, Pos: [98, 116] cc => I, Pos: [103, 105] cc => I, Pos: [103, 105] cc => I, Pos: [133, 152] cc => I, Pos: [133, 152] cc => I, Pos: [139, 156] cc => I, Pos: [139, 156] cc => I, Pos: [142, 158] cc => I, Pos: [142, 158] cc => I]

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [24, 56] cc => I,
 Pos: [63, 66, 76] ccc => cc,
 Pos: [95, 99, 102] ccc => cc,
 Pos: [98, 116] cc => I,
 Pos: [103, 105] cc => I,
 Pos: [133, 152] cc => I,
 Pos: [139, 156] cc => I,
 Pos: [142, 158] cc => I]
Change: 8, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [24, 56] cc => I
Apply:  Pos: [63, 66, 76] ccc => cc
Apply:  Pos: [95, 99, 102] ccc => cc
Apply:  Pos: [98, 116] cc => I
Apply:  Pos: [103, 105] cc => I
Apply:  Pos: [133, 152] cc => I
Apply:  Pos: [139, 156] cc => I
Apply:  Pos: [142, 158] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 2], [16, 9], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [1, 8], [9, 5], [4, 13], [1, 8], [3, 4], [5, 12], [8, 14], [17, 11], [18, 19], [6, 13], [3, 13], [11, 4], [14, 5], [9, 5], [18, 17], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.718980312347412

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]
[89, 92]
[99, 105]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[90, 94, 101]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 26, 29]
[51, 63, 65]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]
[89, 92]
[99, 105]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.359813928604126

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26, 29] ccc => cc, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [51, 63, 65] ccc => cc, Pos: [89, 92] cc => I, Pos: [89, 92] cc => I, Pos: [90, 94, 101] ccc => cc, Pos: [99, 105] cc => I, Pos: [99, 105] cc => I]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26, 29] ccc => cc,
 Pos: [30, 38] cc => I,
 Pos: [51, 63, 65] ccc => cc,
 Pos: [89, 92] cc => I,
 Pos: [90, 94, 101] ccc => cc,
 Pos: [99, 105] cc => I]
Change: 6, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 26, 29] ccc => cc
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [51, 63, 65] ccc => cc
Apply:  Pos: [89, 92] cc => I
Apply:  Pos: [90, 94, 101] ccc => cc
Apply:  Pos: [99, 105] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [10, 16], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 12], [4, 13], [3, 4], [5, 12], [8, 14], [17, 11], [18, 19], [3, 13], [11, 4], [14, 5], [18, 17], [10, 19], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.3754374980926514

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.17189621925354

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [73, 85] cc => I, Pos: [73, 85] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [73, 85] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [73, 85] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [8, 14], [17, 11], [18, 19], [3, 13], [11, 4], [14, 5], [18, 17], [10, 19], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.17189621925354

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.140798330307007

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [0, 1], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [8, 14], [17, 11], [18, 19], [3, 13], [11, 4], [14, 5], [18, 17], [10, 19], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.140798330307007

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [179] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 358

Reduced: 
 - size: 136 (43.17%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499141693115234

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [10, 16], [8, 14], [9, 12], [17, 6], [2, 3], [13, 5], [2, 9], [18, 19], [17, 11], [0, 1], [13, 5], [17, 11], [9, 14], [1, 8], [0, 19], [15, 2], [10, 16], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [19, 17], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [7, 10], [14, 12], [19, 17], [6, 3], [4, 13], [0, 1], [9, 14], [0, 19], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [7, 10], [0, 19], [9, 14], [0, 16], [17, 11], [7, 18], [4, 13], [1, 8], [14, 12], [4, 13], [15, 8], [16, 3], [9, 5], [19, 6], [7, 18], [0, 1], [9, 12], [8, 14], [17, 11], [7, 10], [3, 13], [19, 16], [1, 2], [14, 12], [17, 6], [7, 18], [13, 5], [1, 15], [3, 4], [19, 16], [14, 12], [15, 8], [3, 4], [10, 16], [2, 9], [13, 5], [17, 6], [9, 14], [17, 6], [10, 16], [2, 8], [1, 15], [5, 12], [4, 13], [9, 14], [10, 19], [4, 13], [16, 2], [1, 15], [17, 6], [9, 12], [19, 6], [15, 2], [0, 1], [13, 5], [8, 14], [17, 11], [9, 12], [0, 1], [19, 17], [14, 5], [15, 2], [16, 3], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [16, 3], [17, 6], [0, 1], [9, 12], [1, 2], [0, 19], [17, 11], [6, 13], [14, 5], [3, 4], [10, 16], [15, 8], [14, 12], [6, 13], [10, 19], [1, 2], [15, 8], [0, 16], [11, 4], [14, 12], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [10, 0], [9, 5], [4, 13], [8, 14], [3, 4], [18, 17], [16, 2], [5, 12], [8, 14], [1, 15], [10, 0], [3, 9], [16, 2], [17, 11], [18, 19], [1, 8], [7, 10], [6, 13], [3, 9], [18, 17], [15, 2], [8, 14], [10, 19], [18, 17], [3, 13], [11, 4], [9, 5], [0, 16], [14, 5], [15, 2], [0, 16], [18, 17], [7, 10], [6, 13], [1, 8], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [5, 12], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [5, 12], [15, 2], [19, 16], [10, 0], [9, 14], [18, 6], [4, 13], [13, 5], [16, 9], [1, 8], [18, 6], [0, 19], [11, 4], [13, 5], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [8, 14], [18, 17], [11, 4], [13, 5], [8, 14], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [1, 15], [10, 0], [9, 14], [13, 5], [17, 6], [3, 9], [18, 19], [17, 6], [8, 14], [1, 15], [10, 0], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [16, 2], [1, 8], [17, 11], [10, 0], [6, 3], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [9, 5], [15, 8], [7, 10], [0, 19], [11, 4], [3, 4], [8, 14], [7, 10], [19, 6], [0, 16], [9, 5], [17, 11], [2, 3], [6, 4], [5, 12], [17, 11], [16, 9], [10, 0], [8, 14], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [16, 9], [7, 18], [3, 13], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [7, 10], [9, 12], [16, 2], [19, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], [7, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[153, 161, 167]
[164, 170, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[156, 163, 169]
[170, 180, 189]
[203, 207, 213]
[214, 219, 234]
[257, 261, 266]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[293, 299, 306]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.233910799026489

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 26] cc => I, Pos: [10, 26] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [30, 39] cc => I, Pos: [30, 39] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [39, 55] cc => I, Pos: [39, 55] cc => I, Pos: [46, 56] cc => I, Pos: [46, 56] cc => I, Pos: [55, 74] cc => I, Pos: [55, 74] cc => I, Pos: [59, 73] cc => I, Pos: [59, 73] cc => I, Pos: [60, 69] cc => I, Pos: [60, 69] cc => I, Pos: [61, 64] cc => I, Pos: [61, 64] cc => I, Pos: [69, 80] cc => I, Pos: [69, 80] cc => I, Pos: [73, 111] cc => I, Pos: [73, 111] cc => I, Pos: [76, 84] cc => I, Pos: [76, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [83, 87] cc => I, Pos: [83, 87] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [91, 93] cc => I, Pos: [91, 93] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 104] cc => I, Pos: [93, 104] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [98, 101] cc => I, Pos: [98, 101] cc => I, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [107, 116] cc => I, Pos: [107, 116] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [127, 138] cc => I, Pos: [127, 138] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [145, 153] cc => I, Pos: [145, 153] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 161, 167] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 163, 169] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I, Pos: [164, 170, 180] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [168, 177] cc => I, Pos: [168, 177] cc => I, Pos: [170, 180, 189] ccc => cc, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [175, 178] cc => I, Pos: [175, 178] cc => I, Pos: [182, 208] cc => I, Pos: [182, 208] cc => I, Pos: [191, 199] cc => I, Pos: [191, 199] cc => I, Pos: [198, 203] cc => I, Pos: [198, 203] cc => I, Pos: [203, 207, 213] ccc => cc, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [214, 219, 234] ccc => cc, Pos: [223, 227] cc => I, Pos: [223, 227] cc => I, Pos: [226, 237] cc => I, Pos: [226, 237] cc => I, Pos: [233, 250] cc => I, Pos: [233, 250] cc => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [235, 244] cc => I, Pos: [235, 244] cc => I, Pos: [238, 241] cc => I, Pos: [238, 241] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [250, 259] cc => I, Pos: [250, 259] cc => I, Pos: [254, 258] cc => I, Pos: [254, 258] cc => I, Pos: [257, 261, 266] ccc => cc, Pos: [260, 270] cc => I, Pos: [260, 270] cc => I, Pos: [262, 267] cc => I, Pos: [262, 267] cc => I, Pos: [266, 278] cc => I, Pos: [266, 278] cc => I, Pos: [271, 275] cc => I, Pos: [271, 275] cc => I, Pos: [276, 284] cc => I, Pos: [276, 284] cc => I, Pos: [279, 285] cc => I, Pos: [279, 285] cc => I, Pos: [280, 286] cc => I, Pos: [280, 286] cc => I, Pos: [285, 289] cc => I, Pos: [285, 289] cc => I, Pos: [286, 294] cc => I, Pos: [286, 294] cc => I, Pos: [293, 299, 306] ccc => cc, Pos: [296, 314] cc => I, Pos: [296, 314] cc => I, Pos: [299, 309] cc => I, Pos: [299, 309] cc => I]

--------End Timer [Generate Plans]:  0.14061522483825684

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 15] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [39, 55] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [59, 73] cc => I,
 Pos: [60, 69] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [91, 93] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [145, 153] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [156, 163, 169] ccc => cc,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [164, 170, 180] ccc => cc,
 Pos: [171, 179] cc => I,
 Pos: [168, 177] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [234, 243] cc => I,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [250, 259] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [254, 258] cc => I,
 Pos: [257, 261, 266] ccc => cc,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [279, 285] cc => I,
 Pos: [286, 294] cc => I,
 Pos: [293, 299, 306] ccc => cc,
 Pos: [296, 314] cc => I]
Change: 56, Saving: 57

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 26] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [39, 55] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [46, 56] cc => I
Apply:  Pos: [59, 73] cc => I
Apply:  Pos: [60, 69] cc => I
Apply:  Pos: [61, 64] cc => I
Apply:  Pos: [76, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [91, 93] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [83, 87] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [98, 101] cc => I
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [107, 116] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [127, 138] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [145, 153] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [156, 163, 169] ccc => cc
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [159, 166] cc => I
Apply:  Pos: [164, 170, 180] ccc => cc
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [168, 177] cc => I
Apply:  Pos: [175, 178] cc => I
Apply:  Pos: [182, 208] cc => I
Apply:  Pos: [191, 199] cc => I
Apply:  Pos: [198, 203] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [223, 227] cc => I
Apply:  Pos: [226, 237] cc => I
Apply:  Pos: [250, 259] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [238, 241] cc => I
Apply:  Pos: [254, 258] cc => I
Apply:  Pos: [257, 261, 266] ccc => cc
Apply:  Pos: [260, 270] cc => I
Apply:  Pos: [262, 267] cc => I
Apply:  Pos: [271, 275] cc => I
Apply:  Pos: [276, 284] cc => I
Apply:  Pos: [279, 285] cc => I
Apply:  Pos: [286, 294] cc => I
Apply:  Pos: [293, 299, 306] ccc => cc
Apply:  Pos: [296, 314] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0156252384185791

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [7, 10], [3, 13], [1, 2], [17, 6], [7, 18], [1, 15], [15, 8], [2, 9], [2, 8], [5, 12], [10, 19], [16, 2], [17, 6], [19, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [1, 8], [9, 5], [4, 13], [8, 14], [3, 4], [5, 12], [1, 8], [1, 15], [17, 11], [18, 19], [8, 14], [7, 19], [6, 13], [18, 17], [10, 19], [3, 13], [11, 4], [9, 5], [14, 5], [6, 13], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [9, 14], [3, 9], [18, 19], [8, 14], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [15, 8], [8, 14], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [8, 14], [3, 13], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  6.390151262283325

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 24]
[24, 56]
[100, 117]
[108, 120]
[135, 154]
[144, 159]
[168, 178]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[94, 97, 101]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 67, 78]
[97, 101, 104]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 24]
[24, 56]
[100, 117]
[108, 120]
[135, 154]
[144, 159]
[168, 178]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.8598835468292236

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 24] cc => I, Pos: [6, 24] cc => I, Pos: [24, 56] cc => I, Pos: [24, 56] cc => I, Pos: [64, 67, 78] ccc => cc, Pos: [94, 97, 101] ccc => cc, Pos: [97, 101, 104] ccc => cc, Pos: [100, 117] cc => I, Pos: [100, 117] cc => I, Pos: [108, 120] cc => I, Pos: [108, 120] cc => I, Pos: [135, 154] cc => I, Pos: [135, 154] cc => I, Pos: [144, 159] cc => I, Pos: [144, 159] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I]

--------End Timer [Generate Plans]:  0.031247854232788086

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 24] cc => I,
 Pos: [64, 67, 78] ccc => cc,
 Pos: [97, 101, 104] ccc => cc,
 Pos: [100, 117] cc => I,
 Pos: [108, 120] cc => I,
 Pos: [135, 154] cc => I,
 Pos: [144, 159] cc => I,
 Pos: [168, 178] cc => I]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 24] cc => I
Apply:  Pos: [64, 67, 78] ccc => cc
Apply:  Pos: [97, 101, 104] ccc => cc
Apply:  Pos: [100, 117] cc => I
Apply:  Pos: [108, 120] cc => I
Apply:  Pos: [135, 154] cc => I
Apply:  Pos: [144, 159] cc => I
Apply:  Pos: [168, 178] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 2], [16, 9], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [7, 10], [3, 13], [1, 2], [17, 6], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [17, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [1, 8], [9, 5], [4, 13], [1, 8], [3, 4], [5, 12], [8, 14], [17, 11], [18, 19], [7, 19], [6, 13], [18, 17], [3, 13], [11, 4], [14, 5], [9, 5], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [3, 13], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.8911314010620117

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[29, 37]
[57, 66]
[91, 94]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[92, 96, 105]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[19, 25, 28]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[29, 37]
[57, 66]
[91, 94]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.531696319580078

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 25, 28] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [57, 66] cc => I, Pos: [57, 66] cc => I, Pos: [91, 94] cc => I, Pos: [91, 94] cc => I, Pos: [92, 96, 105] ccc => cc]

--------End Timer [Generate Plans]:  0.015637636184692383

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 25, 28] ccc => cc,
 Pos: [29, 37] cc => I,
 Pos: [57, 66] cc => I,
 Pos: [91, 94] cc => I,
 Pos: [92, 96, 105] ccc => cc]
Change: 5, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 25, 28] ccc => cc
Apply:  Pos: [29, 37] cc => I
Apply:  Pos: [57, 66] cc => I
Apply:  Pos: [91, 94] cc => I
Apply:  Pos: [92, 96, 105] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [7, 10], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [10, 16], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 12], [4, 13], [3, 4], [5, 12], [8, 14], [17, 11], [7, 19], [18, 19], [6, 13], [18, 17], [3, 13], [11, 4], [14, 5], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [3, 13], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.5473339557647705

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 86]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 86]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.359546184539795

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [74, 86] cc => I, Pos: [74, 86] cc => I]

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [74, 86] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [74, 86] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [7, 10], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [8, 14], [17, 11], [18, 19], [7, 19], [6, 13], [18, 17], [3, 13], [11, 4], [14, 5], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [3, 13], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.3751699924468994

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3130054473876953

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [7, 10], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [0, 1], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [8, 14], [17, 11], [7, 19], [18, 19], [6, 13], [18, 17], [3, 13], [11, 4], [14, 5], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [3, 13], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.3130054473876953

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [183] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 132 (41.90%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12526702880859375

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [10, 16], [8, 14], [9, 12], [17, 6], [2, 3], [13, 5], [2, 9], [18, 19], [17, 11], [0, 1], [13, 5], [17, 11], [9, 14], [1, 8], [0, 19], [15, 2], [10, 16], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [19, 17], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [7, 10], [14, 12], [19, 17], [6, 3], [4, 13], [0, 1], [9, 14], [0, 19], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [7, 10], [0, 19], [9, 14], [0, 16], [17, 11], [7, 18], [4, 13], [1, 8], [14, 12], [4, 13], [15, 8], [16, 3], [9, 5], [19, 6], [7, 18], [0, 1], [9, 12], [8, 14], [17, 11], [7, 10], [3, 13], [19, 16], [1, 2], [14, 12], [17, 6], [7, 18], [13, 5], [1, 15], [3, 4], [19, 16], [14, 12], [15, 8], [3, 4], [10, 16], [2, 9], [13, 5], [17, 6], [9, 14], [17, 6], [10, 16], [2, 8], [1, 15], [5, 12], [4, 13], [9, 14], [10, 19], [4, 13], [16, 2], [1, 15], [17, 6], [9, 12], [19, 6], [15, 2], [0, 1], [13, 5], [8, 14], [17, 11], [9, 12], [0, 1], [19, 17], [14, 5], [15, 2], [16, 3], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [16, 3], [17, 6], [0, 1], [9, 12], [1, 2], [0, 19], [17, 11], [6, 13], [14, 5], [3, 4], [10, 16], [15, 8], [14, 12], [6, 13], [10, 19], [1, 2], [15, 8], [0, 16], [11, 4], [14, 12], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [10, 0], [9, 5], [4, 13], [8, 14], [3, 4], [18, 17], [16, 2], [5, 12], [8, 14], [1, 15], [10, 0], [3, 9], [16, 2], [17, 11], [18, 19], [1, 8], [7, 10], [6, 13], [3, 9], [18, 17], [15, 2], [8, 14], [10, 19], [18, 17], [3, 13], [11, 4], [9, 5], [0, 16], [14, 5], [15, 2], [0, 16], [18, 17], [7, 10], [6, 13], [1, 8], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [5, 12], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [5, 12], [15, 2], [19, 16], [10, 0], [9, 14], [18, 6], [4, 13], [13, 5], [16, 9], [1, 8], [18, 6], [0, 19], [11, 4], [13, 5], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [8, 14], [18, 17], [11, 4], [13, 5], [8, 14], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [1, 15], [10, 0], [9, 14], [13, 5], [17, 6], [3, 9], [18, 19], [17, 6], [8, 14], [1, 15], [10, 0], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [16, 2], [1, 8], [17, 11], [10, 0], [6, 3], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [9, 5], [15, 8], [7, 10], [0, 19], [11, 4], [3, 4], [8, 14], [7, 10], [19, 6], [0, 16], [9, 5], [17, 11], [2, 3], [6, 4], [5, 12], [17, 11], [16, 9], [10, 0], [8, 14], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [16, 9], [7, 18], [3, 13], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [7, 10], [9, 12], [16, 2], [19, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], [7, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[153, 161, 167]
[164, 170, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[156, 163, 169]
[170, 180, 189]
[203, 207, 213]
[214, 219, 234]
[257, 261, 266]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[293, 299, 306]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.218648195266724

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 26] cc => I, Pos: [10, 26] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [30, 39] cc => I, Pos: [30, 39] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [39, 55] cc => I, Pos: [39, 55] cc => I, Pos: [46, 56] cc => I, Pos: [46, 56] cc => I, Pos: [55, 74] cc => I, Pos: [55, 74] cc => I, Pos: [59, 73] cc => I, Pos: [59, 73] cc => I, Pos: [60, 69] cc => I, Pos: [60, 69] cc => I, Pos: [61, 64] cc => I, Pos: [61, 64] cc => I, Pos: [69, 80] cc => I, Pos: [69, 80] cc => I, Pos: [73, 111] cc => I, Pos: [73, 111] cc => I, Pos: [76, 84] cc => I, Pos: [76, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [83, 87] cc => I, Pos: [83, 87] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [91, 93] cc => I, Pos: [91, 93] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 104] cc => I, Pos: [93, 104] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [98, 101] cc => I, Pos: [98, 101] cc => I, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [107, 116] cc => I, Pos: [107, 116] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [127, 138] cc => I, Pos: [127, 138] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [145, 153] cc => I, Pos: [145, 153] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 161, 167] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 163, 169] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I, Pos: [164, 170, 180] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [168, 177] cc => I, Pos: [168, 177] cc => I, Pos: [170, 180, 189] ccc => cc, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [175, 178] cc => I, Pos: [175, 178] cc => I, Pos: [182, 208] cc => I, Pos: [182, 208] cc => I, Pos: [191, 199] cc => I, Pos: [191, 199] cc => I, Pos: [198, 203] cc => I, Pos: [198, 203] cc => I, Pos: [203, 207, 213] ccc => cc, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [214, 219, 234] ccc => cc, Pos: [223, 227] cc => I, Pos: [223, 227] cc => I, Pos: [226, 237] cc => I, Pos: [226, 237] cc => I, Pos: [233, 250] cc => I, Pos: [233, 250] cc => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [235, 244] cc => I, Pos: [235, 244] cc => I, Pos: [238, 241] cc => I, Pos: [238, 241] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [250, 259] cc => I, Pos: [250, 259] cc => I, Pos: [254, 258] cc => I, Pos: [254, 258] cc => I, Pos: [257, 261, 266] ccc => cc, Pos: [260, 270] cc => I, Pos: [260, 270] cc => I, Pos: [262, 267] cc => I, Pos: [262, 267] cc => I, Pos: [266, 278] cc => I, Pos: [266, 278] cc => I, Pos: [271, 275] cc => I, Pos: [271, 275] cc => I, Pos: [276, 284] cc => I, Pos: [276, 284] cc => I, Pos: [279, 285] cc => I, Pos: [279, 285] cc => I, Pos: [280, 286] cc => I, Pos: [280, 286] cc => I, Pos: [285, 289] cc => I, Pos: [285, 289] cc => I, Pos: [286, 294] cc => I, Pos: [286, 294] cc => I, Pos: [293, 299, 306] ccc => cc, Pos: [296, 314] cc => I, Pos: [296, 314] cc => I, Pos: [299, 309] cc => I, Pos: [299, 309] cc => I]

--------End Timer [Generate Plans]:  0.15615558624267578

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 20] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [30, 39] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [55, 74] cc => I,
 Pos: [73, 111] cc => I,
 Pos: [60, 69] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 104] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [113, 125] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [145, 153] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [156, 163, 169] ccc => cc,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [170, 180, 189] ccc => cc,
 Pos: [171, 179] cc => I,
 Pos: [168, 177] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [234, 243] cc => I,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [250, 259] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [266, 278] cc => I,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [285, 289] cc => I,
 Pos: [280, 286] cc => I,
 Pos: [293, 299, 306] ccc => cc,
 Pos: [296, 314] cc => I]
Change: 58, Saving: 59

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [10, 26] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [30, 39] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [46, 56] cc => I
Apply:  Pos: [55, 74] cc => I
Apply:  Pos: [73, 111] cc => I
Apply:  Pos: [60, 69] cc => I
Apply:  Pos: [61, 64] cc => I
Apply:  Pos: [76, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [83, 87] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 104] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [98, 101] cc => I
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [107, 116] cc => I
Apply:  Pos: [113, 125] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [127, 138] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [145, 153] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [156, 163, 169] ccc => cc
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [159, 166] cc => I
Apply:  Pos: [170, 180, 189] ccc => cc
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [168, 177] cc => I
Apply:  Pos: [175, 178] cc => I
Apply:  Pos: [182, 208] cc => I
Apply:  Pos: [191, 199] cc => I
Apply:  Pos: [198, 203] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [223, 227] cc => I
Apply:  Pos: [226, 237] cc => I
Apply:  Pos: [250, 259] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [238, 241] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [266, 278] cc => I
Apply:  Pos: [260, 270] cc => I
Apply:  Pos: [262, 267] cc => I
Apply:  Pos: [271, 275] cc => I
Apply:  Pos: [276, 284] cc => I
Apply:  Pos: [285, 289] cc => I
Apply:  Pos: [280, 286] cc => I
Apply:  Pos: [293, 299, 306] ccc => cc
Apply:  Pos: [296, 314] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [17, 11], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 9], [2, 8], [5, 12], [10, 19], [16, 2], [19, 6], [0, 1], [13, 5], [8, 14], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [17, 6], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [1, 8], [9, 5], [4, 13], [8, 14], [3, 4], [5, 12], [1, 8], [1, 15], [17, 11], [18, 19], [8, 14], [7, 10], [6, 13], [18, 17], [7, 10], [3, 13], [11, 4], [9, 5], [14, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [9, 14], [3, 9], [18, 19], [8, 14], [4, 13], [5, 12], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [6, 3], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [7, 18], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  6.374803781509399

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[101, 104]
[96, 114]
[131, 150]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[90, 93, 97]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 64, 66]
[62, 65, 75]
[93, 97, 100]
[156, 157, 172]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[101, 104]
[96, 114]
[131, 150]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7033464908599854

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [52, 64, 66] ccc => cc, Pos: [62, 65, 75] ccc => cc, Pos: [90, 93, 97] ccc => cc, Pos: [93, 97, 100] ccc => cc, Pos: [96, 114] cc => I, Pos: [96, 114] cc => I, Pos: [101, 104] cc => I, Pos: [101, 104] cc => I, Pos: [131, 150] cc => I, Pos: [131, 150] cc => I, Pos: [156, 157, 172] ccc => cc]

--------End Timer [Generate Plans]:  0.01562643051147461

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [52, 64, 66] ccc => cc,
 Pos: [62, 65, 75] ccc => cc,
 Pos: [93, 97, 100] ccc => cc,
 Pos: [96, 114] cc => I,
 Pos: [101, 104] cc => I,
 Pos: [131, 150] cc => I,
 Pos: [156, 157, 172] ccc => cc]
Change: 7, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [52, 64, 66] ccc => cc
Apply:  Pos: [62, 65, 75] ccc => cc
Apply:  Pos: [93, 97, 100] ccc => cc
Apply:  Pos: [96, 114] cc => I
Apply:  Pos: [101, 104] cc => I
Apply:  Pos: [131, 150] cc => I
Apply:  Pos: [156, 157, 172] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 2], [16, 9], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [17, 11], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [0, 1], [13, 5], [8, 14], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [1, 8], [9, 5], [4, 13], [1, 8], [3, 4], [5, 12], [8, 14], [17, 11], [18, 19], [6, 13], [18, 17], [3, 13], [11, 4], [14, 5], [9, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [6, 3], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [7, 18], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.71897292137146

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]
[88, 91]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[89, 93, 101]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 26, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]
[88, 91]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4686338901519775

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26, 29] ccc => cc, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [88, 91] cc => I, Pos: [88, 91] cc => I, Pos: [89, 93, 101] ccc => cc]

--------End Timer [Generate Plans]:  0.01563858985900879

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26, 29] ccc => cc,
 Pos: [30, 38] cc => I,
 Pos: [88, 91] cc => I,
 Pos: [89, 93, 101] ccc => cc]
Change: 4, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 26, 29] ccc => cc
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [88, 91] cc => I
Apply:  Pos: [89, 93, 101] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [17, 11], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [0, 1], [13, 5], [8, 14], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [10, 16], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 12], [4, 13], [3, 4], [5, 12], [8, 14], [17, 11], [18, 19], [6, 13], [18, 17], [3, 13], [11, 4], [14, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [6, 3], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [7, 18], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.4842724800109863

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3593082427978516

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [73, 85] cc => I, Pos: [73, 85] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [73, 85] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [73, 85] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [17, 11], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [0, 1], [13, 5], [8, 14], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [8, 14], [17, 11], [18, 19], [6, 13], [18, 17], [3, 13], [11, 4], [14, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [6, 3], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [7, 18], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.3593082427978516

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3281548023223877

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [17, 11], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [0, 1], [13, 5], [8, 14], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [8, 14], [17, 11], [18, 19], [6, 13], [18, 17], [3, 13], [11, 4], [14, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [6, 3], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [7, 18], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.3281548023223877

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [184] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 368

Reduced: 
 - size: 131 (41.59%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499594688415527

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [10, 16], [8, 14], [9, 12], [17, 6], [2, 3], [13, 5], [2, 9], [18, 19], [17, 11], [0, 1], [13, 5], [17, 11], [9, 14], [1, 8], [0, 19], [15, 2], [10, 16], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [19, 17], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [7, 10], [14, 12], [19, 17], [6, 3], [4, 13], [0, 1], [9, 14], [0, 19], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [7, 10], [0, 19], [9, 14], [0, 16], [17, 11], [7, 18], [4, 13], [1, 8], [14, 12], [4, 13], [15, 8], [16, 3], [9, 5], [19, 6], [7, 18], [0, 1], [9, 12], [8, 14], [17, 11], [7, 10], [3, 13], [19, 16], [1, 2], [14, 12], [17, 6], [7, 18], [13, 5], [1, 15], [3, 4], [19, 16], [14, 12], [15, 8], [3, 4], [10, 16], [2, 9], [13, 5], [17, 6], [9, 14], [17, 6], [10, 16], [2, 8], [1, 15], [5, 12], [4, 13], [9, 14], [10, 19], [4, 13], [16, 2], [1, 15], [17, 6], [9, 12], [19, 6], [15, 2], [0, 1], [13, 5], [8, 14], [17, 11], [9, 12], [0, 1], [19, 17], [14, 5], [15, 2], [16, 3], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [16, 3], [17, 6], [0, 1], [9, 12], [1, 2], [0, 19], [17, 11], [6, 13], [14, 5], [3, 4], [10, 16], [15, 8], [14, 12], [6, 13], [10, 19], [1, 2], [15, 8], [0, 16], [11, 4], [14, 12], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [10, 0], [9, 5], [4, 13], [8, 14], [3, 4], [18, 17], [16, 2], [5, 12], [8, 14], [1, 15], [10, 0], [3, 9], [16, 2], [17, 11], [18, 19], [1, 8], [7, 10], [6, 13], [3, 9], [18, 17], [15, 2], [8, 14], [10, 19], [18, 17], [3, 13], [11, 4], [9, 5], [0, 16], [14, 5], [15, 2], [0, 16], [18, 17], [7, 10], [6, 13], [1, 8], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [5, 12], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [5, 12], [15, 2], [19, 16], [10, 0], [9, 14], [18, 6], [4, 13], [13, 5], [16, 9], [1, 8], [18, 6], [0, 19], [11, 4], [13, 5], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [8, 14], [18, 17], [11, 4], [13, 5], [8, 14], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [1, 15], [10, 0], [9, 14], [13, 5], [17, 6], [3, 9], [18, 19], [17, 6], [8, 14], [1, 15], [10, 0], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [16, 2], [1, 8], [17, 11], [10, 0], [6, 3], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [9, 5], [15, 8], [7, 10], [0, 19], [11, 4], [3, 4], [8, 14], [7, 10], [19, 6], [0, 16], [9, 5], [17, 11], [2, 3], [6, 4], [5, 12], [17, 11], [16, 9], [10, 0], [8, 14], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [16, 9], [7, 18], [3, 13], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [7, 10], [9, 12], [16, 2], [19, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], [7, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[153, 161, 167]
[164, 170, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[156, 163, 169]
[170, 180, 189]
[203, 207, 213]
[214, 219, 234]
[257, 261, 266]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[293, 299, 306]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.21874737739563

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 26] cc => I, Pos: [10, 26] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [30, 39] cc => I, Pos: [30, 39] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [39, 55] cc => I, Pos: [39, 55] cc => I, Pos: [46, 56] cc => I, Pos: [46, 56] cc => I, Pos: [55, 74] cc => I, Pos: [55, 74] cc => I, Pos: [59, 73] cc => I, Pos: [59, 73] cc => I, Pos: [60, 69] cc => I, Pos: [60, 69] cc => I, Pos: [61, 64] cc => I, Pos: [61, 64] cc => I, Pos: [69, 80] cc => I, Pos: [69, 80] cc => I, Pos: [73, 111] cc => I, Pos: [73, 111] cc => I, Pos: [76, 84] cc => I, Pos: [76, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [83, 87] cc => I, Pos: [83, 87] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [91, 93] cc => I, Pos: [91, 93] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 104] cc => I, Pos: [93, 104] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [98, 101] cc => I, Pos: [98, 101] cc => I, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [107, 116] cc => I, Pos: [107, 116] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [127, 138] cc => I, Pos: [127, 138] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [145, 153] cc => I, Pos: [145, 153] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 161, 167] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 163, 169] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I, Pos: [164, 170, 180] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [168, 177] cc => I, Pos: [168, 177] cc => I, Pos: [170, 180, 189] ccc => cc, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [175, 178] cc => I, Pos: [175, 178] cc => I, Pos: [182, 208] cc => I, Pos: [182, 208] cc => I, Pos: [191, 199] cc => I, Pos: [191, 199] cc => I, Pos: [198, 203] cc => I, Pos: [198, 203] cc => I, Pos: [203, 207, 213] ccc => cc, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [214, 219, 234] ccc => cc, Pos: [223, 227] cc => I, Pos: [223, 227] cc => I, Pos: [226, 237] cc => I, Pos: [226, 237] cc => I, Pos: [233, 250] cc => I, Pos: [233, 250] cc => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [235, 244] cc => I, Pos: [235, 244] cc => I, Pos: [238, 241] cc => I, Pos: [238, 241] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [250, 259] cc => I, Pos: [250, 259] cc => I, Pos: [254, 258] cc => I, Pos: [254, 258] cc => I, Pos: [257, 261, 266] ccc => cc, Pos: [260, 270] cc => I, Pos: [260, 270] cc => I, Pos: [262, 267] cc => I, Pos: [262, 267] cc => I, Pos: [266, 278] cc => I, Pos: [266, 278] cc => I, Pos: [271, 275] cc => I, Pos: [271, 275] cc => I, Pos: [276, 284] cc => I, Pos: [276, 284] cc => I, Pos: [279, 285] cc => I, Pos: [279, 285] cc => I, Pos: [280, 286] cc => I, Pos: [280, 286] cc => I, Pos: [285, 289] cc => I, Pos: [285, 289] cc => I, Pos: [286, 294] cc => I, Pos: [286, 294] cc => I, Pos: [293, 299, 306] ccc => cc, Pos: [296, 314] cc => I, Pos: [296, 314] cc => I, Pos: [299, 309] cc => I, Pos: [299, 309] cc => I]

--------End Timer [Generate Plans]:  0.14061307907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 20] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [30, 39] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [55, 74] cc => I,
 Pos: [59, 73] cc => I,
 Pos: [69, 80] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 104] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [113, 125] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [145, 153] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [164, 170, 180] ccc => cc,
 Pos: [171, 179] cc => I,
 Pos: [168, 177] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [234, 243] cc => I,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [233, 250] cc => I,
 Pos: [235, 244] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [266, 278] cc => I,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [279, 285] cc => I,
 Pos: [286, 294] cc => I,
 Pos: [299, 309] cc => I,
 Pos: [296, 314] cc => I]
Change: 58, Saving: 58

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [15, 20] cc => I
Apply:  Pos: [10, 26] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [30, 39] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [46, 56] cc => I
Apply:  Pos: [55, 74] cc => I
Apply:  Pos: [59, 73] cc => I
Apply:  Pos: [69, 80] cc => I
Apply:  Pos: [61, 64] cc => I
Apply:  Pos: [76, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [83, 87] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 104] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [98, 101] cc => I
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [107, 116] cc => I
Apply:  Pos: [113, 125] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [127, 138] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [145, 153] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [159, 166] cc => I
Apply:  Pos: [164, 170, 180] ccc => cc
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [168, 177] cc => I
Apply:  Pos: [175, 178] cc => I
Apply:  Pos: [182, 208] cc => I
Apply:  Pos: [191, 199] cc => I
Apply:  Pos: [198, 203] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [223, 227] cc => I
Apply:  Pos: [226, 237] cc => I
Apply:  Pos: [233, 250] cc => I
Apply:  Pos: [235, 244] cc => I
Apply:  Pos: [238, 241] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [266, 278] cc => I
Apply:  Pos: [260, 270] cc => I
Apply:  Pos: [262, 267] cc => I
Apply:  Pos: [271, 275] cc => I
Apply:  Pos: [276, 284] cc => I
Apply:  Pos: [279, 285] cc => I
Apply:  Pos: [286, 294] cc => I
Apply:  Pos: [299, 309] cc => I
Apply:  Pos: [296, 314] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [7, 18], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [1, 15], [15, 8], [2, 9], [2, 8], [5, 12], [10, 19], [16, 2], [19, 6], [0, 1], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [17, 6], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [1, 8], [9, 5], [4, 13], [3, 4], [5, 12], [1, 15], [17, 11], [18, 19], [1, 8], [7, 19], [6, 13], [18, 17], [8, 14], [10, 19], [3, 13], [11, 4], [9, 5], [14, 5], [6, 13], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [9, 14], [3, 9], [18, 19], [8, 14], [4, 13], [5, 12], [9, 12], [13, 5], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [3, 13], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  6.359360456466675

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 98]
[95, 112]
[103, 115]
[130, 147]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[52, 63, 65]
[61, 64, 75]
[153, 154, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 98]
[95, 112]
[103, 115]
[130, 147]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6562750339508057

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [52, 63, 65] ccc => cc, Pos: [61, 64, 75] ccc => cc, Pos: [90, 98] cc => I, Pos: [90, 98] cc => I, Pos: [95, 112] cc => I, Pos: [95, 112] cc => I, Pos: [103, 115] cc => I, Pos: [103, 115] cc => I, Pos: [130, 147] cc => I, Pos: [130, 147] cc => I, Pos: [153, 154, 171] ccc => cc]

--------End Timer [Generate Plans]:  0.01560664176940918

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [52, 63, 65] ccc => cc,
 Pos: [61, 64, 75] ccc => cc,
 Pos: [90, 98] cc => I,
 Pos: [95, 112] cc => I,
 Pos: [103, 115] cc => I,
 Pos: [130, 147] cc => I,
 Pos: [153, 154, 171] ccc => cc]
Change: 7, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [52, 63, 65] ccc => cc
Apply:  Pos: [61, 64, 75] ccc => cc
Apply:  Pos: [90, 98] cc => I
Apply:  Pos: [95, 112] cc => I
Apply:  Pos: [103, 115] cc => I
Apply:  Pos: [130, 147] cc => I
Apply:  Pos: [153, 154, 171] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 2], [16, 9], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [7, 18], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 15], [1, 2], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [0, 1], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 5], [4, 13], [3, 4], [5, 12], [17, 11], [18, 19], [7, 19], [6, 13], [18, 17], [8, 14], [3, 13], [11, 4], [14, 5], [9, 5], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [3, 13], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.671881675720215

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[88, 91, 100]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 26, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.390611410140991

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26, 29] ccc => cc, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [88, 91, 100] ccc => cc]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26, 29] ccc => cc,
 Pos: [30, 38] cc => I,
 Pos: [88, 91, 100] ccc => cc]
Change: 3, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 26, 29] ccc => cc
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [88, 91, 100] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [7, 18], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [0, 1], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [10, 16], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 12], [4, 13], [3, 4], [5, 12], [17, 11], [7, 19], [18, 19], [6, 13], [18, 17], [8, 14], [3, 13], [11, 4], [14, 5], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 9], [3, 4], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [3, 13], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.406235694885254

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.296952486038208

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [73, 85] cc => I, Pos: [73, 85] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [73, 85] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [73, 85] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [7, 18], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 15], [1, 2], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [0, 1], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [17, 11], [18, 19], [7, 19], [6, 13], [18, 17], [8, 14], [3, 13], [11, 4], [14, 5], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [3, 13], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.296952486038208

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2660164833068848

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [7, 18], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [0, 1], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [17, 11], [7, 19], [18, 19], [6, 13], [18, 17], [8, 14], [3, 13], [11, 4], [14, 5], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 9], [3, 4], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [3, 13], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [15, 8], [9, 12], [16, 2], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.2660164833068848

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [183] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 132 (41.90%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12468409538269043

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [10, 16], [8, 14], [9, 12], [17, 6], [2, 3], [13, 5], [2, 9], [18, 19], [17, 11], [0, 1], [13, 5], [17, 11], [9, 14], [1, 8], [0, 19], [15, 2], [10, 16], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [19, 17], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [7, 10], [14, 12], [19, 17], [6, 3], [4, 13], [0, 1], [9, 14], [0, 19], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [7, 10], [0, 19], [9, 14], [0, 16], [17, 11], [7, 18], [4, 13], [1, 8], [14, 12], [4, 13], [15, 8], [16, 3], [9, 5], [19, 6], [7, 18], [0, 1], [9, 12], [8, 14], [17, 11], [7, 10], [3, 13], [19, 16], [1, 2], [14, 12], [17, 6], [7, 18], [13, 5], [1, 15], [3, 4], [19, 16], [14, 12], [15, 8], [3, 4], [10, 16], [2, 9], [13, 5], [17, 6], [9, 14], [17, 6], [10, 16], [2, 8], [1, 15], [5, 12], [4, 13], [9, 14], [10, 19], [4, 13], [16, 2], [1, 15], [17, 6], [9, 12], [19, 6], [15, 2], [0, 1], [13, 5], [8, 14], [17, 11], [9, 12], [0, 1], [19, 17], [14, 5], [15, 2], [16, 3], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [16, 3], [17, 6], [0, 1], [9, 12], [1, 2], [0, 19], [17, 11], [6, 13], [14, 5], [3, 4], [10, 16], [15, 8], [14, 12], [6, 13], [10, 19], [1, 2], [15, 8], [0, 16], [11, 4], [14, 12], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [10, 0], [9, 5], [4, 13], [8, 14], [3, 4], [18, 17], [16, 2], [5, 12], [8, 14], [1, 15], [10, 0], [3, 9], [16, 2], [17, 11], [18, 19], [1, 8], [7, 10], [6, 13], [3, 9], [18, 17], [15, 2], [8, 14], [10, 19], [18, 17], [3, 13], [11, 4], [9, 5], [0, 16], [14, 5], [15, 2], [0, 16], [18, 17], [7, 10], [6, 13], [1, 8], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [5, 12], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [5, 12], [15, 2], [19, 16], [10, 0], [9, 14], [18, 6], [4, 13], [13, 5], [16, 9], [1, 8], [18, 6], [0, 19], [11, 4], [13, 5], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [8, 14], [18, 17], [11, 4], [13, 5], [8, 14], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [1, 15], [10, 0], [9, 14], [13, 5], [17, 6], [3, 9], [18, 19], [17, 6], [8, 14], [1, 15], [10, 0], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [16, 2], [1, 8], [17, 11], [10, 0], [6, 3], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [9, 5], [15, 8], [7, 10], [0, 19], [11, 4], [3, 4], [8, 14], [7, 10], [19, 6], [0, 16], [9, 5], [17, 11], [2, 3], [6, 4], [5, 12], [17, 11], [16, 9], [10, 0], [8, 14], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [16, 9], [7, 18], [3, 13], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [7, 10], [9, 12], [16, 2], [19, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], [7, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[153, 161, 167]
[164, 170, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[156, 163, 169]
[170, 180, 189]
[203, 207, 213]
[214, 219, 234]
[257, 261, 266]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[293, 299, 306]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.218780994415283

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 26] cc => I, Pos: [10, 26] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [30, 39] cc => I, Pos: [30, 39] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [39, 55] cc => I, Pos: [39, 55] cc => I, Pos: [46, 56] cc => I, Pos: [46, 56] cc => I, Pos: [55, 74] cc => I, Pos: [55, 74] cc => I, Pos: [59, 73] cc => I, Pos: [59, 73] cc => I, Pos: [60, 69] cc => I, Pos: [60, 69] cc => I, Pos: [61, 64] cc => I, Pos: [61, 64] cc => I, Pos: [69, 80] cc => I, Pos: [69, 80] cc => I, Pos: [73, 111] cc => I, Pos: [73, 111] cc => I, Pos: [76, 84] cc => I, Pos: [76, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [83, 87] cc => I, Pos: [83, 87] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [91, 93] cc => I, Pos: [91, 93] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 104] cc => I, Pos: [93, 104] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [98, 101] cc => I, Pos: [98, 101] cc => I, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [107, 116] cc => I, Pos: [107, 116] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [127, 138] cc => I, Pos: [127, 138] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [145, 153] cc => I, Pos: [145, 153] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 161, 167] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 163, 169] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I, Pos: [164, 170, 180] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [168, 177] cc => I, Pos: [168, 177] cc => I, Pos: [170, 180, 189] ccc => cc, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [175, 178] cc => I, Pos: [175, 178] cc => I, Pos: [182, 208] cc => I, Pos: [182, 208] cc => I, Pos: [191, 199] cc => I, Pos: [191, 199] cc => I, Pos: [198, 203] cc => I, Pos: [198, 203] cc => I, Pos: [203, 207, 213] ccc => cc, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [214, 219, 234] ccc => cc, Pos: [223, 227] cc => I, Pos: [223, 227] cc => I, Pos: [226, 237] cc => I, Pos: [226, 237] cc => I, Pos: [233, 250] cc => I, Pos: [233, 250] cc => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [235, 244] cc => I, Pos: [235, 244] cc => I, Pos: [238, 241] cc => I, Pos: [238, 241] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [250, 259] cc => I, Pos: [250, 259] cc => I, Pos: [254, 258] cc => I, Pos: [254, 258] cc => I, Pos: [257, 261, 266] ccc => cc, Pos: [260, 270] cc => I, Pos: [260, 270] cc => I, Pos: [262, 267] cc => I, Pos: [262, 267] cc => I, Pos: [266, 278] cc => I, Pos: [266, 278] cc => I, Pos: [271, 275] cc => I, Pos: [271, 275] cc => I, Pos: [276, 284] cc => I, Pos: [276, 284] cc => I, Pos: [279, 285] cc => I, Pos: [279, 285] cc => I, Pos: [280, 286] cc => I, Pos: [280, 286] cc => I, Pos: [285, 289] cc => I, Pos: [285, 289] cc => I, Pos: [286, 294] cc => I, Pos: [286, 294] cc => I, Pos: [293, 299, 306] ccc => cc, Pos: [296, 314] cc => I, Pos: [296, 314] cc => I, Pos: [299, 309] cc => I, Pos: [299, 309] cc => I]

--------End Timer [Generate Plans]:  0.1404399871826172

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 15] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [39, 55] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [59, 73] cc => I,
 Pos: [60, 69] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [91, 93] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [113, 125] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [153, 161, 167] ccc => cc,
 Pos: [148, 158] cc => I,
 Pos: [156, 163, 169] ccc => cc,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [170, 180, 189] ccc => cc,
 Pos: [168, 177] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [214, 219, 234] ccc => cc,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [250, 259] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [254, 258] cc => I,
 Pos: [266, 278] cc => I,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [279, 285] cc => I,
 Pos: [280, 286] cc => I,
 Pos: [293, 299, 306] ccc => cc,
 Pos: [296, 314] cc => I]
Change: 56, Saving: 57

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 26] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [39, 55] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [46, 56] cc => I
Apply:  Pos: [59, 73] cc => I
Apply:  Pos: [60, 69] cc => I
Apply:  Pos: [61, 64] cc => I
Apply:  Pos: [76, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [91, 93] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [83, 87] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [98, 101] cc => I
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [107, 116] cc => I
Apply:  Pos: [113, 125] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [127, 138] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [153, 161, 167] ccc => cc
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [156, 163, 169] ccc => cc
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [159, 166] cc => I
Apply:  Pos: [170, 180, 189] ccc => cc
Apply:  Pos: [168, 177] cc => I
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [175, 178] cc => I
Apply:  Pos: [182, 208] cc => I
Apply:  Pos: [191, 199] cc => I
Apply:  Pos: [198, 203] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [214, 219, 234] ccc => cc
Apply:  Pos: [223, 227] cc => I
Apply:  Pos: [226, 237] cc => I
Apply:  Pos: [250, 259] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [238, 241] cc => I
Apply:  Pos: [254, 258] cc => I
Apply:  Pos: [266, 278] cc => I
Apply:  Pos: [260, 270] cc => I
Apply:  Pos: [262, 267] cc => I
Apply:  Pos: [271, 275] cc => I
Apply:  Pos: [276, 284] cc => I
Apply:  Pos: [279, 285] cc => I
Apply:  Pos: [280, 286] cc => I
Apply:  Pos: [293, 299, 306] ccc => cc
Apply:  Pos: [296, 314] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [7, 10], [3, 13], [1, 2], [17, 6], [7, 18], [1, 15], [15, 8], [2, 9], [2, 8], [5, 12], [10, 19], [16, 2], [17, 6], [19, 6], [0, 1], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [17, 6], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [9, 5], [4, 13], [8, 14], [3, 4], [18, 11], [5, 12], [1, 8], [1, 15], [17, 11], [18, 19], [8, 14], [7, 10], [6, 13], [7, 10], [3, 13], [11, 4], [9, 5], [14, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [9, 14], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [1, 15], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [9, 14], [3, 9], [18, 19], [8, 14], [1, 15], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  6.3592209815979

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 24]
[24, 56]
[107, 109]
[102, 119]
[136, 155]
[142, 159]
[145, 161]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[95, 98, 103]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 67, 79]
[98, 103, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 24]
[24, 56]
[107, 109]
[102, 119]
[136, 155]
[142, 159]
[145, 161]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.8593626022338867

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 24] cc => I, Pos: [6, 24] cc => I, Pos: [24, 56] cc => I, Pos: [24, 56] cc => I, Pos: [64, 67, 79] ccc => cc, Pos: [95, 98, 103] ccc => cc, Pos: [98, 103, 106] ccc => cc, Pos: [102, 119] cc => I, Pos: [102, 119] cc => I, Pos: [107, 109] cc => I, Pos: [107, 109] cc => I, Pos: [136, 155] cc => I, Pos: [136, 155] cc => I, Pos: [142, 159] cc => I, Pos: [142, 159] cc => I, Pos: [145, 161] cc => I, Pos: [145, 161] cc => I]

--------End Timer [Generate Plans]:  0.015610694885253906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 24] cc => I,
 Pos: [64, 67, 79] ccc => cc,
 Pos: [98, 103, 106] ccc => cc,
 Pos: [102, 119] cc => I,
 Pos: [107, 109] cc => I,
 Pos: [136, 155] cc => I,
 Pos: [142, 159] cc => I,
 Pos: [145, 161] cc => I]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 24] cc => I
Apply:  Pos: [64, 67, 79] ccc => cc
Apply:  Pos: [98, 103, 106] ccc => cc
Apply:  Pos: [102, 119] cc => I
Apply:  Pos: [107, 109] cc => I
Apply:  Pos: [136, 155] cc => I
Apply:  Pos: [142, 159] cc => I
Apply:  Pos: [145, 161] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 2], [16, 9], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [7, 10], [3, 13], [1, 2], [17, 6], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [17, 6], [0, 1], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [9, 5], [4, 13], [1, 8], [3, 4], [18, 11], [5, 12], [8, 14], [17, 11], [18, 19], [6, 13], [3, 13], [11, 4], [14, 5], [9, 5], [10, 19], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.8749732971191406

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[29, 37]
[57, 66]
[92, 95]
[103, 108]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[93, 98, 105]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[19, 25, 28]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[29, 37]
[57, 66]
[92, 95]
[103, 108]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5154268741607666

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 25, 28] ccc => cc, Pos: [29, 37] cc => I, Pos: [29, 37] cc => I, Pos: [57, 66] cc => I, Pos: [57, 66] cc => I, Pos: [92, 95] cc => I, Pos: [92, 95] cc => I, Pos: [93, 98, 105] ccc => cc, Pos: [103, 108] cc => I, Pos: [103, 108] cc => I]

--------End Timer [Generate Plans]:  0.015619516372680664

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 25, 28] ccc => cc,
 Pos: [29, 37] cc => I,
 Pos: [57, 66] cc => I,
 Pos: [92, 95] cc => I,
 Pos: [93, 98, 105] ccc => cc,
 Pos: [103, 108] cc => I]
Change: 6, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 25, 28] ccc => cc
Apply:  Pos: [29, 37] cc => I
Apply:  Pos: [57, 66] cc => I
Apply:  Pos: [92, 95] cc => I
Apply:  Pos: [93, 98, 105] ccc => cc
Apply:  Pos: [103, 108] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [7, 10], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [0, 1], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [10, 16], [0, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [9, 12], [4, 13], [3, 4], [18, 11], [5, 12], [8, 14], [17, 11], [18, 19], [3, 13], [11, 4], [14, 5], [10, 19], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.5310463905334473

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 87]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 87]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.328071117401123

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [74, 87] cc => I, Pos: [74, 87] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [74, 87] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [74, 87] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [7, 10], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [0, 1], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [4, 13], [3, 4], [18, 11], [5, 12], [8, 14], [17, 11], [18, 19], [3, 13], [11, 4], [14, 5], [10, 19], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [15, 8], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.328071117401123

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2658495903015137

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [7, 10], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [10, 19], [2, 9], [19, 6], [0, 1], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [18, 17], [15, 2], [4, 13], [3, 4], [18, 11], [5, 12], [8, 14], [17, 11], [18, 19], [3, 13], [11, 4], [14, 5], [10, 19], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [10, 0], [3, 9], [18, 19], [8, 14], [4, 13], [6, 3], [9, 12], [13, 5], [1, 8], [17, 11], [18, 17], [0, 1], [8, 14], [15, 8], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.2658495903015137

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 36 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 133 (42.22%)
 - depth: 9 (20.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12479972839355469

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [13, 5], [0, 19], [7, 18], [10, 16], [8, 14], [9, 12], [17, 6], [2, 3], [13, 5], [2, 9], [18, 19], [17, 11], [0, 1], [13, 5], [17, 11], [9, 14], [1, 8], [0, 19], [15, 2], [10, 16], [6, 3], [7, 18], [9, 5], [7, 10], [18, 6], [19, 17], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [7, 10], [14, 12], [19, 17], [6, 3], [4, 13], [0, 1], [9, 14], [0, 19], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [7, 10], [0, 19], [9, 14], [0, 16], [17, 11], [7, 18], [4, 13], [1, 8], [14, 12], [4, 13], [15, 8], [16, 3], [9, 5], [19, 6], [7, 18], [0, 1], [9, 12], [8, 14], [17, 11], [7, 10], [3, 13], [19, 16], [1, 2], [14, 12], [17, 6], [7, 18], [13, 5], [1, 15], [3, 4], [19, 16], [14, 12], [15, 8], [3, 4], [10, 16], [2, 9], [13, 5], [17, 6], [9, 14], [17, 6], [10, 16], [2, 8], [1, 15], [5, 12], [4, 13], [9, 14], [10, 19], [4, 13], [16, 2], [1, 15], [17, 6], [9, 12], [19, 6], [15, 2], [0, 1], [13, 5], [8, 14], [17, 11], [9, 12], [0, 1], [19, 17], [14, 5], [15, 2], [16, 3], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [16, 3], [17, 6], [0, 1], [9, 12], [1, 2], [0, 19], [17, 11], [6, 13], [14, 5], [3, 4], [10, 16], [15, 8], [14, 12], [6, 13], [10, 19], [1, 2], [15, 8], [0, 16], [11, 4], [14, 12], [19, 6], [16, 3], [18, 17], [15, 2], [1, 8], [10, 0], [9, 5], [4, 13], [8, 14], [3, 4], [18, 17], [16, 2], [5, 12], [8, 14], [1, 15], [10, 0], [3, 9], [16, 2], [17, 11], [18, 19], [1, 8], [7, 10], [6, 13], [3, 9], [18, 17], [15, 2], [8, 14], [10, 19], [18, 17], [3, 13], [11, 4], [9, 5], [0, 16], [14, 5], [15, 2], [0, 16], [18, 17], [7, 10], [6, 13], [1, 8], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [5, 12], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [9, 14], [5, 12], [15, 2], [19, 16], [10, 0], [9, 14], [18, 6], [4, 13], [13, 5], [16, 9], [1, 8], [18, 6], [0, 19], [11, 4], [13, 5], [9, 14], [1, 15], [3, 4], [18, 19], [2, 8], [4, 13], [0, 1], [2, 3], [19, 6], [5, 12], [8, 14], [18, 17], [11, 4], [13, 5], [8, 14], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [16, 2], [1, 15], [10, 0], [9, 14], [13, 5], [17, 6], [3, 9], [18, 19], [17, 6], [8, 14], [1, 15], [10, 0], [4, 13], [5, 12], [6, 3], [9, 12], [13, 5], [16, 2], [1, 8], [17, 11], [10, 0], [6, 3], [18, 17], [0, 1], [8, 14], [6, 3], [16, 2], [9, 5], [15, 8], [7, 10], [0, 19], [11, 4], [3, 4], [8, 14], [7, 10], [19, 6], [0, 16], [9, 5], [17, 11], [2, 3], [6, 4], [5, 12], [17, 11], [16, 9], [10, 0], [8, 14], [7, 18], [3, 13], [14, 12], [15, 2], [10, 19], [16, 9], [7, 18], [3, 13], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [17, 6], [3, 13], [15, 8], [7, 10], [9, 12], [16, 2], [19, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [19, 17], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], [7, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[153, 161, 167]
[164, 170, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[156, 163, 169]
[170, 180, 189]
[203, 207, 213]
[214, 219, 234]
[257, 261, 266]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[293, 299, 306]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 15]
[15, 20]
[18, 21]
[10, 26]
[30, 39]
[32, 41]
[39, 55]
[46, 56]
[61, 64]
[60, 69]
[59, 73]
[55, 74]
[69, 80]
[76, 84]
[78, 85]
[83, 87]
[81, 90]
[79, 91]
[91, 93]
[88, 94]
[92, 99]
[98, 101]
[96, 103]
[93, 104]
[73, 111]
[105, 112]
[108, 113]
[107, 116]
[117, 123]
[113, 125]
[130, 136]
[127, 138]
[134, 139]
[135, 142]
[145, 153]
[151, 156]
[148, 158]
[154, 160]
[159, 166]
[167, 171]
[168, 177]
[175, 178]
[171, 179]
[191, 199]
[198, 203]
[182, 208]
[204, 209]
[206, 212]
[223, 227]
[226, 237]
[238, 241]
[234, 243]
[235, 244]
[233, 250]
[244, 253]
[247, 254]
[254, 258]
[250, 259]
[262, 267]
[260, 270]
[271, 275]
[266, 278]
[276, 284]
[279, 285]
[280, 286]
[285, 289]
[286, 294]
[299, 309]
[296, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.156162738800049

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 15] cc => I, Pos: [7, 15] cc => I, Pos: [10, 26] cc => I, Pos: [10, 26] cc => I, Pos: [15, 20] cc => I, Pos: [15, 20] cc => I, Pos: [18, 21] cc => I, Pos: [18, 21] cc => I, Pos: [30, 39] cc => I, Pos: [30, 39] cc => I, Pos: [32, 41] cc => I, Pos: [32, 41] cc => I, Pos: [39, 55] cc => I, Pos: [39, 55] cc => I, Pos: [46, 56] cc => I, Pos: [46, 56] cc => I, Pos: [55, 74] cc => I, Pos: [55, 74] cc => I, Pos: [59, 73] cc => I, Pos: [59, 73] cc => I, Pos: [60, 69] cc => I, Pos: [60, 69] cc => I, Pos: [61, 64] cc => I, Pos: [61, 64] cc => I, Pos: [69, 80] cc => I, Pos: [69, 80] cc => I, Pos: [73, 111] cc => I, Pos: [73, 111] cc => I, Pos: [76, 84] cc => I, Pos: [76, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [79, 91] cc => I, Pos: [79, 91] cc => I, Pos: [81, 90] cc => I, Pos: [81, 90] cc => I, Pos: [83, 87] cc => I, Pos: [83, 87] cc => I, Pos: [88, 94] cc => I, Pos: [88, 94] cc => I, Pos: [91, 93] cc => I, Pos: [91, 93] cc => I, Pos: [92, 99] cc => I, Pos: [92, 99] cc => I, Pos: [93, 104] cc => I, Pos: [93, 104] cc => I, Pos: [96, 103] cc => I, Pos: [96, 103] cc => I, Pos: [98, 101] cc => I, Pos: [98, 101] cc => I, Pos: [105, 112] cc => I, Pos: [105, 112] cc => I, Pos: [107, 116] cc => I, Pos: [107, 116] cc => I, Pos: [108, 113] cc => I, Pos: [108, 113] cc => I, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [117, 123] cc => I, Pos: [117, 123] cc => I, Pos: [127, 138] cc => I, Pos: [127, 138] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 142] cc => I, Pos: [135, 142] cc => I, Pos: [145, 153] cc => I, Pos: [145, 153] cc => I, Pos: [148, 158] cc => I, Pos: [148, 158] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [153, 161, 167] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [156, 163, 169] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I, Pos: [164, 170, 180] ccc => cc, Pos: [167, 171] cc => I, Pos: [167, 171] cc => I, Pos: [168, 177] cc => I, Pos: [168, 177] cc => I, Pos: [170, 180, 189] ccc => cc, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [175, 178] cc => I, Pos: [175, 178] cc => I, Pos: [182, 208] cc => I, Pos: [182, 208] cc => I, Pos: [191, 199] cc => I, Pos: [191, 199] cc => I, Pos: [198, 203] cc => I, Pos: [198, 203] cc => I, Pos: [203, 207, 213] ccc => cc, Pos: [204, 209] cc => I, Pos: [204, 209] cc => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [214, 219, 234] ccc => cc, Pos: [223, 227] cc => I, Pos: [223, 227] cc => I, Pos: [226, 237] cc => I, Pos: [226, 237] cc => I, Pos: [233, 250] cc => I, Pos: [233, 250] cc => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [235, 244] cc => I, Pos: [235, 244] cc => I, Pos: [238, 241] cc => I, Pos: [238, 241] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [247, 254] cc => I, Pos: [247, 254] cc => I, Pos: [250, 259] cc => I, Pos: [250, 259] cc => I, Pos: [254, 258] cc => I, Pos: [254, 258] cc => I, Pos: [257, 261, 266] ccc => cc, Pos: [260, 270] cc => I, Pos: [260, 270] cc => I, Pos: [262, 267] cc => I, Pos: [262, 267] cc => I, Pos: [266, 278] cc => I, Pos: [266, 278] cc => I, Pos: [271, 275] cc => I, Pos: [271, 275] cc => I, Pos: [276, 284] cc => I, Pos: [276, 284] cc => I, Pos: [279, 285] cc => I, Pos: [279, 285] cc => I, Pos: [280, 286] cc => I, Pos: [280, 286] cc => I, Pos: [285, 289] cc => I, Pos: [285, 289] cc => I, Pos: [286, 294] cc => I, Pos: [286, 294] cc => I, Pos: [293, 299, 306] ccc => cc, Pos: [296, 314] cc => I, Pos: [296, 314] cc => I, Pos: [299, 309] cc => I, Pos: [299, 309] cc => I]

Plan: 1
[Pos: [7, 15] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [30, 39] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [55, 74] cc => I,
 Pos: [59, 73] cc => I,
 Pos: [60, 69] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 104] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [145, 153] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [164, 170, 180] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [168, 177] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [214, 219, 234] ccc => cc,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [233, 250] cc => I,
 Pos: [235, 244] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [257, 261, 266] ccc => cc,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [279, 285] cc => I,
 Pos: [280, 286] cc => I,
 Pos: [293, 299, 306] ccc => cc,
 Pos: [296, 314] cc => I]
Change: 58, Saving: 59

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.14061546325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 15] cc => I,
 Pos: [10, 26] cc => I,
 Pos: [18, 21] cc => I,
 Pos: [30, 39] cc => I,
 Pos: [32, 41] cc => I,
 Pos: [46, 56] cc => I,
 Pos: [55, 74] cc => I,
 Pos: [59, 73] cc => I,
 Pos: [60, 69] cc => I,
 Pos: [61, 64] cc => I,
 Pos: [76, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [79, 91] cc => I,
 Pos: [81, 90] cc => I,
 Pos: [83, 87] cc => I,
 Pos: [88, 94] cc => I,
 Pos: [92, 99] cc => I,
 Pos: [93, 104] cc => I,
 Pos: [96, 103] cc => I,
 Pos: [98, 101] cc => I,
 Pos: [105, 112] cc => I,
 Pos: [107, 116] cc => I,
 Pos: [108, 113] cc => I,
 Pos: [117, 123] cc => I,
 Pos: [127, 138] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 142] cc => I,
 Pos: [145, 153] cc => I,
 Pos: [148, 158] cc => I,
 Pos: [151, 156] cc => I,
 Pos: [154, 160] cc => I,
 Pos: [159, 166] cc => I,
 Pos: [164, 170, 180] ccc => cc,
 Pos: [167, 171] cc => I,
 Pos: [168, 177] cc => I,
 Pos: [175, 178] cc => I,
 Pos: [182, 208] cc => I,
 Pos: [191, 199] cc => I,
 Pos: [198, 203] cc => I,
 Pos: [204, 209] cc => I,
 Pos: [206, 212] cc => I,
 Pos: [214, 219, 234] ccc => cc,
 Pos: [223, 227] cc => I,
 Pos: [226, 237] cc => I,
 Pos: [233, 250] cc => I,
 Pos: [235, 244] cc => I,
 Pos: [238, 241] cc => I,
 Pos: [247, 254] cc => I,
 Pos: [257, 261, 266] ccc => cc,
 Pos: [260, 270] cc => I,
 Pos: [262, 267] cc => I,
 Pos: [271, 275] cc => I,
 Pos: [276, 284] cc => I,
 Pos: [279, 285] cc => I,
 Pos: [280, 286] cc => I,
 Pos: [293, 299, 306] ccc => cc,
 Pos: [296, 314] cc => I]
Change: 58, Saving: 59

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [7, 15] cc => I
Apply:  Pos: [10, 26] cc => I
Apply:  Pos: [18, 21] cc => I
Apply:  Pos: [30, 39] cc => I
Apply:  Pos: [32, 41] cc => I
Apply:  Pos: [46, 56] cc => I
Apply:  Pos: [55, 74] cc => I
Apply:  Pos: [59, 73] cc => I
Apply:  Pos: [60, 69] cc => I
Apply:  Pos: [61, 64] cc => I
Apply:  Pos: [76, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [79, 91] cc => I
Apply:  Pos: [81, 90] cc => I
Apply:  Pos: [83, 87] cc => I
Apply:  Pos: [88, 94] cc => I
Apply:  Pos: [92, 99] cc => I
Apply:  Pos: [93, 104] cc => I
Apply:  Pos: [96, 103] cc => I
Apply:  Pos: [98, 101] cc => I
Apply:  Pos: [105, 112] cc => I
Apply:  Pos: [107, 116] cc => I
Apply:  Pos: [108, 113] cc => I
Apply:  Pos: [117, 123] cc => I
Apply:  Pos: [127, 138] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 142] cc => I
Apply:  Pos: [145, 153] cc => I
Apply:  Pos: [148, 158] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [154, 160] cc => I
Apply:  Pos: [159, 166] cc => I
Apply:  Pos: [164, 170, 180] ccc => cc
Apply:  Pos: [167, 171] cc => I
Apply:  Pos: [168, 177] cc => I
Apply:  Pos: [175, 178] cc => I
Apply:  Pos: [182, 208] cc => I
Apply:  Pos: [191, 199] cc => I
Apply:  Pos: [198, 203] cc => I
Apply:  Pos: [204, 209] cc => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [214, 219, 234] ccc => cc
Apply:  Pos: [223, 227] cc => I
Apply:  Pos: [226, 237] cc => I
Apply:  Pos: [233, 250] cc => I
Apply:  Pos: [235, 244] cc => I
Apply:  Pos: [238, 241] cc => I
Apply:  Pos: [247, 254] cc => I
Apply:  Pos: [257, 261, 266] ccc => cc
Apply:  Pos: [260, 270] cc => I
Apply:  Pos: [262, 267] cc => I
Apply:  Pos: [271, 275] cc => I
Apply:  Pos: [276, 284] cc => I
Apply:  Pos: [279, 285] cc => I
Apply:  Pos: [280, 286] cc => I
Apply:  Pos: [293, 299, 306] ccc => cc
Apply:  Pos: [296, 314] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 9], [16, 2], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [19, 6], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 9], [2, 8], [5, 12], [10, 19], [16, 2], [19, 6], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [2, 9], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [1, 8], [9, 5], [4, 13], [3, 4], [5, 12], [1, 15], [17, 11], [18, 19], [1, 8], [7, 19], [6, 13], [8, 14], [10, 19], [3, 13], [11, 4], [9, 5], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [1, 15], [14, 12], [17, 6], [10, 19], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [9, 14], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [1, 15], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [9, 14], [3, 9], [18, 19], [8, 14], [1, 15], [4, 13], [5, 12], [9, 12], [13, 5], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [8, 14], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [5, 12], [10, 0], [8, 14], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  6.296778202056885

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 98]
[95, 112]
[102, 115]
[130, 147]
[136, 151]
[164, 174]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[51, 63, 65]
[61, 64, 74]
[154, 155, 172]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[90, 98]
[95, 112]
[102, 115]
[130, 147]
[136, 151]
[164, 174]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6875131130218506

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [51, 63, 65] ccc => cc, Pos: [61, 64, 74] ccc => cc, Pos: [90, 98] cc => I, Pos: [90, 98] cc => I, Pos: [95, 112] cc => I, Pos: [95, 112] cc => I, Pos: [102, 115] cc => I, Pos: [102, 115] cc => I, Pos: [130, 147] cc => I, Pos: [130, 147] cc => I, Pos: [136, 151] cc => I, Pos: [136, 151] cc => I, Pos: [154, 155, 172] ccc => cc, Pos: [164, 174] cc => I, Pos: [164, 174] cc => I]

Plan: 1
[Pos: [51, 63, 65] ccc => cc,
 Pos: [61, 64, 74] ccc => cc,
 Pos: [90, 98] cc => I,
 Pos: [95, 112] cc => I,
 Pos: [102, 115] cc => I,
 Pos: [130, 147] cc => I,
 Pos: [136, 151] cc => I,
 Pos: [154, 155, 172] ccc => cc,
 Pos: [164, 174] cc => I]
Change: 9, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031243085861206055

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [51, 63, 65] ccc => cc,
 Pos: [61, 64, 74] ccc => cc,
 Pos: [90, 98] cc => I,
 Pos: [95, 112] cc => I,
 Pos: [102, 115] cc => I,
 Pos: [130, 147] cc => I,
 Pos: [136, 151] cc => I,
 Pos: [154, 155, 172] ccc => cc,
 Pos: [164, 174] cc => I]
Change: 9, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [51, 63, 65] ccc => cc
Apply:  Pos: [61, 64, 74] ccc => cc
Apply:  Pos: [90, 98] cc => I
Apply:  Pos: [95, 112] cc => I
Apply:  Pos: [102, 115] cc => I
Apply:  Pos: [130, 147] cc => I
Apply:  Pos: [136, 151] cc => I
Apply:  Pos: [154, 155, 172] ccc => cc
Apply:  Pos: [164, 174] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [15, 2], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [1, 15], [11, 4], [16, 2], [16, 9], [15, 2], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [16, 2], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 5], [4, 13], [3, 4], [5, 12], [17, 11], [18, 19], [7, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [9, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.7187561988830566

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[88, 91, 99]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[20, 26, 29]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 38]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.35937237739563

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26, 29] ccc => cc, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [88, 91, 99] ccc => cc]

Plan: 1
[Pos: [20, 26, 29] ccc => cc,
 Pos: [30, 38] cc => I,
 Pos: [88, 91, 99] ccc => cc]
Change: 3, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26, 29] ccc => cc,
 Pos: [30, 38] cc => I,
 Pos: [88, 91, 99] ccc => cc]
Change: 3, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 26, 29] ccc => cc
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [88, 91, 99] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [9, 12], [0, 19], [17, 11], [14, 5], [3, 4], [10, 19], [10, 16], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [9, 12], [4, 13], [3, 4], [5, 12], [17, 11], [7, 19], [18, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 9], [3, 4], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.35937237739563

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[73, 85]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.281278371810913

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [73, 85] cc => I, Pos: [73, 85] cc => I]

Plan: 1
[Pos: [73, 85] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [73, 85] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [73, 85] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 9], [2, 3], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [15, 8], [2, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 1], [0, 19], [17, 11], [14, 5], [3, 4], [10, 16], [10, 19], [0, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [17, 11], [18, 19], [7, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 4], [3, 9], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [0, 19], [3, 4], [11, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [0, 19], [10, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.281278371810913

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2343764305114746

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[6, 13], [19, 16], [5, 12], [1, 15], [3, 9], [2, 8], [7, 10], [0, 19], [7, 18], [8, 14], [9, 12], [17, 6], [2, 3], [2, 9], [18, 19], [0, 1], [13, 5], [9, 14], [1, 8], [0, 19], [1, 15], [6, 3], [7, 18], [9, 5], [18, 6], [3, 13], [15, 2], [11, 4], [16, 9], [14, 12], [6, 3], [4, 13], [0, 1], [9, 14], [15, 8], [5, 12], [3, 13], [18, 17], [8, 14], [16, 9], [6, 3], [9, 14], [0, 16], [1, 8], [14, 12], [15, 8], [16, 3], [9, 5], [10, 19], [0, 1], [9, 12], [8, 14], [3, 13], [1, 2], [7, 18], [1, 15], [2, 8], [15, 8], [16, 2], [5, 12], [19, 6], [2, 9], [13, 5], [8, 14], [17, 11], [19, 17], [14, 5], [7, 10], [6, 4], [14, 12], [13, 5], [17, 6], [0, 19], [0, 1], [17, 11], [14, 5], [3, 4], [10, 19], [0, 16], [10, 16], [11, 4], [19, 6], [16, 3], [15, 2], [4, 13], [3, 4], [5, 12], [17, 11], [7, 19], [18, 19], [6, 13], [8, 14], [3, 13], [11, 4], [14, 5], [18, 17], [6, 13], [9, 12], [13, 5], [3, 4], [14, 12], [17, 6], [2, 9], [0, 19], [17, 11], [7, 10], [3, 13], [1, 2], [6, 4], [15, 2], [19, 16], [10, 0], [4, 13], [16, 9], [0, 19], [11, 4], [0, 1], [3, 4], [18, 19], [2, 8], [4, 13], [2, 3], [19, 6], [5, 12], [18, 17], [11, 4], [10, 19], [0, 16], [6, 3], [7, 18], [3, 9], [3, 4], [18, 19], [8, 14], [4, 13], [9, 12], [13, 5], [5, 12], [1, 8], [17, 11], [10, 0], [18, 17], [0, 1], [15, 8], [6, 3], [16, 2], [0, 19], [11, 4], [3, 4], [19, 6], [0, 16], [2, 3], [6, 4], [10, 0], [14, 12], [15, 2], [10, 19], [0, 19], [1, 15], [7, 18], [5, 12], [9, 14], [10, 16], [19, 17], [3, 13], [15, 8], [9, 12], [16, 2], [17, 6], [11, 4], [14, 5], [3, 9], [4, 13], [5, 12], [1, 8], [15, 2], [9, 12], [19, 6], [8, 14], [1, 2], [16, 3], [17, 11], ----End Timer [Execute Mapping]:  3.2343764305114746

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 133 (42.22%)
 - depth: 7 (15.56%)

