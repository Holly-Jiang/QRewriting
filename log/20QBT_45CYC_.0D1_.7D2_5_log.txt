----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14134001731872559

[10, 0], [1, 19], [9, 4], [3, 16], [12, 13], [8, 14], [6, 11], [15, 18], [17, 5], [10, 0], [1, 19], [15, 8], [6, 11], [16, 2], [17, 5], [4, 7], [12, 13], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [17, 3], [0, 1], [12, 13], [5, 6], [16, 2], [15, 8], [0, 7], [6, 15], [17, 3], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 0], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [8, 14], [17, 3], [13, 0], [8, 14], [6, 15], [17, 5], [7, 1], [11, 18], [13, 4], [6, 15], [3, 16], [10, 8], [7, 1], [11, 18], [4, 7], [10, 8], [12, 13], [5, 6], [1, 19], [2, 15], [18, 14], [3, 16], [0, 7], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [0, 7], [9, 4], [5, 2], [17, 3], [11, 18], [10, 8], [4, 7], [6, 15], [9, 12], [3, 16], [5, 2], [0, 1], [4, 7], [17, 3], [1, 19], [5, 15], [16, 9], [8, 14], [11, 18], [12, 4], [3, 16], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [9, 12], [10, 8], [3, 16], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [12, 4], [8, 18], [3, 10], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [5, 15], [11, 18], [7, 1], [3, 10], [16, 9], [5, 15], [2, 10], [13, 0], [1, 19], [11, 18], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [1, 19], [12, 4], [13, 8], [4, 7], [3, 10], [6, 11], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [6, 11], [14, 1], [4, 7], [8, 14], [6, 11], [10, 0], [16, 9], [4, 7], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [1, 19], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [1, 19], [3, 16], [18, 14], [7, 1], [2, 15], [3, 10], [12, 13], [17, 5], [0, 19], [18, 14], [3, 16], [7, 19], [13, 0], [2, 15], [6, 11], [17, 5], [9, 4], [8, 14], [3, 10], [12, 13], [7, 19], [16, 2], [11, 18], [6, 15], [15, 8], [13, 0], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [14, 1], [9, 12], [13, 8], [0, 7], [15, 18], [10, 13], [12, 4], [0, 7], [16, 2], [5, 6], [14, 1], [6, 15], [9, 12], [3, 10], [13, 8], [18, 14], [7, 19], [6, 11], [16, 2], [13, 8], [9, 12], [3, 10], [1, 19], [4, 7], [18, 14], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 5], [12, 4], [10, 0], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [10, 0], [7, 1], [17, 5], [13, 4], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 6], [0, 7], [15, 14], [2, 10], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [2, 10], [3, 16], [5, 6], [13, 4], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [14, 1], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [10, 13], [11, 18], [15, 8], [14, 1], [9, 4], [3, 2], [12, 4], [10, 13], [7, 19], [11, 18], [6, 15], [16, 9], [17, 5], [3, 2], [1, 19], [12, 13], [15, 18], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [15, 18], [8, 14], [13, 0], [9, 12], [5, 2], [10, 0], [5, 2], [9, 12], [11, 18], [14, 1], [13, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 19, 27]
[39, 43, 50]
[79, 85, 89]
[205, 210, 216]
[222, 229, 237]
[236, 238, 246]
[234, 240, 248]
[256, 265, 268]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 25]
[72, 79, 85]
[66, 87, 90]
[95, 102, 110]
[128, 135, 137]
[183, 190, 196]
[250, 256, 265]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.264856576919556

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 9] cc => I, Pos: [0, 9] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [4, 16] cc => I, Pos: [4, 16] cc => I, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [8, 14] cc => I, Pos: [8, 14] cc => I, Pos: [9, 17] cc => I, Pos: [9, 17] cc => I, Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [13, 19, 27] ccc => cc, Pos: [16, 18, 25] ccc => cc, Pos: [23, 31] cc => I, Pos: [23, 31] cc => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [32, 48] cc => I, Pos: [32, 48] cc => I, Pos: [39, 43, 50] ccc => cc, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [54, 60] cc => I, Pos: [54, 60] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [66, 87, 90] ccc => cc, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [72, 79, 85] ccc => cc, Pos: [78, 86] cc => I, Pos: [78, 86] cc => I, Pos: [79, 85, 89] ccc => cc, Pos: [80, 94] cc => I, Pos: [80, 94] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [95, 102, 110] ccc => cc, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [112, 121] cc => I, Pos: [112, 121] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [118, 123] cc => I, Pos: [118, 123] cc => I, Pos: [119, 127] cc => I, Pos: [119, 127] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 135, 137] ccc => cc, Pos: [131, 139] cc => I, Pos: [131, 139] cc => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 152] cc => I, Pos: [148, 152] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [153, 161] cc => I, Pos: [153, 161] cc => I, Pos: [155, 159] cc => I, Pos: [155, 159] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [172, 181] cc => I, Pos: [172, 181] cc => I, Pos: [173, 180] cc => I, Pos: [173, 180] cc => I, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [178, 186] cc => I, Pos: [178, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 190, 196] ccc => cc, Pos: [186, 201] cc => I, Pos: [186, 201] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [205, 210, 216] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [212, 222] cc => I, Pos: [212, 222] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 225] cc => I, Pos: [217, 225] cc => I, Pos: [218, 223] cc => I, Pos: [218, 223] cc => I, Pos: [219, 228] cc => I, Pos: [219, 228] cc => I, Pos: [222, 229, 237] ccc => cc, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [228, 231] cc => I, Pos: [228, 231] cc => I, Pos: [234, 240, 248] ccc => cc, Pos: [236, 238, 246] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [249, 260] cc => I, Pos: [249, 260] cc => I, Pos: [250, 256, 265] ccc => cc, Pos: [256, 265, 268] ccc => cc, Pos: [259, 266] cc => I, Pos: [259, 266] cc => I, Pos: [260, 269] cc => I, Pos: [260, 269] cc => I, Pos: [269, 274] cc => I, Pos: [269, 274] cc => I, Pos: [276, 285] cc => I, Pos: [276, 285] cc => I, Pos: [281, 294] cc => I, Pos: [281, 294] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [283, 291] cc => I, Pos: [283, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [294, 300] cc => I, Pos: [294, 300] cc => I, Pos: [298, 304] cc => I, Pos: [298, 304] cc => I, Pos: [307, 311] cc => I, Pos: [307, 311] cc => I, Pos: [308, 310] cc => I, Pos: [308, 310] cc => I]

Plan: 1
[Pos: [0, 9] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [4, 16] cc => I,
 Pos: [6, 12] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [13, 19, 27] ccc => cc,
 Pos: [23, 31] cc => I,
 Pos: [32, 48] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [46, 54] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [72, 79, 85] ccc => cc,
 Pos: [78, 86] cc => I,
 Pos: [80, 94] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [128, 135, 137] ccc => cc,
 Pos: [131, 139] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [148, 152] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [186, 201] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [205, 210, 216] ccc => cc,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [218, 223] cc => I,
 Pos: [219, 228] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [250, 256, 265] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [260, 269] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [281, 294] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 61, Saving: 222

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 9] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [4, 16] cc => I,
 Pos: [6, 12] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [13, 19, 27] ccc => cc,
 Pos: [23, 31] cc => I,
 Pos: [32, 48] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [46, 54] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [72, 79, 85] ccc => cc,
 Pos: [78, 86] cc => I,
 Pos: [80, 94] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [128, 135, 137] ccc => cc,
 Pos: [131, 139] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [148, 152] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [186, 201] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [205, 210, 216] ccc => cc,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [218, 223] cc => I,
 Pos: [219, 228] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [250, 256, 265] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [260, 269] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [281, 294] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 61, Saving: 222

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 9] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [4, 16] cc => I
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [8, 14] cc => I
Apply:  Pos: [13, 19, 27] ccc => cc
Apply:  Pos: [23, 31] cc => I
Apply:  Pos: [32, 48] cc => I
Apply:  Pos: [39, 43, 50] ccc => cc
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [58, 69] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [66, 87, 90] ccc => cc
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [72, 79, 85] ccc => cc
Apply:  Pos: [78, 86] cc => I
Apply:  Pos: [80, 94] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [95, 102, 110] ccc => cc
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [112, 121] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [119, 127] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [128, 135, 137] ccc => cc
Apply:  Pos: [131, 139] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [148, 152] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [172, 181] cc => I
Apply:  Pos: [173, 180] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 190, 196] ccc => cc
Apply:  Pos: [186, 201] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [205, 210, 216] ccc => cc
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [212, 222] cc => I
Apply:  Pos: [217, 225] cc => I
Apply:  Pos: [218, 223] cc => I
Apply:  Pos: [219, 228] cc => I
Apply:  Pos: [234, 240, 248] ccc => cc
Apply:  Pos: [236, 238, 246] ccc => cc
Apply:  Pos: [241, 249] cc => I
Apply:  Pos: [250, 256, 265] ccc => cc
Apply:  Pos: [259, 266] cc => I
Apply:  Pos: [260, 269] cc => I
Apply:  Pos: [276, 285] cc => I
Apply:  Pos: [281, 294] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [283, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [298, 304] cc => I
Apply:  Pos: [307, 311] cc => I
Apply:  Pos: [308, 310] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [0, 7], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [2, 10], [17, 3], [15, 14], [13, 8], [12, 4], [9, 4], [3, 16], [10, 8], [6, 15], [9, 12], [1, 19], [17, 3], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [15, 8], [4, 7], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [8, 14], [0, 7], [11, 18], [9, 13], [7, 1], [12, 13], [0, 19], [12, 13], [2, 15], [6, 11], [9, 4], [8, 14], [13, 0], [16, 2], [11, 18], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 4], [13, 8], [15, 18], [10, 13], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [5, 6], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  6.264856576919556

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[33, 45]
[87, 103]
[113, 115]
[108, 119]
[154, 160]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 50, 55]
[118, 127, 131]
[160, 166, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 17, 22]
[53, 57, 59]
[110, 117, 122]
[132, 134, 146]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[33, 45]
[87, 103]
[113, 115]
[108, 119]
[154, 160]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.734297275543213

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 17, 22] ccc => cc, Pos: [31, 44] cc => I, Pos: [31, 44] cc => I, Pos: [33, 45] cc => I, Pos: [33, 45] cc => I, Pos: [45, 50, 55] ccc => cc, Pos: [53, 57, 59] ccc => cc, Pos: [87, 103] cc => I, Pos: [87, 103] cc => I, Pos: [108, 119] cc => I, Pos: [108, 119] cc => I, Pos: [110, 117, 122] ccc => cc, Pos: [113, 115] cc => I, Pos: [113, 115] cc => I, Pos: [118, 127, 131] ccc => cc, Pos: [132, 134, 146] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 166, 174] ccc => cc]

Plan: 1
[Pos: [11, 17, 22] ccc => cc,
 Pos: [31, 44] cc => I,
 Pos: [33, 45] cc => I,
 Pos: [53, 57, 59] ccc => cc,
 Pos: [87, 103] cc => I,
 Pos: [108, 119] cc => I,
 Pos: [110, 117, 122] ccc => cc,
 Pos: [113, 115] cc => I,
 Pos: [118, 127, 131] ccc => cc,
 Pos: [132, 134, 146] ccc => cc,
 Pos: [154, 160] cc => I]
Change: 11, Saving: 34

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 17, 22] ccc => cc,
 Pos: [31, 44] cc => I,
 Pos: [33, 45] cc => I,
 Pos: [53, 57, 59] ccc => cc,
 Pos: [87, 103] cc => I,
 Pos: [108, 119] cc => I,
 Pos: [110, 117, 122] ccc => cc,
 Pos: [113, 115] cc => I,
 Pos: [118, 127, 131] ccc => cc,
 Pos: [132, 134, 146] ccc => cc,
 Pos: [154, 160] cc => I]
Change: 11, Saving: 34

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 17, 22] ccc => cc
Apply:  Pos: [31, 44] cc => I
Apply:  Pos: [33, 45] cc => I
Apply:  Pos: [53, 57, 59] ccc => cc
Apply:  Pos: [87, 103] cc => I
Apply:  Pos: [108, 119] cc => I
Apply:  Pos: [110, 117, 122] ccc => cc
Apply:  Pos: [113, 115] cc => I
Apply:  Pos: [118, 127, 131] ccc => cc
Apply:  Pos: [132, 134, 146] ccc => cc
Apply:  Pos: [154, 160] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 8], [15, 18], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 4], [12, 4], [3, 16], [10, 8], [6, 15], [16, 9], [1, 19], [17, 3], [5, 15], [9, 12], [8, 14], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [15, 8], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.734297275543213

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[81, 86]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[81, 86]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3594303131103516

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [81, 86] cc => I, Pos: [81, 86] cc => I]

Plan: 1
[Pos: [81, 86] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [81, 86] cc => I]
Change: 1, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [81, 86] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [15, 14], [18, 14], [13, 8], [12, 4], [9, 4], [3, 16], [10, 8], [6, 15], [16, 9], [1, 19], [17, 3], [5, 15], [9, 12], [8, 14], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.3594303131103516

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.32806658744812

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[9, 4], [3, 16], [8, 14], [15, 8], [15, 18], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 4], [12, 4], [3, 16], [10, 8], [6, 15], [16, 9], [1, 19], [17, 3], [5, 15], [9, 12], [8, 14], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.32806658744812

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [185] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 370

Reduced: 
 - size: 130 (41.27%)
 - cycle: 260 (41.27%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500452995300293

[10, 0], [1, 19], [9, 4], [3, 16], [12, 13], [8, 14], [6, 11], [15, 18], [17, 5], [10, 0], [1, 19], [15, 8], [6, 11], [16, 2], [17, 5], [4, 7], [12, 13], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [17, 3], [0, 1], [12, 13], [5, 6], [16, 2], [15, 8], [0, 7], [6, 15], [17, 3], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 0], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [8, 14], [17, 3], [13, 0], [8, 14], [6, 15], [17, 5], [7, 1], [11, 18], [13, 4], [6, 15], [3, 16], [10, 8], [7, 1], [11, 18], [4, 7], [10, 8], [12, 13], [5, 6], [1, 19], [2, 15], [18, 14], [3, 16], [0, 7], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [0, 7], [9, 4], [5, 2], [17, 3], [11, 18], [10, 8], [4, 7], [6, 15], [9, 12], [3, 16], [5, 2], [0, 1], [4, 7], [17, 3], [1, 19], [5, 15], [16, 9], [8, 14], [11, 18], [12, 4], [3, 16], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [9, 12], [10, 8], [3, 16], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [12, 4], [8, 18], [3, 10], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [5, 15], [11, 18], [7, 1], [3, 10], [16, 9], [5, 15], [2, 10], [13, 0], [1, 19], [11, 18], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [1, 19], [12, 4], [13, 8], [4, 7], [3, 10], [6, 11], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [6, 11], [14, 1], [4, 7], [8, 14], [6, 11], [10, 0], [16, 9], [4, 7], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [1, 19], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [1, 19], [3, 16], [18, 14], [7, 1], [2, 15], [3, 10], [12, 13], [17, 5], [0, 19], [18, 14], [3, 16], [7, 19], [13, 0], [2, 15], [6, 11], [17, 5], [9, 4], [8, 14], [3, 10], [12, 13], [7, 19], [16, 2], [11, 18], [6, 15], [15, 8], [13, 0], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [14, 1], [9, 12], [13, 8], [0, 7], [15, 18], [10, 13], [12, 4], [0, 7], [16, 2], [5, 6], [14, 1], [6, 15], [9, 12], [3, 10], [13, 8], [18, 14], [7, 19], [6, 11], [16, 2], [13, 8], [9, 12], [3, 10], [1, 19], [4, 7], [18, 14], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 5], [12, 4], [10, 0], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [10, 0], [7, 1], [17, 5], [13, 4], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 6], [0, 7], [15, 14], [2, 10], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [2, 10], [3, 16], [5, 6], [13, 4], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [14, 1], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [10, 13], [11, 18], [15, 8], [14, 1], [9, 4], [3, 2], [12, 4], [10, 13], [7, 19], [11, 18], [6, 15], [16, 9], [17, 5], [3, 2], [1, 19], [12, 13], [15, 18], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [15, 18], [8, 14], [13, 0], [9, 12], [5, 2], [10, 0], [5, 2], [9, 12], [11, 18], [14, 1], [13, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 19, 27]
[39, 43, 50]
[79, 85, 89]
[205, 210, 216]
[222, 229, 237]
[236, 238, 246]
[234, 240, 248]
[256, 265, 268]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 25]
[72, 79, 85]
[66, 87, 90]
[95, 102, 110]
[128, 135, 137]
[183, 190, 196]
[250, 256, 265]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.140613555908203

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 9] cc => I, Pos: [0, 9] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [4, 16] cc => I, Pos: [4, 16] cc => I, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [8, 14] cc => I, Pos: [8, 14] cc => I, Pos: [9, 17] cc => I, Pos: [9, 17] cc => I, Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [13, 19, 27] ccc => cc, Pos: [16, 18, 25] ccc => cc, Pos: [23, 31] cc => I, Pos: [23, 31] cc => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [32, 48] cc => I, Pos: [32, 48] cc => I, Pos: [39, 43, 50] ccc => cc, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [54, 60] cc => I, Pos: [54, 60] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [66, 87, 90] ccc => cc, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [72, 79, 85] ccc => cc, Pos: [78, 86] cc => I, Pos: [78, 86] cc => I, Pos: [79, 85, 89] ccc => cc, Pos: [80, 94] cc => I, Pos: [80, 94] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [95, 102, 110] ccc => cc, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [112, 121] cc => I, Pos: [112, 121] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [118, 123] cc => I, Pos: [118, 123] cc => I, Pos: [119, 127] cc => I, Pos: [119, 127] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 135, 137] ccc => cc, Pos: [131, 139] cc => I, Pos: [131, 139] cc => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 152] cc => I, Pos: [148, 152] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [153, 161] cc => I, Pos: [153, 161] cc => I, Pos: [155, 159] cc => I, Pos: [155, 159] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [172, 181] cc => I, Pos: [172, 181] cc => I, Pos: [173, 180] cc => I, Pos: [173, 180] cc => I, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [178, 186] cc => I, Pos: [178, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 190, 196] ccc => cc, Pos: [186, 201] cc => I, Pos: [186, 201] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [205, 210, 216] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [212, 222] cc => I, Pos: [212, 222] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 225] cc => I, Pos: [217, 225] cc => I, Pos: [218, 223] cc => I, Pos: [218, 223] cc => I, Pos: [219, 228] cc => I, Pos: [219, 228] cc => I, Pos: [222, 229, 237] ccc => cc, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [228, 231] cc => I, Pos: [228, 231] cc => I, Pos: [234, 240, 248] ccc => cc, Pos: [236, 238, 246] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [249, 260] cc => I, Pos: [249, 260] cc => I, Pos: [250, 256, 265] ccc => cc, Pos: [256, 265, 268] ccc => cc, Pos: [259, 266] cc => I, Pos: [259, 266] cc => I, Pos: [260, 269] cc => I, Pos: [260, 269] cc => I, Pos: [269, 274] cc => I, Pos: [269, 274] cc => I, Pos: [276, 285] cc => I, Pos: [276, 285] cc => I, Pos: [281, 294] cc => I, Pos: [281, 294] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [283, 291] cc => I, Pos: [283, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [294, 300] cc => I, Pos: [294, 300] cc => I, Pos: [298, 304] cc => I, Pos: [298, 304] cc => I, Pos: [307, 311] cc => I, Pos: [307, 311] cc => I, Pos: [308, 310] cc => I, Pos: [308, 310] cc => I]

Plan: 1
[Pos: [0, 9] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [4, 16] cc => I,
 Pos: [6, 12] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [13, 19, 27] ccc => cc,
 Pos: [23, 31] cc => I,
 Pos: [32, 48] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [46, 54] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [72, 79, 85] ccc => cc,
 Pos: [78, 86] cc => I,
 Pos: [80, 94] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [128, 135, 137] ccc => cc,
 Pos: [131, 139] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [148, 152] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [186, 201] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [205, 210, 216] ccc => cc,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [218, 223] cc => I,
 Pos: [219, 228] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [250, 256, 265] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [260, 269] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [281, 294] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 61, Saving: 66

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.1562514305114746

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 9] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [4, 16] cc => I,
 Pos: [6, 12] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [13, 19, 27] ccc => cc,
 Pos: [23, 31] cc => I,
 Pos: [32, 48] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [46, 54] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [72, 79, 85] ccc => cc,
 Pos: [78, 86] cc => I,
 Pos: [80, 94] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [128, 135, 137] ccc => cc,
 Pos: [131, 139] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [148, 152] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [186, 201] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [205, 210, 216] ccc => cc,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [218, 223] cc => I,
 Pos: [219, 228] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [250, 256, 265] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [260, 269] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [281, 294] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 61, Saving: 66

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 9] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [4, 16] cc => I
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [8, 14] cc => I
Apply:  Pos: [13, 19, 27] ccc => cc
Apply:  Pos: [23, 31] cc => I
Apply:  Pos: [32, 48] cc => I
Apply:  Pos: [39, 43, 50] ccc => cc
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [58, 69] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [66, 87, 90] ccc => cc
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [72, 79, 85] ccc => cc
Apply:  Pos: [78, 86] cc => I
Apply:  Pos: [80, 94] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [95, 102, 110] ccc => cc
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [112, 121] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [119, 127] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [128, 135, 137] ccc => cc
Apply:  Pos: [131, 139] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [148, 152] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [172, 181] cc => I
Apply:  Pos: [173, 180] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 190, 196] ccc => cc
Apply:  Pos: [186, 201] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [205, 210, 216] ccc => cc
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [212, 222] cc => I
Apply:  Pos: [217, 225] cc => I
Apply:  Pos: [218, 223] cc => I
Apply:  Pos: [219, 228] cc => I
Apply:  Pos: [234, 240, 248] ccc => cc
Apply:  Pos: [236, 238, 246] ccc => cc
Apply:  Pos: [241, 249] cc => I
Apply:  Pos: [250, 256, 265] ccc => cc
Apply:  Pos: [259, 266] cc => I
Apply:  Pos: [260, 269] cc => I
Apply:  Pos: [276, 285] cc => I
Apply:  Pos: [281, 294] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [283, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [298, 304] cc => I
Apply:  Pos: [307, 311] cc => I
Apply:  Pos: [308, 310] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [0, 7], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [2, 10], [17, 3], [15, 14], [13, 8], [12, 4], [9, 4], [3, 16], [10, 8], [6, 15], [9, 12], [1, 19], [17, 3], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [15, 8], [4, 7], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [8, 14], [0, 7], [11, 18], [9, 13], [7, 1], [12, 13], [0, 19], [12, 13], [2, 15], [6, 11], [9, 4], [8, 14], [13, 0], [16, 2], [11, 18], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 4], [13, 8], [15, 18], [10, 13], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [5, 6], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  6.296864986419678

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[33, 45]
[87, 103]
[113, 115]
[108, 119]
[154, 160]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 50, 55]
[118, 127, 131]
[160, 166, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 17, 22]
[53, 57, 59]
[110, 117, 122]
[132, 134, 146]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[33, 45]
[87, 103]
[113, 115]
[108, 119]
[154, 160]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7031548023223877

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 17, 22] ccc => cc, Pos: [31, 44] cc => I, Pos: [31, 44] cc => I, Pos: [33, 45] cc => I, Pos: [33, 45] cc => I, Pos: [45, 50, 55] ccc => cc, Pos: [53, 57, 59] ccc => cc, Pos: [87, 103] cc => I, Pos: [87, 103] cc => I, Pos: [108, 119] cc => I, Pos: [108, 119] cc => I, Pos: [110, 117, 122] ccc => cc, Pos: [113, 115] cc => I, Pos: [113, 115] cc => I, Pos: [118, 127, 131] ccc => cc, Pos: [132, 134, 146] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 166, 174] ccc => cc]

Plan: 1
[Pos: [11, 17, 22] ccc => cc,
 Pos: [31, 44] cc => I,
 Pos: [33, 45] cc => I,
 Pos: [53, 57, 59] ccc => cc,
 Pos: [87, 103] cc => I,
 Pos: [108, 119] cc => I,
 Pos: [110, 117, 122] ccc => cc,
 Pos: [113, 115] cc => I,
 Pos: [118, 127, 131] ccc => cc,
 Pos: [132, 134, 146] ccc => cc,
 Pos: [154, 160] cc => I]
Change: 11, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0312345027923584

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 17, 22] ccc => cc,
 Pos: [31, 44] cc => I,
 Pos: [33, 45] cc => I,
 Pos: [53, 57, 59] ccc => cc,
 Pos: [87, 103] cc => I,
 Pos: [108, 119] cc => I,
 Pos: [110, 117, 122] ccc => cc,
 Pos: [113, 115] cc => I,
 Pos: [118, 127, 131] ccc => cc,
 Pos: [132, 134, 146] ccc => cc,
 Pos: [154, 160] cc => I]
Change: 11, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 17, 22] ccc => cc
Apply:  Pos: [31, 44] cc => I
Apply:  Pos: [33, 45] cc => I
Apply:  Pos: [53, 57, 59] ccc => cc
Apply:  Pos: [87, 103] cc => I
Apply:  Pos: [108, 119] cc => I
Apply:  Pos: [110, 117, 122] ccc => cc
Apply:  Pos: [113, 115] cc => I
Apply:  Pos: [118, 127, 131] ccc => cc
Apply:  Pos: [132, 134, 146] ccc => cc
Apply:  Pos: [154, 160] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 8], [15, 18], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 4], [12, 4], [3, 16], [10, 8], [6, 15], [16, 9], [1, 19], [17, 3], [5, 15], [9, 12], [8, 14], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [15, 8], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.734389305114746

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[81, 86]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[81, 86]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3283209800720215

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [81, 86] cc => I, Pos: [81, 86] cc => I]

Plan: 1
[Pos: [81, 86] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [81, 86] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [81, 86] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [15, 14], [18, 14], [13, 8], [12, 4], [9, 4], [3, 16], [10, 8], [6, 15], [16, 9], [1, 19], [17, 3], [5, 15], [9, 12], [8, 14], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.3283209800720215

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.281240224838257

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[9, 4], [3, 16], [8, 14], [15, 8], [15, 18], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 4], [12, 4], [3, 16], [10, 8], [6, 15], [16, 9], [1, 19], [17, 3], [5, 15], [9, 12], [8, 14], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.281240224838257

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [185] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 370

Reduced: 
 - size: 130 (41.27%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499070167541504

[10, 0], [1, 19], [9, 4], [3, 16], [12, 13], [8, 14], [6, 11], [15, 18], [17, 5], [10, 0], [1, 19], [15, 8], [6, 11], [16, 2], [17, 5], [4, 7], [12, 13], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [17, 3], [0, 1], [12, 13], [5, 6], [16, 2], [15, 8], [0, 7], [6, 15], [17, 3], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 0], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [8, 14], [17, 3], [13, 0], [8, 14], [6, 15], [17, 5], [7, 1], [11, 18], [13, 4], [6, 15], [3, 16], [10, 8], [7, 1], [11, 18], [4, 7], [10, 8], [12, 13], [5, 6], [1, 19], [2, 15], [18, 14], [3, 16], [0, 7], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [0, 7], [9, 4], [5, 2], [17, 3], [11, 18], [10, 8], [4, 7], [6, 15], [9, 12], [3, 16], [5, 2], [0, 1], [4, 7], [17, 3], [1, 19], [5, 15], [16, 9], [8, 14], [11, 18], [12, 4], [3, 16], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [9, 12], [10, 8], [3, 16], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [12, 4], [8, 18], [3, 10], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [5, 15], [11, 18], [7, 1], [3, 10], [16, 9], [5, 15], [2, 10], [13, 0], [1, 19], [11, 18], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [1, 19], [12, 4], [13, 8], [4, 7], [3, 10], [6, 11], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [6, 11], [14, 1], [4, 7], [8, 14], [6, 11], [10, 0], [16, 9], [4, 7], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [1, 19], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [1, 19], [3, 16], [18, 14], [7, 1], [2, 15], [3, 10], [12, 13], [17, 5], [0, 19], [18, 14], [3, 16], [7, 19], [13, 0], [2, 15], [6, 11], [17, 5], [9, 4], [8, 14], [3, 10], [12, 13], [7, 19], [16, 2], [11, 18], [6, 15], [15, 8], [13, 0], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [14, 1], [9, 12], [13, 8], [0, 7], [15, 18], [10, 13], [12, 4], [0, 7], [16, 2], [5, 6], [14, 1], [6, 15], [9, 12], [3, 10], [13, 8], [18, 14], [7, 19], [6, 11], [16, 2], [13, 8], [9, 12], [3, 10], [1, 19], [4, 7], [18, 14], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 5], [12, 4], [10, 0], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [10, 0], [7, 1], [17, 5], [13, 4], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 6], [0, 7], [15, 14], [2, 10], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [2, 10], [3, 16], [5, 6], [13, 4], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [14, 1], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [10, 13], [11, 18], [15, 8], [14, 1], [9, 4], [3, 2], [12, 4], [10, 13], [7, 19], [11, 18], [6, 15], [16, 9], [17, 5], [3, 2], [1, 19], [12, 13], [15, 18], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [15, 18], [8, 14], [13, 0], [9, 12], [5, 2], [10, 0], [5, 2], [9, 12], [11, 18], [14, 1], [13, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 19, 27]
[39, 43, 50]
[79, 85, 89]
[205, 210, 216]
[222, 229, 237]
[236, 238, 246]
[234, 240, 248]
[256, 265, 268]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 25]
[72, 79, 85]
[66, 87, 90]
[95, 102, 110]
[128, 135, 137]
[183, 190, 196]
[250, 256, 265]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.123018026351929

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 9] cc => I, Pos: [0, 9] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [4, 16] cc => I, Pos: [4, 16] cc => I, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [8, 14] cc => I, Pos: [8, 14] cc => I, Pos: [9, 17] cc => I, Pos: [9, 17] cc => I, Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [13, 19, 27] ccc => cc, Pos: [16, 18, 25] ccc => cc, Pos: [23, 31] cc => I, Pos: [23, 31] cc => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [32, 48] cc => I, Pos: [32, 48] cc => I, Pos: [39, 43, 50] ccc => cc, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [54, 60] cc => I, Pos: [54, 60] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [66, 87, 90] ccc => cc, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [72, 79, 85] ccc => cc, Pos: [78, 86] cc => I, Pos: [78, 86] cc => I, Pos: [79, 85, 89] ccc => cc, Pos: [80, 94] cc => I, Pos: [80, 94] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [95, 102, 110] ccc => cc, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [112, 121] cc => I, Pos: [112, 121] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [118, 123] cc => I, Pos: [118, 123] cc => I, Pos: [119, 127] cc => I, Pos: [119, 127] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 135, 137] ccc => cc, Pos: [131, 139] cc => I, Pos: [131, 139] cc => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 152] cc => I, Pos: [148, 152] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [153, 161] cc => I, Pos: [153, 161] cc => I, Pos: [155, 159] cc => I, Pos: [155, 159] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [172, 181] cc => I, Pos: [172, 181] cc => I, Pos: [173, 180] cc => I, Pos: [173, 180] cc => I, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [178, 186] cc => I, Pos: [178, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 190, 196] ccc => cc, Pos: [186, 201] cc => I, Pos: [186, 201] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [205, 210, 216] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [212, 222] cc => I, Pos: [212, 222] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 225] cc => I, Pos: [217, 225] cc => I, Pos: [218, 223] cc => I, Pos: [218, 223] cc => I, Pos: [219, 228] cc => I, Pos: [219, 228] cc => I, Pos: [222, 229, 237] ccc => cc, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [228, 231] cc => I, Pos: [228, 231] cc => I, Pos: [234, 240, 248] ccc => cc, Pos: [236, 238, 246] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [249, 260] cc => I, Pos: [249, 260] cc => I, Pos: [250, 256, 265] ccc => cc, Pos: [256, 265, 268] ccc => cc, Pos: [259, 266] cc => I, Pos: [259, 266] cc => I, Pos: [260, 269] cc => I, Pos: [260, 269] cc => I, Pos: [269, 274] cc => I, Pos: [269, 274] cc => I, Pos: [276, 285] cc => I, Pos: [276, 285] cc => I, Pos: [281, 294] cc => I, Pos: [281, 294] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [283, 291] cc => I, Pos: [283, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [294, 300] cc => I, Pos: [294, 300] cc => I, Pos: [298, 304] cc => I, Pos: [298, 304] cc => I, Pos: [307, 311] cc => I, Pos: [307, 311] cc => I, Pos: [308, 310] cc => I, Pos: [308, 310] cc => I]

--------End Timer [Generate Plans]:  0.01561117172241211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 9] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [4, 16] cc => I,
 Pos: [6, 12] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [13, 19, 27] ccc => cc,
 Pos: [23, 31] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [46, 54] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [78, 86] cc => I,
 Pos: [79, 85, 89] ccc => cc,
 Pos: [94, 101] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [137, 150] cc => I,
 Pos: [139, 148] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [155, 159] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [186, 201] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [218, 223] cc => I,
 Pos: [228, 231] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [256, 265, 268] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [260, 269] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [294, 300] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 60, Saving: 222

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 9] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [4, 16] cc => I
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [8, 14] cc => I
Apply:  Pos: [13, 19, 27] ccc => cc
Apply:  Pos: [23, 31] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [39, 43, 50] ccc => cc
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [66, 87, 90] ccc => cc
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [78, 86] cc => I
Apply:  Pos: [79, 85, 89] ccc => cc
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [95, 102, 110] ccc => cc
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [112, 121] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [119, 127] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [137, 150] cc => I
Apply:  Pos: [139, 148] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [155, 159] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [172, 181] cc => I
Apply:  Pos: [173, 180] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 190, 196] ccc => cc
Apply:  Pos: [186, 201] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [212, 222] cc => I
Apply:  Pos: [217, 225] cc => I
Apply:  Pos: [218, 223] cc => I
Apply:  Pos: [228, 231] cc => I
Apply:  Pos: [234, 240, 248] ccc => cc
Apply:  Pos: [236, 238, 246] ccc => cc
Apply:  Pos: [241, 249] cc => I
Apply:  Pos: [256, 265, 268] ccc => cc
Apply:  Pos: [259, 266] cc => I
Apply:  Pos: [260, 269] cc => I
Apply:  Pos: [276, 285] cc => I
Apply:  Pos: [294, 300] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [283, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [298, 304] cc => I
Apply:  Pos: [307, 311] cc => I
Apply:  Pos: [308, 310] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [0, 7], [6, 15], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [5, 15], [17, 3], [17, 5], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [2, 10], [15, 14], [13, 8], [12, 4], [9, 4], [17, 16], [11, 18], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [6, 11], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [8, 14], [2, 15], [0, 7], [11, 18], [9, 13], [7, 1], [12, 13], [0, 19], [12, 13], [6, 11], [9, 4], [8, 14], [13, 0], [16, 2], [11, 18], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [13, 8], [15, 18], [10, 13], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [13, 8], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  6.138629198074341

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[32, 45]
[85, 100]
[115, 117]
[109, 120]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[173, 175, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 17, 23]
[112, 118, 123]
[133, 135, 146]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[32, 45]
[85, 100]
[115, 117]
[109, 120]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6880710124969482

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 17, 23] ccc => cc, Pos: [32, 45] cc => I, Pos: [32, 45] cc => I, Pos: [85, 100] cc => I, Pos: [85, 100] cc => I, Pos: [109, 120] cc => I, Pos: [109, 120] cc => I, Pos: [112, 118, 123] ccc => cc, Pos: [115, 117] cc => I, Pos: [115, 117] cc => I, Pos: [133, 135, 146] ccc => cc, Pos: [173, 175, 182] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 17, 23] ccc => cc,
 Pos: [32, 45] cc => I,
 Pos: [85, 100] cc => I,
 Pos: [109, 120] cc => I,
 Pos: [112, 118, 123] ccc => cc,
 Pos: [115, 117] cc => I,
 Pos: [133, 135, 146] ccc => cc,
 Pos: [173, 175, 182] ccc => cc]
Change: 8, Saving: 24

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 17, 23] ccc => cc
Apply:  Pos: [32, 45] cc => I
Apply:  Pos: [85, 100] cc => I
Apply:  Pos: [109, 120] cc => I
Apply:  Pos: [112, 118, 123] ccc => cc
Apply:  Pos: [115, 117] cc => I
Apply:  Pos: [133, 135, 146] ccc => cc
Apply:  Pos: [173, 175, 182] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 8], [15, 18], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 5], [17, 3], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 4], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [2, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [11, 18], [9, 4], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.6880710124969482

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[104, 114]
[164, 189]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[45, 46, 51]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[104, 114]
[164, 189]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.46962308883667

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [45, 46, 51] ccc => cc, Pos: [104, 114] cc => I, Pos: [104, 114] cc => I, Pos: [164, 189] cc => I, Pos: [164, 189] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [45, 46, 51] ccc => cc, Pos: [104, 114] cc => I, Pos: [164, 189] cc => I]
Change: 3, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [45, 46, 51] ccc => cc
Apply:  Pos: [104, 114] cc => I
Apply:  Pos: [164, 189] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [17, 5], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [15, 14], [18, 14], [13, 8], [9, 12], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [2, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [11, 18], [9, 4], [13, 0], [16, 2], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.46962308883667

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[101, 102, 111]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.329383134841919

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [101, 102, 111] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [101, 102, 111] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [101, 102, 111] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 8], [15, 18], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 5], [17, 3], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 12], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 15], [2, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [11, 18], [9, 4], [13, 0], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.329383134841919

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.297638416290283

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [17, 5], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [15, 14], [18, 14], [13, 8], [9, 12], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [2, 15], [16, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [11, 18], [9, 4], [13, 0], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.297638416290283

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [186] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 372

Reduced: 
 - size: 129 (40.95%)
 - cycle: 258 (40.95%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1255664825439453

[10, 0], [1, 19], [9, 4], [3, 16], [12, 13], [8, 14], [6, 11], [15, 18], [17, 5], [10, 0], [1, 19], [15, 8], [6, 11], [16, 2], [17, 5], [4, 7], [12, 13], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [17, 3], [0, 1], [12, 13], [5, 6], [16, 2], [15, 8], [0, 7], [6, 15], [17, 3], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 0], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [8, 14], [17, 3], [13, 0], [8, 14], [6, 15], [17, 5], [7, 1], [11, 18], [13, 4], [6, 15], [3, 16], [10, 8], [7, 1], [11, 18], [4, 7], [10, 8], [12, 13], [5, 6], [1, 19], [2, 15], [18, 14], [3, 16], [0, 7], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [0, 7], [9, 4], [5, 2], [17, 3], [11, 18], [10, 8], [4, 7], [6, 15], [9, 12], [3, 16], [5, 2], [0, 1], [4, 7], [17, 3], [1, 19], [5, 15], [16, 9], [8, 14], [11, 18], [12, 4], [3, 16], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [9, 12], [10, 8], [3, 16], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [12, 4], [8, 18], [3, 10], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [5, 15], [11, 18], [7, 1], [3, 10], [16, 9], [5, 15], [2, 10], [13, 0], [1, 19], [11, 18], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [1, 19], [12, 4], [13, 8], [4, 7], [3, 10], [6, 11], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [6, 11], [14, 1], [4, 7], [8, 14], [6, 11], [10, 0], [16, 9], [4, 7], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [1, 19], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [1, 19], [3, 16], [18, 14], [7, 1], [2, 15], [3, 10], [12, 13], [17, 5], [0, 19], [18, 14], [3, 16], [7, 19], [13, 0], [2, 15], [6, 11], [17, 5], [9, 4], [8, 14], [3, 10], [12, 13], [7, 19], [16, 2], [11, 18], [6, 15], [15, 8], [13, 0], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [14, 1], [9, 12], [13, 8], [0, 7], [15, 18], [10, 13], [12, 4], [0, 7], [16, 2], [5, 6], [14, 1], [6, 15], [9, 12], [3, 10], [13, 8], [18, 14], [7, 19], [6, 11], [16, 2], [13, 8], [9, 12], [3, 10], [1, 19], [4, 7], [18, 14], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 5], [12, 4], [10, 0], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [10, 0], [7, 1], [17, 5], [13, 4], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 6], [0, 7], [15, 14], [2, 10], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [2, 10], [3, 16], [5, 6], [13, 4], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [14, 1], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [10, 13], [11, 18], [15, 8], [14, 1], [9, 4], [3, 2], [12, 4], [10, 13], [7, 19], [11, 18], [6, 15], [16, 9], [17, 5], [3, 2], [1, 19], [12, 13], [15, 18], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [15, 18], [8, 14], [13, 0], [9, 12], [5, 2], [10, 0], [5, 2], [9, 12], [11, 18], [14, 1], [13, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 19, 27]
[39, 43, 50]
[79, 85, 89]
[205, 210, 216]
[222, 229, 237]
[236, 238, 246]
[234, 240, 248]
[256, 265, 268]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 25]
[72, 79, 85]
[66, 87, 90]
[95, 102, 110]
[128, 135, 137]
[183, 190, 196]
[250, 256, 265]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.229246616363525

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 9] cc => I, Pos: [0, 9] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [4, 16] cc => I, Pos: [4, 16] cc => I, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [8, 14] cc => I, Pos: [8, 14] cc => I, Pos: [9, 17] cc => I, Pos: [9, 17] cc => I, Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [13, 19, 27] ccc => cc, Pos: [16, 18, 25] ccc => cc, Pos: [23, 31] cc => I, Pos: [23, 31] cc => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [32, 48] cc => I, Pos: [32, 48] cc => I, Pos: [39, 43, 50] ccc => cc, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [54, 60] cc => I, Pos: [54, 60] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [66, 87, 90] ccc => cc, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [72, 79, 85] ccc => cc, Pos: [78, 86] cc => I, Pos: [78, 86] cc => I, Pos: [79, 85, 89] ccc => cc, Pos: [80, 94] cc => I, Pos: [80, 94] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [95, 102, 110] ccc => cc, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [112, 121] cc => I, Pos: [112, 121] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [118, 123] cc => I, Pos: [118, 123] cc => I, Pos: [119, 127] cc => I, Pos: [119, 127] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 135, 137] ccc => cc, Pos: [131, 139] cc => I, Pos: [131, 139] cc => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 152] cc => I, Pos: [148, 152] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [153, 161] cc => I, Pos: [153, 161] cc => I, Pos: [155, 159] cc => I, Pos: [155, 159] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [172, 181] cc => I, Pos: [172, 181] cc => I, Pos: [173, 180] cc => I, Pos: [173, 180] cc => I, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [178, 186] cc => I, Pos: [178, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 190, 196] ccc => cc, Pos: [186, 201] cc => I, Pos: [186, 201] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [205, 210, 216] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [212, 222] cc => I, Pos: [212, 222] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 225] cc => I, Pos: [217, 225] cc => I, Pos: [218, 223] cc => I, Pos: [218, 223] cc => I, Pos: [219, 228] cc => I, Pos: [219, 228] cc => I, Pos: [222, 229, 237] ccc => cc, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [228, 231] cc => I, Pos: [228, 231] cc => I, Pos: [234, 240, 248] ccc => cc, Pos: [236, 238, 246] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [249, 260] cc => I, Pos: [249, 260] cc => I, Pos: [250, 256, 265] ccc => cc, Pos: [256, 265, 268] ccc => cc, Pos: [259, 266] cc => I, Pos: [259, 266] cc => I, Pos: [260, 269] cc => I, Pos: [260, 269] cc => I, Pos: [269, 274] cc => I, Pos: [269, 274] cc => I, Pos: [276, 285] cc => I, Pos: [276, 285] cc => I, Pos: [281, 294] cc => I, Pos: [281, 294] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [283, 291] cc => I, Pos: [283, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [294, 300] cc => I, Pos: [294, 300] cc => I, Pos: [298, 304] cc => I, Pos: [298, 304] cc => I, Pos: [307, 311] cc => I, Pos: [307, 311] cc => I, Pos: [308, 310] cc => I, Pos: [308, 310] cc => I]

--------End Timer [Generate Plans]:  0.1405165195465088

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 17] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [16, 18, 25] ccc => cc,
 Pos: [12, 22] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [27, 34] cc => I,
 Pos: [23, 31] cc => I,
 Pos: [32, 48] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [54, 60] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [78, 86] cc => I,
 Pos: [79, 85, 89] ccc => cc,
 Pos: [94, 101] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [118, 123] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [137, 150] cc => I,
 Pos: [139, 148] cc => I,
 Pos: [153, 161] cc => I,
 Pos: [155, 159] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [178, 186] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [204, 214] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [228, 231] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [249, 260] cc => I,
 Pos: [256, 265, 268] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [269, 274] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [281, 294] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 59, Saving: 62

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 17] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [16, 18, 25] ccc => cc
Apply:  Pos: [12, 22] cc => I
Apply:  Pos: [8, 14] cc => I
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [23, 31] cc => I
Apply:  Pos: [32, 48] cc => I
Apply:  Pos: [39, 43, 50] ccc => cc
Apply:  Pos: [54, 60] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [66, 87, 90] ccc => cc
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [78, 86] cc => I
Apply:  Pos: [79, 85, 89] ccc => cc
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [95, 102, 110] ccc => cc
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [112, 121] cc => I
Apply:  Pos: [118, 123] cc => I
Apply:  Pos: [119, 127] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [137, 150] cc => I
Apply:  Pos: [139, 148] cc => I
Apply:  Pos: [153, 161] cc => I
Apply:  Pos: [155, 159] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [178, 186] cc => I
Apply:  Pos: [172, 181] cc => I
Apply:  Pos: [173, 180] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 190, 196] ccc => cc
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [212, 222] cc => I
Apply:  Pos: [217, 225] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [228, 231] cc => I
Apply:  Pos: [234, 240, 248] ccc => cc
Apply:  Pos: [236, 238, 246] ccc => cc
Apply:  Pos: [249, 260] cc => I
Apply:  Pos: [256, 265, 268] ccc => cc
Apply:  Pos: [259, 266] cc => I
Apply:  Pos: [269, 274] cc => I
Apply:  Pos: [276, 285] cc => I
Apply:  Pos: [281, 294] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [283, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [298, 304] cc => I
Apply:  Pos: [307, 311] cc => I
Apply:  Pos: [308, 310] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [12, 13], [8, 14], [6, 11], [15, 18], [15, 8], [16, 2], [4, 7], [9, 12], [12, 13], [2, 15], [8, 14], [7, 19], [0, 1], [5, 6], [15, 8], [0, 7], [6, 15], [10, 13], [9, 12], [1, 19], [7, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [3, 16], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [2, 10], [15, 14], [13, 8], [12, 4], [9, 4], [17, 16], [11, 18], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [6, 11], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [8, 14], [0, 7], [17, 5], [11, 18], [9, 13], [7, 1], [12, 13], [0, 19], [12, 13], [2, 15], [6, 11], [9, 4], [8, 14], [13, 0], [16, 2], [11, 18], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [9, 12], [13, 8], [15, 18], [10, 13], [12, 4], [5, 6], [6, 15], [13, 8], [18, 14], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  6.369763135910034

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 45]
[85, 101]
[115, 117]
[109, 121]
[111, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[176, 178, 184]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 10, 11]
[14, 18, 22]
[112, 119, 124]
[135, 137, 141]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 45]
[85, 101]
[115, 117]
[109, 121]
[111, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.8294827938079834

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 10, 11] ccc => cc, Pos: [14, 18, 22] ccc => cc, Pos: [31, 45] cc => I, Pos: [31, 45] cc => I, Pos: [85, 101] cc => I, Pos: [85, 101] cc => I, Pos: [109, 121] cc => I, Pos: [109, 121] cc => I, Pos: [111, 131] cc => I, Pos: [111, 131] cc => I, Pos: [112, 119, 124] ccc => cc, Pos: [115, 117] cc => I, Pos: [115, 117] cc => I, Pos: [135, 137, 141] ccc => cc, Pos: [176, 178, 184] ccc => cc]

--------End Timer [Generate Plans]:  0.015623092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 10, 11] ccc => cc,
 Pos: [14, 18, 22] ccc => cc,
 Pos: [31, 45] cc => I,
 Pos: [85, 101] cc => I,
 Pos: [109, 121] cc => I,
 Pos: [111, 131] cc => I,
 Pos: [112, 119, 124] ccc => cc,
 Pos: [115, 117] cc => I,
 Pos: [135, 137, 141] ccc => cc,
 Pos: [176, 178, 184] ccc => cc]
Change: 10, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 10, 11] ccc => cc
Apply:  Pos: [14, 18, 22] ccc => cc
Apply:  Pos: [31, 45] cc => I
Apply:  Pos: [85, 101] cc => I
Apply:  Pos: [109, 121] cc => I
Apply:  Pos: [111, 131] cc => I
Apply:  Pos: [112, 119, 124] ccc => cc
Apply:  Pos: [115, 117] cc => I
Apply:  Pos: [135, 137, 141] ccc => cc
Apply:  Pos: [176, 178, 184] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [9, 12], [8, 14], [6, 11], [15, 8], [15, 18], [16, 2], [4, 7], [12, 13], [2, 15], [8, 14], [0, 7], [0, 1], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [7, 1], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [3, 16], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 4], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 4], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [2, 6], [0, 19], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.8451058864593506

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[164, 188]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[44, 45, 50]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[164, 188]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4634079933166504

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [44, 45, 50] ccc => cc, Pos: [164, 188] cc => I, Pos: [164, 188] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [44, 45, 50] ccc => cc, Pos: [164, 188] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [44, 45, 50] ccc => cc
Apply:  Pos: [164, 188] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [9, 12], [8, 14], [6, 11], [15, 18], [15, 8], [16, 2], [4, 7], [12, 13], [2, 15], [8, 14], [0, 1], [0, 7], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [7, 1], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [3, 16], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [15, 14], [18, 14], [13, 8], [9, 12], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 4], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [2, 6], [0, 19], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.4634079933166504

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4110569953918457

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [9, 12], [8, 14], [6, 11], [15, 8], [15, 18], [16, 2], [4, 7], [12, 13], [2, 15], [8, 14], [0, 7], [0, 1], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [7, 1], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [3, 16], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 12], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 4], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [2, 6], [0, 19], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.4110569953918457

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [188] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 43 - (small)
 - circuit cycle: 376

Reduced: 
 - size: 127 (40.32%)
 - depth: 2 (4.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14055371284484863

[10, 0], [1, 19], [9, 4], [3, 16], [12, 13], [8, 14], [6, 11], [15, 18], [17, 5], [10, 0], [1, 19], [15, 8], [6, 11], [16, 2], [17, 5], [4, 7], [12, 13], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [17, 3], [0, 1], [12, 13], [5, 6], [16, 2], [15, 8], [0, 7], [6, 15], [17, 3], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 0], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [8, 14], [17, 3], [13, 0], [8, 14], [6, 15], [17, 5], [7, 1], [11, 18], [13, 4], [6, 15], [3, 16], [10, 8], [7, 1], [11, 18], [4, 7], [10, 8], [12, 13], [5, 6], [1, 19], [2, 15], [18, 14], [3, 16], [0, 7], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [0, 7], [9, 4], [5, 2], [17, 3], [11, 18], [10, 8], [4, 7], [6, 15], [9, 12], [3, 16], [5, 2], [0, 1], [4, 7], [17, 3], [1, 19], [5, 15], [16, 9], [8, 14], [11, 18], [12, 4], [3, 16], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [9, 12], [10, 8], [3, 16], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [12, 4], [8, 18], [3, 10], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [5, 15], [11, 18], [7, 1], [3, 10], [16, 9], [5, 15], [2, 10], [13, 0], [1, 19], [11, 18], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [1, 19], [12, 4], [13, 8], [4, 7], [3, 10], [6, 11], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [6, 11], [14, 1], [4, 7], [8, 14], [6, 11], [10, 0], [16, 9], [4, 7], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [1, 19], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [1, 19], [3, 16], [18, 14], [7, 1], [2, 15], [3, 10], [12, 13], [17, 5], [0, 19], [18, 14], [3, 16], [7, 19], [13, 0], [2, 15], [6, 11], [17, 5], [9, 4], [8, 14], [3, 10], [12, 13], [7, 19], [16, 2], [11, 18], [6, 15], [15, 8], [13, 0], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [14, 1], [9, 12], [13, 8], [0, 7], [15, 18], [10, 13], [12, 4], [0, 7], [16, 2], [5, 6], [14, 1], [6, 15], [9, 12], [3, 10], [13, 8], [18, 14], [7, 19], [6, 11], [16, 2], [13, 8], [9, 12], [3, 10], [1, 19], [4, 7], [18, 14], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 5], [12, 4], [10, 0], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [10, 0], [7, 1], [17, 5], [13, 4], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 6], [0, 7], [15, 14], [2, 10], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [2, 10], [3, 16], [5, 6], [13, 4], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [14, 1], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [10, 13], [11, 18], [15, 8], [14, 1], [9, 4], [3, 2], [12, 4], [10, 13], [7, 19], [11, 18], [6, 15], [16, 9], [17, 5], [3, 2], [1, 19], [12, 13], [15, 18], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [15, 18], [8, 14], [13, 0], [9, 12], [5, 2], [10, 0], [5, 2], [9, 12], [11, 18], [14, 1], [13, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 19, 27]
[39, 43, 50]
[79, 85, 89]
[205, 210, 216]
[222, 229, 237]
[236, 238, 246]
[234, 240, 248]
[256, 265, 268]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 25]
[72, 79, 85]
[66, 87, 90]
[95, 102, 110]
[128, 135, 137]
[183, 190, 196]
[250, 256, 265]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.218764781951904

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 9] cc => I, Pos: [0, 9] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [4, 16] cc => I, Pos: [4, 16] cc => I, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [8, 14] cc => I, Pos: [8, 14] cc => I, Pos: [9, 17] cc => I, Pos: [9, 17] cc => I, Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [13, 19, 27] ccc => cc, Pos: [16, 18, 25] ccc => cc, Pos: [23, 31] cc => I, Pos: [23, 31] cc => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [32, 48] cc => I, Pos: [32, 48] cc => I, Pos: [39, 43, 50] ccc => cc, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [54, 60] cc => I, Pos: [54, 60] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [66, 87, 90] ccc => cc, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [72, 79, 85] ccc => cc, Pos: [78, 86] cc => I, Pos: [78, 86] cc => I, Pos: [79, 85, 89] ccc => cc, Pos: [80, 94] cc => I, Pos: [80, 94] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [95, 102, 110] ccc => cc, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [112, 121] cc => I, Pos: [112, 121] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [118, 123] cc => I, Pos: [118, 123] cc => I, Pos: [119, 127] cc => I, Pos: [119, 127] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 135, 137] ccc => cc, Pos: [131, 139] cc => I, Pos: [131, 139] cc => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 152] cc => I, Pos: [148, 152] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [153, 161] cc => I, Pos: [153, 161] cc => I, Pos: [155, 159] cc => I, Pos: [155, 159] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [172, 181] cc => I, Pos: [172, 181] cc => I, Pos: [173, 180] cc => I, Pos: [173, 180] cc => I, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [178, 186] cc => I, Pos: [178, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 190, 196] ccc => cc, Pos: [186, 201] cc => I, Pos: [186, 201] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [205, 210, 216] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [212, 222] cc => I, Pos: [212, 222] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 225] cc => I, Pos: [217, 225] cc => I, Pos: [218, 223] cc => I, Pos: [218, 223] cc => I, Pos: [219, 228] cc => I, Pos: [219, 228] cc => I, Pos: [222, 229, 237] ccc => cc, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [228, 231] cc => I, Pos: [228, 231] cc => I, Pos: [234, 240, 248] ccc => cc, Pos: [236, 238, 246] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [249, 260] cc => I, Pos: [249, 260] cc => I, Pos: [250, 256, 265] ccc => cc, Pos: [256, 265, 268] ccc => cc, Pos: [259, 266] cc => I, Pos: [259, 266] cc => I, Pos: [260, 269] cc => I, Pos: [260, 269] cc => I, Pos: [269, 274] cc => I, Pos: [269, 274] cc => I, Pos: [276, 285] cc => I, Pos: [276, 285] cc => I, Pos: [281, 294] cc => I, Pos: [281, 294] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [283, 291] cc => I, Pos: [283, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [294, 300] cc => I, Pos: [294, 300] cc => I, Pos: [298, 304] cc => I, Pos: [298, 304] cc => I, Pos: [307, 311] cc => I, Pos: [307, 311] cc => I, Pos: [308, 310] cc => I, Pos: [308, 310] cc => I]

--------End Timer [Generate Plans]:  0.15623855590820312

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 17] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [4, 16] cc => I,
 Pos: [12, 22] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [13, 19, 27] ccc => cc,
 Pos: [23, 31] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [54, 60] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [72, 79, 85] ccc => cc,
 Pos: [78, 86] cc => I,
 Pos: [80, 94] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [137, 150] cc => I,
 Pos: [131, 139] cc => I,
 Pos: [153, 161] cc => I,
 Pos: [148, 152] cc => I,
 Pos: [155, 159] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [186, 201] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [205, 210, 216] ccc => cc,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [218, 223] cc => I,
 Pos: [228, 231] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [249, 260] cc => I,
 Pos: [256, 265, 268] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [269, 274] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [281, 294] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 61, Saving: 65

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 17] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [4, 16] cc => I
Apply:  Pos: [12, 22] cc => I
Apply:  Pos: [8, 14] cc => I
Apply:  Pos: [13, 19, 27] ccc => cc
Apply:  Pos: [23, 31] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [39, 43, 50] ccc => cc
Apply:  Pos: [54, 60] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [58, 69] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [66, 87, 90] ccc => cc
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [72, 79, 85] ccc => cc
Apply:  Pos: [78, 86] cc => I
Apply:  Pos: [80, 94] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [95, 102, 110] ccc => cc
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [112, 121] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [119, 127] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [137, 150] cc => I
Apply:  Pos: [131, 139] cc => I
Apply:  Pos: [153, 161] cc => I
Apply:  Pos: [148, 152] cc => I
Apply:  Pos: [155, 159] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [172, 181] cc => I
Apply:  Pos: [173, 180] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 190, 196] ccc => cc
Apply:  Pos: [186, 201] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [205, 210, 216] ccc => cc
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [212, 222] cc => I
Apply:  Pos: [217, 225] cc => I
Apply:  Pos: [218, 223] cc => I
Apply:  Pos: [228, 231] cc => I
Apply:  Pos: [234, 240, 248] ccc => cc
Apply:  Pos: [236, 238, 246] ccc => cc
Apply:  Pos: [249, 260] cc => I
Apply:  Pos: [256, 265, 268] ccc => cc
Apply:  Pos: [259, 266] cc => I
Apply:  Pos: [269, 274] cc => I
Apply:  Pos: [276, 285] cc => I
Apply:  Pos: [281, 294] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [283, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [298, 304] cc => I
Apply:  Pos: [307, 311] cc => I
Apply:  Pos: [308, 310] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [8, 14], [6, 11], [15, 18], [15, 8], [16, 15], [4, 7], [9, 12], [2, 15], [8, 14], [7, 19], [0, 1], [12, 13], [5, 6], [15, 8], [0, 7], [6, 15], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [17, 3], [17, 5], [13, 4], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [2, 10], [17, 3], [15, 14], [13, 8], [12, 4], [9, 4], [3, 16], [10, 8], [6, 15], [9, 12], [1, 19], [17, 3], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [8, 14], [0, 7], [11, 18], [9, 13], [7, 1], [12, 13], [0, 19], [12, 13], [2, 15], [6, 11], [9, 4], [8, 14], [13, 0], [16, 2], [11, 18], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 4], [13, 8], [15, 18], [10, 13], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [13, 8], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  6.375003337860107

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[32, 44]
[36, 45]
[112, 114]
[107, 118]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 50, 55]
[117, 126, 130]
[173, 175, 181]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[12, 17, 23]
[53, 57, 59]
[109, 116, 121]
[131, 133, 145]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[32, 44]
[36, 45]
[112, 114]
[107, 118]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.718751907348633

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 17, 23] ccc => cc, Pos: [32, 44] cc => I, Pos: [32, 44] cc => I, Pos: [36, 45] cc => I, Pos: [36, 45] cc => I, Pos: [45, 50, 55] ccc => cc, Pos: [53, 57, 59] ccc => cc, Pos: [107, 118] cc => I, Pos: [107, 118] cc => I, Pos: [109, 116, 121] ccc => cc, Pos: [112, 114] cc => I, Pos: [112, 114] cc => I, Pos: [117, 126, 130] ccc => cc, Pos: [131, 133, 145] ccc => cc, Pos: [173, 175, 181] ccc => cc]

--------End Timer [Generate Plans]:  0.03126168251037598

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 17, 23] ccc => cc,
 Pos: [32, 44] cc => I,
 Pos: [45, 50, 55] ccc => cc,
 Pos: [53, 57, 59] ccc => cc,
 Pos: [107, 118] cc => I,
 Pos: [109, 116, 121] ccc => cc,
 Pos: [112, 114] cc => I,
 Pos: [117, 126, 130] ccc => cc,
 Pos: [131, 133, 145] ccc => cc,
 Pos: [173, 175, 181] ccc => cc]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 17, 23] ccc => cc
Apply:  Pos: [32, 44] cc => I
Apply:  Pos: [45, 50, 55] ccc => cc
Apply:  Pos: [53, 57, 59] ccc => cc
Apply:  Pos: [107, 118] cc => I
Apply:  Pos: [109, 116, 121] ccc => cc
Apply:  Pos: [112, 114] cc => I
Apply:  Pos: [117, 126, 130] ccc => cc
Apply:  Pos: [131, 133, 145] ccc => cc
Apply:  Pos: [173, 175, 181] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [8, 14], [6, 11], [15, 8], [15, 18], [16, 15], [4, 7], [9, 12], [2, 15], [8, 14], [0, 7], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [7, 1], [5, 15], [17, 5], [17, 3], [13, 4], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [17, 16], [15, 14], [13, 8], [9, 4], [12, 4], [3, 16], [10, 8], [6, 15], [16, 9], [1, 19], [5, 15], [9, 12], [8, 14], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [2, 6], [0, 19], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.750013589859009

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[163, 187]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[163, 187]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.406243324279785

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [163, 187] cc => I, Pos: [163, 187] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [163, 187] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [163, 187] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [8, 14], [6, 11], [15, 18], [15, 8], [16, 15], [4, 7], [9, 12], [2, 15], [8, 14], [0, 1], [0, 7], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [7, 1], [5, 15], [17, 3], [17, 5], [13, 4], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [17, 16], [15, 14], [13, 8], [12, 4], [9, 4], [3, 16], [10, 8], [6, 15], [16, 9], [1, 19], [5, 15], [9, 12], [8, 14], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [2, 6], [0, 19], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.406243324279785

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3906192779541016

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [8, 14], [6, 11], [15, 8], [15, 18], [16, 15], [4, 7], [9, 12], [2, 15], [8, 14], [0, 7], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [7, 1], [5, 15], [17, 5], [17, 3], [13, 4], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [17, 16], [15, 14], [13, 8], [9, 4], [12, 4], [3, 16], [10, 8], [6, 15], [16, 9], [1, 19], [5, 15], [9, 12], [8, 14], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [2, 6], [0, 19], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.3906192779541016

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [188] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 376

Reduced: 
 - size: 127 (40.32%)
 - depth: 0 (0.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499189376831055

[10, 0], [1, 19], [9, 4], [3, 16], [12, 13], [8, 14], [6, 11], [15, 18], [17, 5], [10, 0], [1, 19], [15, 8], [6, 11], [16, 2], [17, 5], [4, 7], [12, 13], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [17, 3], [0, 1], [12, 13], [5, 6], [16, 2], [15, 8], [0, 7], [6, 15], [17, 3], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 0], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [8, 14], [17, 3], [13, 0], [8, 14], [6, 15], [17, 5], [7, 1], [11, 18], [13, 4], [6, 15], [3, 16], [10, 8], [7, 1], [11, 18], [4, 7], [10, 8], [12, 13], [5, 6], [1, 19], [2, 15], [18, 14], [3, 16], [0, 7], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [0, 7], [9, 4], [5, 2], [17, 3], [11, 18], [10, 8], [4, 7], [6, 15], [9, 12], [3, 16], [5, 2], [0, 1], [4, 7], [17, 3], [1, 19], [5, 15], [16, 9], [8, 14], [11, 18], [12, 4], [3, 16], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [9, 12], [10, 8], [3, 16], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [12, 4], [8, 18], [3, 10], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [5, 15], [11, 18], [7, 1], [3, 10], [16, 9], [5, 15], [2, 10], [13, 0], [1, 19], [11, 18], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [1, 19], [12, 4], [13, 8], [4, 7], [3, 10], [6, 11], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [6, 11], [14, 1], [4, 7], [8, 14], [6, 11], [10, 0], [16, 9], [4, 7], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [1, 19], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [1, 19], [3, 16], [18, 14], [7, 1], [2, 15], [3, 10], [12, 13], [17, 5], [0, 19], [18, 14], [3, 16], [7, 19], [13, 0], [2, 15], [6, 11], [17, 5], [9, 4], [8, 14], [3, 10], [12, 13], [7, 19], [16, 2], [11, 18], [6, 15], [15, 8], [13, 0], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [14, 1], [9, 12], [13, 8], [0, 7], [15, 18], [10, 13], [12, 4], [0, 7], [16, 2], [5, 6], [14, 1], [6, 15], [9, 12], [3, 10], [13, 8], [18, 14], [7, 19], [6, 11], [16, 2], [13, 8], [9, 12], [3, 10], [1, 19], [4, 7], [18, 14], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 5], [12, 4], [10, 0], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [10, 0], [7, 1], [17, 5], [13, 4], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 6], [0, 7], [15, 14], [2, 10], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [2, 10], [3, 16], [5, 6], [13, 4], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [14, 1], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [10, 13], [11, 18], [15, 8], [14, 1], [9, 4], [3, 2], [12, 4], [10, 13], [7, 19], [11, 18], [6, 15], [16, 9], [17, 5], [3, 2], [1, 19], [12, 13], [15, 18], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [15, 18], [8, 14], [13, 0], [9, 12], [5, 2], [10, 0], [5, 2], [9, 12], [11, 18], [14, 1], [13, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 19, 27]
[39, 43, 50]
[79, 85, 89]
[205, 210, 216]
[222, 229, 237]
[236, 238, 246]
[234, 240, 248]
[256, 265, 268]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 25]
[72, 79, 85]
[66, 87, 90]
[95, 102, 110]
[128, 135, 137]
[183, 190, 196]
[250, 256, 265]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.078720569610596

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 9] cc => I, Pos: [0, 9] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [4, 16] cc => I, Pos: [4, 16] cc => I, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [8, 14] cc => I, Pos: [8, 14] cc => I, Pos: [9, 17] cc => I, Pos: [9, 17] cc => I, Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [13, 19, 27] ccc => cc, Pos: [16, 18, 25] ccc => cc, Pos: [23, 31] cc => I, Pos: [23, 31] cc => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [32, 48] cc => I, Pos: [32, 48] cc => I, Pos: [39, 43, 50] ccc => cc, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [54, 60] cc => I, Pos: [54, 60] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [66, 87, 90] ccc => cc, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [72, 79, 85] ccc => cc, Pos: [78, 86] cc => I, Pos: [78, 86] cc => I, Pos: [79, 85, 89] ccc => cc, Pos: [80, 94] cc => I, Pos: [80, 94] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [95, 102, 110] ccc => cc, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [112, 121] cc => I, Pos: [112, 121] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [118, 123] cc => I, Pos: [118, 123] cc => I, Pos: [119, 127] cc => I, Pos: [119, 127] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 135, 137] ccc => cc, Pos: [131, 139] cc => I, Pos: [131, 139] cc => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 152] cc => I, Pos: [148, 152] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [153, 161] cc => I, Pos: [153, 161] cc => I, Pos: [155, 159] cc => I, Pos: [155, 159] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [172, 181] cc => I, Pos: [172, 181] cc => I, Pos: [173, 180] cc => I, Pos: [173, 180] cc => I, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [178, 186] cc => I, Pos: [178, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 190, 196] ccc => cc, Pos: [186, 201] cc => I, Pos: [186, 201] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [205, 210, 216] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [212, 222] cc => I, Pos: [212, 222] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 225] cc => I, Pos: [217, 225] cc => I, Pos: [218, 223] cc => I, Pos: [218, 223] cc => I, Pos: [219, 228] cc => I, Pos: [219, 228] cc => I, Pos: [222, 229, 237] ccc => cc, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [228, 231] cc => I, Pos: [228, 231] cc => I, Pos: [234, 240, 248] ccc => cc, Pos: [236, 238, 246] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [249, 260] cc => I, Pos: [249, 260] cc => I, Pos: [250, 256, 265] ccc => cc, Pos: [256, 265, 268] ccc => cc, Pos: [259, 266] cc => I, Pos: [259, 266] cc => I, Pos: [260, 269] cc => I, Pos: [260, 269] cc => I, Pos: [269, 274] cc => I, Pos: [269, 274] cc => I, Pos: [276, 285] cc => I, Pos: [276, 285] cc => I, Pos: [281, 294] cc => I, Pos: [281, 294] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [283, 291] cc => I, Pos: [283, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [294, 300] cc => I, Pos: [294, 300] cc => I, Pos: [298, 304] cc => I, Pos: [298, 304] cc => I, Pos: [307, 311] cc => I, Pos: [307, 311] cc => I, Pos: [308, 310] cc => I, Pos: [308, 310] cc => I]

--------End Timer [Generate Plans]:  0.1563572883605957

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 9] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [4, 16] cc => I,
 Pos: [6, 12] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [27, 34] cc => I,
 Pos: [23, 31] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [46, 54] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [78, 86] cc => I,
 Pos: [79, 85, 89] ccc => cc,
 Pos: [94, 101] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [118, 123] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [128, 135, 137] ccc => cc,
 Pos: [139, 148] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [155, 159] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [186, 201] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [205, 210, 216] ccc => cc,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [228, 231] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [250, 256, 265] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [260, 269] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [294, 300] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 60, Saving: 64

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 9] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [4, 16] cc => I
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [8, 14] cc => I
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [23, 31] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [39, 43, 50] ccc => cc
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [66, 87, 90] ccc => cc
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [78, 86] cc => I
Apply:  Pos: [79, 85, 89] ccc => cc
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [95, 102, 110] ccc => cc
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [112, 121] cc => I
Apply:  Pos: [118, 123] cc => I
Apply:  Pos: [119, 127] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [128, 135, 137] ccc => cc
Apply:  Pos: [139, 148] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [155, 159] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [172, 181] cc => I
Apply:  Pos: [173, 180] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 190, 196] ccc => cc
Apply:  Pos: [186, 201] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [205, 210, 216] ccc => cc
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [212, 222] cc => I
Apply:  Pos: [217, 225] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [228, 231] cc => I
Apply:  Pos: [234, 240, 248] ccc => cc
Apply:  Pos: [236, 238, 246] ccc => cc
Apply:  Pos: [241, 249] cc => I
Apply:  Pos: [250, 256, 265] ccc => cc
Apply:  Pos: [259, 266] cc => I
Apply:  Pos: [260, 269] cc => I
Apply:  Pos: [276, 285] cc => I
Apply:  Pos: [294, 300] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [283, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [298, 304] cc => I
Apply:  Pos: [307, 311] cc => I
Apply:  Pos: [308, 310] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 2], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [0, 7], [6, 15], [8, 14], [10, 13], [9, 12], [1, 19], [7, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [5, 15], [17, 3], [17, 5], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [2, 10], [15, 14], [13, 8], [12, 4], [9, 4], [17, 16], [11, 18], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [4, 7], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [4, 7], [8, 14], [6, 11], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [8, 14], [0, 7], [11, 18], [9, 13], [7, 1], [12, 13], [0, 19], [12, 13], [2, 15], [6, 11], [9, 4], [8, 14], [13, 0], [16, 2], [11, 18], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 4], [13, 8], [15, 18], [10, 13], [12, 4], [5, 6], [6, 15], [13, 8], [18, 14], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [5, 6], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  6.235077857971191

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[87, 98]
[84, 100]
[114, 116]
[109, 120]
[155, 161]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[119, 128, 132]
[161, 167, 175]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 17, 22]
[111, 118, 123]
[133, 135, 139]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[87, 98]
[84, 100]
[114, 116]
[109, 120]
[155, 161]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.703240156173706

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 17, 22] ccc => cc, Pos: [31, 44] cc => I, Pos: [31, 44] cc => I, Pos: [84, 100] cc => I, Pos: [84, 100] cc => I, Pos: [87, 98] cc => I, Pos: [87, 98] cc => I, Pos: [109, 120] cc => I, Pos: [109, 120] cc => I, Pos: [111, 118, 123] ccc => cc, Pos: [114, 116] cc => I, Pos: [114, 116] cc => I, Pos: [119, 128, 132] ccc => cc, Pos: [133, 135, 139] ccc => cc, Pos: [155, 161] cc => I, Pos: [155, 161] cc => I, Pos: [161, 167, 175] ccc => cc]

--------End Timer [Generate Plans]:  0.03126120567321777

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 17, 22] ccc => cc,
 Pos: [31, 44] cc => I,
 Pos: [84, 100] cc => I,
 Pos: [87, 98] cc => I,
 Pos: [109, 120] cc => I,
 Pos: [111, 118, 123] ccc => cc,
 Pos: [114, 116] cc => I,
 Pos: [119, 128, 132] ccc => cc,
 Pos: [133, 135, 139] ccc => cc,
 Pos: [155, 161] cc => I]
Change: 10, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 17, 22] ccc => cc
Apply:  Pos: [31, 44] cc => I
Apply:  Pos: [84, 100] cc => I
Apply:  Pos: [87, 98] cc => I
Apply:  Pos: [109, 120] cc => I
Apply:  Pos: [111, 118, 123] ccc => cc
Apply:  Pos: [114, 116] cc => I
Apply:  Pos: [119, 128, 132] ccc => cc
Apply:  Pos: [133, 135, 139] ccc => cc
Apply:  Pos: [155, 161] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 8], [15, 18], [16, 2], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 5], [17, 3], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 4], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [15, 8], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.734501361846924

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[83, 88]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[44, 45, 50]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[83, 88]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3440043926239014

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [44, 45, 50] ccc => cc, Pos: [83, 88] cc => I, Pos: [83, 88] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [44, 45, 50] ccc => cc, Pos: [83, 88] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [44, 45, 50] ccc => cc
Apply:  Pos: [83, 88] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 2], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [17, 5], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [15, 14], [18, 14], [13, 8], [9, 12], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.3440043926239014

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.281554937362671

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 8], [15, 18], [16, 2], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 5], [17, 3], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 12], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [18, 14], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.281554937362671

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [186] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 372

Reduced: 
 - size: 129 (40.95%)
 - depth: 0 (0.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936546325683594

[10, 0], [1, 19], [9, 4], [3, 16], [12, 13], [8, 14], [6, 11], [15, 18], [17, 5], [10, 0], [1, 19], [15, 8], [6, 11], [16, 2], [17, 5], [4, 7], [12, 13], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [17, 3], [0, 1], [12, 13], [5, 6], [16, 2], [15, 8], [0, 7], [6, 15], [17, 3], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 0], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [8, 14], [17, 3], [13, 0], [8, 14], [6, 15], [17, 5], [7, 1], [11, 18], [13, 4], [6, 15], [3, 16], [10, 8], [7, 1], [11, 18], [4, 7], [10, 8], [12, 13], [5, 6], [1, 19], [2, 15], [18, 14], [3, 16], [0, 7], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [0, 7], [9, 4], [5, 2], [17, 3], [11, 18], [10, 8], [4, 7], [6, 15], [9, 12], [3, 16], [5, 2], [0, 1], [4, 7], [17, 3], [1, 19], [5, 15], [16, 9], [8, 14], [11, 18], [12, 4], [3, 16], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [9, 12], [10, 8], [3, 16], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [12, 4], [8, 18], [3, 10], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [5, 15], [11, 18], [7, 1], [3, 10], [16, 9], [5, 15], [2, 10], [13, 0], [1, 19], [11, 18], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [1, 19], [12, 4], [13, 8], [4, 7], [3, 10], [6, 11], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [6, 11], [14, 1], [4, 7], [8, 14], [6, 11], [10, 0], [16, 9], [4, 7], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [1, 19], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [1, 19], [3, 16], [18, 14], [7, 1], [2, 15], [3, 10], [12, 13], [17, 5], [0, 19], [18, 14], [3, 16], [7, 19], [13, 0], [2, 15], [6, 11], [17, 5], [9, 4], [8, 14], [3, 10], [12, 13], [7, 19], [16, 2], [11, 18], [6, 15], [15, 8], [13, 0], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [14, 1], [9, 12], [13, 8], [0, 7], [15, 18], [10, 13], [12, 4], [0, 7], [16, 2], [5, 6], [14, 1], [6, 15], [9, 12], [3, 10], [13, 8], [18, 14], [7, 19], [6, 11], [16, 2], [13, 8], [9, 12], [3, 10], [1, 19], [4, 7], [18, 14], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 5], [12, 4], [10, 0], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [10, 0], [7, 1], [17, 5], [13, 4], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 6], [0, 7], [15, 14], [2, 10], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [2, 10], [3, 16], [5, 6], [13, 4], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [14, 1], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [10, 13], [11, 18], [15, 8], [14, 1], [9, 4], [3, 2], [12, 4], [10, 13], [7, 19], [11, 18], [6, 15], [16, 9], [17, 5], [3, 2], [1, 19], [12, 13], [15, 18], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [15, 18], [8, 14], [13, 0], [9, 12], [5, 2], [10, 0], [5, 2], [9, 12], [11, 18], [14, 1], [13, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 19, 27]
[39, 43, 50]
[79, 85, 89]
[205, 210, 216]
[222, 229, 237]
[236, 238, 246]
[234, 240, 248]
[256, 265, 268]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 25]
[72, 79, 85]
[66, 87, 90]
[95, 102, 110]
[128, 135, 137]
[183, 190, 196]
[250, 256, 265]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.2640297412872314

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 9] cc => I, Pos: [0, 9] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [4, 16] cc => I, Pos: [4, 16] cc => I, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [8, 14] cc => I, Pos: [8, 14] cc => I, Pos: [9, 17] cc => I, Pos: [9, 17] cc => I, Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [13, 19, 27] ccc => cc, Pos: [16, 18, 25] ccc => cc, Pos: [23, 31] cc => I, Pos: [23, 31] cc => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [32, 48] cc => I, Pos: [32, 48] cc => I, Pos: [39, 43, 50] ccc => cc, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [54, 60] cc => I, Pos: [54, 60] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [66, 87, 90] ccc => cc, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [72, 79, 85] ccc => cc, Pos: [78, 86] cc => I, Pos: [78, 86] cc => I, Pos: [79, 85, 89] ccc => cc, Pos: [80, 94] cc => I, Pos: [80, 94] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [95, 102, 110] ccc => cc, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [112, 121] cc => I, Pos: [112, 121] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [118, 123] cc => I, Pos: [118, 123] cc => I, Pos: [119, 127] cc => I, Pos: [119, 127] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 135, 137] ccc => cc, Pos: [131, 139] cc => I, Pos: [131, 139] cc => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 152] cc => I, Pos: [148, 152] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [153, 161] cc => I, Pos: [153, 161] cc => I, Pos: [155, 159] cc => I, Pos: [155, 159] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [172, 181] cc => I, Pos: [172, 181] cc => I, Pos: [173, 180] cc => I, Pos: [173, 180] cc => I, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [178, 186] cc => I, Pos: [178, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 190, 196] ccc => cc, Pos: [186, 201] cc => I, Pos: [186, 201] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [205, 210, 216] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [212, 222] cc => I, Pos: [212, 222] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 225] cc => I, Pos: [217, 225] cc => I, Pos: [218, 223] cc => I, Pos: [218, 223] cc => I, Pos: [219, 228] cc => I, Pos: [219, 228] cc => I, Pos: [222, 229, 237] ccc => cc, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [228, 231] cc => I, Pos: [228, 231] cc => I, Pos: [234, 240, 248] ccc => cc, Pos: [236, 238, 246] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [249, 260] cc => I, Pos: [249, 260] cc => I, Pos: [250, 256, 265] ccc => cc, Pos: [256, 265, 268] ccc => cc, Pos: [259, 266] cc => I, Pos: [259, 266] cc => I, Pos: [260, 269] cc => I, Pos: [260, 269] cc => I, Pos: [269, 274] cc => I, Pos: [269, 274] cc => I, Pos: [276, 285] cc => I, Pos: [276, 285] cc => I, Pos: [281, 294] cc => I, Pos: [281, 294] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [283, 291] cc => I, Pos: [283, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [294, 300] cc => I, Pos: [294, 300] cc => I, Pos: [298, 304] cc => I, Pos: [298, 304] cc => I, Pos: [307, 311] cc => I, Pos: [307, 311] cc => I, Pos: [308, 310] cc => I, Pos: [308, 310] cc => I]

--------End Timer [Generate Plans]:  0.15623879432678223

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 9] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [4, 16] cc => I,
 Pos: [12, 22] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [27, 34] cc => I,
 Pos: [23, 31] cc => I,
 Pos: [48, 51] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [54, 60] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [78, 86] cc => I,
 Pos: [79, 85, 89] ccc => cc,
 Pos: [80, 94] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [137, 150] cc => I,
 Pos: [131, 139] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [148, 152] cc => I,
 Pos: [155, 159] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 186] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [204, 214] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [218, 223] cc => I,
 Pos: [219, 228] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [250, 256, 265] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [269, 274] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [294, 300] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 60, Saving: 64

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 9] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [4, 16] cc => I
Apply:  Pos: [12, 22] cc => I
Apply:  Pos: [8, 14] cc => I
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [23, 31] cc => I
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [39, 43, 50] ccc => cc
Apply:  Pos: [54, 60] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [66, 87, 90] ccc => cc
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [78, 86] cc => I
Apply:  Pos: [79, 85, 89] ccc => cc
Apply:  Pos: [80, 94] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [95, 102, 110] ccc => cc
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [112, 121] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [119, 127] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [137, 150] cc => I
Apply:  Pos: [131, 139] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [148, 152] cc => I
Apply:  Pos: [155, 159] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 186] cc => I
Apply:  Pos: [172, 181] cc => I
Apply:  Pos: [173, 180] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 190, 196] ccc => cc
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [212, 222] cc => I
Apply:  Pos: [217, 225] cc => I
Apply:  Pos: [218, 223] cc => I
Apply:  Pos: [219, 228] cc => I
Apply:  Pos: [234, 240, 248] ccc => cc
Apply:  Pos: [236, 238, 246] ccc => cc
Apply:  Pos: [241, 249] cc => I
Apply:  Pos: [250, 256, 265] ccc => cc
Apply:  Pos: [259, 266] cc => I
Apply:  Pos: [269, 274] cc => I
Apply:  Pos: [276, 285] cc => I
Apply:  Pos: [294, 300] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [283, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [298, 304] cc => I
Apply:  Pos: [307, 311] cc => I
Apply:  Pos: [308, 310] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [6, 11], [15, 18], [15, 8], [16, 2], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [0, 1], [12, 13], [5, 6], [15, 8], [0, 7], [6, 15], [8, 14], [10, 13], [9, 12], [1, 19], [7, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [17, 3], [17, 5], [13, 4], [3, 16], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [2, 10], [15, 14], [13, 8], [12, 4], [9, 4], [17, 16], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [7, 1], [12, 13], [0, 19], [12, 13], [6, 11], [9, 4], [8, 14], [13, 0], [16, 2], [11, 18], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [9, 12], [13, 8], [15, 18], [10, 13], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [5, 6], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  6.420268535614014

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[113, 115]
[106, 118]
[109, 128]
[153, 159]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[159, 165, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[12, 17, 22]
[110, 116, 121]
[132, 134, 145]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[113, 115]
[106, 118]
[109, 128]
[153, 159]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.734689712524414

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 17, 22] ccc => cc, Pos: [31, 44] cc => I, Pos: [31, 44] cc => I, Pos: [106, 118] cc => I, Pos: [106, 118] cc => I, Pos: [109, 128] cc => I, Pos: [109, 128] cc => I, Pos: [110, 116, 121] ccc => cc, Pos: [113, 115] cc => I, Pos: [113, 115] cc => I, Pos: [132, 134, 145] ccc => cc, Pos: [153, 159] cc => I, Pos: [153, 159] cc => I, Pos: [159, 165, 174] ccc => cc]

--------End Timer [Generate Plans]:  0.031249046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 17, 22] ccc => cc,
 Pos: [31, 44] cc => I,
 Pos: [106, 118] cc => I,
 Pos: [109, 128] cc => I,
 Pos: [110, 116, 121] ccc => cc,
 Pos: [113, 115] cc => I,
 Pos: [132, 134, 145] ccc => cc,
 Pos: [159, 165, 174] ccc => cc]
Change: 8, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 17, 22] ccc => cc
Apply:  Pos: [31, 44] cc => I
Apply:  Pos: [106, 118] cc => I
Apply:  Pos: [109, 128] cc => I
Apply:  Pos: [110, 116, 121] ccc => cc
Apply:  Pos: [113, 115] cc => I
Apply:  Pos: [132, 134, 145] ccc => cc
Apply:  Pos: [159, 165, 174] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [6, 11], [15, 8], [15, 18], [16, 2], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [7, 1], [5, 15], [17, 5], [17, 3], [13, 4], [3, 16], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 4], [12, 4], [17, 16], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [2, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [11, 18], [9, 4], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [5, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.7659387588500977

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[103, 113]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[44, 45, 49]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[103, 113]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.484631299972534

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [44, 45, 49] ccc => cc, Pos: [103, 113] cc => I, Pos: [103, 113] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [44, 45, 49] ccc => cc, Pos: [103, 113] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [44, 45, 49] ccc => cc
Apply:  Pos: [103, 113] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [6, 11], [15, 18], [15, 8], [16, 2], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 1], [0, 7], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [7, 1], [5, 15], [17, 3], [17, 5], [13, 4], [3, 16], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [15, 14], [18, 14], [13, 8], [9, 12], [12, 4], [17, 16], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [2, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [11, 18], [9, 4], [13, 0], [16, 2], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [5, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.484631299972534

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[100, 101, 110]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4379563331604004

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [100, 101, 110] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [100, 101, 110] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [100, 101, 110] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [6, 11], [15, 8], [15, 18], [16, 2], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [7, 1], [5, 15], [17, 5], [17, 3], [13, 4], [3, 16], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 12], [12, 4], [17, 16], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 15], [2, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [11, 18], [9, 4], [13, 0], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [5, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.4379563331604004

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3909189701080322

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [6, 11], [15, 18], [15, 8], [16, 2], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 1], [0, 7], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [8, 14], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [7, 1], [5, 15], [17, 3], [17, 5], [13, 4], [3, 16], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [15, 14], [18, 14], [13, 8], [9, 12], [12, 4], [17, 16], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [2, 15], [16, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [11, 18], [9, 4], [13, 0], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [5, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.3909189701080322

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [187] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 374

Reduced: 
 - size: 128 (40.63%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12525129318237305

[10, 0], [1, 19], [9, 4], [3, 16], [12, 13], [8, 14], [6, 11], [15, 18], [17, 5], [10, 0], [1, 19], [15, 8], [6, 11], [16, 2], [17, 5], [4, 7], [12, 13], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [17, 3], [0, 1], [12, 13], [5, 6], [16, 2], [15, 8], [0, 7], [6, 15], [17, 3], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 0], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [8, 14], [17, 3], [13, 0], [8, 14], [6, 15], [17, 5], [7, 1], [11, 18], [13, 4], [6, 15], [3, 16], [10, 8], [7, 1], [11, 18], [4, 7], [10, 8], [12, 13], [5, 6], [1, 19], [2, 15], [18, 14], [3, 16], [0, 7], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [0, 7], [9, 4], [5, 2], [17, 3], [11, 18], [10, 8], [4, 7], [6, 15], [9, 12], [3, 16], [5, 2], [0, 1], [4, 7], [17, 3], [1, 19], [5, 15], [16, 9], [8, 14], [11, 18], [12, 4], [3, 16], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [9, 12], [10, 8], [3, 16], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [12, 4], [8, 18], [3, 10], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [5, 15], [11, 18], [7, 1], [3, 10], [16, 9], [5, 15], [2, 10], [13, 0], [1, 19], [11, 18], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [1, 19], [12, 4], [13, 8], [4, 7], [3, 10], [6, 11], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [6, 11], [14, 1], [4, 7], [8, 14], [6, 11], [10, 0], [16, 9], [4, 7], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [1, 19], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [1, 19], [3, 16], [18, 14], [7, 1], [2, 15], [3, 10], [12, 13], [17, 5], [0, 19], [18, 14], [3, 16], [7, 19], [13, 0], [2, 15], [6, 11], [17, 5], [9, 4], [8, 14], [3, 10], [12, 13], [7, 19], [16, 2], [11, 18], [6, 15], [15, 8], [13, 0], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [14, 1], [9, 12], [13, 8], [0, 7], [15, 18], [10, 13], [12, 4], [0, 7], [16, 2], [5, 6], [14, 1], [6, 15], [9, 12], [3, 10], [13, 8], [18, 14], [7, 19], [6, 11], [16, 2], [13, 8], [9, 12], [3, 10], [1, 19], [4, 7], [18, 14], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 5], [12, 4], [10, 0], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [10, 0], [7, 1], [17, 5], [13, 4], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 6], [0, 7], [15, 14], [2, 10], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [2, 10], [3, 16], [5, 6], [13, 4], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [14, 1], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [10, 13], [11, 18], [15, 8], [14, 1], [9, 4], [3, 2], [12, 4], [10, 13], [7, 19], [11, 18], [6, 15], [16, 9], [17, 5], [3, 2], [1, 19], [12, 13], [15, 18], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [15, 18], [8, 14], [13, 0], [9, 12], [5, 2], [10, 0], [5, 2], [9, 12], [11, 18], [14, 1], [13, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 19, 27]
[39, 43, 50]
[79, 85, 89]
[205, 210, 216]
[222, 229, 237]
[236, 238, 246]
[234, 240, 248]
[256, 265, 268]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 25]
[72, 79, 85]
[66, 87, 90]
[95, 102, 110]
[128, 135, 137]
[183, 190, 196]
[250, 256, 265]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.234105348587036

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 9] cc => I, Pos: [0, 9] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [4, 16] cc => I, Pos: [4, 16] cc => I, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [8, 14] cc => I, Pos: [8, 14] cc => I, Pos: [9, 17] cc => I, Pos: [9, 17] cc => I, Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [13, 19, 27] ccc => cc, Pos: [16, 18, 25] ccc => cc, Pos: [23, 31] cc => I, Pos: [23, 31] cc => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [32, 48] cc => I, Pos: [32, 48] cc => I, Pos: [39, 43, 50] ccc => cc, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [54, 60] cc => I, Pos: [54, 60] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [66, 87, 90] ccc => cc, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [72, 79, 85] ccc => cc, Pos: [78, 86] cc => I, Pos: [78, 86] cc => I, Pos: [79, 85, 89] ccc => cc, Pos: [80, 94] cc => I, Pos: [80, 94] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [95, 102, 110] ccc => cc, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [112, 121] cc => I, Pos: [112, 121] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [118, 123] cc => I, Pos: [118, 123] cc => I, Pos: [119, 127] cc => I, Pos: [119, 127] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 135, 137] ccc => cc, Pos: [131, 139] cc => I, Pos: [131, 139] cc => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 152] cc => I, Pos: [148, 152] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [153, 161] cc => I, Pos: [153, 161] cc => I, Pos: [155, 159] cc => I, Pos: [155, 159] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [172, 181] cc => I, Pos: [172, 181] cc => I, Pos: [173, 180] cc => I, Pos: [173, 180] cc => I, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [178, 186] cc => I, Pos: [178, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 190, 196] ccc => cc, Pos: [186, 201] cc => I, Pos: [186, 201] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [205, 210, 216] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [212, 222] cc => I, Pos: [212, 222] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 225] cc => I, Pos: [217, 225] cc => I, Pos: [218, 223] cc => I, Pos: [218, 223] cc => I, Pos: [219, 228] cc => I, Pos: [219, 228] cc => I, Pos: [222, 229, 237] ccc => cc, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [228, 231] cc => I, Pos: [228, 231] cc => I, Pos: [234, 240, 248] ccc => cc, Pos: [236, 238, 246] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [249, 260] cc => I, Pos: [249, 260] cc => I, Pos: [250, 256, 265] ccc => cc, Pos: [256, 265, 268] ccc => cc, Pos: [259, 266] cc => I, Pos: [259, 266] cc => I, Pos: [260, 269] cc => I, Pos: [260, 269] cc => I, Pos: [269, 274] cc => I, Pos: [269, 274] cc => I, Pos: [276, 285] cc => I, Pos: [276, 285] cc => I, Pos: [281, 294] cc => I, Pos: [281, 294] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [283, 291] cc => I, Pos: [283, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [294, 300] cc => I, Pos: [294, 300] cc => I, Pos: [298, 304] cc => I, Pos: [298, 304] cc => I, Pos: [307, 311] cc => I, Pos: [307, 311] cc => I, Pos: [308, 310] cc => I, Pos: [308, 310] cc => I]

--------End Timer [Generate Plans]:  0.14063215255737305

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 17] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [16, 18, 25] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [27, 34] cc => I,
 Pos: [23, 31] cc => I,
 Pos: [32, 48] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [46, 54] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [79, 85, 89] ccc => cc,
 Pos: [78, 86] cc => I,
 Pos: [80, 94] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [137, 150] cc => I,
 Pos: [139, 148] cc => I,
 Pos: [153, 161] cc => I,
 Pos: [155, 159] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [175, 184] cc => I,
 Pos: [178, 186] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [204, 214] cc => I,
 Pos: [205, 210, 216] ccc => cc,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [218, 223] cc => I,
 Pos: [219, 228] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [256, 265, 268] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [260, 269] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [294, 300] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 59, Saving: 62

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [9, 17] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [16, 18, 25] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [8, 14] cc => I
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [23, 31] cc => I
Apply:  Pos: [32, 48] cc => I
Apply:  Pos: [39, 43, 50] ccc => cc
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [58, 69] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [66, 87, 90] ccc => cc
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [79, 85, 89] ccc => cc
Apply:  Pos: [78, 86] cc => I
Apply:  Pos: [80, 94] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [95, 102, 110] ccc => cc
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [112, 121] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [119, 127] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [137, 150] cc => I
Apply:  Pos: [139, 148] cc => I
Apply:  Pos: [153, 161] cc => I
Apply:  Pos: [155, 159] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [175, 184] cc => I
Apply:  Pos: [178, 186] cc => I
Apply:  Pos: [172, 181] cc => I
Apply:  Pos: [173, 180] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 190, 196] ccc => cc
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [205, 210, 216] ccc => cc
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [212, 222] cc => I
Apply:  Pos: [217, 225] cc => I
Apply:  Pos: [218, 223] cc => I
Apply:  Pos: [219, 228] cc => I
Apply:  Pos: [234, 240, 248] ccc => cc
Apply:  Pos: [236, 238, 246] ccc => cc
Apply:  Pos: [241, 249] cc => I
Apply:  Pos: [256, 265, 268] ccc => cc
Apply:  Pos: [259, 266] cc => I
Apply:  Pos: [260, 269] cc => I
Apply:  Pos: [276, 285] cc => I
Apply:  Pos: [294, 300] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [283, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [298, 304] cc => I
Apply:  Pos: [307, 311] cc => I
Apply:  Pos: [308, 310] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [12, 13], [8, 14], [15, 18], [15, 8], [16, 2], [4, 7], [9, 12], [12, 13], [2, 15], [8, 14], [7, 19], [6, 11], [0, 1], [5, 6], [15, 8], [0, 7], [6, 15], [10, 13], [9, 12], [1, 19], [7, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [9, 4], [17, 16], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [6, 11], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [7, 1], [12, 13], [0, 19], [12, 13], [6, 11], [9, 4], [8, 14], [13, 0], [16, 2], [11, 18], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [9, 4], [13, 8], [15, 18], [10, 13], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  6.374737501144409

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[85, 101]
[116, 118]
[109, 121]
[112, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[120, 129, 134]
[176, 178, 185]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 9, 10]
[13, 18, 22]
[113, 119, 124]
[135, 137, 149]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[85, 101]
[116, 118]
[109, 121]
[112, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.843775749206543

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 9, 10] ccc => cc, Pos: [13, 18, 22] ccc => cc, Pos: [31, 44] cc => I, Pos: [31, 44] cc => I, Pos: [85, 101] cc => I, Pos: [85, 101] cc => I, Pos: [109, 121] cc => I, Pos: [109, 121] cc => I, Pos: [112, 131] cc => I, Pos: [112, 131] cc => I, Pos: [113, 119, 124] ccc => cc, Pos: [116, 118] cc => I, Pos: [116, 118] cc => I, Pos: [120, 129, 134] ccc => cc, Pos: [135, 137, 149] ccc => cc, Pos: [176, 178, 185] ccc => cc]

--------End Timer [Generate Plans]:  0.0312349796295166

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 9, 10] ccc => cc,
 Pos: [13, 18, 22] ccc => cc,
 Pos: [31, 44] cc => I,
 Pos: [85, 101] cc => I,
 Pos: [109, 121] cc => I,
 Pos: [112, 131] cc => I,
 Pos: [113, 119, 124] ccc => cc,
 Pos: [116, 118] cc => I,
 Pos: [120, 129, 134] ccc => cc,
 Pos: [135, 137, 149] ccc => cc,
 Pos: [176, 178, 185] ccc => cc]
Change: 11, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 9, 10] ccc => cc
Apply:  Pos: [13, 18, 22] ccc => cc
Apply:  Pos: [31, 44] cc => I
Apply:  Pos: [85, 101] cc => I
Apply:  Pos: [109, 121] cc => I
Apply:  Pos: [112, 131] cc => I
Apply:  Pos: [113, 119, 124] ccc => cc
Apply:  Pos: [116, 118] cc => I
Apply:  Pos: [120, 129, 134] ccc => cc
Apply:  Pos: [135, 137, 149] ccc => cc
Apply:  Pos: [176, 178, 185] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [9, 12], [8, 14], [15, 8], [15, 18], [16, 2], [4, 7], [12, 13], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [3, 16], [15, 14], [13, 8], [9, 4], [12, 4], [17, 16], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [2, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.8750107288360596

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[103, 113]
[163, 188]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[44, 45, 49]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[103, 113]
[163, 188]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4374985694885254

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [44, 45, 49] ccc => cc, Pos: [103, 113] cc => I, Pos: [103, 113] cc => I, Pos: [163, 188] cc => I, Pos: [163, 188] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [44, 45, 49] ccc => cc, Pos: [103, 113] cc => I, Pos: [163, 188] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [44, 45, 49] ccc => cc
Apply:  Pos: [103, 113] cc => I
Apply:  Pos: [163, 188] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [9, 12], [8, 14], [15, 18], [15, 8], [16, 2], [4, 7], [12, 13], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [3, 16], [15, 14], [13, 8], [9, 12], [12, 4], [17, 16], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [2, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [11, 18], [9, 7], [13, 0], [16, 2], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.4374985694885254

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[100, 101, 110]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3433151245117188

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [100, 101, 110] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [100, 101, 110] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [100, 101, 110] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [9, 12], [8, 14], [15, 8], [15, 18], [16, 2], [4, 7], [12, 13], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [3, 16], [15, 14], [13, 8], [9, 12], [12, 4], [17, 16], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 15], [2, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [11, 18], [9, 7], [13, 0], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.3433151245117188

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3285586833953857

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[10, 0], [9, 4], [3, 16], [9, 12], [8, 14], [15, 18], [15, 8], [16, 2], [4, 7], [12, 13], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [3, 16], [15, 14], [13, 8], [9, 12], [12, 4], [17, 16], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [2, 15], [16, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [11, 18], [9, 7], [13, 0], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.3285586833953857

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [185] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 370

Reduced: 
 - size: 130 (41.27%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12461328506469727

[10, 0], [1, 19], [9, 4], [3, 16], [12, 13], [8, 14], [6, 11], [15, 18], [17, 5], [10, 0], [1, 19], [15, 8], [6, 11], [16, 2], [17, 5], [4, 7], [12, 13], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [17, 3], [0, 1], [12, 13], [5, 6], [16, 2], [15, 8], [0, 7], [6, 15], [17, 3], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 0], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [8, 14], [17, 3], [13, 0], [8, 14], [6, 15], [17, 5], [7, 1], [11, 18], [13, 4], [6, 15], [3, 16], [10, 8], [7, 1], [11, 18], [4, 7], [10, 8], [12, 13], [5, 6], [1, 19], [2, 15], [18, 14], [3, 16], [0, 7], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [0, 7], [9, 4], [5, 2], [17, 3], [11, 18], [10, 8], [4, 7], [6, 15], [9, 12], [3, 16], [5, 2], [0, 1], [4, 7], [17, 3], [1, 19], [5, 15], [16, 9], [8, 14], [11, 18], [12, 4], [3, 16], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [9, 12], [10, 8], [3, 16], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [12, 4], [8, 18], [3, 10], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [5, 15], [11, 18], [7, 1], [3, 10], [16, 9], [5, 15], [2, 10], [13, 0], [1, 19], [11, 18], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [1, 19], [12, 4], [13, 8], [4, 7], [3, 10], [6, 11], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [6, 11], [14, 1], [4, 7], [8, 14], [6, 11], [10, 0], [16, 9], [4, 7], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [1, 19], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [1, 19], [3, 16], [18, 14], [7, 1], [2, 15], [3, 10], [12, 13], [17, 5], [0, 19], [18, 14], [3, 16], [7, 19], [13, 0], [2, 15], [6, 11], [17, 5], [9, 4], [8, 14], [3, 10], [12, 13], [7, 19], [16, 2], [11, 18], [6, 15], [15, 8], [13, 0], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [14, 1], [9, 12], [13, 8], [0, 7], [15, 18], [10, 13], [12, 4], [0, 7], [16, 2], [5, 6], [14, 1], [6, 15], [9, 12], [3, 10], [13, 8], [18, 14], [7, 19], [6, 11], [16, 2], [13, 8], [9, 12], [3, 10], [1, 19], [4, 7], [18, 14], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 5], [12, 4], [10, 0], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [10, 0], [7, 1], [17, 5], [13, 4], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 6], [0, 7], [15, 14], [2, 10], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [2, 10], [3, 16], [5, 6], [13, 4], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [14, 1], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [10, 13], [11, 18], [15, 8], [14, 1], [9, 4], [3, 2], [12, 4], [10, 13], [7, 19], [11, 18], [6, 15], [16, 9], [17, 5], [3, 2], [1, 19], [12, 13], [15, 18], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [15, 18], [8, 14], [13, 0], [9, 12], [5, 2], [10, 0], [5, 2], [9, 12], [11, 18], [14, 1], [13, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 19, 27]
[39, 43, 50]
[79, 85, 89]
[205, 210, 216]
[222, 229, 237]
[236, 238, 246]
[234, 240, 248]
[256, 265, 268]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 25]
[72, 79, 85]
[66, 87, 90]
[95, 102, 110]
[128, 135, 137]
[183, 190, 196]
[250, 256, 265]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.171872138977051

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 9] cc => I, Pos: [0, 9] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [4, 16] cc => I, Pos: [4, 16] cc => I, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [8, 14] cc => I, Pos: [8, 14] cc => I, Pos: [9, 17] cc => I, Pos: [9, 17] cc => I, Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [13, 19, 27] ccc => cc, Pos: [16, 18, 25] ccc => cc, Pos: [23, 31] cc => I, Pos: [23, 31] cc => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [32, 48] cc => I, Pos: [32, 48] cc => I, Pos: [39, 43, 50] ccc => cc, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [54, 60] cc => I, Pos: [54, 60] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [66, 87, 90] ccc => cc, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [72, 79, 85] ccc => cc, Pos: [78, 86] cc => I, Pos: [78, 86] cc => I, Pos: [79, 85, 89] ccc => cc, Pos: [80, 94] cc => I, Pos: [80, 94] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [95, 102, 110] ccc => cc, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [112, 121] cc => I, Pos: [112, 121] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [118, 123] cc => I, Pos: [118, 123] cc => I, Pos: [119, 127] cc => I, Pos: [119, 127] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 135, 137] ccc => cc, Pos: [131, 139] cc => I, Pos: [131, 139] cc => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 152] cc => I, Pos: [148, 152] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [153, 161] cc => I, Pos: [153, 161] cc => I, Pos: [155, 159] cc => I, Pos: [155, 159] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [172, 181] cc => I, Pos: [172, 181] cc => I, Pos: [173, 180] cc => I, Pos: [173, 180] cc => I, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [178, 186] cc => I, Pos: [178, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 190, 196] ccc => cc, Pos: [186, 201] cc => I, Pos: [186, 201] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [205, 210, 216] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [212, 222] cc => I, Pos: [212, 222] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 225] cc => I, Pos: [217, 225] cc => I, Pos: [218, 223] cc => I, Pos: [218, 223] cc => I, Pos: [219, 228] cc => I, Pos: [219, 228] cc => I, Pos: [222, 229, 237] ccc => cc, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [228, 231] cc => I, Pos: [228, 231] cc => I, Pos: [234, 240, 248] ccc => cc, Pos: [236, 238, 246] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [249, 260] cc => I, Pos: [249, 260] cc => I, Pos: [250, 256, 265] ccc => cc, Pos: [256, 265, 268] ccc => cc, Pos: [259, 266] cc => I, Pos: [259, 266] cc => I, Pos: [260, 269] cc => I, Pos: [260, 269] cc => I, Pos: [269, 274] cc => I, Pos: [269, 274] cc => I, Pos: [276, 285] cc => I, Pos: [276, 285] cc => I, Pos: [281, 294] cc => I, Pos: [281, 294] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [283, 291] cc => I, Pos: [283, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [294, 300] cc => I, Pos: [294, 300] cc => I, Pos: [298, 304] cc => I, Pos: [298, 304] cc => I, Pos: [307, 311] cc => I, Pos: [307, 311] cc => I, Pos: [308, 310] cc => I, Pos: [308, 310] cc => I]

--------End Timer [Generate Plans]:  0.1406111717224121

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 9] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [16, 18, 25] ccc => cc,
 Pos: [6, 12] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [27, 34] cc => I,
 Pos: [23, 31] cc => I,
 Pos: [32, 48] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [46, 54] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [69, 72] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [78, 86] cc => I,
 Pos: [79, 85, 89] ccc => cc,
 Pos: [94, 101] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [137, 150] cc => I,
 Pos: [139, 148] cc => I,
 Pos: [153, 161] cc => I,
 Pos: [155, 159] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [186, 201] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [219, 228] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [249, 260] cc => I,
 Pos: [256, 265, 268] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [269, 274] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [294, 300] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 60, Saving: 63

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 9] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [16, 18, 25] ccc => cc
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [8, 14] cc => I
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [23, 31] cc => I
Apply:  Pos: [32, 48] cc => I
Apply:  Pos: [39, 43, 50] ccc => cc
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [69, 72] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [66, 87, 90] ccc => cc
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [78, 86] cc => I
Apply:  Pos: [79, 85, 89] ccc => cc
Apply:  Pos: [94, 101] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [95, 102, 110] ccc => cc
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [112, 121] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [119, 127] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [137, 150] cc => I
Apply:  Pos: [139, 148] cc => I
Apply:  Pos: [153, 161] cc => I
Apply:  Pos: [155, 159] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [172, 181] cc => I
Apply:  Pos: [173, 180] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 190, 196] ccc => cc
Apply:  Pos: [186, 201] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [212, 222] cc => I
Apply:  Pos: [217, 225] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [219, 228] cc => I
Apply:  Pos: [234, 240, 248] ccc => cc
Apply:  Pos: [236, 238, 246] ccc => cc
Apply:  Pos: [249, 260] cc => I
Apply:  Pos: [256, 265, 268] ccc => cc
Apply:  Pos: [259, 266] cc => I
Apply:  Pos: [269, 274] cc => I
Apply:  Pos: [276, 285] cc => I
Apply:  Pos: [294, 300] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [283, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [298, 304] cc => I
Apply:  Pos: [307, 311] cc => I
Apply:  Pos: [308, 310] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [12, 13], [8, 14], [15, 18], [15, 8], [16, 2], [4, 7], [9, 12], [10, 0], [12, 13], [2, 15], [8, 14], [7, 19], [6, 11], [0, 1], [5, 6], [15, 8], [0, 7], [6, 15], [10, 13], [9, 12], [1, 19], [7, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [2, 10], [15, 14], [13, 8], [12, 4], [9, 4], [17, 16], [11, 18], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [6, 11], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [8, 14], [0, 7], [11, 18], [9, 13], [7, 1], [12, 13], [0, 19], [12, 13], [2, 15], [6, 11], [9, 4], [8, 14], [13, 0], [16, 2], [11, 18], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [13, 8], [15, 18], [10, 13], [12, 4], [5, 6], [6, 15], [13, 8], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  6.312483310699463

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 45]
[85, 101]
[114, 116]
[109, 120]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[174, 176, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[2, 8, 10]
[13, 18, 22]
[111, 118, 123]
[133, 135, 139]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 45]
[85, 101]
[114, 116]
[109, 120]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7350692749023438

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 8, 10] ccc => cc, Pos: [13, 18, 22] ccc => cc, Pos: [31, 45] cc => I, Pos: [31, 45] cc => I, Pos: [85, 101] cc => I, Pos: [85, 101] cc => I, Pos: [109, 120] cc => I, Pos: [109, 120] cc => I, Pos: [111, 118, 123] ccc => cc, Pos: [114, 116] cc => I, Pos: [114, 116] cc => I, Pos: [133, 135, 139] ccc => cc, Pos: [174, 176, 182] ccc => cc]

--------End Timer [Generate Plans]:  0.03064894676208496

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 8, 10] ccc => cc,
 Pos: [13, 18, 22] ccc => cc,
 Pos: [31, 45] cc => I,
 Pos: [85, 101] cc => I,
 Pos: [109, 120] cc => I,
 Pos: [111, 118, 123] ccc => cc,
 Pos: [114, 116] cc => I,
 Pos: [133, 135, 139] ccc => cc,
 Pos: [174, 176, 182] ccc => cc]
Change: 9, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [2, 8, 10] ccc => cc
Apply:  Pos: [13, 18, 22] ccc => cc
Apply:  Pos: [31, 45] cc => I
Apply:  Pos: [85, 101] cc => I
Apply:  Pos: [109, 120] cc => I
Apply:  Pos: [111, 118, 123] ccc => cc
Apply:  Pos: [114, 116] cc => I
Apply:  Pos: [133, 135, 139] ccc => cc
Apply:  Pos: [174, 176, 182] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [9, 12], [8, 14], [15, 8], [15, 18], [16, 2], [4, 7], [12, 13], [10, 0], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 4], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 4], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.7657182216644287

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[164, 188]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[44, 45, 50]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[164, 188]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4531021118164062

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [44, 45, 50] ccc => cc, Pos: [164, 188] cc => I, Pos: [164, 188] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [44, 45, 50] ccc => cc, Pos: [164, 188] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [44, 45, 50] ccc => cc
Apply:  Pos: [164, 188] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [9, 12], [8, 14], [15, 18], [15, 8], [16, 2], [4, 7], [12, 13], [10, 0], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [15, 14], [18, 14], [13, 8], [9, 12], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 4], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.4531021118164062

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3906424045562744

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [9, 12], [8, 14], [15, 8], [15, 18], [16, 2], [4, 7], [12, 13], [10, 0], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [3, 16], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 12], [12, 4], [17, 16], [11, 18], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [4, 7], [9, 13], [16, 10], [3, 2], [15, 8], [12, 4], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 4], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.3906424045562744

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [188] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 43 - (small)
 - circuit cycle: 376

Reduced: 
 - size: 127 (40.32%)
 - depth: 2 (4.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1249852180480957

[10, 0], [1, 19], [9, 4], [3, 16], [12, 13], [8, 14], [6, 11], [15, 18], [17, 5], [10, 0], [1, 19], [15, 8], [6, 11], [16, 2], [17, 5], [4, 7], [12, 13], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [17, 3], [0, 1], [12, 13], [5, 6], [16, 2], [15, 8], [0, 7], [6, 15], [17, 3], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 0], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [8, 14], [17, 3], [13, 0], [8, 14], [6, 15], [17, 5], [7, 1], [11, 18], [13, 4], [6, 15], [3, 16], [10, 8], [7, 1], [11, 18], [4, 7], [10, 8], [12, 13], [5, 6], [1, 19], [2, 15], [18, 14], [3, 16], [0, 7], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [0, 7], [9, 4], [5, 2], [17, 3], [11, 18], [10, 8], [4, 7], [6, 15], [9, 12], [3, 16], [5, 2], [0, 1], [4, 7], [17, 3], [1, 19], [5, 15], [16, 9], [8, 14], [11, 18], [12, 4], [3, 16], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [9, 12], [10, 8], [3, 16], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [12, 4], [8, 18], [3, 10], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [5, 15], [11, 18], [7, 1], [3, 10], [16, 9], [5, 15], [2, 10], [13, 0], [1, 19], [11, 18], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [1, 19], [12, 4], [13, 8], [4, 7], [3, 10], [6, 11], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [6, 11], [14, 1], [4, 7], [8, 14], [6, 11], [10, 0], [16, 9], [4, 7], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [1, 19], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [1, 19], [3, 16], [18, 14], [7, 1], [2, 15], [3, 10], [12, 13], [17, 5], [0, 19], [18, 14], [3, 16], [7, 19], [13, 0], [2, 15], [6, 11], [17, 5], [9, 4], [8, 14], [3, 10], [12, 13], [7, 19], [16, 2], [11, 18], [6, 15], [15, 8], [13, 0], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [14, 1], [9, 12], [13, 8], [0, 7], [15, 18], [10, 13], [12, 4], [0, 7], [16, 2], [5, 6], [14, 1], [6, 15], [9, 12], [3, 10], [13, 8], [18, 14], [7, 19], [6, 11], [16, 2], [13, 8], [9, 12], [3, 10], [1, 19], [4, 7], [18, 14], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 5], [12, 4], [10, 0], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [10, 0], [7, 1], [17, 5], [13, 4], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 6], [0, 7], [15, 14], [2, 10], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [2, 10], [3, 16], [5, 6], [13, 4], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [14, 1], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [10, 13], [11, 18], [15, 8], [14, 1], [9, 4], [3, 2], [12, 4], [10, 13], [7, 19], [11, 18], [6, 15], [16, 9], [17, 5], [3, 2], [1, 19], [12, 13], [15, 18], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [15, 18], [8, 14], [13, 0], [9, 12], [5, 2], [10, 0], [5, 2], [9, 12], [11, 18], [14, 1], [13, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 19, 27]
[39, 43, 50]
[79, 85, 89]
[205, 210, 216]
[222, 229, 237]
[236, 238, 246]
[234, 240, 248]
[256, 265, 268]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 25]
[72, 79, 85]
[66, 87, 90]
[95, 102, 110]
[128, 135, 137]
[183, 190, 196]
[250, 256, 265]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.234137296676636

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 9] cc => I, Pos: [0, 9] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [4, 16] cc => I, Pos: [4, 16] cc => I, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [8, 14] cc => I, Pos: [8, 14] cc => I, Pos: [9, 17] cc => I, Pos: [9, 17] cc => I, Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [13, 19, 27] ccc => cc, Pos: [16, 18, 25] ccc => cc, Pos: [23, 31] cc => I, Pos: [23, 31] cc => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [32, 48] cc => I, Pos: [32, 48] cc => I, Pos: [39, 43, 50] ccc => cc, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [54, 60] cc => I, Pos: [54, 60] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [66, 87, 90] ccc => cc, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [72, 79, 85] ccc => cc, Pos: [78, 86] cc => I, Pos: [78, 86] cc => I, Pos: [79, 85, 89] ccc => cc, Pos: [80, 94] cc => I, Pos: [80, 94] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [95, 102, 110] ccc => cc, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [112, 121] cc => I, Pos: [112, 121] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [118, 123] cc => I, Pos: [118, 123] cc => I, Pos: [119, 127] cc => I, Pos: [119, 127] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 135, 137] ccc => cc, Pos: [131, 139] cc => I, Pos: [131, 139] cc => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 152] cc => I, Pos: [148, 152] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [153, 161] cc => I, Pos: [153, 161] cc => I, Pos: [155, 159] cc => I, Pos: [155, 159] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [172, 181] cc => I, Pos: [172, 181] cc => I, Pos: [173, 180] cc => I, Pos: [173, 180] cc => I, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [178, 186] cc => I, Pos: [178, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 190, 196] ccc => cc, Pos: [186, 201] cc => I, Pos: [186, 201] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [205, 210, 216] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [212, 222] cc => I, Pos: [212, 222] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 225] cc => I, Pos: [217, 225] cc => I, Pos: [218, 223] cc => I, Pos: [218, 223] cc => I, Pos: [219, 228] cc => I, Pos: [219, 228] cc => I, Pos: [222, 229, 237] ccc => cc, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [228, 231] cc => I, Pos: [228, 231] cc => I, Pos: [234, 240, 248] ccc => cc, Pos: [236, 238, 246] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [249, 260] cc => I, Pos: [249, 260] cc => I, Pos: [250, 256, 265] ccc => cc, Pos: [256, 265, 268] ccc => cc, Pos: [259, 266] cc => I, Pos: [259, 266] cc => I, Pos: [260, 269] cc => I, Pos: [260, 269] cc => I, Pos: [269, 274] cc => I, Pos: [269, 274] cc => I, Pos: [276, 285] cc => I, Pos: [276, 285] cc => I, Pos: [281, 294] cc => I, Pos: [281, 294] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [283, 291] cc => I, Pos: [283, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [294, 300] cc => I, Pos: [294, 300] cc => I, Pos: [298, 304] cc => I, Pos: [298, 304] cc => I, Pos: [307, 311] cc => I, Pos: [307, 311] cc => I, Pos: [308, 310] cc => I, Pos: [308, 310] cc => I]

--------End Timer [Generate Plans]:  0.14062023162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 9] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [4, 16] cc => I,
 Pos: [6, 12] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [13, 19, 27] ccc => cc,
 Pos: [23, 31] cc => I,
 Pos: [32, 48] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [46, 54] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [79, 85, 89] ccc => cc,
 Pos: [78, 86] cc => I,
 Pos: [80, 94] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [128, 135, 137] ccc => cc,
 Pos: [139, 148] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [186, 201] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [216, 224] cc => I,
 Pos: [207, 211] cc => I,
 Pos: [222, 229, 237] ccc => cc,
 Pos: [217, 225] cc => I,
 Pos: [223, 232] cc => I,
 Pos: [219, 228] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [249, 260] cc => I,
 Pos: [256, 265, 268] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [269, 274] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [294, 300] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 60, Saving: 65

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 9] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [4, 16] cc => I
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [8, 14] cc => I
Apply:  Pos: [13, 19, 27] ccc => cc
Apply:  Pos: [23, 31] cc => I
Apply:  Pos: [32, 48] cc => I
Apply:  Pos: [39, 43, 50] ccc => cc
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [58, 69] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [66, 87, 90] ccc => cc
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [79, 85, 89] ccc => cc
Apply:  Pos: [78, 86] cc => I
Apply:  Pos: [80, 94] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [95, 102, 110] ccc => cc
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [112, 121] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [119, 127] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [128, 135, 137] ccc => cc
Apply:  Pos: [139, 148] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [172, 181] cc => I
Apply:  Pos: [173, 180] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 190, 196] ccc => cc
Apply:  Pos: [186, 201] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [216, 224] cc => I
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [222, 229, 237] ccc => cc
Apply:  Pos: [217, 225] cc => I
Apply:  Pos: [223, 232] cc => I
Apply:  Pos: [219, 228] cc => I
Apply:  Pos: [234, 240, 248] ccc => cc
Apply:  Pos: [236, 238, 246] ccc => cc
Apply:  Pos: [249, 260] cc => I
Apply:  Pos: [256, 265, 268] ccc => cc
Apply:  Pos: [259, 266] cc => I
Apply:  Pos: [269, 274] cc => I
Apply:  Pos: [276, 285] cc => I
Apply:  Pos: [294, 300] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [283, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [298, 304] cc => I
Apply:  Pos: [307, 311] cc => I
Apply:  Pos: [308, 310] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015623807907104492

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [0, 7], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [9, 4], [17, 16], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [4, 7], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [6, 11], [16, 9], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [8, 14], [0, 7], [11, 18], [9, 13], [7, 1], [12, 13], [0, 19], [12, 13], [2, 15], [6, 11], [9, 4], [8, 14], [13, 0], [16, 2], [11, 18], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [13, 8], [15, 18], [10, 13], [12, 4], [16, 2], [5, 6], [6, 15], [13, 8], [7, 19], [6, 11], [16, 6], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  6.390381336212158

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[85, 100]
[88, 105]
[115, 117]
[110, 121]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[176, 178, 184]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 17, 22]
[112, 119, 124]
[134, 136, 141]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[85, 100]
[88, 105]
[115, 117]
[110, 121]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.828148126602173

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 17, 22] ccc => cc, Pos: [31, 44] cc => I, Pos: [31, 44] cc => I, Pos: [85, 100] cc => I, Pos: [85, 100] cc => I, Pos: [88, 105] cc => I, Pos: [88, 105] cc => I, Pos: [110, 121] cc => I, Pos: [110, 121] cc => I, Pos: [112, 119, 124] ccc => cc, Pos: [115, 117] cc => I, Pos: [115, 117] cc => I, Pos: [134, 136, 141] ccc => cc, Pos: [176, 178, 184] ccc => cc]

--------End Timer [Generate Plans]:  0.0156252384185791

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 17, 22] ccc => cc,
 Pos: [31, 44] cc => I,
 Pos: [85, 100] cc => I,
 Pos: [88, 105] cc => I,
 Pos: [110, 121] cc => I,
 Pos: [112, 119, 124] ccc => cc,
 Pos: [115, 117] cc => I,
 Pos: [134, 136, 141] ccc => cc,
 Pos: [176, 178, 184] ccc => cc]
Change: 9, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 17, 22] ccc => cc
Apply:  Pos: [31, 44] cc => I
Apply:  Pos: [85, 100] cc => I
Apply:  Pos: [88, 105] cc => I
Apply:  Pos: [110, 121] cc => I
Apply:  Pos: [112, 119, 124] ccc => cc
Apply:  Pos: [115, 117] cc => I
Apply:  Pos: [134, 136, 141] ccc => cc
Apply:  Pos: [176, 178, 184] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 8], [15, 18], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [3, 16], [15, 14], [13, 8], [9, 4], [12, 4], [17, 16], [10, 8], [6, 15], [9, 12], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [15, 8], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 4], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [16, 2], [5, 6], [6, 15], [7, 19], [6, 11], [16, 6], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [0, 19], [10, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [11, 18], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.843773365020752

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[84, 89]
[165, 189]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[45, 46, 50]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[84, 89]
[165, 189]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4687650203704834

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [45, 46, 50] ccc => cc, Pos: [84, 89] cc => I, Pos: [84, 89] cc => I, Pos: [165, 189] cc => I, Pos: [165, 189] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [45, 46, 50] ccc => cc, Pos: [84, 89] cc => I, Pos: [165, 189] cc => I]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [45, 46, 50] ccc => cc
Apply:  Pos: [84, 89] cc => I
Apply:  Pos: [165, 189] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [3, 16], [15, 14], [13, 8], [9, 12], [12, 4], [17, 16], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 4], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [16, 2], [5, 6], [6, 15], [7, 19], [6, 11], [16, 6], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.4687650203704834

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.358548879623413

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 8], [15, 18], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [3, 16], [15, 14], [13, 8], [9, 12], [12, 4], [17, 16], [10, 8], [6, 15], [3, 16], [1, 19], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 4], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 12], [10, 13], [15, 18], [13, 8], [12, 4], [16, 2], [5, 6], [6, 15], [7, 19], [6, 11], [16, 6], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [0, 19], [10, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [6, 18], [3, 16], [8, 0], [7, 1], [2, 15], [16, 9], [10, 8], [2, 6], [0, 19], [17, 5], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.358548879623413

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [187] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 374

Reduced: 
 - size: 128 (40.63%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14062023162841797

[10, 0], [1, 19], [9, 4], [3, 16], [12, 13], [8, 14], [6, 11], [15, 18], [17, 5], [10, 0], [1, 19], [15, 8], [6, 11], [16, 2], [17, 5], [4, 7], [12, 13], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [17, 3], [0, 1], [12, 13], [5, 6], [16, 2], [15, 8], [0, 7], [6, 15], [17, 3], [8, 14], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 0], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [7, 1], [5, 15], [8, 14], [17, 3], [13, 0], [8, 14], [6, 15], [17, 5], [7, 1], [11, 18], [13, 4], [6, 15], [3, 16], [10, 8], [7, 1], [11, 18], [4, 7], [10, 8], [12, 13], [5, 6], [1, 19], [2, 15], [18, 14], [3, 16], [0, 7], [2, 10], [3, 16], [15, 14], [13, 8], [12, 4], [0, 7], [9, 4], [5, 2], [17, 3], [11, 18], [10, 8], [4, 7], [6, 15], [9, 12], [3, 16], [5, 2], [0, 1], [4, 7], [17, 3], [1, 19], [5, 15], [16, 9], [8, 14], [11, 18], [12, 4], [3, 16], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [9, 12], [10, 8], [3, 16], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [12, 4], [8, 18], [3, 10], [5, 15], [0, 1], [9, 4], [0, 19], [8, 14], [5, 15], [11, 18], [7, 1], [3, 10], [16, 9], [5, 15], [2, 10], [13, 0], [1, 19], [11, 18], [4, 7], [9, 13], [16, 10], [6, 11], [3, 2], [15, 8], [1, 19], [12, 4], [13, 8], [4, 7], [3, 10], [6, 11], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [10, 0], [6, 11], [14, 1], [4, 7], [8, 14], [6, 11], [10, 0], [16, 9], [4, 7], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [1, 19], [8, 14], [2, 15], [0, 7], [17, 5], [11, 18], [9, 13], [1, 19], [3, 16], [18, 14], [7, 1], [2, 15], [3, 10], [12, 13], [17, 5], [0, 19], [18, 14], [3, 16], [7, 19], [13, 0], [2, 15], [6, 11], [17, 5], [9, 4], [8, 14], [3, 10], [12, 13], [7, 19], [16, 2], [11, 18], [6, 15], [15, 8], [13, 0], [2, 6], [3, 16], [4, 7], [1, 19], [17, 5], [2, 15], [6, 11], [14, 1], [9, 12], [13, 8], [0, 7], [15, 18], [10, 13], [12, 4], [0, 7], [16, 2], [5, 6], [14, 1], [6, 15], [9, 12], [3, 10], [13, 8], [18, 14], [7, 19], [6, 11], [16, 2], [13, 8], [9, 12], [3, 10], [1, 19], [4, 7], [18, 14], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 5], [12, 4], [10, 0], [16, 2], [0, 19], [9, 12], [5, 6], [13, 4], [8, 18], [15, 14], [3, 16], [18, 14], [10, 0], [7, 1], [17, 5], [13, 4], [6, 11], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [5, 6], [0, 7], [15, 14], [2, 10], [13, 4], [17, 3], [5, 15], [18, 14], [0, 1], [6, 11], [2, 10], [3, 16], [5, 6], [13, 4], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [14, 1], [10, 8], [6, 11], [2, 6], [0, 19], [17, 5], [10, 13], [11, 18], [15, 8], [14, 1], [9, 4], [3, 2], [12, 4], [10, 13], [7, 19], [11, 18], [6, 15], [16, 9], [17, 5], [3, 2], [1, 19], [12, 13], [15, 18], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [15, 18], [8, 14], [13, 0], [9, 12], [5, 2], [10, 0], [5, 2], [9, 12], [11, 18], [14, 1], [13, 4], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[13, 19, 27]
[39, 43, 50]
[79, 85, 89]
[205, 210, 216]
[222, 229, 237]
[236, 238, 246]
[234, 240, 248]
[256, 265, 268]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[16, 18, 25]
[72, 79, 85]
[66, 87, 90]
[95, 102, 110]
[128, 135, 137]
[183, 190, 196]
[250, 256, 265]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 9]
[1, 10]
[6, 12]
[8, 14]
[4, 16]
[9, 17]
[12, 22]
[23, 31]
[27, 34]
[32, 48]
[48, 51]
[46, 54]
[52, 57]
[54, 60]
[55, 61]
[59, 63]
[58, 69]
[69, 72]
[70, 76]
[78, 86]
[82, 88]
[80, 94]
[94, 101]
[96, 104]
[113, 118]
[112, 121]
[118, 123]
[119, 127]
[126, 134]
[131, 139]
[139, 148]
[137, 150]
[148, 152]
[147, 153]
[150, 155]
[155, 159]
[153, 161]
[164, 171]
[166, 175]
[168, 178]
[173, 180]
[172, 181]
[175, 184]
[178, 186]
[176, 189]
[182, 191]
[186, 201]
[207, 211]
[204, 214]
[212, 222]
[218, 223]
[216, 224]
[217, 225]
[219, 228]
[228, 231]
[223, 232]
[241, 249]
[249, 260]
[259, 266]
[260, 269]
[269, 274]
[276, 285]
[282, 289]
[283, 291]
[281, 294]
[287, 295]
[294, 300]
[298, 304]
[308, 310]
[307, 311]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.296869993209839

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 9] cc => I, Pos: [0, 9] cc => I, Pos: [1, 10] cc => I, Pos: [1, 10] cc => I, Pos: [4, 16] cc => I, Pos: [4, 16] cc => I, Pos: [6, 12] cc => I, Pos: [6, 12] cc => I, Pos: [8, 14] cc => I, Pos: [8, 14] cc => I, Pos: [9, 17] cc => I, Pos: [9, 17] cc => I, Pos: [12, 22] cc => I, Pos: [12, 22] cc => I, Pos: [13, 19, 27] ccc => cc, Pos: [16, 18, 25] ccc => cc, Pos: [23, 31] cc => I, Pos: [23, 31] cc => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [32, 48] cc => I, Pos: [32, 48] cc => I, Pos: [39, 43, 50] ccc => cc, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I, Pos: [54, 60] cc => I, Pos: [54, 60] cc => I, Pos: [55, 61] cc => I, Pos: [55, 61] cc => I, Pos: [58, 69] cc => I, Pos: [58, 69] cc => I, Pos: [59, 63] cc => I, Pos: [59, 63] cc => I, Pos: [66, 87, 90] ccc => cc, Pos: [69, 72] cc => I, Pos: [69, 72] cc => I, Pos: [70, 76] cc => I, Pos: [70, 76] cc => I, Pos: [72, 79, 85] ccc => cc, Pos: [78, 86] cc => I, Pos: [78, 86] cc => I, Pos: [79, 85, 89] ccc => cc, Pos: [80, 94] cc => I, Pos: [80, 94] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [94, 101] cc => I, Pos: [94, 101] cc => I, Pos: [95, 102, 110] ccc => cc, Pos: [96, 104] cc => I, Pos: [96, 104] cc => I, Pos: [112, 121] cc => I, Pos: [112, 121] cc => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [118, 123] cc => I, Pos: [118, 123] cc => I, Pos: [119, 127] cc => I, Pos: [119, 127] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 135, 137] ccc => cc, Pos: [131, 139] cc => I, Pos: [131, 139] cc => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [139, 148] cc => I, Pos: [139, 148] cc => I, Pos: [147, 153] cc => I, Pos: [147, 153] cc => I, Pos: [148, 152] cc => I, Pos: [148, 152] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [153, 161] cc => I, Pos: [153, 161] cc => I, Pos: [155, 159] cc => I, Pos: [155, 159] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [166, 175] cc => I, Pos: [166, 175] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [172, 181] cc => I, Pos: [172, 181] cc => I, Pos: [173, 180] cc => I, Pos: [173, 180] cc => I, Pos: [175, 184] cc => I, Pos: [175, 184] cc => I, Pos: [176, 189] cc => I, Pos: [176, 189] cc => I, Pos: [178, 186] cc => I, Pos: [178, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 190, 196] ccc => cc, Pos: [186, 201] cc => I, Pos: [186, 201] cc => I, Pos: [204, 214] cc => I, Pos: [204, 214] cc => I, Pos: [205, 210, 216] ccc => cc, Pos: [207, 211] cc => I, Pos: [207, 211] cc => I, Pos: [212, 222] cc => I, Pos: [212, 222] cc => I, Pos: [216, 224] cc => I, Pos: [216, 224] cc => I, Pos: [217, 225] cc => I, Pos: [217, 225] cc => I, Pos: [218, 223] cc => I, Pos: [218, 223] cc => I, Pos: [219, 228] cc => I, Pos: [219, 228] cc => I, Pos: [222, 229, 237] ccc => cc, Pos: [223, 232] cc => I, Pos: [223, 232] cc => I, Pos: [228, 231] cc => I, Pos: [228, 231] cc => I, Pos: [234, 240, 248] ccc => cc, Pos: [236, 238, 246] ccc => cc, Pos: [241, 249] cc => I, Pos: [241, 249] cc => I, Pos: [249, 260] cc => I, Pos: [249, 260] cc => I, Pos: [250, 256, 265] ccc => cc, Pos: [256, 265, 268] ccc => cc, Pos: [259, 266] cc => I, Pos: [259, 266] cc => I, Pos: [260, 269] cc => I, Pos: [260, 269] cc => I, Pos: [269, 274] cc => I, Pos: [269, 274] cc => I, Pos: [276, 285] cc => I, Pos: [276, 285] cc => I, Pos: [281, 294] cc => I, Pos: [281, 294] cc => I, Pos: [282, 289] cc => I, Pos: [282, 289] cc => I, Pos: [283, 291] cc => I, Pos: [283, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [294, 300] cc => I, Pos: [294, 300] cc => I, Pos: [298, 304] cc => I, Pos: [298, 304] cc => I, Pos: [307, 311] cc => I, Pos: [307, 311] cc => I, Pos: [308, 310] cc => I, Pos: [308, 310] cc => I]

Plan: 1
[Pos: [0, 9] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [4, 16] cc => I,
 Pos: [6, 12] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [13, 19, 27] ccc => cc,
 Pos: [23, 31] cc => I,
 Pos: [32, 48] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [46, 54] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [72, 79, 85] ccc => cc,
 Pos: [78, 86] cc => I,
 Pos: [80, 94] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [128, 135, 137] ccc => cc,
 Pos: [131, 139] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [148, 152] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [186, 201] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [205, 210, 216] ccc => cc,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [218, 223] cc => I,
 Pos: [219, 228] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [250, 256, 265] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [260, 269] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [281, 294] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 61, Saving: 66

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.15624427795410156

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 9] cc => I,
 Pos: [1, 10] cc => I,
 Pos: [4, 16] cc => I,
 Pos: [6, 12] cc => I,
 Pos: [8, 14] cc => I,
 Pos: [13, 19, 27] ccc => cc,
 Pos: [23, 31] cc => I,
 Pos: [32, 48] cc => I,
 Pos: [39, 43, 50] ccc => cc,
 Pos: [46, 54] cc => I,
 Pos: [52, 57] cc => I,
 Pos: [55, 61] cc => I,
 Pos: [58, 69] cc => I,
 Pos: [59, 63] cc => I,
 Pos: [66, 87, 90] ccc => cc,
 Pos: [70, 76] cc => I,
 Pos: [72, 79, 85] ccc => cc,
 Pos: [78, 86] cc => I,
 Pos: [80, 94] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [95, 102, 110] ccc => cc,
 Pos: [96, 104] cc => I,
 Pos: [112, 121] cc => I,
 Pos: [113, 118] cc => I,
 Pos: [119, 127] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [128, 135, 137] ccc => cc,
 Pos: [131, 139] cc => I,
 Pos: [147, 153] cc => I,
 Pos: [148, 152] cc => I,
 Pos: [150, 155] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [166, 175] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [172, 181] cc => I,
 Pos: [173, 180] cc => I,
 Pos: [176, 189] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 190, 196] ccc => cc,
 Pos: [186, 201] cc => I,
 Pos: [204, 214] cc => I,
 Pos: [205, 210, 216] ccc => cc,
 Pos: [207, 211] cc => I,
 Pos: [212, 222] cc => I,
 Pos: [217, 225] cc => I,
 Pos: [218, 223] cc => I,
 Pos: [219, 228] cc => I,
 Pos: [234, 240, 248] ccc => cc,
 Pos: [236, 238, 246] ccc => cc,
 Pos: [241, 249] cc => I,
 Pos: [250, 256, 265] ccc => cc,
 Pos: [259, 266] cc => I,
 Pos: [260, 269] cc => I,
 Pos: [276, 285] cc => I,
 Pos: [281, 294] cc => I,
 Pos: [282, 289] cc => I,
 Pos: [283, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [298, 304] cc => I,
 Pos: [307, 311] cc => I,
 Pos: [308, 310] cc => I]
Change: 61, Saving: 66

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 9] cc => I
Apply:  Pos: [1, 10] cc => I
Apply:  Pos: [4, 16] cc => I
Apply:  Pos: [6, 12] cc => I
Apply:  Pos: [8, 14] cc => I
Apply:  Pos: [13, 19, 27] ccc => cc
Apply:  Pos: [23, 31] cc => I
Apply:  Pos: [32, 48] cc => I
Apply:  Pos: [39, 43, 50] ccc => cc
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [52, 57] cc => I
Apply:  Pos: [55, 61] cc => I
Apply:  Pos: [58, 69] cc => I
Apply:  Pos: [59, 63] cc => I
Apply:  Pos: [66, 87, 90] ccc => cc
Apply:  Pos: [70, 76] cc => I
Apply:  Pos: [72, 79, 85] ccc => cc
Apply:  Pos: [78, 86] cc => I
Apply:  Pos: [80, 94] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [95, 102, 110] ccc => cc
Apply:  Pos: [96, 104] cc => I
Apply:  Pos: [112, 121] cc => I
Apply:  Pos: [113, 118] cc => I
Apply:  Pos: [119, 127] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [128, 135, 137] ccc => cc
Apply:  Pos: [131, 139] cc => I
Apply:  Pos: [147, 153] cc => I
Apply:  Pos: [148, 152] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [166, 175] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [172, 181] cc => I
Apply:  Pos: [173, 180] cc => I
Apply:  Pos: [176, 189] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 190, 196] ccc => cc
Apply:  Pos: [186, 201] cc => I
Apply:  Pos: [204, 214] cc => I
Apply:  Pos: [205, 210, 216] ccc => cc
Apply:  Pos: [207, 211] cc => I
Apply:  Pos: [212, 222] cc => I
Apply:  Pos: [217, 225] cc => I
Apply:  Pos: [218, 223] cc => I
Apply:  Pos: [219, 228] cc => I
Apply:  Pos: [234, 240, 248] ccc => cc
Apply:  Pos: [236, 238, 246] ccc => cc
Apply:  Pos: [241, 249] cc => I
Apply:  Pos: [250, 256, 265] ccc => cc
Apply:  Pos: [259, 266] cc => I
Apply:  Pos: [260, 269] cc => I
Apply:  Pos: [276, 285] cc => I
Apply:  Pos: [281, 294] cc => I
Apply:  Pos: [282, 289] cc => I
Apply:  Pos: [283, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [298, 304] cc => I
Apply:  Pos: [307, 311] cc => I
Apply:  Pos: [308, 310] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [7, 19], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [0, 7], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [7, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [2, 10], [5, 15], [17, 3], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [2, 10], [17, 3], [15, 14], [13, 8], [12, 4], [9, 4], [3, 16], [10, 8], [6, 15], [9, 12], [1, 19], [17, 3], [5, 15], [16, 9], [8, 14], [9, 12], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [15, 8], [4, 7], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [4, 7], [17, 3], [10, 0], [16, 2], [6, 15], [8, 14], [0, 7], [11, 18], [9, 13], [7, 1], [12, 13], [0, 19], [12, 13], [2, 15], [6, 11], [9, 4], [8, 14], [13, 0], [16, 2], [11, 18], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [9, 4], [13, 8], [15, 18], [10, 13], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [13, 8], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [5, 6], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [5, 6], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  6.45311427116394

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[33, 45]
[87, 103]
[113, 115]
[108, 119]
[154, 160]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[45, 50, 55]
[118, 127, 131]
[160, 166, 174]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 17, 22]
[53, 57, 59]
[110, 117, 122]
[132, 134, 146]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[31, 44]
[33, 45]
[87, 103]
[113, 115]
[108, 119]
[154, 160]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7499825954437256

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [11, 17, 22] ccc => cc, Pos: [31, 44] cc => I, Pos: [31, 44] cc => I, Pos: [33, 45] cc => I, Pos: [33, 45] cc => I, Pos: [45, 50, 55] ccc => cc, Pos: [53, 57, 59] ccc => cc, Pos: [87, 103] cc => I, Pos: [87, 103] cc => I, Pos: [108, 119] cc => I, Pos: [108, 119] cc => I, Pos: [110, 117, 122] ccc => cc, Pos: [113, 115] cc => I, Pos: [113, 115] cc => I, Pos: [118, 127, 131] ccc => cc, Pos: [132, 134, 146] ccc => cc, Pos: [154, 160] cc => I, Pos: [154, 160] cc => I, Pos: [160, 166, 174] ccc => cc]

Plan: 1
[Pos: [11, 17, 22] ccc => cc,
 Pos: [31, 44] cc => I,
 Pos: [33, 45] cc => I,
 Pos: [53, 57, 59] ccc => cc,
 Pos: [87, 103] cc => I,
 Pos: [108, 119] cc => I,
 Pos: [110, 117, 122] ccc => cc,
 Pos: [113, 115] cc => I,
 Pos: [118, 127, 131] ccc => cc,
 Pos: [132, 134, 146] ccc => cc,
 Pos: [154, 160] cc => I]
Change: 11, Saving: 10

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0312345027923584

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [11, 17, 22] ccc => cc,
 Pos: [31, 44] cc => I,
 Pos: [33, 45] cc => I,
 Pos: [53, 57, 59] ccc => cc,
 Pos: [87, 103] cc => I,
 Pos: [108, 119] cc => I,
 Pos: [110, 117, 122] ccc => cc,
 Pos: [113, 115] cc => I,
 Pos: [118, 127, 131] ccc => cc,
 Pos: [132, 134, 146] ccc => cc,
 Pos: [154, 160] cc => I]
Change: 11, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [11, 17, 22] ccc => cc
Apply:  Pos: [31, 44] cc => I
Apply:  Pos: [33, 45] cc => I
Apply:  Pos: [53, 57, 59] ccc => cc
Apply:  Pos: [87, 103] cc => I
Apply:  Pos: [108, 119] cc => I
Apply:  Pos: [110, 117, 122] ccc => cc
Apply:  Pos: [113, 115] cc => I
Apply:  Pos: [118, 127, 131] ccc => cc
Apply:  Pos: [132, 134, 146] ccc => cc
Apply:  Pos: [154, 160] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 8], [15, 18], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 4], [12, 4], [3, 16], [10, 8], [6, 15], [16, 9], [1, 19], [17, 3], [5, 15], [9, 12], [8, 14], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [15, 8], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [15, 8], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.781217098236084

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[81, 86]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[81, 86]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.375108242034912

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [81, 86] cc => I, Pos: [81, 86] cc => I]

Plan: 1
[Pos: [81, 86] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015641450881958008

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [81, 86] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [81, 86] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[9, 4], [3, 16], [8, 14], [15, 18], [15, 8], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [15, 14], [18, 14], [13, 8], [12, 4], [9, 4], [3, 16], [10, 8], [6, 15], [16, 9], [1, 19], [17, 3], [5, 15], [9, 12], [8, 14], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [9, 4], [12, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [16, 10], [3, 10], [7, 19], [8, 14], [13, 0], [10, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.39074969291687

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.328181266784668

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[9, 4], [3, 16], [8, 14], [15, 8], [15, 18], [16, 15], [4, 7], [10, 0], [9, 12], [2, 15], [8, 14], [0, 7], [6, 11], [0, 1], [12, 13], [5, 6], [15, 8], [7, 19], [6, 15], [10, 13], [16, 2], [9, 12], [1, 19], [17, 5], [13, 19], [3, 10], [2, 15], [12, 4], [0, 19], [9, 4], [5, 15], [8, 14], [17, 5], [13, 4], [7, 1], [4, 7], [12, 13], [5, 6], [0, 1], [2, 15], [18, 14], [15, 14], [13, 8], [9, 4], [12, 4], [3, 16], [10, 8], [6, 15], [16, 9], [1, 19], [17, 3], [5, 15], [9, 12], [8, 14], [14, 1], [0, 7], [9, 13], [15, 8], [11, 18], [12, 4], [10, 8], [7, 19], [2, 15], [18, 14], [17, 5], [13, 0], [8, 18], [0, 1], [9, 4], [0, 19], [8, 14], [7, 1], [16, 9], [5, 15], [2, 10], [13, 0], [12, 4], [9, 13], [16, 10], [3, 2], [13, 8], [3, 10], [0, 19], [15, 18], [16, 9], [5, 2], [9, 13], [3, 16], [14, 1], [8, 14], [16, 9], [12, 13], [3, 2], [18, 14], [17, 3], [10, 0], [16, 2], [6, 15], [0, 7], [6, 11], [9, 13], [7, 1], [0, 19], [2, 15], [11, 18], [9, 7], [13, 0], [16, 2], [6, 15], [15, 8], [2, 6], [3, 16], [4, 7], [1, 19], [2, 15], [6, 11], [10, 13], [15, 18], [13, 8], [12, 4], [5, 6], [6, 15], [7, 19], [6, 11], [9, 12], [1, 19], [4, 7], [2, 6], [7, 19], [18, 14], [16, 9], [17, 6], [12, 4], [10, 19], [16, 2], [0, 19], [9, 12], [8, 18], [15, 14], [3, 16], [18, 14], [7, 1], [15, 8], [3, 2], [1, 19], [16, 10], [13, 8], [6, 11], [0, 7], [15, 14], [17, 3], [5, 15], [18, 14], [0, 1], [3, 16], [5, 6], [11, 18], [8, 0], [7, 1], [2, 15], [13, 4], [16, 9], [10, 8], [6, 11], [2, 6], [0, 19], [15, 8], [12, 4], [9, 4], [7, 19], [6, 15], [16, 9], [1, 19], [12, 13], [4, 7], [17, 5], [3, 10], [16, 10], [7, 19], [8, 14], [10, 0], [13, 0], [11, 18], [14, 1], [13, 4], ----End Timer [Execute Mapping]:  3.328181266784668

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [185] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 370

Reduced: 
 - size: 130 (41.27%)
 - depth: 4 (8.89%)

