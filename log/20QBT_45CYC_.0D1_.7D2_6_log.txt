----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.15635251998901367

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 15], [0, 7], [1, 17], [12, 10], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [2, 8], [5, 1], [19, 16], [17, 18], [13, 4], [9, 6], [19, 15], [9, 6], [12, 10], [4, 18], [13, 16], [17, 14], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 16], [5, 11], [2, 8], [13, 4], [17, 14], [19, 15], [8, 16], [18, 0], [12, 9], [5, 1], [4, 1], [12, 9], [13, 16], [14, 7], [5, 11], [8, 10], [18, 0], [4, 1], [10, 17], [5, 11], [13, 19], [14, 7], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [15, 11], [5, 1], [2, 13], [16, 12], [0, 3], [17, 14], [4, 17], [16, 12], [2, 13], [15, 1], [18, 3], [8, 10], [6, 14], [4, 17], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [7, 3], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 10], [16, 12], [4, 1], [10, 14], [17, 6], [13, 19], [0, 3], [4, 18], [15, 1], [0, 7], [8, 10], [17, 6], [19, 4], [15, 1], [10, 6], [7, 3], [2, 13], [16, 12], [5, 11], [17, 14], [19, 15], [13, 4], [16, 10], [7, 3], [5, 11], [17, 14], [1, 18], [15, 1], [4, 18], [16, 12], [10, 17], [6, 14], [0, 3], [5, 11], [13, 19], [2, 8], [15, 11], [4, 1], [16, 12], [13, 19], [7, 3], [10, 6], [15, 5], [10, 6], [7, 3], [16, 4], [1, 17], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [1, 17], [18, 7], [5, 1], [13, 4], [9, 6], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [12, 10], [19, 16], [11, 0], [7, 3], [15, 1], [16, 4], [18, 0], [8, 12], [9, 6], [5, 11], [17, 14], [15, 1], [4, 17], [6, 14], [13, 16], [12, 10], [18, 7], [5, 11], [0, 3], [15, 11], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [15, 11], [17, 6], [2, 8], [13, 19], [16, 12], [4, 1], [0, 3], [14, 7], [5, 11], [17, 6], [12, 10], [15, 1], [13, 19], [0, 3], [4, 18], [8, 16], [5, 11], [6, 14], [8, 12], [4, 18], [10, 17], [7, 3], [2, 13], [5, 1], [12, 10], [14, 7], [2, 13], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [7, 3], [17, 14], [12, 9], [2, 13], [4, 1], [8, 10], [12, 9], [18, 7], [13, 16], [11, 0], [17, 6], [15, 5], [4, 1], [8, 16], [6, 14], [2, 13], [15, 11], [18, 7], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [2, 13], [13, 4], [1, 17], [14, 7], [19, 15], [12, 10], [2, 8], [0, 3], [19, 4], [12, 10], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [19, 4], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [19, 4], [8, 16], [14, 7], [10, 17], [1, 11], [15, 5], [0, 3], [19, 4], [17, 18], [12, 10], [5, 1], [14, 7], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [12, 9], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [13, 16], [10, 14], [0, 3], [12, 9], [17, 18], [8, 12], [9, 6], [11, 0], [10, 14], [19, 4], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 15, 22]
[22, 29, 37]
[111, 114, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[174, 181, 189]
[220, 224, 233]
[263, 274, 284]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[105, 117, 120]
[144, 147, 153]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.18741250038147

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 22] ccc => cc, Pos: [22, 29, 37] ccc => cc, Pos: [25, 39] cc => I, Pos: [25, 39] cc => I, Pos: [26, 36] cc => I, Pos: [26, 36] cc => I, Pos: [31, 50] cc => I, Pos: [31, 50] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 46] cc => I, Pos: [38, 46] cc => I, Pos: [41, 48] cc => I, Pos: [41, 48] cc => I, Pos: [42, 52] cc => I, Pos: [42, 52] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [55, 64] cc => I, Pos: [55, 64] cc => I, Pos: [56, 59] cc => I, Pos: [56, 59] cc => I, Pos: [58, 65] cc => I, Pos: [58, 65] cc => I, Pos: [61, 69] cc => I, Pos: [61, 69] cc => I, Pos: [62, 67] cc => I, Pos: [62, 67] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [81, 95] cc => I, Pos: [81, 95] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [84, 88] cc => I, Pos: [84, 88] cc => I, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [105, 117, 120] ccc => cc, Pos: [110, 115] cc => I, Pos: [110, 115] cc => I, Pos: [111, 114, 121] ccc => cc, Pos: [112, 128] cc => I, Pos: [112, 128] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [135, 144] cc => I, Pos: [135, 144] cc => I, Pos: [140, 149] cc => I, Pos: [140, 149] cc => I, Pos: [144, 147, 153] ccc => cc, Pos: [145, 150] cc => I, Pos: [145, 150] cc => I, Pos: [151, 155] cc => I, Pos: [151, 155] cc => I, Pos: [152, 154] cc => I, Pos: [152, 154] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [168, 182] cc => I, Pos: [168, 182] cc => I, Pos: [174, 181, 189] ccc => cc, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [183, 191] cc => I, Pos: [183, 191] cc => I, Pos: [192, 205] cc => I, Pos: [192, 205] cc => I, Pos: [193, 199] cc => I, Pos: [193, 199] cc => I, Pos: [196, 200] cc => I, Pos: [196, 200] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [218, 228] cc => I, Pos: [218, 228] cc => I, Pos: [220, 224, 233] ccc => cc, Pos: [221, 225] cc => I, Pos: [221, 225] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [235, 239] cc => I, Pos: [235, 239] cc => I, Pos: [237, 245] cc => I, Pos: [237, 245] cc => I, Pos: [240, 250] cc => I, Pos: [240, 250] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [261, 265] cc => I, Pos: [261, 265] cc => I, Pos: [263, 274, 284] ccc => cc, Pos: [264, 272] cc => I, Pos: [264, 272] cc => I, Pos: [272, 278] cc => I, Pos: [272, 278] cc => I, Pos: [278, 285] cc => I, Pos: [278, 285] cc => I, Pos: [280, 289] cc => I, Pos: [280, 289] cc => I, Pos: [284, 306] cc => I, Pos: [284, 306] cc => I, Pos: [298, 307] cc => I, Pos: [298, 307] cc => I, Pos: [304, 314] cc => I, Pos: [304, 314] cc => I, Pos: [305, 312] cc => I, Pos: [305, 312] cc => I]

Plan: 1
[Pos: [12, 15, 22] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [26, 36] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [38, 46] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [49, 62] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [58, 65] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [110, 115] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [112, 128] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [140, 149] cc => I,
 Pos: [144, 147, 153] ccc => cc,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [192, 205] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [196, 200] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [221, 225] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [263, 274, 284] ccc => cc,
 Pos: [264, 272] cc => I,
 Pos: [278, 285] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 55, Saving: 206

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 15, 22] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [26, 36] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [38, 46] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [49, 62] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [58, 65] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [110, 115] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [112, 128] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [140, 149] cc => I,
 Pos: [144, 147, 153] ccc => cc,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [192, 205] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [196, 200] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [221, 225] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [263, 274, 284] ccc => cc,
 Pos: [264, 272] cc => I,
 Pos: [278, 285] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 55, Saving: 206

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 15, 22] ccc => cc
Apply:  Pos: [25, 39] cc => I
Apply:  Pos: [26, 36] cc => I
Apply:  Pos: [31, 50] cc => I
Apply:  Pos: [38, 46] cc => I
Apply:  Pos: [41, 48] cc => I
Apply:  Pos: [42, 52] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [49, 62] cc => I
Apply:  Pos: [56, 59] cc => I
Apply:  Pos: [58, 65] cc => I
Apply:  Pos: [61, 69] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [84, 88] cc => I
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [105, 117, 120] ccc => cc
Apply:  Pos: [110, 115] cc => I
Apply:  Pos: [111, 114, 121] ccc => cc
Apply:  Pos: [112, 128] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [140, 149] cc => I
Apply:  Pos: [144, 147, 153] ccc => cc
Apply:  Pos: [145, 150] cc => I
Apply:  Pos: [151, 155] cc => I
Apply:  Pos: [152, 154] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [168, 182] cc => I
Apply:  Pos: [174, 181, 189] ccc => cc
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [183, 191] cc => I
Apply:  Pos: [192, 205] cc => I
Apply:  Pos: [193, 199] cc => I
Apply:  Pos: [196, 200] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [220, 224, 233] ccc => cc
Apply:  Pos: [221, 225] cc => I
Apply:  Pos: [235, 239] cc => I
Apply:  Pos: [237, 245] cc => I
Apply:  Pos: [240, 250] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [261, 265] cc => I
Apply:  Pos: [263, 274, 284] ccc => cc
Apply:  Pos: [264, 272] cc => I
Apply:  Pos: [278, 285] cc => I
Apply:  Pos: [280, 289] cc => I
Apply:  Pos: [298, 307] cc => I
Apply:  Pos: [304, 314] cc => I
Apply:  Pos: [305, 312] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [0, 7], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [6, 14], [0, 3], [15, 5], [2, 8], [5, 11], [4, 1], [16, 4], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [0, 3], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [0, 3], [17, 18], [8, 12], [9, 6], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  6.18741250038147

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[94, 104]
[182, 206]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[98, 101, 102]
[193, 197, 209]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 70, 72]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[94, 104]
[182, 206]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.937540054321289

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 70, 72] ccc => cc, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [98, 101, 102] ccc => cc, Pos: [182, 206] cc => I, Pos: [182, 206] cc => I, Pos: [193, 197, 209] ccc => cc]

Plan: 1
[Pos: [65, 70, 72] ccc => cc,
 Pos: [94, 104] cc => I,
 Pos: [98, 101, 102] ccc => cc,
 Pos: [182, 206] cc => I,
 Pos: [193, 197, 209] ccc => cc]
Change: 5, Saving: 14

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 70, 72] ccc => cc,
 Pos: [94, 104] cc => I,
 Pos: [98, 101, 102] ccc => cc,
 Pos: [182, 206] cc => I,
 Pos: [193, 197, 209] ccc => cc]
Change: 5, Saving: 14

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 70, 72] ccc => cc
Apply:  Pos: [94, 104] cc => I
Apply:  Pos: [98, 101, 102] ccc => cc
Apply:  Pos: [182, 206] cc => I
Apply:  Pos: [193, 197, 209] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [11, 0], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.937540054321289

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[99, 113]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[99, 113]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7656259536743164

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [99, 113] cc => I, Pos: [99, 113] cc => I]

Plan: 1
[Pos: [99, 113] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [99, 113] cc => I]
Change: 1, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [99, 113] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.7656259536743164

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7344107627868652

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.7344107627868652

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [203] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 406

Reduced: 
 - size: 112 (35.56%)
 - cycle: 224 (35.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499189376831055

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 15], [0, 7], [1, 17], [12, 10], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [2, 8], [5, 1], [19, 16], [17, 18], [13, 4], [9, 6], [19, 15], [9, 6], [12, 10], [4, 18], [13, 16], [17, 14], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 16], [5, 11], [2, 8], [13, 4], [17, 14], [19, 15], [8, 16], [18, 0], [12, 9], [5, 1], [4, 1], [12, 9], [13, 16], [14, 7], [5, 11], [8, 10], [18, 0], [4, 1], [10, 17], [5, 11], [13, 19], [14, 7], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [15, 11], [5, 1], [2, 13], [16, 12], [0, 3], [17, 14], [4, 17], [16, 12], [2, 13], [15, 1], [18, 3], [8, 10], [6, 14], [4, 17], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [7, 3], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 10], [16, 12], [4, 1], [10, 14], [17, 6], [13, 19], [0, 3], [4, 18], [15, 1], [0, 7], [8, 10], [17, 6], [19, 4], [15, 1], [10, 6], [7, 3], [2, 13], [16, 12], [5, 11], [17, 14], [19, 15], [13, 4], [16, 10], [7, 3], [5, 11], [17, 14], [1, 18], [15, 1], [4, 18], [16, 12], [10, 17], [6, 14], [0, 3], [5, 11], [13, 19], [2, 8], [15, 11], [4, 1], [16, 12], [13, 19], [7, 3], [10, 6], [15, 5], [10, 6], [7, 3], [16, 4], [1, 17], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [1, 17], [18, 7], [5, 1], [13, 4], [9, 6], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [12, 10], [19, 16], [11, 0], [7, 3], [15, 1], [16, 4], [18, 0], [8, 12], [9, 6], [5, 11], [17, 14], [15, 1], [4, 17], [6, 14], [13, 16], [12, 10], [18, 7], [5, 11], [0, 3], [15, 11], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [15, 11], [17, 6], [2, 8], [13, 19], [16, 12], [4, 1], [0, 3], [14, 7], [5, 11], [17, 6], [12, 10], [15, 1], [13, 19], [0, 3], [4, 18], [8, 16], [5, 11], [6, 14], [8, 12], [4, 18], [10, 17], [7, 3], [2, 13], [5, 1], [12, 10], [14, 7], [2, 13], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [7, 3], [17, 14], [12, 9], [2, 13], [4, 1], [8, 10], [12, 9], [18, 7], [13, 16], [11, 0], [17, 6], [15, 5], [4, 1], [8, 16], [6, 14], [2, 13], [15, 11], [18, 7], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [2, 13], [13, 4], [1, 17], [14, 7], [19, 15], [12, 10], [2, 8], [0, 3], [19, 4], [12, 10], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [19, 4], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [19, 4], [8, 16], [14, 7], [10, 17], [1, 11], [15, 5], [0, 3], [19, 4], [17, 18], [12, 10], [5, 1], [14, 7], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [12, 9], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [13, 16], [10, 14], [0, 3], [12, 9], [17, 18], [8, 12], [9, 6], [11, 0], [10, 14], [19, 4], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 15, 22]
[22, 29, 37]
[111, 114, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[174, 181, 189]
[220, 224, 233]
[263, 274, 284]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[105, 117, 120]
[144, 147, 153]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.156202077865601

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 22] ccc => cc, Pos: [22, 29, 37] ccc => cc, Pos: [25, 39] cc => I, Pos: [25, 39] cc => I, Pos: [26, 36] cc => I, Pos: [26, 36] cc => I, Pos: [31, 50] cc => I, Pos: [31, 50] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 46] cc => I, Pos: [38, 46] cc => I, Pos: [41, 48] cc => I, Pos: [41, 48] cc => I, Pos: [42, 52] cc => I, Pos: [42, 52] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [55, 64] cc => I, Pos: [55, 64] cc => I, Pos: [56, 59] cc => I, Pos: [56, 59] cc => I, Pos: [58, 65] cc => I, Pos: [58, 65] cc => I, Pos: [61, 69] cc => I, Pos: [61, 69] cc => I, Pos: [62, 67] cc => I, Pos: [62, 67] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [81, 95] cc => I, Pos: [81, 95] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [84, 88] cc => I, Pos: [84, 88] cc => I, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [105, 117, 120] ccc => cc, Pos: [110, 115] cc => I, Pos: [110, 115] cc => I, Pos: [111, 114, 121] ccc => cc, Pos: [112, 128] cc => I, Pos: [112, 128] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [135, 144] cc => I, Pos: [135, 144] cc => I, Pos: [140, 149] cc => I, Pos: [140, 149] cc => I, Pos: [144, 147, 153] ccc => cc, Pos: [145, 150] cc => I, Pos: [145, 150] cc => I, Pos: [151, 155] cc => I, Pos: [151, 155] cc => I, Pos: [152, 154] cc => I, Pos: [152, 154] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [168, 182] cc => I, Pos: [168, 182] cc => I, Pos: [174, 181, 189] ccc => cc, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [183, 191] cc => I, Pos: [183, 191] cc => I, Pos: [192, 205] cc => I, Pos: [192, 205] cc => I, Pos: [193, 199] cc => I, Pos: [193, 199] cc => I, Pos: [196, 200] cc => I, Pos: [196, 200] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [218, 228] cc => I, Pos: [218, 228] cc => I, Pos: [220, 224, 233] ccc => cc, Pos: [221, 225] cc => I, Pos: [221, 225] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [235, 239] cc => I, Pos: [235, 239] cc => I, Pos: [237, 245] cc => I, Pos: [237, 245] cc => I, Pos: [240, 250] cc => I, Pos: [240, 250] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [261, 265] cc => I, Pos: [261, 265] cc => I, Pos: [263, 274, 284] ccc => cc, Pos: [264, 272] cc => I, Pos: [264, 272] cc => I, Pos: [272, 278] cc => I, Pos: [272, 278] cc => I, Pos: [278, 285] cc => I, Pos: [278, 285] cc => I, Pos: [280, 289] cc => I, Pos: [280, 289] cc => I, Pos: [284, 306] cc => I, Pos: [284, 306] cc => I, Pos: [298, 307] cc => I, Pos: [298, 307] cc => I, Pos: [304, 314] cc => I, Pos: [304, 314] cc => I, Pos: [305, 312] cc => I, Pos: [305, 312] cc => I]

Plan: 1
[Pos: [12, 15, 22] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [26, 36] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [38, 46] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [49, 62] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [58, 65] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [110, 115] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [112, 128] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [140, 149] cc => I,
 Pos: [144, 147, 153] ccc => cc,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [192, 205] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [196, 200] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [221, 225] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [263, 274, 284] ccc => cc,
 Pos: [264, 272] cc => I,
 Pos: [278, 285] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 55, Saving: 58

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.1409149169921875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 15, 22] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [26, 36] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [38, 46] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [49, 62] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [58, 65] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [110, 115] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [112, 128] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [140, 149] cc => I,
 Pos: [144, 147, 153] ccc => cc,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [192, 205] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [196, 200] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [221, 225] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [263, 274, 284] ccc => cc,
 Pos: [264, 272] cc => I,
 Pos: [278, 285] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 55, Saving: 58

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 15, 22] ccc => cc
Apply:  Pos: [25, 39] cc => I
Apply:  Pos: [26, 36] cc => I
Apply:  Pos: [31, 50] cc => I
Apply:  Pos: [38, 46] cc => I
Apply:  Pos: [41, 48] cc => I
Apply:  Pos: [42, 52] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [49, 62] cc => I
Apply:  Pos: [56, 59] cc => I
Apply:  Pos: [58, 65] cc => I
Apply:  Pos: [61, 69] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [84, 88] cc => I
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [105, 117, 120] ccc => cc
Apply:  Pos: [110, 115] cc => I
Apply:  Pos: [111, 114, 121] ccc => cc
Apply:  Pos: [112, 128] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [140, 149] cc => I
Apply:  Pos: [144, 147, 153] ccc => cc
Apply:  Pos: [145, 150] cc => I
Apply:  Pos: [151, 155] cc => I
Apply:  Pos: [152, 154] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [168, 182] cc => I
Apply:  Pos: [174, 181, 189] ccc => cc
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [183, 191] cc => I
Apply:  Pos: [192, 205] cc => I
Apply:  Pos: [193, 199] cc => I
Apply:  Pos: [196, 200] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [220, 224, 233] ccc => cc
Apply:  Pos: [221, 225] cc => I
Apply:  Pos: [235, 239] cc => I
Apply:  Pos: [237, 245] cc => I
Apply:  Pos: [240, 250] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [261, 265] cc => I
Apply:  Pos: [263, 274, 284] ccc => cc
Apply:  Pos: [264, 272] cc => I
Apply:  Pos: [278, 285] cc => I
Apply:  Pos: [280, 289] cc => I
Apply:  Pos: [298, 307] cc => I
Apply:  Pos: [304, 314] cc => I
Apply:  Pos: [305, 312] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [0, 7], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [6, 14], [0, 3], [15, 5], [2, 8], [5, 11], [4, 1], [16, 4], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [0, 3], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [0, 3], [17, 18], [8, 12], [9, 6], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  6.297116994857788

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[94, 104]
[182, 206]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[98, 101, 102]
[193, 197, 209]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 70, 72]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[94, 104]
[182, 206]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.906207323074341

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 70, 72] ccc => cc, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [98, 101, 102] ccc => cc, Pos: [182, 206] cc => I, Pos: [182, 206] cc => I, Pos: [193, 197, 209] ccc => cc]

Plan: 1
[Pos: [65, 70, 72] ccc => cc,
 Pos: [94, 104] cc => I,
 Pos: [98, 101, 102] ccc => cc,
 Pos: [182, 206] cc => I,
 Pos: [193, 197, 209] ccc => cc]
Change: 5, Saving: 5

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015637874603271484

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 70, 72] ccc => cc,
 Pos: [94, 104] cc => I,
 Pos: [98, 101, 102] ccc => cc,
 Pos: [182, 206] cc => I,
 Pos: [193, 197, 209] ccc => cc]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 70, 72] ccc => cc
Apply:  Pos: [94, 104] cc => I
Apply:  Pos: [98, 101, 102] ccc => cc
Apply:  Pos: [182, 206] cc => I
Apply:  Pos: [193, 197, 209] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [11, 0], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.9218451976776123

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[99, 113]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[99, 113]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.718027114868164

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [99, 113] cc => I, Pos: [99, 113] cc => I]

Plan: 1
[Pos: [99, 113] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [99, 113] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [99, 113] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.718027114868164

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.68739914894104

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.68739914894104

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [203] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 406

Reduced: 
 - size: 112 (35.56%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499260902404785

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 15], [0, 7], [1, 17], [12, 10], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [2, 8], [5, 1], [19, 16], [17, 18], [13, 4], [9, 6], [19, 15], [9, 6], [12, 10], [4, 18], [13, 16], [17, 14], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 16], [5, 11], [2, 8], [13, 4], [17, 14], [19, 15], [8, 16], [18, 0], [12, 9], [5, 1], [4, 1], [12, 9], [13, 16], [14, 7], [5, 11], [8, 10], [18, 0], [4, 1], [10, 17], [5, 11], [13, 19], [14, 7], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [15, 11], [5, 1], [2, 13], [16, 12], [0, 3], [17, 14], [4, 17], [16, 12], [2, 13], [15, 1], [18, 3], [8, 10], [6, 14], [4, 17], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [7, 3], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 10], [16, 12], [4, 1], [10, 14], [17, 6], [13, 19], [0, 3], [4, 18], [15, 1], [0, 7], [8, 10], [17, 6], [19, 4], [15, 1], [10, 6], [7, 3], [2, 13], [16, 12], [5, 11], [17, 14], [19, 15], [13, 4], [16, 10], [7, 3], [5, 11], [17, 14], [1, 18], [15, 1], [4, 18], [16, 12], [10, 17], [6, 14], [0, 3], [5, 11], [13, 19], [2, 8], [15, 11], [4, 1], [16, 12], [13, 19], [7, 3], [10, 6], [15, 5], [10, 6], [7, 3], [16, 4], [1, 17], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [1, 17], [18, 7], [5, 1], [13, 4], [9, 6], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [12, 10], [19, 16], [11, 0], [7, 3], [15, 1], [16, 4], [18, 0], [8, 12], [9, 6], [5, 11], [17, 14], [15, 1], [4, 17], [6, 14], [13, 16], [12, 10], [18, 7], [5, 11], [0, 3], [15, 11], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [15, 11], [17, 6], [2, 8], [13, 19], [16, 12], [4, 1], [0, 3], [14, 7], [5, 11], [17, 6], [12, 10], [15, 1], [13, 19], [0, 3], [4, 18], [8, 16], [5, 11], [6, 14], [8, 12], [4, 18], [10, 17], [7, 3], [2, 13], [5, 1], [12, 10], [14, 7], [2, 13], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [7, 3], [17, 14], [12, 9], [2, 13], [4, 1], [8, 10], [12, 9], [18, 7], [13, 16], [11, 0], [17, 6], [15, 5], [4, 1], [8, 16], [6, 14], [2, 13], [15, 11], [18, 7], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [2, 13], [13, 4], [1, 17], [14, 7], [19, 15], [12, 10], [2, 8], [0, 3], [19, 4], [12, 10], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [19, 4], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [19, 4], [8, 16], [14, 7], [10, 17], [1, 11], [15, 5], [0, 3], [19, 4], [17, 18], [12, 10], [5, 1], [14, 7], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [12, 9], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [13, 16], [10, 14], [0, 3], [12, 9], [17, 18], [8, 12], [9, 6], [11, 0], [10, 14], [19, 4], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 15, 22]
[22, 29, 37]
[111, 114, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[174, 181, 189]
[220, 224, 233]
[263, 274, 284]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[105, 117, 120]
[144, 147, 153]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.106659412384033

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 22] ccc => cc, Pos: [22, 29, 37] ccc => cc, Pos: [25, 39] cc => I, Pos: [25, 39] cc => I, Pos: [26, 36] cc => I, Pos: [26, 36] cc => I, Pos: [31, 50] cc => I, Pos: [31, 50] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 46] cc => I, Pos: [38, 46] cc => I, Pos: [41, 48] cc => I, Pos: [41, 48] cc => I, Pos: [42, 52] cc => I, Pos: [42, 52] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [55, 64] cc => I, Pos: [55, 64] cc => I, Pos: [56, 59] cc => I, Pos: [56, 59] cc => I, Pos: [58, 65] cc => I, Pos: [58, 65] cc => I, Pos: [61, 69] cc => I, Pos: [61, 69] cc => I, Pos: [62, 67] cc => I, Pos: [62, 67] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [81, 95] cc => I, Pos: [81, 95] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [84, 88] cc => I, Pos: [84, 88] cc => I, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [105, 117, 120] ccc => cc, Pos: [110, 115] cc => I, Pos: [110, 115] cc => I, Pos: [111, 114, 121] ccc => cc, Pos: [112, 128] cc => I, Pos: [112, 128] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [135, 144] cc => I, Pos: [135, 144] cc => I, Pos: [140, 149] cc => I, Pos: [140, 149] cc => I, Pos: [144, 147, 153] ccc => cc, Pos: [145, 150] cc => I, Pos: [145, 150] cc => I, Pos: [151, 155] cc => I, Pos: [151, 155] cc => I, Pos: [152, 154] cc => I, Pos: [152, 154] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [168, 182] cc => I, Pos: [168, 182] cc => I, Pos: [174, 181, 189] ccc => cc, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [183, 191] cc => I, Pos: [183, 191] cc => I, Pos: [192, 205] cc => I, Pos: [192, 205] cc => I, Pos: [193, 199] cc => I, Pos: [193, 199] cc => I, Pos: [196, 200] cc => I, Pos: [196, 200] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [218, 228] cc => I, Pos: [218, 228] cc => I, Pos: [220, 224, 233] ccc => cc, Pos: [221, 225] cc => I, Pos: [221, 225] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [235, 239] cc => I, Pos: [235, 239] cc => I, Pos: [237, 245] cc => I, Pos: [237, 245] cc => I, Pos: [240, 250] cc => I, Pos: [240, 250] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [261, 265] cc => I, Pos: [261, 265] cc => I, Pos: [263, 274, 284] ccc => cc, Pos: [264, 272] cc => I, Pos: [264, 272] cc => I, Pos: [272, 278] cc => I, Pos: [272, 278] cc => I, Pos: [278, 285] cc => I, Pos: [278, 285] cc => I, Pos: [280, 289] cc => I, Pos: [280, 289] cc => I, Pos: [284, 306] cc => I, Pos: [284, 306] cc => I, Pos: [298, 307] cc => I, Pos: [298, 307] cc => I, Pos: [304, 314] cc => I, Pos: [304, 314] cc => I, Pos: [305, 312] cc => I, Pos: [305, 312] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 29, 37] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [36, 38] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [55, 64] cc => I,
 Pos: [62, 67] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [65, 73] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [89, 96] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [110, 115] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [112, 128] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [140, 149] cc => I,
 Pos: [144, 147, 153] ccc => cc,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [192, 205] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [196, 200] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [221, 225] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [284, 306] cc => I,
 Pos: [272, 278] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 52, Saving: 196

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 29, 37] ccc => cc
Apply:  Pos: [25, 39] cc => I
Apply:  Pos: [36, 38] cc => I
Apply:  Pos: [31, 50] cc => I
Apply:  Pos: [41, 48] cc => I
Apply:  Pos: [42, 52] cc => I
Apply:  Pos: [55, 64] cc => I
Apply:  Pos: [62, 67] cc => I
Apply:  Pos: [56, 59] cc => I
Apply:  Pos: [65, 73] cc => I
Apply:  Pos: [61, 69] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [84, 88] cc => I
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [105, 117, 120] ccc => cc
Apply:  Pos: [110, 115] cc => I
Apply:  Pos: [111, 114, 121] ccc => cc
Apply:  Pos: [112, 128] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [140, 149] cc => I
Apply:  Pos: [144, 147, 153] ccc => cc
Apply:  Pos: [145, 150] cc => I
Apply:  Pos: [151, 155] cc => I
Apply:  Pos: [152, 154] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [168, 182] cc => I
Apply:  Pos: [174, 181, 189] ccc => cc
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [183, 191] cc => I
Apply:  Pos: [192, 205] cc => I
Apply:  Pos: [193, 199] cc => I
Apply:  Pos: [196, 200] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [220, 224, 233] ccc => cc
Apply:  Pos: [221, 225] cc => I
Apply:  Pos: [235, 239] cc => I
Apply:  Pos: [237, 245] cc => I
Apply:  Pos: [240, 250] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [261, 265] cc => I
Apply:  Pos: [284, 306] cc => I
Apply:  Pos: [272, 278] cc => I
Apply:  Pos: [280, 289] cc => I
Apply:  Pos: [298, 307] cc => I
Apply:  Pos: [304, 314] cc => I
Apply:  Pos: [305, 312] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [5, 11], [13, 4], [19, 15], [8, 16], [5, 1], [4, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [18, 0], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [0, 7], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [6, 14], [0, 3], [15, 5], [2, 8], [5, 11], [4, 1], [16, 4], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [19, 4], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [19, 4], [17, 18], [12, 10], [5, 1], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [9, 6], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  6.106659412384033

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 38]
[39, 52]
[45, 59]
[98, 108]
[179, 195]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[102, 105, 106]
[199, 203, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[69, 74, 76]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 38]
[39, 52]
[45, 59]
[98, 108]
[179, 195]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.9847171306610107

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [25, 38] cc => I, Pos: [25, 38] cc => I, Pos: [39, 52] cc => I, Pos: [39, 52] cc => I, Pos: [45, 59] cc => I, Pos: [45, 59] cc => I, Pos: [69, 74, 76] ccc => cc, Pos: [98, 108] cc => I, Pos: [98, 108] cc => I, Pos: [102, 105, 106] ccc => cc, Pos: [179, 195] cc => I, Pos: [179, 195] cc => I, Pos: [199, 203, 214] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 38] cc => I,
 Pos: [39, 52] cc => I,
 Pos: [45, 59] cc => I,
 Pos: [69, 74, 76] ccc => cc,
 Pos: [98, 108] cc => I,
 Pos: [102, 105, 106] ccc => cc,
 Pos: [179, 195] cc => I,
 Pos: [199, 203, 214] ccc => cc]
Change: 8, Saving: 26

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 38] cc => I
Apply:  Pos: [39, 52] cc => I
Apply:  Pos: [45, 59] cc => I
Apply:  Pos: [69, 74, 76] ccc => cc
Apply:  Pos: [98, 108] cc => I
Apply:  Pos: [102, 105, 106] ccc => cc
Apply:  Pos: [179, 195] cc => I
Apply:  Pos: [199, 203, 214] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [4, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [11, 0], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.9847171306610107

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[97, 111]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[97, 111]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6879372596740723

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [97, 111] cc => I, Pos: [97, 111] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [97, 111] cc => I]
Change: 1, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [97, 111] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [4, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.6879372596740723

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6322879791259766

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [4, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.6322879791259766

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [202] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 43 - (small)
 - circuit cycle: 404

Reduced: 
 - size: 113 (35.87%)
 - cycle: 226 (35.87%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499165534973145

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 15], [0, 7], [1, 17], [12, 10], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [2, 8], [5, 1], [19, 16], [17, 18], [13, 4], [9, 6], [19, 15], [9, 6], [12, 10], [4, 18], [13, 16], [17, 14], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 16], [5, 11], [2, 8], [13, 4], [17, 14], [19, 15], [8, 16], [18, 0], [12, 9], [5, 1], [4, 1], [12, 9], [13, 16], [14, 7], [5, 11], [8, 10], [18, 0], [4, 1], [10, 17], [5, 11], [13, 19], [14, 7], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [15, 11], [5, 1], [2, 13], [16, 12], [0, 3], [17, 14], [4, 17], [16, 12], [2, 13], [15, 1], [18, 3], [8, 10], [6, 14], [4, 17], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [7, 3], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 10], [16, 12], [4, 1], [10, 14], [17, 6], [13, 19], [0, 3], [4, 18], [15, 1], [0, 7], [8, 10], [17, 6], [19, 4], [15, 1], [10, 6], [7, 3], [2, 13], [16, 12], [5, 11], [17, 14], [19, 15], [13, 4], [16, 10], [7, 3], [5, 11], [17, 14], [1, 18], [15, 1], [4, 18], [16, 12], [10, 17], [6, 14], [0, 3], [5, 11], [13, 19], [2, 8], [15, 11], [4, 1], [16, 12], [13, 19], [7, 3], [10, 6], [15, 5], [10, 6], [7, 3], [16, 4], [1, 17], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [1, 17], [18, 7], [5, 1], [13, 4], [9, 6], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [12, 10], [19, 16], [11, 0], [7, 3], [15, 1], [16, 4], [18, 0], [8, 12], [9, 6], [5, 11], [17, 14], [15, 1], [4, 17], [6, 14], [13, 16], [12, 10], [18, 7], [5, 11], [0, 3], [15, 11], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [15, 11], [17, 6], [2, 8], [13, 19], [16, 12], [4, 1], [0, 3], [14, 7], [5, 11], [17, 6], [12, 10], [15, 1], [13, 19], [0, 3], [4, 18], [8, 16], [5, 11], [6, 14], [8, 12], [4, 18], [10, 17], [7, 3], [2, 13], [5, 1], [12, 10], [14, 7], [2, 13], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [7, 3], [17, 14], [12, 9], [2, 13], [4, 1], [8, 10], [12, 9], [18, 7], [13, 16], [11, 0], [17, 6], [15, 5], [4, 1], [8, 16], [6, 14], [2, 13], [15, 11], [18, 7], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [2, 13], [13, 4], [1, 17], [14, 7], [19, 15], [12, 10], [2, 8], [0, 3], [19, 4], [12, 10], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [19, 4], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [19, 4], [8, 16], [14, 7], [10, 17], [1, 11], [15, 5], [0, 3], [19, 4], [17, 18], [12, 10], [5, 1], [14, 7], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [12, 9], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [13, 16], [10, 14], [0, 3], [12, 9], [17, 18], [8, 12], [9, 6], [11, 0], [10, 14], [19, 4], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 15, 22]
[22, 29, 37]
[111, 114, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[174, 181, 189]
[220, 224, 233]
[263, 274, 284]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[105, 117, 120]
[144, 147, 153]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.225985527038574

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 22] ccc => cc, Pos: [22, 29, 37] ccc => cc, Pos: [25, 39] cc => I, Pos: [25, 39] cc => I, Pos: [26, 36] cc => I, Pos: [26, 36] cc => I, Pos: [31, 50] cc => I, Pos: [31, 50] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 46] cc => I, Pos: [38, 46] cc => I, Pos: [41, 48] cc => I, Pos: [41, 48] cc => I, Pos: [42, 52] cc => I, Pos: [42, 52] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [55, 64] cc => I, Pos: [55, 64] cc => I, Pos: [56, 59] cc => I, Pos: [56, 59] cc => I, Pos: [58, 65] cc => I, Pos: [58, 65] cc => I, Pos: [61, 69] cc => I, Pos: [61, 69] cc => I, Pos: [62, 67] cc => I, Pos: [62, 67] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [81, 95] cc => I, Pos: [81, 95] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [84, 88] cc => I, Pos: [84, 88] cc => I, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [105, 117, 120] ccc => cc, Pos: [110, 115] cc => I, Pos: [110, 115] cc => I, Pos: [111, 114, 121] ccc => cc, Pos: [112, 128] cc => I, Pos: [112, 128] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [135, 144] cc => I, Pos: [135, 144] cc => I, Pos: [140, 149] cc => I, Pos: [140, 149] cc => I, Pos: [144, 147, 153] ccc => cc, Pos: [145, 150] cc => I, Pos: [145, 150] cc => I, Pos: [151, 155] cc => I, Pos: [151, 155] cc => I, Pos: [152, 154] cc => I, Pos: [152, 154] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [168, 182] cc => I, Pos: [168, 182] cc => I, Pos: [174, 181, 189] ccc => cc, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [183, 191] cc => I, Pos: [183, 191] cc => I, Pos: [192, 205] cc => I, Pos: [192, 205] cc => I, Pos: [193, 199] cc => I, Pos: [193, 199] cc => I, Pos: [196, 200] cc => I, Pos: [196, 200] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [218, 228] cc => I, Pos: [218, 228] cc => I, Pos: [220, 224, 233] ccc => cc, Pos: [221, 225] cc => I, Pos: [221, 225] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [235, 239] cc => I, Pos: [235, 239] cc => I, Pos: [237, 245] cc => I, Pos: [237, 245] cc => I, Pos: [240, 250] cc => I, Pos: [240, 250] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [261, 265] cc => I, Pos: [261, 265] cc => I, Pos: [263, 274, 284] ccc => cc, Pos: [264, 272] cc => I, Pos: [264, 272] cc => I, Pos: [272, 278] cc => I, Pos: [272, 278] cc => I, Pos: [278, 285] cc => I, Pos: [278, 285] cc => I, Pos: [280, 289] cc => I, Pos: [280, 289] cc => I, Pos: [284, 306] cc => I, Pos: [284, 306] cc => I, Pos: [298, 307] cc => I, Pos: [298, 307] cc => I, Pos: [304, 314] cc => I, Pos: [304, 314] cc => I, Pos: [305, 312] cc => I, Pos: [305, 312] cc => I]

--------End Timer [Generate Plans]:  0.14226865768432617

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 15, 22] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [36, 38] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [55, 64] cc => I,
 Pos: [49, 62] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [58, 65] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [110, 115] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [128, 140] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [144, 147, 153] ccc => cc,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [200, 208] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [218, 228] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [221, 225] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [284, 306] cc => I,
 Pos: [264, 272] cc => I,
 Pos: [278, 285] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 52, Saving: 55

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 15, 22] ccc => cc
Apply:  Pos: [25, 39] cc => I
Apply:  Pos: [36, 38] cc => I
Apply:  Pos: [31, 50] cc => I
Apply:  Pos: [41, 48] cc => I
Apply:  Pos: [42, 52] cc => I
Apply:  Pos: [55, 64] cc => I
Apply:  Pos: [49, 62] cc => I
Apply:  Pos: [56, 59] cc => I
Apply:  Pos: [58, 65] cc => I
Apply:  Pos: [61, 69] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [84, 88] cc => I
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [105, 117, 120] ccc => cc
Apply:  Pos: [110, 115] cc => I
Apply:  Pos: [111, 114, 121] ccc => cc
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [144, 147, 153] ccc => cc
Apply:  Pos: [145, 150] cc => I
Apply:  Pos: [151, 155] cc => I
Apply:  Pos: [152, 154] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [168, 182] cc => I
Apply:  Pos: [174, 181, 189] ccc => cc
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [183, 191] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [193, 199] cc => I
Apply:  Pos: [200, 208] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [218, 228] cc => I
Apply:  Pos: [220, 224, 233] ccc => cc
Apply:  Pos: [221, 225] cc => I
Apply:  Pos: [235, 239] cc => I
Apply:  Pos: [237, 245] cc => I
Apply:  Pos: [240, 250] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [261, 265] cc => I
Apply:  Pos: [284, 306] cc => I
Apply:  Pos: [264, 272] cc => I
Apply:  Pos: [278, 285] cc => I
Apply:  Pos: [280, 289] cc => I
Apply:  Pos: [298, 307] cc => I
Apply:  Pos: [304, 314] cc => I
Apply:  Pos: [305, 312] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [0, 7], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [6, 14], [0, 3], [15, 5], [2, 8], [5, 11], [4, 1], [16, 12], [16, 4], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [0, 3], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [12, 10], [15, 1], [4, 18], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [9, 6], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  6.3682541847229

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[24, 38]
[39, 51]
[82, 106]
[99, 110]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[103, 107, 108]
[199, 203, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[69, 74, 76]
[106, 109, 117]
[142, 147, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[24, 38]
[39, 51]
[82, 106]
[99, 110]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.062570571899414

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [24, 38] cc => I, Pos: [24, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [69, 74, 76] ccc => cc, Pos: [82, 106] cc => I, Pos: [82, 106] cc => I, Pos: [99, 110] cc => I, Pos: [99, 110] cc => I, Pos: [103, 107, 108] ccc => cc, Pos: [106, 109, 117] ccc => cc, Pos: [142, 147, 150] ccc => cc, Pos: [199, 203, 214] ccc => cc]

--------End Timer [Generate Plans]:  0.015625476837158203

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [24, 38] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [69, 74, 76] ccc => cc,
 Pos: [106, 109, 117] ccc => cc,
 Pos: [99, 110] cc => I,
 Pos: [103, 107, 108] ccc => cc,
 Pos: [142, 147, 150] ccc => cc,
 Pos: [199, 203, 214] ccc => cc]
Change: 8, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [24, 38] cc => I
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [69, 74, 76] ccc => cc
Apply:  Pos: [106, 109, 117] ccc => cc
Apply:  Pos: [99, 110] cc => I
Apply:  Pos: [103, 107, 108] ccc => cc
Apply:  Pos: [142, 147, 150] ccc => cc
Apply:  Pos: [199, 203, 214] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [11, 0], [16, 12], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [0, 3], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [6, 14], [12, 10], [15, 1], [4, 18], [8, 16], [14, 7], [8, 12], [10, 17], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  4.078196048736572

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[101, 114]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 127, 133]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[101, 114]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7995338439941406

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [101, 114] cc => I, Pos: [101, 114] cc => I, Pos: [121, 127, 133] ccc => cc]

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [101, 114] cc => I, Pos: [121, 127, 133] ccc => cc]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [101, 114] cc => I
Apply:  Pos: [121, 127, 133] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [16, 12], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [17, 6], [13, 16], [18, 7], [0, 3], [19, 4], [0, 7], [6, 14], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [12, 10], [15, 1], [4, 18], [8, 16], [14, 7], [8, 12], [10, 17], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.815157651901245

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7352306842803955

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [16, 12], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [17, 6], [13, 16], [18, 7], [0, 3], [19, 4], [0, 7], [6, 14], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [12, 10], [15, 1], [4, 18], [8, 16], [14, 7], [8, 12], [10, 17], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.7352306842803955

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [203] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 406

Reduced: 
 - size: 112 (35.56%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12520909309387207

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 15], [0, 7], [1, 17], [12, 10], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [2, 8], [5, 1], [19, 16], [17, 18], [13, 4], [9, 6], [19, 15], [9, 6], [12, 10], [4, 18], [13, 16], [17, 14], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 16], [5, 11], [2, 8], [13, 4], [17, 14], [19, 15], [8, 16], [18, 0], [12, 9], [5, 1], [4, 1], [12, 9], [13, 16], [14, 7], [5, 11], [8, 10], [18, 0], [4, 1], [10, 17], [5, 11], [13, 19], [14, 7], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [15, 11], [5, 1], [2, 13], [16, 12], [0, 3], [17, 14], [4, 17], [16, 12], [2, 13], [15, 1], [18, 3], [8, 10], [6, 14], [4, 17], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [7, 3], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 10], [16, 12], [4, 1], [10, 14], [17, 6], [13, 19], [0, 3], [4, 18], [15, 1], [0, 7], [8, 10], [17, 6], [19, 4], [15, 1], [10, 6], [7, 3], [2, 13], [16, 12], [5, 11], [17, 14], [19, 15], [13, 4], [16, 10], [7, 3], [5, 11], [17, 14], [1, 18], [15, 1], [4, 18], [16, 12], [10, 17], [6, 14], [0, 3], [5, 11], [13, 19], [2, 8], [15, 11], [4, 1], [16, 12], [13, 19], [7, 3], [10, 6], [15, 5], [10, 6], [7, 3], [16, 4], [1, 17], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [1, 17], [18, 7], [5, 1], [13, 4], [9, 6], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [12, 10], [19, 16], [11, 0], [7, 3], [15, 1], [16, 4], [18, 0], [8, 12], [9, 6], [5, 11], [17, 14], [15, 1], [4, 17], [6, 14], [13, 16], [12, 10], [18, 7], [5, 11], [0, 3], [15, 11], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [15, 11], [17, 6], [2, 8], [13, 19], [16, 12], [4, 1], [0, 3], [14, 7], [5, 11], [17, 6], [12, 10], [15, 1], [13, 19], [0, 3], [4, 18], [8, 16], [5, 11], [6, 14], [8, 12], [4, 18], [10, 17], [7, 3], [2, 13], [5, 1], [12, 10], [14, 7], [2, 13], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [7, 3], [17, 14], [12, 9], [2, 13], [4, 1], [8, 10], [12, 9], [18, 7], [13, 16], [11, 0], [17, 6], [15, 5], [4, 1], [8, 16], [6, 14], [2, 13], [15, 11], [18, 7], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [2, 13], [13, 4], [1, 17], [14, 7], [19, 15], [12, 10], [2, 8], [0, 3], [19, 4], [12, 10], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [19, 4], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [19, 4], [8, 16], [14, 7], [10, 17], [1, 11], [15, 5], [0, 3], [19, 4], [17, 18], [12, 10], [5, 1], [14, 7], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [12, 9], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [13, 16], [10, 14], [0, 3], [12, 9], [17, 18], [8, 12], [9, 6], [11, 0], [10, 14], [19, 4], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 15, 22]
[22, 29, 37]
[111, 114, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[174, 181, 189]
[220, 224, 233]
[263, 274, 284]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[105, 117, 120]
[144, 147, 153]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.249844551086426

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 22] ccc => cc, Pos: [22, 29, 37] ccc => cc, Pos: [25, 39] cc => I, Pos: [25, 39] cc => I, Pos: [26, 36] cc => I, Pos: [26, 36] cc => I, Pos: [31, 50] cc => I, Pos: [31, 50] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 46] cc => I, Pos: [38, 46] cc => I, Pos: [41, 48] cc => I, Pos: [41, 48] cc => I, Pos: [42, 52] cc => I, Pos: [42, 52] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [55, 64] cc => I, Pos: [55, 64] cc => I, Pos: [56, 59] cc => I, Pos: [56, 59] cc => I, Pos: [58, 65] cc => I, Pos: [58, 65] cc => I, Pos: [61, 69] cc => I, Pos: [61, 69] cc => I, Pos: [62, 67] cc => I, Pos: [62, 67] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [81, 95] cc => I, Pos: [81, 95] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [84, 88] cc => I, Pos: [84, 88] cc => I, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [105, 117, 120] ccc => cc, Pos: [110, 115] cc => I, Pos: [110, 115] cc => I, Pos: [111, 114, 121] ccc => cc, Pos: [112, 128] cc => I, Pos: [112, 128] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [135, 144] cc => I, Pos: [135, 144] cc => I, Pos: [140, 149] cc => I, Pos: [140, 149] cc => I, Pos: [144, 147, 153] ccc => cc, Pos: [145, 150] cc => I, Pos: [145, 150] cc => I, Pos: [151, 155] cc => I, Pos: [151, 155] cc => I, Pos: [152, 154] cc => I, Pos: [152, 154] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [168, 182] cc => I, Pos: [168, 182] cc => I, Pos: [174, 181, 189] ccc => cc, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [183, 191] cc => I, Pos: [183, 191] cc => I, Pos: [192, 205] cc => I, Pos: [192, 205] cc => I, Pos: [193, 199] cc => I, Pos: [193, 199] cc => I, Pos: [196, 200] cc => I, Pos: [196, 200] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [218, 228] cc => I, Pos: [218, 228] cc => I, Pos: [220, 224, 233] ccc => cc, Pos: [221, 225] cc => I, Pos: [221, 225] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [235, 239] cc => I, Pos: [235, 239] cc => I, Pos: [237, 245] cc => I, Pos: [237, 245] cc => I, Pos: [240, 250] cc => I, Pos: [240, 250] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [261, 265] cc => I, Pos: [261, 265] cc => I, Pos: [263, 274, 284] ccc => cc, Pos: [264, 272] cc => I, Pos: [264, 272] cc => I, Pos: [272, 278] cc => I, Pos: [272, 278] cc => I, Pos: [278, 285] cc => I, Pos: [278, 285] cc => I, Pos: [280, 289] cc => I, Pos: [280, 289] cc => I, Pos: [284, 306] cc => I, Pos: [284, 306] cc => I, Pos: [298, 307] cc => I, Pos: [298, 307] cc => I, Pos: [304, 314] cc => I, Pos: [304, 314] cc => I, Pos: [305, 312] cc => I, Pos: [305, 312] cc => I]

--------End Timer [Generate Plans]:  0.14061546325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 15, 22] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [36, 38] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [55, 64] cc => I,
 Pos: [62, 67] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [58, 65] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [110, 115] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [128, 140] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [135, 144] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [200, 208] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [221, 225] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [284, 306] cc => I,
 Pos: [264, 272] cc => I,
 Pos: [278, 285] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 51, Saving: 53

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 15, 22] ccc => cc
Apply:  Pos: [25, 39] cc => I
Apply:  Pos: [36, 38] cc => I
Apply:  Pos: [31, 50] cc => I
Apply:  Pos: [41, 48] cc => I
Apply:  Pos: [42, 52] cc => I
Apply:  Pos: [55, 64] cc => I
Apply:  Pos: [62, 67] cc => I
Apply:  Pos: [56, 59] cc => I
Apply:  Pos: [58, 65] cc => I
Apply:  Pos: [61, 69] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [84, 88] cc => I
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [105, 117, 120] ccc => cc
Apply:  Pos: [110, 115] cc => I
Apply:  Pos: [111, 114, 121] ccc => cc
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [135, 144] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [145, 150] cc => I
Apply:  Pos: [151, 155] cc => I
Apply:  Pos: [152, 154] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [168, 182] cc => I
Apply:  Pos: [174, 181, 189] ccc => cc
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [183, 191] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [193, 199] cc => I
Apply:  Pos: [200, 208] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [220, 224, 233] ccc => cc
Apply:  Pos: [221, 225] cc => I
Apply:  Pos: [235, 239] cc => I
Apply:  Pos: [237, 245] cc => I
Apply:  Pos: [240, 250] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [261, 265] cc => I
Apply:  Pos: [284, 306] cc => I
Apply:  Pos: [264, 272] cc => I
Apply:  Pos: [278, 285] cc => I
Apply:  Pos: [280, 289] cc => I
Apply:  Pos: [298, 307] cc => I
Apply:  Pos: [304, 314] cc => I
Apply:  Pos: [305, 312] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [5, 11], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [0, 7], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [5, 11], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [6, 14], [0, 3], [2, 8], [15, 11], [4, 1], [16, 12], [15, 5], [16, 4], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [0, 3], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [12, 10], [15, 1], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [9, 6], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  6.390460014343262

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[24, 38]
[39, 51]
[82, 105]
[100, 111]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[200, 204, 215]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[69, 74, 76]
[143, 147, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[24, 38]
[39, 51]
[82, 105]
[100, 111]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.046814680099487

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [24, 38] cc => I, Pos: [24, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [69, 74, 76] ccc => cc, Pos: [82, 105] cc => I, Pos: [82, 105] cc => I, Pos: [100, 111] cc => I, Pos: [100, 111] cc => I, Pos: [143, 147, 150] ccc => cc, Pos: [200, 204, 215] ccc => cc]

--------End Timer [Generate Plans]:  0.015636682510375977

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [24, 38] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [69, 74, 76] ccc => cc,
 Pos: [82, 105] cc => I,
 Pos: [100, 111] cc => I,
 Pos: [143, 147, 150] ccc => cc,
 Pos: [200, 204, 215] ccc => cc]
Change: 7, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [24, 38] cc => I
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [69, 74, 76] ccc => cc
Apply:  Pos: [82, 105] cc => I
Apply:  Pos: [100, 111] cc => I
Apply:  Pos: [143, 147, 150] ccc => cc
Apply:  Pos: [200, 204, 215] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [5, 11], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [2, 8], [15, 11], [4, 1], [15, 5], [16, 4], [11, 0], [5, 11], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [0, 3], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [6, 14], [12, 10], [15, 1], [8, 16], [14, 7], [8, 12], [10, 17], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  4.062451362609863

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[122, 128, 134]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.781440496444702

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [122, 128, 134] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [122, 128, 134] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [122, 128, 134] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [5, 11], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [2, 8], [15, 11], [4, 1], [15, 5], [16, 4], [11, 0], [5, 11], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [17, 6], [13, 16], [18, 7], [0, 3], [19, 4], [0, 7], [6, 14], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [12, 10], [15, 1], [8, 16], [14, 7], [8, 12], [10, 17], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.781440496444702

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.781045436859131

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [5, 11], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [2, 8], [15, 11], [4, 1], [15, 5], [16, 4], [11, 0], [5, 11], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [17, 6], [13, 16], [18, 7], [0, 3], [19, 4], [0, 7], [6, 14], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [12, 10], [15, 1], [8, 16], [14, 7], [8, 12], [10, 17], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.781045436859131

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [206] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 412

Reduced: 
 - size: 109 (34.60%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10937929153442383

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 15], [0, 7], [1, 17], [12, 10], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [2, 8], [5, 1], [19, 16], [17, 18], [13, 4], [9, 6], [19, 15], [9, 6], [12, 10], [4, 18], [13, 16], [17, 14], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 16], [5, 11], [2, 8], [13, 4], [17, 14], [19, 15], [8, 16], [18, 0], [12, 9], [5, 1], [4, 1], [12, 9], [13, 16], [14, 7], [5, 11], [8, 10], [18, 0], [4, 1], [10, 17], [5, 11], [13, 19], [14, 7], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [15, 11], [5, 1], [2, 13], [16, 12], [0, 3], [17, 14], [4, 17], [16, 12], [2, 13], [15, 1], [18, 3], [8, 10], [6, 14], [4, 17], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [7, 3], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 10], [16, 12], [4, 1], [10, 14], [17, 6], [13, 19], [0, 3], [4, 18], [15, 1], [0, 7], [8, 10], [17, 6], [19, 4], [15, 1], [10, 6], [7, 3], [2, 13], [16, 12], [5, 11], [17, 14], [19, 15], [13, 4], [16, 10], [7, 3], [5, 11], [17, 14], [1, 18], [15, 1], [4, 18], [16, 12], [10, 17], [6, 14], [0, 3], [5, 11], [13, 19], [2, 8], [15, 11], [4, 1], [16, 12], [13, 19], [7, 3], [10, 6], [15, 5], [10, 6], [7, 3], [16, 4], [1, 17], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [1, 17], [18, 7], [5, 1], [13, 4], [9, 6], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [12, 10], [19, 16], [11, 0], [7, 3], [15, 1], [16, 4], [18, 0], [8, 12], [9, 6], [5, 11], [17, 14], [15, 1], [4, 17], [6, 14], [13, 16], [12, 10], [18, 7], [5, 11], [0, 3], [15, 11], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [15, 11], [17, 6], [2, 8], [13, 19], [16, 12], [4, 1], [0, 3], [14, 7], [5, 11], [17, 6], [12, 10], [15, 1], [13, 19], [0, 3], [4, 18], [8, 16], [5, 11], [6, 14], [8, 12], [4, 18], [10, 17], [7, 3], [2, 13], [5, 1], [12, 10], [14, 7], [2, 13], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [7, 3], [17, 14], [12, 9], [2, 13], [4, 1], [8, 10], [12, 9], [18, 7], [13, 16], [11, 0], [17, 6], [15, 5], [4, 1], [8, 16], [6, 14], [2, 13], [15, 11], [18, 7], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [2, 13], [13, 4], [1, 17], [14, 7], [19, 15], [12, 10], [2, 8], [0, 3], [19, 4], [12, 10], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [19, 4], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [19, 4], [8, 16], [14, 7], [10, 17], [1, 11], [15, 5], [0, 3], [19, 4], [17, 18], [12, 10], [5, 1], [14, 7], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [12, 9], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [13, 16], [10, 14], [0, 3], [12, 9], [17, 18], [8, 12], [9, 6], [11, 0], [10, 14], [19, 4], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 15, 22]
[22, 29, 37]
[111, 114, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[174, 181, 189]
[220, 224, 233]
[263, 274, 284]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[105, 117, 120]
[144, 147, 153]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.078422784805298

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 22] ccc => cc, Pos: [22, 29, 37] ccc => cc, Pos: [25, 39] cc => I, Pos: [25, 39] cc => I, Pos: [26, 36] cc => I, Pos: [26, 36] cc => I, Pos: [31, 50] cc => I, Pos: [31, 50] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 46] cc => I, Pos: [38, 46] cc => I, Pos: [41, 48] cc => I, Pos: [41, 48] cc => I, Pos: [42, 52] cc => I, Pos: [42, 52] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [55, 64] cc => I, Pos: [55, 64] cc => I, Pos: [56, 59] cc => I, Pos: [56, 59] cc => I, Pos: [58, 65] cc => I, Pos: [58, 65] cc => I, Pos: [61, 69] cc => I, Pos: [61, 69] cc => I, Pos: [62, 67] cc => I, Pos: [62, 67] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [81, 95] cc => I, Pos: [81, 95] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [84, 88] cc => I, Pos: [84, 88] cc => I, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [105, 117, 120] ccc => cc, Pos: [110, 115] cc => I, Pos: [110, 115] cc => I, Pos: [111, 114, 121] ccc => cc, Pos: [112, 128] cc => I, Pos: [112, 128] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [135, 144] cc => I, Pos: [135, 144] cc => I, Pos: [140, 149] cc => I, Pos: [140, 149] cc => I, Pos: [144, 147, 153] ccc => cc, Pos: [145, 150] cc => I, Pos: [145, 150] cc => I, Pos: [151, 155] cc => I, Pos: [151, 155] cc => I, Pos: [152, 154] cc => I, Pos: [152, 154] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [168, 182] cc => I, Pos: [168, 182] cc => I, Pos: [174, 181, 189] ccc => cc, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [183, 191] cc => I, Pos: [183, 191] cc => I, Pos: [192, 205] cc => I, Pos: [192, 205] cc => I, Pos: [193, 199] cc => I, Pos: [193, 199] cc => I, Pos: [196, 200] cc => I, Pos: [196, 200] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [218, 228] cc => I, Pos: [218, 228] cc => I, Pos: [220, 224, 233] ccc => cc, Pos: [221, 225] cc => I, Pos: [221, 225] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [235, 239] cc => I, Pos: [235, 239] cc => I, Pos: [237, 245] cc => I, Pos: [237, 245] cc => I, Pos: [240, 250] cc => I, Pos: [240, 250] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [261, 265] cc => I, Pos: [261, 265] cc => I, Pos: [263, 274, 284] ccc => cc, Pos: [264, 272] cc => I, Pos: [264, 272] cc => I, Pos: [272, 278] cc => I, Pos: [272, 278] cc => I, Pos: [278, 285] cc => I, Pos: [278, 285] cc => I, Pos: [280, 289] cc => I, Pos: [280, 289] cc => I, Pos: [284, 306] cc => I, Pos: [284, 306] cc => I, Pos: [298, 307] cc => I, Pos: [298, 307] cc => I, Pos: [304, 314] cc => I, Pos: [304, 314] cc => I, Pos: [305, 312] cc => I, Pos: [305, 312] cc => I]

--------End Timer [Generate Plans]:  0.14061474800109863

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 15, 22] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [36, 38] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [55, 64] cc => I,
 Pos: [49, 62] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [58, 65] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [89, 96] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [115, 122] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [112, 128] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [135, 144] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [140, 149] cc => I,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [192, 205] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [196, 200] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [218, 228] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [225, 236] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [284, 306] cc => I,
 Pos: [272, 278] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 51, Saving: 53

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 15, 22] ccc => cc
Apply:  Pos: [25, 39] cc => I
Apply:  Pos: [36, 38] cc => I
Apply:  Pos: [31, 50] cc => I
Apply:  Pos: [41, 48] cc => I
Apply:  Pos: [42, 52] cc => I
Apply:  Pos: [55, 64] cc => I
Apply:  Pos: [49, 62] cc => I
Apply:  Pos: [56, 59] cc => I
Apply:  Pos: [58, 65] cc => I
Apply:  Pos: [61, 69] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [84, 88] cc => I
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [105, 117, 120] ccc => cc
Apply:  Pos: [115, 122] cc => I
Apply:  Pos: [111, 114, 121] ccc => cc
Apply:  Pos: [112, 128] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [135, 144] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [140, 149] cc => I
Apply:  Pos: [145, 150] cc => I
Apply:  Pos: [151, 155] cc => I
Apply:  Pos: [152, 154] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [168, 182] cc => I
Apply:  Pos: [174, 181, 189] ccc => cc
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [183, 191] cc => I
Apply:  Pos: [192, 205] cc => I
Apply:  Pos: [193, 199] cc => I
Apply:  Pos: [196, 200] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [218, 228] cc => I
Apply:  Pos: [220, 224, 233] ccc => cc
Apply:  Pos: [225, 236] cc => I
Apply:  Pos: [235, 239] cc => I
Apply:  Pos: [237, 245] cc => I
Apply:  Pos: [240, 250] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [261, 265] cc => I
Apply:  Pos: [284, 306] cc => I
Apply:  Pos: [272, 278] cc => I
Apply:  Pos: [280, 289] cc => I
Apply:  Pos: [298, 307] cc => I
Apply:  Pos: [304, 314] cc => I
Apply:  Pos: [305, 312] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [0, 7], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [5, 11], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [6, 14], [0, 3], [2, 8], [15, 11], [4, 1], [15, 5], [16, 4], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [4, 18], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [2, 13], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [19, 4], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [19, 4], [17, 18], [12, 10], [5, 1], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [9, 6], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  6.2190375328063965

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[24, 38]
[39, 51]
[99, 109]
[180, 196]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[200, 204, 215]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[69, 74, 76]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[24, 38]
[39, 51]
[99, 109]
[180, 196]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.00025749206543

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [24, 38] cc => I, Pos: [24, 38] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [69, 74, 76] ccc => cc, Pos: [99, 109] cc => I, Pos: [99, 109] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [200, 204, 215] ccc => cc]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [24, 38] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [69, 74, 76] ccc => cc,
 Pos: [99, 109] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [200, 204, 215] ccc => cc]
Change: 6, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [24, 38] cc => I
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [69, 74, 76] ccc => cc
Apply:  Pos: [99, 109] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [200, 204, 215] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [5, 11], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [2, 8], [15, 11], [4, 1], [15, 5], [16, 4], [11, 0], [5, 11], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [4, 18], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [2, 13], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  4.015881776809692

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7658114433288574

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [5, 11], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [2, 8], [15, 11], [4, 1], [15, 5], [16, 4], [11, 0], [5, 11], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [4, 18], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [2, 13], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.7658114433288574

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [208] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 416

Reduced: 
 - size: 107 (33.97%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499523162841797

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 15], [0, 7], [1, 17], [12, 10], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [2, 8], [5, 1], [19, 16], [17, 18], [13, 4], [9, 6], [19, 15], [9, 6], [12, 10], [4, 18], [13, 16], [17, 14], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 16], [5, 11], [2, 8], [13, 4], [17, 14], [19, 15], [8, 16], [18, 0], [12, 9], [5, 1], [4, 1], [12, 9], [13, 16], [14, 7], [5, 11], [8, 10], [18, 0], [4, 1], [10, 17], [5, 11], [13, 19], [14, 7], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [15, 11], [5, 1], [2, 13], [16, 12], [0, 3], [17, 14], [4, 17], [16, 12], [2, 13], [15, 1], [18, 3], [8, 10], [6, 14], [4, 17], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [7, 3], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 10], [16, 12], [4, 1], [10, 14], [17, 6], [13, 19], [0, 3], [4, 18], [15, 1], [0, 7], [8, 10], [17, 6], [19, 4], [15, 1], [10, 6], [7, 3], [2, 13], [16, 12], [5, 11], [17, 14], [19, 15], [13, 4], [16, 10], [7, 3], [5, 11], [17, 14], [1, 18], [15, 1], [4, 18], [16, 12], [10, 17], [6, 14], [0, 3], [5, 11], [13, 19], [2, 8], [15, 11], [4, 1], [16, 12], [13, 19], [7, 3], [10, 6], [15, 5], [10, 6], [7, 3], [16, 4], [1, 17], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [1, 17], [18, 7], [5, 1], [13, 4], [9, 6], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [12, 10], [19, 16], [11, 0], [7, 3], [15, 1], [16, 4], [18, 0], [8, 12], [9, 6], [5, 11], [17, 14], [15, 1], [4, 17], [6, 14], [13, 16], [12, 10], [18, 7], [5, 11], [0, 3], [15, 11], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [15, 11], [17, 6], [2, 8], [13, 19], [16, 12], [4, 1], [0, 3], [14, 7], [5, 11], [17, 6], [12, 10], [15, 1], [13, 19], [0, 3], [4, 18], [8, 16], [5, 11], [6, 14], [8, 12], [4, 18], [10, 17], [7, 3], [2, 13], [5, 1], [12, 10], [14, 7], [2, 13], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [7, 3], [17, 14], [12, 9], [2, 13], [4, 1], [8, 10], [12, 9], [18, 7], [13, 16], [11, 0], [17, 6], [15, 5], [4, 1], [8, 16], [6, 14], [2, 13], [15, 11], [18, 7], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [2, 13], [13, 4], [1, 17], [14, 7], [19, 15], [12, 10], [2, 8], [0, 3], [19, 4], [12, 10], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [19, 4], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [19, 4], [8, 16], [14, 7], [10, 17], [1, 11], [15, 5], [0, 3], [19, 4], [17, 18], [12, 10], [5, 1], [14, 7], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [12, 9], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [13, 16], [10, 14], [0, 3], [12, 9], [17, 18], [8, 12], [9, 6], [11, 0], [10, 14], [19, 4], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 15, 22]
[22, 29, 37]
[111, 114, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[174, 181, 189]
[220, 224, 233]
[263, 274, 284]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[105, 117, 120]
[144, 147, 153]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.264794826507568

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 22] ccc => cc, Pos: [22, 29, 37] ccc => cc, Pos: [25, 39] cc => I, Pos: [25, 39] cc => I, Pos: [26, 36] cc => I, Pos: [26, 36] cc => I, Pos: [31, 50] cc => I, Pos: [31, 50] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 46] cc => I, Pos: [38, 46] cc => I, Pos: [41, 48] cc => I, Pos: [41, 48] cc => I, Pos: [42, 52] cc => I, Pos: [42, 52] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [55, 64] cc => I, Pos: [55, 64] cc => I, Pos: [56, 59] cc => I, Pos: [56, 59] cc => I, Pos: [58, 65] cc => I, Pos: [58, 65] cc => I, Pos: [61, 69] cc => I, Pos: [61, 69] cc => I, Pos: [62, 67] cc => I, Pos: [62, 67] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [81, 95] cc => I, Pos: [81, 95] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [84, 88] cc => I, Pos: [84, 88] cc => I, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [105, 117, 120] ccc => cc, Pos: [110, 115] cc => I, Pos: [110, 115] cc => I, Pos: [111, 114, 121] ccc => cc, Pos: [112, 128] cc => I, Pos: [112, 128] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [135, 144] cc => I, Pos: [135, 144] cc => I, Pos: [140, 149] cc => I, Pos: [140, 149] cc => I, Pos: [144, 147, 153] ccc => cc, Pos: [145, 150] cc => I, Pos: [145, 150] cc => I, Pos: [151, 155] cc => I, Pos: [151, 155] cc => I, Pos: [152, 154] cc => I, Pos: [152, 154] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [168, 182] cc => I, Pos: [168, 182] cc => I, Pos: [174, 181, 189] ccc => cc, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [183, 191] cc => I, Pos: [183, 191] cc => I, Pos: [192, 205] cc => I, Pos: [192, 205] cc => I, Pos: [193, 199] cc => I, Pos: [193, 199] cc => I, Pos: [196, 200] cc => I, Pos: [196, 200] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [218, 228] cc => I, Pos: [218, 228] cc => I, Pos: [220, 224, 233] ccc => cc, Pos: [221, 225] cc => I, Pos: [221, 225] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [235, 239] cc => I, Pos: [235, 239] cc => I, Pos: [237, 245] cc => I, Pos: [237, 245] cc => I, Pos: [240, 250] cc => I, Pos: [240, 250] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [261, 265] cc => I, Pos: [261, 265] cc => I, Pos: [263, 274, 284] ccc => cc, Pos: [264, 272] cc => I, Pos: [264, 272] cc => I, Pos: [272, 278] cc => I, Pos: [272, 278] cc => I, Pos: [278, 285] cc => I, Pos: [278, 285] cc => I, Pos: [280, 289] cc => I, Pos: [280, 289] cc => I, Pos: [284, 306] cc => I, Pos: [284, 306] cc => I, Pos: [298, 307] cc => I, Pos: [298, 307] cc => I, Pos: [304, 314] cc => I, Pos: [304, 314] cc => I, Pos: [305, 312] cc => I, Pos: [305, 312] cc => I]

--------End Timer [Generate Plans]:  0.12500405311584473

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 29, 37] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [36, 38] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [49, 62] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [58, 65] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [81, 95] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [115, 122] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [128, 140] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [135, 144] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [192, 205] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [196, 200] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [218, 228] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [225, 236] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [284, 306] cc => I,
 Pos: [272, 278] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 51, Saving: 52

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 29, 37] ccc => cc
Apply:  Pos: [25, 39] cc => I
Apply:  Pos: [36, 38] cc => I
Apply:  Pos: [31, 50] cc => I
Apply:  Pos: [41, 48] cc => I
Apply:  Pos: [42, 52] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [49, 62] cc => I
Apply:  Pos: [56, 59] cc => I
Apply:  Pos: [58, 65] cc => I
Apply:  Pos: [61, 69] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [81, 95] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [84, 88] cc => I
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [105, 117, 120] ccc => cc
Apply:  Pos: [115, 122] cc => I
Apply:  Pos: [111, 114, 121] ccc => cc
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [135, 144] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [145, 150] cc => I
Apply:  Pos: [151, 155] cc => I
Apply:  Pos: [152, 154] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [168, 182] cc => I
Apply:  Pos: [174, 181, 189] ccc => cc
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [183, 191] cc => I
Apply:  Pos: [192, 205] cc => I
Apply:  Pos: [193, 199] cc => I
Apply:  Pos: [196, 200] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [218, 228] cc => I
Apply:  Pos: [220, 224, 233] ccc => cc
Apply:  Pos: [225, 236] cc => I
Apply:  Pos: [235, 239] cc => I
Apply:  Pos: [237, 245] cc => I
Apply:  Pos: [240, 250] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [261, 265] cc => I
Apply:  Pos: [284, 306] cc => I
Apply:  Pos: [272, 278] cc => I
Apply:  Pos: [280, 289] cc => I
Apply:  Pos: [298, 307] cc => I
Apply:  Pos: [304, 314] cc => I
Apply:  Pos: [305, 312] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [9, 6], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [0, 7], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [5, 11], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [6, 14], [0, 3], [2, 8], [15, 11], [4, 1], [16, 12], [15, 5], [16, 4], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [4, 18], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [2, 13], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [19, 4], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [19, 4], [17, 18], [12, 10], [5, 1], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [9, 6], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  6.389798879623413

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 38]
[81, 103]
[98, 109]
[180, 196]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[200, 204, 215]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 72, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[25, 38]
[81, 103]
[98, 109]
[180, 196]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.094257116317749

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [25, 38] cc => I, Pos: [25, 38] cc => I, Pos: [67, 72, 74] ccc => cc, Pos: [81, 103] cc => I, Pos: [81, 103] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [200, 204, 215] ccc => cc]

--------End Timer [Generate Plans]:  0.015639543533325195

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [25, 38] cc => I,
 Pos: [67, 72, 74] ccc => cc,
 Pos: [81, 103] cc => I,
 Pos: [98, 109] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [200, 204, 215] ccc => cc]
Change: 6, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [25, 38] cc => I
Apply:  Pos: [67, 72, 74] ccc => cc
Apply:  Pos: [81, 103] cc => I
Apply:  Pos: [98, 109] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [200, 204, 215] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [5, 11], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [2, 8], [15, 11], [4, 1], [15, 5], [16, 4], [11, 0], [5, 11], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [4, 18], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [2, 13], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  4.109896659851074

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.8599789142608643

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [5, 11], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [2, 8], [15, 11], [4, 1], [15, 5], [16, 4], [11, 0], [5, 11], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [4, 18], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [2, 13], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.8599789142608643

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [208] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 43 - (small)
 - circuit cycle: 416

Reduced: 
 - size: 107 (33.97%)
 - depth: 2 (4.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12462353706359863

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 15], [0, 7], [1, 17], [12, 10], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [2, 8], [5, 1], [19, 16], [17, 18], [13, 4], [9, 6], [19, 15], [9, 6], [12, 10], [4, 18], [13, 16], [17, 14], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 16], [5, 11], [2, 8], [13, 4], [17, 14], [19, 15], [8, 16], [18, 0], [12, 9], [5, 1], [4, 1], [12, 9], [13, 16], [14, 7], [5, 11], [8, 10], [18, 0], [4, 1], [10, 17], [5, 11], [13, 19], [14, 7], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [15, 11], [5, 1], [2, 13], [16, 12], [0, 3], [17, 14], [4, 17], [16, 12], [2, 13], [15, 1], [18, 3], [8, 10], [6, 14], [4, 17], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [7, 3], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 10], [16, 12], [4, 1], [10, 14], [17, 6], [13, 19], [0, 3], [4, 18], [15, 1], [0, 7], [8, 10], [17, 6], [19, 4], [15, 1], [10, 6], [7, 3], [2, 13], [16, 12], [5, 11], [17, 14], [19, 15], [13, 4], [16, 10], [7, 3], [5, 11], [17, 14], [1, 18], [15, 1], [4, 18], [16, 12], [10, 17], [6, 14], [0, 3], [5, 11], [13, 19], [2, 8], [15, 11], [4, 1], [16, 12], [13, 19], [7, 3], [10, 6], [15, 5], [10, 6], [7, 3], [16, 4], [1, 17], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [1, 17], [18, 7], [5, 1], [13, 4], [9, 6], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [12, 10], [19, 16], [11, 0], [7, 3], [15, 1], [16, 4], [18, 0], [8, 12], [9, 6], [5, 11], [17, 14], [15, 1], [4, 17], [6, 14], [13, 16], [12, 10], [18, 7], [5, 11], [0, 3], [15, 11], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [15, 11], [17, 6], [2, 8], [13, 19], [16, 12], [4, 1], [0, 3], [14, 7], [5, 11], [17, 6], [12, 10], [15, 1], [13, 19], [0, 3], [4, 18], [8, 16], [5, 11], [6, 14], [8, 12], [4, 18], [10, 17], [7, 3], [2, 13], [5, 1], [12, 10], [14, 7], [2, 13], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [7, 3], [17, 14], [12, 9], [2, 13], [4, 1], [8, 10], [12, 9], [18, 7], [13, 16], [11, 0], [17, 6], [15, 5], [4, 1], [8, 16], [6, 14], [2, 13], [15, 11], [18, 7], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [2, 13], [13, 4], [1, 17], [14, 7], [19, 15], [12, 10], [2, 8], [0, 3], [19, 4], [12, 10], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [19, 4], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [19, 4], [8, 16], [14, 7], [10, 17], [1, 11], [15, 5], [0, 3], [19, 4], [17, 18], [12, 10], [5, 1], [14, 7], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [12, 9], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [13, 16], [10, 14], [0, 3], [12, 9], [17, 18], [8, 12], [9, 6], [11, 0], [10, 14], [19, 4], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 15, 22]
[22, 29, 37]
[111, 114, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[174, 181, 189]
[220, 224, 233]
[263, 274, 284]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[105, 117, 120]
[144, 147, 153]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.218640565872192

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 22] ccc => cc, Pos: [22, 29, 37] ccc => cc, Pos: [25, 39] cc => I, Pos: [25, 39] cc => I, Pos: [26, 36] cc => I, Pos: [26, 36] cc => I, Pos: [31, 50] cc => I, Pos: [31, 50] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 46] cc => I, Pos: [38, 46] cc => I, Pos: [41, 48] cc => I, Pos: [41, 48] cc => I, Pos: [42, 52] cc => I, Pos: [42, 52] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [55, 64] cc => I, Pos: [55, 64] cc => I, Pos: [56, 59] cc => I, Pos: [56, 59] cc => I, Pos: [58, 65] cc => I, Pos: [58, 65] cc => I, Pos: [61, 69] cc => I, Pos: [61, 69] cc => I, Pos: [62, 67] cc => I, Pos: [62, 67] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [81, 95] cc => I, Pos: [81, 95] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [84, 88] cc => I, Pos: [84, 88] cc => I, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [105, 117, 120] ccc => cc, Pos: [110, 115] cc => I, Pos: [110, 115] cc => I, Pos: [111, 114, 121] ccc => cc, Pos: [112, 128] cc => I, Pos: [112, 128] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [135, 144] cc => I, Pos: [135, 144] cc => I, Pos: [140, 149] cc => I, Pos: [140, 149] cc => I, Pos: [144, 147, 153] ccc => cc, Pos: [145, 150] cc => I, Pos: [145, 150] cc => I, Pos: [151, 155] cc => I, Pos: [151, 155] cc => I, Pos: [152, 154] cc => I, Pos: [152, 154] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [168, 182] cc => I, Pos: [168, 182] cc => I, Pos: [174, 181, 189] ccc => cc, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [183, 191] cc => I, Pos: [183, 191] cc => I, Pos: [192, 205] cc => I, Pos: [192, 205] cc => I, Pos: [193, 199] cc => I, Pos: [193, 199] cc => I, Pos: [196, 200] cc => I, Pos: [196, 200] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [218, 228] cc => I, Pos: [218, 228] cc => I, Pos: [220, 224, 233] ccc => cc, Pos: [221, 225] cc => I, Pos: [221, 225] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [235, 239] cc => I, Pos: [235, 239] cc => I, Pos: [237, 245] cc => I, Pos: [237, 245] cc => I, Pos: [240, 250] cc => I, Pos: [240, 250] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [261, 265] cc => I, Pos: [261, 265] cc => I, Pos: [263, 274, 284] ccc => cc, Pos: [264, 272] cc => I, Pos: [264, 272] cc => I, Pos: [272, 278] cc => I, Pos: [272, 278] cc => I, Pos: [278, 285] cc => I, Pos: [278, 285] cc => I, Pos: [280, 289] cc => I, Pos: [280, 289] cc => I, Pos: [284, 306] cc => I, Pos: [284, 306] cc => I, Pos: [298, 307] cc => I, Pos: [298, 307] cc => I, Pos: [304, 314] cc => I, Pos: [304, 314] cc => I, Pos: [305, 312] cc => I, Pos: [305, 312] cc => I]

--------End Timer [Generate Plans]:  0.14061522483825684

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 29, 37] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [26, 36] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [38, 46] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [55, 64] cc => I,
 Pos: [62, 67] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [65, 73] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [115, 122] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [128, 140] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [144, 147, 153] ccc => cc,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [205, 212] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [200, 208] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [221, 225] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [284, 306] cc => I,
 Pos: [272, 278] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 52, Saving: 54

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 29, 37] ccc => cc
Apply:  Pos: [25, 39] cc => I
Apply:  Pos: [26, 36] cc => I
Apply:  Pos: [31, 50] cc => I
Apply:  Pos: [38, 46] cc => I
Apply:  Pos: [41, 48] cc => I
Apply:  Pos: [42, 52] cc => I
Apply:  Pos: [55, 64] cc => I
Apply:  Pos: [62, 67] cc => I
Apply:  Pos: [56, 59] cc => I
Apply:  Pos: [65, 73] cc => I
Apply:  Pos: [61, 69] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [84, 88] cc => I
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [105, 117, 120] ccc => cc
Apply:  Pos: [115, 122] cc => I
Apply:  Pos: [111, 114, 121] ccc => cc
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [144, 147, 153] ccc => cc
Apply:  Pos: [145, 150] cc => I
Apply:  Pos: [151, 155] cc => I
Apply:  Pos: [152, 154] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [168, 182] cc => I
Apply:  Pos: [174, 181, 189] ccc => cc
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [183, 191] cc => I
Apply:  Pos: [205, 212] cc => I
Apply:  Pos: [193, 199] cc => I
Apply:  Pos: [200, 208] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [220, 224, 233] ccc => cc
Apply:  Pos: [221, 225] cc => I
Apply:  Pos: [235, 239] cc => I
Apply:  Pos: [237, 245] cc => I
Apply:  Pos: [240, 250] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [261, 265] cc => I
Apply:  Pos: [284, 306] cc => I
Apply:  Pos: [272, 278] cc => I
Apply:  Pos: [280, 289] cc => I
Apply:  Pos: [298, 307] cc => I
Apply:  Pos: [304, 314] cc => I
Apply:  Pos: [305, 312] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [18, 0], [5, 11], [13, 4], [19, 15], [8, 16], [5, 1], [4, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [18, 0], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [0, 7], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [6, 14], [0, 3], [15, 5], [2, 8], [5, 11], [4, 1], [16, 12], [16, 4], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [0, 3], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [12, 10], [15, 1], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [19, 4], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [19, 4], [17, 18], [12, 10], [5, 1], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [9, 6], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  6.359255790710449

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 50]
[43, 57]
[81, 104]
[97, 108]
[179, 195]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[101, 105, 106]
[199, 203, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 72, 74]
[104, 107, 115]
[140, 144, 147]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[37, 50]
[43, 57]
[81, 104]
[97, 108]
[179, 195]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.062883615493774

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [37, 50] cc => I, Pos: [37, 50] cc => I, Pos: [43, 57] cc => I, Pos: [43, 57] cc => I, Pos: [67, 72, 74] ccc => cc, Pos: [81, 104] cc => I, Pos: [81, 104] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 105, 106] ccc => cc, Pos: [104, 107, 115] ccc => cc, Pos: [140, 144, 147] ccc => cc, Pos: [179, 195] cc => I, Pos: [179, 195] cc => I, Pos: [199, 203, 214] ccc => cc]

--------End Timer [Generate Plans]:  0.015505075454711914

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [37, 50] cc => I,
 Pos: [43, 57] cc => I,
 Pos: [67, 72, 74] ccc => cc,
 Pos: [81, 104] cc => I,
 Pos: [97, 108] cc => I,
 Pos: [101, 105, 106] ccc => cc,
 Pos: [140, 144, 147] ccc => cc,
 Pos: [179, 195] cc => I,
 Pos: [199, 203, 214] ccc => cc]
Change: 9, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [37, 50] cc => I
Apply:  Pos: [43, 57] cc => I
Apply:  Pos: [67, 72, 74] ccc => cc
Apply:  Pos: [81, 104] cc => I
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [101, 105, 106] ccc => cc
Apply:  Pos: [140, 144, 147] ccc => cc
Apply:  Pos: [179, 195] cc => I
Apply:  Pos: [199, 203, 214] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [4, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [11, 0], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [0, 3], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [6, 14], [12, 10], [15, 1], [8, 16], [14, 7], [8, 12], [10, 17], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  4.078388690948486

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[97, 111]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[118, 124, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[97, 111]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7499399185180664

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [97, 111] cc => I, Pos: [97, 111] cc => I, Pos: [118, 124, 130] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [97, 111] cc => I, Pos: [118, 124, 130] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [97, 111] cc => I
Apply:  Pos: [118, 124, 130] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [4, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [17, 6], [13, 16], [18, 7], [0, 3], [19, 4], [0, 7], [6, 14], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [12, 10], [15, 1], [8, 16], [14, 7], [8, 12], [10, 17], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.7499399185180664

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.671807050704956

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [4, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [17, 6], [13, 16], [18, 7], [0, 3], [19, 4], [0, 7], [6, 14], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [12, 10], [15, 1], [8, 16], [14, 7], [8, 12], [10, 17], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.671807050704956

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [200] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 43 - (small)
 - circuit cycle: 400

Reduced: 
 - size: 115 (36.51%)
 - depth: 2 (4.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12498617172241211

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 15], [0, 7], [1, 17], [12, 10], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [2, 8], [5, 1], [19, 16], [17, 18], [13, 4], [9, 6], [19, 15], [9, 6], [12, 10], [4, 18], [13, 16], [17, 14], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 16], [5, 11], [2, 8], [13, 4], [17, 14], [19, 15], [8, 16], [18, 0], [12, 9], [5, 1], [4, 1], [12, 9], [13, 16], [14, 7], [5, 11], [8, 10], [18, 0], [4, 1], [10, 17], [5, 11], [13, 19], [14, 7], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [15, 11], [5, 1], [2, 13], [16, 12], [0, 3], [17, 14], [4, 17], [16, 12], [2, 13], [15, 1], [18, 3], [8, 10], [6, 14], [4, 17], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [7, 3], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 10], [16, 12], [4, 1], [10, 14], [17, 6], [13, 19], [0, 3], [4, 18], [15, 1], [0, 7], [8, 10], [17, 6], [19, 4], [15, 1], [10, 6], [7, 3], [2, 13], [16, 12], [5, 11], [17, 14], [19, 15], [13, 4], [16, 10], [7, 3], [5, 11], [17, 14], [1, 18], [15, 1], [4, 18], [16, 12], [10, 17], [6, 14], [0, 3], [5, 11], [13, 19], [2, 8], [15, 11], [4, 1], [16, 12], [13, 19], [7, 3], [10, 6], [15, 5], [10, 6], [7, 3], [16, 4], [1, 17], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [1, 17], [18, 7], [5, 1], [13, 4], [9, 6], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [12, 10], [19, 16], [11, 0], [7, 3], [15, 1], [16, 4], [18, 0], [8, 12], [9, 6], [5, 11], [17, 14], [15, 1], [4, 17], [6, 14], [13, 16], [12, 10], [18, 7], [5, 11], [0, 3], [15, 11], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [15, 11], [17, 6], [2, 8], [13, 19], [16, 12], [4, 1], [0, 3], [14, 7], [5, 11], [17, 6], [12, 10], [15, 1], [13, 19], [0, 3], [4, 18], [8, 16], [5, 11], [6, 14], [8, 12], [4, 18], [10, 17], [7, 3], [2, 13], [5, 1], [12, 10], [14, 7], [2, 13], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [7, 3], [17, 14], [12, 9], [2, 13], [4, 1], [8, 10], [12, 9], [18, 7], [13, 16], [11, 0], [17, 6], [15, 5], [4, 1], [8, 16], [6, 14], [2, 13], [15, 11], [18, 7], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [2, 13], [13, 4], [1, 17], [14, 7], [19, 15], [12, 10], [2, 8], [0, 3], [19, 4], [12, 10], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [19, 4], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [19, 4], [8, 16], [14, 7], [10, 17], [1, 11], [15, 5], [0, 3], [19, 4], [17, 18], [12, 10], [5, 1], [14, 7], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [12, 9], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [13, 16], [10, 14], [0, 3], [12, 9], [17, 18], [8, 12], [9, 6], [11, 0], [10, 14], [19, 4], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 15, 22]
[22, 29, 37]
[111, 114, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[174, 181, 189]
[220, 224, 233]
[263, 274, 284]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[105, 117, 120]
[144, 147, 153]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.1718175411224365

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 22] ccc => cc, Pos: [22, 29, 37] ccc => cc, Pos: [25, 39] cc => I, Pos: [25, 39] cc => I, Pos: [26, 36] cc => I, Pos: [26, 36] cc => I, Pos: [31, 50] cc => I, Pos: [31, 50] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 46] cc => I, Pos: [38, 46] cc => I, Pos: [41, 48] cc => I, Pos: [41, 48] cc => I, Pos: [42, 52] cc => I, Pos: [42, 52] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [55, 64] cc => I, Pos: [55, 64] cc => I, Pos: [56, 59] cc => I, Pos: [56, 59] cc => I, Pos: [58, 65] cc => I, Pos: [58, 65] cc => I, Pos: [61, 69] cc => I, Pos: [61, 69] cc => I, Pos: [62, 67] cc => I, Pos: [62, 67] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [81, 95] cc => I, Pos: [81, 95] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [84, 88] cc => I, Pos: [84, 88] cc => I, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [105, 117, 120] ccc => cc, Pos: [110, 115] cc => I, Pos: [110, 115] cc => I, Pos: [111, 114, 121] ccc => cc, Pos: [112, 128] cc => I, Pos: [112, 128] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [135, 144] cc => I, Pos: [135, 144] cc => I, Pos: [140, 149] cc => I, Pos: [140, 149] cc => I, Pos: [144, 147, 153] ccc => cc, Pos: [145, 150] cc => I, Pos: [145, 150] cc => I, Pos: [151, 155] cc => I, Pos: [151, 155] cc => I, Pos: [152, 154] cc => I, Pos: [152, 154] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [168, 182] cc => I, Pos: [168, 182] cc => I, Pos: [174, 181, 189] ccc => cc, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [183, 191] cc => I, Pos: [183, 191] cc => I, Pos: [192, 205] cc => I, Pos: [192, 205] cc => I, Pos: [193, 199] cc => I, Pos: [193, 199] cc => I, Pos: [196, 200] cc => I, Pos: [196, 200] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [218, 228] cc => I, Pos: [218, 228] cc => I, Pos: [220, 224, 233] ccc => cc, Pos: [221, 225] cc => I, Pos: [221, 225] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [235, 239] cc => I, Pos: [235, 239] cc => I, Pos: [237, 245] cc => I, Pos: [237, 245] cc => I, Pos: [240, 250] cc => I, Pos: [240, 250] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [261, 265] cc => I, Pos: [261, 265] cc => I, Pos: [263, 274, 284] ccc => cc, Pos: [264, 272] cc => I, Pos: [264, 272] cc => I, Pos: [272, 278] cc => I, Pos: [272, 278] cc => I, Pos: [278, 285] cc => I, Pos: [278, 285] cc => I, Pos: [280, 289] cc => I, Pos: [280, 289] cc => I, Pos: [284, 306] cc => I, Pos: [284, 306] cc => I, Pos: [298, 307] cc => I, Pos: [298, 307] cc => I, Pos: [304, 314] cc => I, Pos: [304, 314] cc => I, Pos: [305, 312] cc => I, Pos: [305, 312] cc => I]

--------End Timer [Generate Plans]:  0.14068603515625

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 29, 37] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [26, 36] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [38, 46] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [62, 67] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [58, 65] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [81, 95] cc => I,
 Pos: [89, 96] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [115, 122] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [128, 140] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [144, 147, 153] ccc => cc,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [192, 205] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [200, 208] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [225, 236] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [263, 274, 284] ccc => cc,
 Pos: [264, 272] cc => I,
 Pos: [278, 285] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 54, Saving: 56

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [22, 29, 37] ccc => cc
Apply:  Pos: [25, 39] cc => I
Apply:  Pos: [26, 36] cc => I
Apply:  Pos: [31, 50] cc => I
Apply:  Pos: [38, 46] cc => I
Apply:  Pos: [41, 48] cc => I
Apply:  Pos: [42, 52] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [62, 67] cc => I
Apply:  Pos: [56, 59] cc => I
Apply:  Pos: [58, 65] cc => I
Apply:  Pos: [61, 69] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [81, 95] cc => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [84, 88] cc => I
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [105, 117, 120] ccc => cc
Apply:  Pos: [115, 122] cc => I
Apply:  Pos: [111, 114, 121] ccc => cc
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [144, 147, 153] ccc => cc
Apply:  Pos: [145, 150] cc => I
Apply:  Pos: [151, 155] cc => I
Apply:  Pos: [152, 154] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [168, 182] cc => I
Apply:  Pos: [174, 181, 189] ccc => cc
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [183, 191] cc => I
Apply:  Pos: [192, 205] cc => I
Apply:  Pos: [193, 199] cc => I
Apply:  Pos: [200, 208] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [220, 224, 233] ccc => cc
Apply:  Pos: [225, 236] cc => I
Apply:  Pos: [235, 239] cc => I
Apply:  Pos: [237, 245] cc => I
Apply:  Pos: [240, 250] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [261, 265] cc => I
Apply:  Pos: [263, 274, 284] ccc => cc
Apply:  Pos: [264, 272] cc => I
Apply:  Pos: [278, 285] cc => I
Apply:  Pos: [280, 289] cc => I
Apply:  Pos: [298, 307] cc => I
Apply:  Pos: [304, 314] cc => I
Apply:  Pos: [305, 312] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [0, 7], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [6, 14], [0, 3], [15, 5], [2, 8], [5, 11], [4, 1], [16, 12], [16, 4], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [2, 13], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [0, 3], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [0, 3], [17, 18], [8, 12], [9, 6], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  6.3125035762786865

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[79, 102]
[95, 106]
[184, 208]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[99, 103, 104]
[195, 199, 211]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 70, 72]
[102, 105, 113]
[137, 142, 145]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[79, 102]
[95, 106]
[184, 208]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.9999701976776123

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 70, 72] ccc => cc, Pos: [79, 102] cc => I, Pos: [79, 102] cc => I, Pos: [95, 106] cc => I, Pos: [95, 106] cc => I, Pos: [99, 103, 104] ccc => cc, Pos: [102, 105, 113] ccc => cc, Pos: [137, 142, 145] ccc => cc, Pos: [184, 208] cc => I, Pos: [184, 208] cc => I, Pos: [195, 199, 211] ccc => cc]

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 70, 72] ccc => cc,
 Pos: [102, 105, 113] ccc => cc,
 Pos: [95, 106] cc => I,
 Pos: [99, 103, 104] ccc => cc,
 Pos: [137, 142, 145] ccc => cc,
 Pos: [184, 208] cc => I,
 Pos: [195, 199, 211] ccc => cc]
Change: 7, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 70, 72] ccc => cc
Apply:  Pos: [102, 105, 113] ccc => cc
Apply:  Pos: [95, 106] cc => I
Apply:  Pos: [99, 103, 104] ccc => cc
Apply:  Pos: [137, 142, 145] ccc => cc
Apply:  Pos: [184, 208] cc => I
Apply:  Pos: [195, 199, 211] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [11, 0], [16, 12], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [6, 14], [12, 10], [15, 1], [0, 3], [8, 16], [14, 7], [8, 12], [10, 17], [2, 13], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  4.015594720840454

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[101, 114]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[121, 126, 132]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[101, 114]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7188329696655273

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [101, 114] cc => I, Pos: [101, 114] cc => I, Pos: [121, 126, 132] ccc => cc]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [101, 114] cc => I, Pos: [121, 126, 132] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [101, 114] cc => I
Apply:  Pos: [121, 126, 132] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [16, 12], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [17, 6], [13, 16], [18, 7], [19, 4], [0, 7], [6, 14], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [12, 10], [15, 1], [0, 3], [8, 16], [14, 7], [8, 12], [10, 17], [2, 13], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.734457015991211

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6718175411224365

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 11], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [16, 12], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [17, 6], [13, 16], [18, 7], [19, 4], [0, 7], [6, 14], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [12, 10], [15, 1], [0, 3], [8, 16], [14, 7], [8, 12], [10, 17], [2, 13], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.6718175411224365

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [202] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 43 - (small)
 - circuit cycle: 404

Reduced: 
 - size: 113 (35.87%)
 - depth: 2 (4.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12497806549072266

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 15], [0, 7], [1, 17], [12, 10], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [2, 8], [5, 1], [19, 16], [17, 18], [13, 4], [9, 6], [19, 15], [9, 6], [12, 10], [4, 18], [13, 16], [17, 14], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 16], [5, 11], [2, 8], [13, 4], [17, 14], [19, 15], [8, 16], [18, 0], [12, 9], [5, 1], [4, 1], [12, 9], [13, 16], [14, 7], [5, 11], [8, 10], [18, 0], [4, 1], [10, 17], [5, 11], [13, 19], [14, 7], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [15, 11], [5, 1], [2, 13], [16, 12], [0, 3], [17, 14], [4, 17], [16, 12], [2, 13], [15, 1], [18, 3], [8, 10], [6, 14], [4, 17], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [7, 3], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 10], [16, 12], [4, 1], [10, 14], [17, 6], [13, 19], [0, 3], [4, 18], [15, 1], [0, 7], [8, 10], [17, 6], [19, 4], [15, 1], [10, 6], [7, 3], [2, 13], [16, 12], [5, 11], [17, 14], [19, 15], [13, 4], [16, 10], [7, 3], [5, 11], [17, 14], [1, 18], [15, 1], [4, 18], [16, 12], [10, 17], [6, 14], [0, 3], [5, 11], [13, 19], [2, 8], [15, 11], [4, 1], [16, 12], [13, 19], [7, 3], [10, 6], [15, 5], [10, 6], [7, 3], [16, 4], [1, 17], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [1, 17], [18, 7], [5, 1], [13, 4], [9, 6], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [12, 10], [19, 16], [11, 0], [7, 3], [15, 1], [16, 4], [18, 0], [8, 12], [9, 6], [5, 11], [17, 14], [15, 1], [4, 17], [6, 14], [13, 16], [12, 10], [18, 7], [5, 11], [0, 3], [15, 11], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [15, 11], [17, 6], [2, 8], [13, 19], [16, 12], [4, 1], [0, 3], [14, 7], [5, 11], [17, 6], [12, 10], [15, 1], [13, 19], [0, 3], [4, 18], [8, 16], [5, 11], [6, 14], [8, 12], [4, 18], [10, 17], [7, 3], [2, 13], [5, 1], [12, 10], [14, 7], [2, 13], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [7, 3], [17, 14], [12, 9], [2, 13], [4, 1], [8, 10], [12, 9], [18, 7], [13, 16], [11, 0], [17, 6], [15, 5], [4, 1], [8, 16], [6, 14], [2, 13], [15, 11], [18, 7], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [2, 13], [13, 4], [1, 17], [14, 7], [19, 15], [12, 10], [2, 8], [0, 3], [19, 4], [12, 10], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [19, 4], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [19, 4], [8, 16], [14, 7], [10, 17], [1, 11], [15, 5], [0, 3], [19, 4], [17, 18], [12, 10], [5, 1], [14, 7], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [12, 9], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [13, 16], [10, 14], [0, 3], [12, 9], [17, 18], [8, 12], [9, 6], [11, 0], [10, 14], [19, 4], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 15, 22]
[22, 29, 37]
[111, 114, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[174, 181, 189]
[220, 224, 233]
[263, 274, 284]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[105, 117, 120]
[144, 147, 153]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.203115224838257

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 22] ccc => cc, Pos: [22, 29, 37] ccc => cc, Pos: [25, 39] cc => I, Pos: [25, 39] cc => I, Pos: [26, 36] cc => I, Pos: [26, 36] cc => I, Pos: [31, 50] cc => I, Pos: [31, 50] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 46] cc => I, Pos: [38, 46] cc => I, Pos: [41, 48] cc => I, Pos: [41, 48] cc => I, Pos: [42, 52] cc => I, Pos: [42, 52] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [55, 64] cc => I, Pos: [55, 64] cc => I, Pos: [56, 59] cc => I, Pos: [56, 59] cc => I, Pos: [58, 65] cc => I, Pos: [58, 65] cc => I, Pos: [61, 69] cc => I, Pos: [61, 69] cc => I, Pos: [62, 67] cc => I, Pos: [62, 67] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [81, 95] cc => I, Pos: [81, 95] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [84, 88] cc => I, Pos: [84, 88] cc => I, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [105, 117, 120] ccc => cc, Pos: [110, 115] cc => I, Pos: [110, 115] cc => I, Pos: [111, 114, 121] ccc => cc, Pos: [112, 128] cc => I, Pos: [112, 128] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [135, 144] cc => I, Pos: [135, 144] cc => I, Pos: [140, 149] cc => I, Pos: [140, 149] cc => I, Pos: [144, 147, 153] ccc => cc, Pos: [145, 150] cc => I, Pos: [145, 150] cc => I, Pos: [151, 155] cc => I, Pos: [151, 155] cc => I, Pos: [152, 154] cc => I, Pos: [152, 154] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [168, 182] cc => I, Pos: [168, 182] cc => I, Pos: [174, 181, 189] ccc => cc, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [183, 191] cc => I, Pos: [183, 191] cc => I, Pos: [192, 205] cc => I, Pos: [192, 205] cc => I, Pos: [193, 199] cc => I, Pos: [193, 199] cc => I, Pos: [196, 200] cc => I, Pos: [196, 200] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [218, 228] cc => I, Pos: [218, 228] cc => I, Pos: [220, 224, 233] ccc => cc, Pos: [221, 225] cc => I, Pos: [221, 225] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [235, 239] cc => I, Pos: [235, 239] cc => I, Pos: [237, 245] cc => I, Pos: [237, 245] cc => I, Pos: [240, 250] cc => I, Pos: [240, 250] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [261, 265] cc => I, Pos: [261, 265] cc => I, Pos: [263, 274, 284] ccc => cc, Pos: [264, 272] cc => I, Pos: [264, 272] cc => I, Pos: [272, 278] cc => I, Pos: [272, 278] cc => I, Pos: [278, 285] cc => I, Pos: [278, 285] cc => I, Pos: [280, 289] cc => I, Pos: [280, 289] cc => I, Pos: [284, 306] cc => I, Pos: [284, 306] cc => I, Pos: [298, 307] cc => I, Pos: [298, 307] cc => I, Pos: [304, 314] cc => I, Pos: [304, 314] cc => I, Pos: [305, 312] cc => I, Pos: [305, 312] cc => I]

--------End Timer [Generate Plans]:  0.12511086463928223

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 15, 22] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [36, 38] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [62, 67] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [65, 73] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [89, 96] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [110, 115] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [128, 140] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [144, 147, 153] ccc => cc,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [192, 205] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [200, 208] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [221, 225] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [284, 306] cc => I,
 Pos: [272, 278] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 52, Saving: 55

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 15, 22] ccc => cc
Apply:  Pos: [25, 39] cc => I
Apply:  Pos: [36, 38] cc => I
Apply:  Pos: [31, 50] cc => I
Apply:  Pos: [41, 48] cc => I
Apply:  Pos: [42, 52] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [62, 67] cc => I
Apply:  Pos: [56, 59] cc => I
Apply:  Pos: [65, 73] cc => I
Apply:  Pos: [61, 69] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [84, 88] cc => I
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [105, 117, 120] ccc => cc
Apply:  Pos: [110, 115] cc => I
Apply:  Pos: [111, 114, 121] ccc => cc
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [144, 147, 153] ccc => cc
Apply:  Pos: [145, 150] cc => I
Apply:  Pos: [151, 155] cc => I
Apply:  Pos: [152, 154] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [168, 182] cc => I
Apply:  Pos: [174, 181, 189] ccc => cc
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [183, 191] cc => I
Apply:  Pos: [192, 205] cc => I
Apply:  Pos: [193, 199] cc => I
Apply:  Pos: [200, 208] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [220, 224, 233] ccc => cc
Apply:  Pos: [221, 225] cc => I
Apply:  Pos: [235, 239] cc => I
Apply:  Pos: [237, 245] cc => I
Apply:  Pos: [240, 250] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [261, 265] cc => I
Apply:  Pos: [284, 306] cc => I
Apply:  Pos: [272, 278] cc => I
Apply:  Pos: [280, 289] cc => I
Apply:  Pos: [298, 307] cc => I
Apply:  Pos: [304, 314] cc => I
Apply:  Pos: [305, 312] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015505313873291016

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [9, 6], [5, 11], [13, 4], [19, 15], [8, 16], [5, 1], [4, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [0, 7], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [6, 14], [0, 3], [15, 5], [2, 8], [5, 11], [4, 1], [16, 12], [16, 4], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [19, 4], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [19, 4], [17, 18], [12, 10], [5, 1], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [9, 6], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  6.34373140335083

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[24, 38]
[44, 57]
[80, 104]
[97, 108]
[179, 195]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[101, 105, 106]
[199, 203, 214]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[67, 72, 74]
[104, 107, 115]
[139, 144, 147]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[24, 38]
[44, 57]
[80, 104]
[97, 108]
[179, 195]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.078167676925659

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [24, 38] cc => I, Pos: [24, 38] cc => I, Pos: [44, 57] cc => I, Pos: [44, 57] cc => I, Pos: [67, 72, 74] ccc => cc, Pos: [80, 104] cc => I, Pos: [80, 104] cc => I, Pos: [97, 108] cc => I, Pos: [97, 108] cc => I, Pos: [101, 105, 106] ccc => cc, Pos: [104, 107, 115] ccc => cc, Pos: [139, 144, 147] ccc => cc, Pos: [179, 195] cc => I, Pos: [179, 195] cc => I, Pos: [199, 203, 214] ccc => cc]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [24, 38] cc => I,
 Pos: [44, 57] cc => I,
 Pos: [67, 72, 74] ccc => cc,
 Pos: [104, 107, 115] ccc => cc,
 Pos: [97, 108] cc => I,
 Pos: [101, 105, 106] ccc => cc,
 Pos: [139, 144, 147] ccc => cc,
 Pos: [179, 195] cc => I,
 Pos: [199, 203, 214] ccc => cc]
Change: 9, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [24, 38] cc => I
Apply:  Pos: [44, 57] cc => I
Apply:  Pos: [67, 72, 74] ccc => cc
Apply:  Pos: [104, 107, 115] ccc => cc
Apply:  Pos: [97, 108] cc => I
Apply:  Pos: [101, 105, 106] ccc => cc
Apply:  Pos: [139, 144, 147] ccc => cc
Apply:  Pos: [179, 195] cc => I
Apply:  Pos: [199, 203, 214] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [4, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [11, 0], [16, 12], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [6, 14], [12, 10], [15, 1], [0, 3], [8, 16], [14, 7], [8, 12], [10, 17], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  4.093791723251343

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[99, 112]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[119, 124, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[99, 112]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.765190362930298

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [99, 112] cc => I, Pos: [99, 112] cc => I, Pos: [119, 124, 130] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [99, 112] cc => I, Pos: [119, 124, 130] ccc => cc]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [99, 112] cc => I
Apply:  Pos: [119, 124, 130] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [4, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [16, 12], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [17, 6], [13, 16], [18, 7], [19, 4], [0, 7], [6, 14], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [12, 10], [15, 1], [0, 3], [8, 16], [14, 7], [8, 12], [10, 17], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.765190362930298

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7031173706054688

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [5, 11], [13, 4], [19, 15], [8, 16], [4, 1], [13, 16], [8, 10], [10, 17], [13, 19], [16, 12], [2, 8], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [2, 13], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [16, 12], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [16, 12], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [17, 6], [13, 16], [18, 7], [19, 4], [0, 7], [6, 14], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [12, 10], [15, 1], [0, 3], [8, 16], [14, 7], [8, 12], [10, 17], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [0, 3], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.7031173706054688

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [201] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 402

Reduced: 
 - size: 114 (36.19%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12514853477478027

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 15], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [19, 15], [0, 7], [1, 17], [12, 10], [9, 6], [13, 16], [4, 18], [15, 11], [7, 3], [2, 8], [5, 1], [19, 16], [17, 18], [13, 4], [9, 6], [19, 15], [9, 6], [12, 10], [4, 18], [13, 16], [17, 14], [1, 11], [19, 4], [15, 1], [9, 6], [18, 0], [13, 16], [5, 11], [2, 8], [13, 4], [17, 14], [19, 15], [8, 16], [18, 0], [12, 9], [5, 1], [4, 1], [12, 9], [13, 16], [14, 7], [5, 11], [8, 10], [18, 0], [4, 1], [10, 17], [5, 11], [13, 19], [14, 7], [16, 12], [2, 8], [18, 0], [4, 1], [10, 14], [18, 7], [15, 11], [8, 12], [13, 16], [4, 18], [10, 6], [15, 11], [5, 1], [2, 13], [16, 12], [0, 3], [17, 14], [4, 17], [16, 12], [2, 13], [15, 1], [18, 3], [8, 10], [6, 14], [4, 17], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [7, 3], [9, 6], [13, 4], [1, 18], [19, 15], [17, 6], [8, 10], [16, 12], [4, 1], [10, 14], [17, 6], [13, 19], [0, 3], [4, 18], [15, 1], [0, 7], [8, 10], [17, 6], [19, 4], [15, 1], [10, 6], [7, 3], [2, 13], [16, 12], [5, 11], [17, 14], [19, 15], [13, 4], [16, 10], [7, 3], [5, 11], [17, 14], [1, 18], [15, 1], [4, 18], [16, 12], [10, 17], [6, 14], [0, 3], [5, 11], [13, 19], [2, 8], [15, 11], [4, 1], [16, 12], [13, 19], [7, 3], [10, 6], [15, 5], [10, 6], [7, 3], [16, 4], [1, 17], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [1, 17], [18, 7], [5, 1], [13, 4], [9, 6], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [12, 10], [19, 16], [11, 0], [7, 3], [15, 1], [16, 4], [18, 0], [8, 12], [9, 6], [5, 11], [17, 14], [15, 1], [4, 17], [6, 14], [13, 16], [12, 10], [18, 7], [5, 11], [0, 3], [15, 11], [19, 4], [0, 7], [17, 6], [8, 10], [12, 9], [15, 11], [17, 6], [2, 8], [13, 19], [16, 12], [4, 1], [0, 3], [14, 7], [5, 11], [17, 6], [12, 10], [15, 1], [13, 19], [0, 3], [4, 18], [8, 16], [5, 11], [6, 14], [8, 12], [4, 18], [10, 17], [7, 3], [2, 13], [5, 1], [12, 10], [14, 7], [2, 13], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [7, 3], [17, 14], [12, 9], [2, 13], [4, 1], [8, 10], [12, 9], [18, 7], [13, 16], [11, 0], [17, 6], [15, 5], [4, 1], [8, 16], [6, 14], [2, 13], [15, 11], [18, 7], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [2, 13], [13, 4], [1, 17], [14, 7], [19, 15], [12, 10], [2, 8], [0, 3], [19, 4], [12, 10], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [19, 4], [16, 12], [18, 0], [5, 1], [10, 6], [2, 8], [19, 4], [8, 16], [14, 7], [10, 17], [1, 11], [15, 5], [0, 3], [19, 4], [17, 18], [12, 10], [5, 1], [14, 7], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [12, 9], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [13, 16], [10, 14], [0, 3], [12, 9], [17, 18], [8, 12], [9, 6], [11, 0], [10, 14], [19, 4], [13, 16], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 15, 22]
[22, 29, 37]
[111, 114, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[174, 181, 189]
[220, 224, 233]
[263, 274, 284]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[105, 117, 120]
[144, 147, 153]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[26, 36]
[36, 38]
[25, 39]
[38, 46]
[41, 48]
[31, 50]
[42, 52]
[47, 55]
[56, 59]
[49, 62]
[55, 64]
[58, 65]
[62, 67]
[61, 69]
[64, 72]
[65, 73]
[76, 81]
[84, 88]
[83, 89]
[87, 94]
[81, 95]
[89, 96]
[110, 115]
[115, 122]
[119, 124]
[112, 128]
[126, 134]
[129, 135]
[130, 136]
[128, 140]
[135, 144]
[140, 149]
[145, 150]
[152, 154]
[151, 155]
[157, 164]
[168, 182]
[178, 185]
[183, 191]
[193, 199]
[196, 200]
[192, 205]
[200, 208]
[202, 211]
[205, 212]
[207, 215]
[213, 218]
[221, 225]
[218, 228]
[225, 236]
[235, 239]
[237, 245]
[240, 250]
[248, 256]
[261, 265]
[264, 272]
[272, 278]
[278, 285]
[280, 289]
[284, 306]
[298, 307]
[305, 312]
[304, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.203067302703857

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [12, 15, 22] ccc => cc, Pos: [22, 29, 37] ccc => cc, Pos: [25, 39] cc => I, Pos: [25, 39] cc => I, Pos: [26, 36] cc => I, Pos: [26, 36] cc => I, Pos: [31, 50] cc => I, Pos: [31, 50] cc => I, Pos: [36, 38] cc => I, Pos: [36, 38] cc => I, Pos: [38, 46] cc => I, Pos: [38, 46] cc => I, Pos: [41, 48] cc => I, Pos: [41, 48] cc => I, Pos: [42, 52] cc => I, Pos: [42, 52] cc => I, Pos: [47, 55] cc => I, Pos: [47, 55] cc => I, Pos: [49, 62] cc => I, Pos: [49, 62] cc => I, Pos: [55, 64] cc => I, Pos: [55, 64] cc => I, Pos: [56, 59] cc => I, Pos: [56, 59] cc => I, Pos: [58, 65] cc => I, Pos: [58, 65] cc => I, Pos: [61, 69] cc => I, Pos: [61, 69] cc => I, Pos: [62, 67] cc => I, Pos: [62, 67] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [65, 73] cc => I, Pos: [65, 73] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [81, 95] cc => I, Pos: [81, 95] cc => I, Pos: [83, 89] cc => I, Pos: [83, 89] cc => I, Pos: [84, 88] cc => I, Pos: [84, 88] cc => I, Pos: [87, 94] cc => I, Pos: [87, 94] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [105, 117, 120] ccc => cc, Pos: [110, 115] cc => I, Pos: [110, 115] cc => I, Pos: [111, 114, 121] ccc => cc, Pos: [112, 128] cc => I, Pos: [112, 128] cc => I, Pos: [115, 122] cc => I, Pos: [115, 122] cc => I, Pos: [119, 124] cc => I, Pos: [119, 124] cc => I, Pos: [126, 134] cc => I, Pos: [126, 134] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 135] cc => I, Pos: [129, 135] cc => I, Pos: [130, 136] cc => I, Pos: [130, 136] cc => I, Pos: [135, 144] cc => I, Pos: [135, 144] cc => I, Pos: [140, 149] cc => I, Pos: [140, 149] cc => I, Pos: [144, 147, 153] ccc => cc, Pos: [145, 150] cc => I, Pos: [145, 150] cc => I, Pos: [151, 155] cc => I, Pos: [151, 155] cc => I, Pos: [152, 154] cc => I, Pos: [152, 154] cc => I, Pos: [157, 164] cc => I, Pos: [157, 164] cc => I, Pos: [168, 182] cc => I, Pos: [168, 182] cc => I, Pos: [174, 181, 189] ccc => cc, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [183, 191] cc => I, Pos: [183, 191] cc => I, Pos: [192, 205] cc => I, Pos: [192, 205] cc => I, Pos: [193, 199] cc => I, Pos: [193, 199] cc => I, Pos: [196, 200] cc => I, Pos: [196, 200] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [202, 211] cc => I, Pos: [202, 211] cc => I, Pos: [205, 212] cc => I, Pos: [205, 212] cc => I, Pos: [207, 215] cc => I, Pos: [207, 215] cc => I, Pos: [213, 218] cc => I, Pos: [213, 218] cc => I, Pos: [218, 228] cc => I, Pos: [218, 228] cc => I, Pos: [220, 224, 233] ccc => cc, Pos: [221, 225] cc => I, Pos: [221, 225] cc => I, Pos: [225, 236] cc => I, Pos: [225, 236] cc => I, Pos: [235, 239] cc => I, Pos: [235, 239] cc => I, Pos: [237, 245] cc => I, Pos: [237, 245] cc => I, Pos: [240, 250] cc => I, Pos: [240, 250] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [261, 265] cc => I, Pos: [261, 265] cc => I, Pos: [263, 274, 284] ccc => cc, Pos: [264, 272] cc => I, Pos: [264, 272] cc => I, Pos: [272, 278] cc => I, Pos: [272, 278] cc => I, Pos: [278, 285] cc => I, Pos: [278, 285] cc => I, Pos: [280, 289] cc => I, Pos: [280, 289] cc => I, Pos: [284, 306] cc => I, Pos: [284, 306] cc => I, Pos: [298, 307] cc => I, Pos: [298, 307] cc => I, Pos: [304, 314] cc => I, Pos: [304, 314] cc => I, Pos: [305, 312] cc => I, Pos: [305, 312] cc => I]

Plan: 1
[Pos: [12, 15, 22] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [26, 36] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [38, 46] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [49, 62] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [58, 65] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [110, 115] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [112, 128] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [140, 149] cc => I,
 Pos: [144, 147, 153] ccc => cc,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [192, 205] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [196, 200] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [221, 225] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [263, 274, 284] ccc => cc,
 Pos: [264, 272] cc => I,
 Pos: [278, 285] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 55, Saving: 58

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.12488698959350586

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [12, 15, 22] ccc => cc,
 Pos: [25, 39] cc => I,
 Pos: [26, 36] cc => I,
 Pos: [31, 50] cc => I,
 Pos: [38, 46] cc => I,
 Pos: [41, 48] cc => I,
 Pos: [42, 52] cc => I,
 Pos: [47, 55] cc => I,
 Pos: [49, 62] cc => I,
 Pos: [56, 59] cc => I,
 Pos: [58, 65] cc => I,
 Pos: [61, 69] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [83, 89] cc => I,
 Pos: [84, 88] cc => I,
 Pos: [87, 94] cc => I,
 Pos: [105, 117, 120] ccc => cc,
 Pos: [110, 115] cc => I,
 Pos: [111, 114, 121] ccc => cc,
 Pos: [112, 128] cc => I,
 Pos: [119, 124] cc => I,
 Pos: [126, 134] cc => I,
 Pos: [129, 135] cc => I,
 Pos: [130, 136] cc => I,
 Pos: [140, 149] cc => I,
 Pos: [144, 147, 153] ccc => cc,
 Pos: [145, 150] cc => I,
 Pos: [151, 155] cc => I,
 Pos: [152, 154] cc => I,
 Pos: [157, 164] cc => I,
 Pos: [168, 182] cc => I,
 Pos: [174, 181, 189] ccc => cc,
 Pos: [178, 185] cc => I,
 Pos: [183, 191] cc => I,
 Pos: [192, 205] cc => I,
 Pos: [193, 199] cc => I,
 Pos: [196, 200] cc => I,
 Pos: [202, 211] cc => I,
 Pos: [207, 215] cc => I,
 Pos: [213, 218] cc => I,
 Pos: [220, 224, 233] ccc => cc,
 Pos: [221, 225] cc => I,
 Pos: [235, 239] cc => I,
 Pos: [237, 245] cc => I,
 Pos: [240, 250] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [261, 265] cc => I,
 Pos: [263, 274, 284] ccc => cc,
 Pos: [264, 272] cc => I,
 Pos: [278, 285] cc => I,
 Pos: [280, 289] cc => I,
 Pos: [298, 307] cc => I,
 Pos: [304, 314] cc => I,
 Pos: [305, 312] cc => I]
Change: 55, Saving: 58

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [12, 15, 22] ccc => cc
Apply:  Pos: [25, 39] cc => I
Apply:  Pos: [26, 36] cc => I
Apply:  Pos: [31, 50] cc => I
Apply:  Pos: [38, 46] cc => I
Apply:  Pos: [41, 48] cc => I
Apply:  Pos: [42, 52] cc => I
Apply:  Pos: [47, 55] cc => I
Apply:  Pos: [49, 62] cc => I
Apply:  Pos: [56, 59] cc => I
Apply:  Pos: [58, 65] cc => I
Apply:  Pos: [61, 69] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [83, 89] cc => I
Apply:  Pos: [84, 88] cc => I
Apply:  Pos: [87, 94] cc => I
Apply:  Pos: [105, 117, 120] ccc => cc
Apply:  Pos: [110, 115] cc => I
Apply:  Pos: [111, 114, 121] ccc => cc
Apply:  Pos: [112, 128] cc => I
Apply:  Pos: [119, 124] cc => I
Apply:  Pos: [126, 134] cc => I
Apply:  Pos: [129, 135] cc => I
Apply:  Pos: [130, 136] cc => I
Apply:  Pos: [140, 149] cc => I
Apply:  Pos: [144, 147, 153] ccc => cc
Apply:  Pos: [145, 150] cc => I
Apply:  Pos: [151, 155] cc => I
Apply:  Pos: [152, 154] cc => I
Apply:  Pos: [157, 164] cc => I
Apply:  Pos: [168, 182] cc => I
Apply:  Pos: [174, 181, 189] ccc => cc
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [183, 191] cc => I
Apply:  Pos: [192, 205] cc => I
Apply:  Pos: [193, 199] cc => I
Apply:  Pos: [196, 200] cc => I
Apply:  Pos: [202, 211] cc => I
Apply:  Pos: [207, 215] cc => I
Apply:  Pos: [213, 218] cc => I
Apply:  Pos: [220, 224, 233] ccc => cc
Apply:  Pos: [221, 225] cc => I
Apply:  Pos: [235, 239] cc => I
Apply:  Pos: [237, 245] cc => I
Apply:  Pos: [240, 250] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [261, 265] cc => I
Apply:  Pos: [263, 274, 284] ccc => cc
Apply:  Pos: [264, 272] cc => I
Apply:  Pos: [278, 285] cc => I
Apply:  Pos: [280, 289] cc => I
Apply:  Pos: [298, 307] cc => I
Apply:  Pos: [304, 314] cc => I
Apply:  Pos: [305, 312] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [0, 7], [8, 16], [19, 4], [5, 1], [13, 16], [11, 0], [10, 17], [0, 7], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [6, 14], [0, 3], [15, 5], [2, 8], [5, 11], [4, 1], [16, 4], [11, 0], [5, 11], [8, 16], [6, 14], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [0, 3], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 6], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [0, 3], [17, 18], [8, 12], [9, 6], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  6.327954292297363

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[94, 104]
[182, 206]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[98, 101, 102]
[193, 197, 209]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[65, 70, 72]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[94, 104]
[182, 206]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.9061472415924072

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 70, 72] ccc => cc, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [98, 101, 102] ccc => cc, Pos: [182, 206] cc => I, Pos: [182, 206] cc => I, Pos: [193, 197, 209] ccc => cc]

Plan: 1
[Pos: [65, 70, 72] ccc => cc,
 Pos: [94, 104] cc => I,
 Pos: [98, 101, 102] ccc => cc,
 Pos: [182, 206] cc => I,
 Pos: [193, 197, 209] ccc => cc]
Change: 5, Saving: 5

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015639781951904297

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 70, 72] ccc => cc,
 Pos: [94, 104] cc => I,
 Pos: [98, 101, 102] ccc => cc,
 Pos: [182, 206] cc => I,
 Pos: [193, 197, 209] ccc => cc]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [65, 70, 72] ccc => cc
Apply:  Pos: [94, 104] cc => I
Apply:  Pos: [98, 101, 102] ccc => cc
Apply:  Pos: [182, 206] cc => I
Apply:  Pos: [193, 197, 209] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [11, 0], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [11, 0], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.9217870235443115

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[99, 113]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[99, 113]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.734354019165039

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [99, 113] cc => I, Pos: [99, 113] cc => I]

Plan: 1
[Pos: [99, 113] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [99, 113] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [99, 113] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.734354019165039

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7030622959136963

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[4, 18], [13, 16], [0, 7], [10, 6], [5, 1], [8, 12], [17, 14], [1, 18], [8, 10], [7, 3], [11, 0], [2, 13], [19, 1], [6, 14], [16, 12], [15, 1], [10, 14], [13, 4], [17, 6], [5, 11], [8, 12], [18, 0], [0, 7], [1, 17], [13, 16], [4, 18], [15, 11], [7, 3], [5, 1], [19, 16], [17, 18], [13, 4], [19, 15], [4, 18], [1, 11], [19, 4], [15, 1], [13, 4], [19, 15], [8, 16], [5, 1], [13, 16], [8, 10], [10, 17], [5, 11], [13, 19], [16, 12], [2, 8], [4, 1], [10, 14], [18, 7], [8, 12], [13, 16], [4, 18], [10, 6], [5, 1], [0, 3], [17, 14], [15, 1], [18, 3], [8, 10], [6, 14], [15, 11], [2, 13], [12, 10], [11, 0], [8, 16], [19, 4], [5, 1], [13, 16], [0, 7], [10, 17], [9, 6], [13, 4], [1, 18], [19, 15], [8, 14], [4, 1], [10, 14], [13, 19], [7, 3], [4, 18], [17, 6], [19, 4], [10, 6], [2, 13], [19, 15], [13, 4], [16, 10], [1, 18], [15, 1], [4, 18], [10, 17], [0, 3], [15, 5], [2, 8], [5, 0], [4, 1], [16, 4], [8, 16], [19, 15], [2, 13], [18, 7], [5, 1], [13, 4], [18, 3], [16, 12], [14, 7], [15, 5], [4, 18], [8, 12], [19, 16], [7, 3], [16, 4], [18, 0], [12, 10], [17, 14], [4, 17], [6, 14], [13, 16], [18, 7], [19, 4], [0, 7], [8, 10], [12, 9], [2, 8], [16, 12], [4, 1], [14, 7], [17, 6], [12, 10], [15, 1], [0, 3], [8, 16], [6, 14], [8, 12], [10, 17], [14, 7], [5, 1], [12, 10], [7, 3], [19, 15], [9, 6], [4, 18], [11, 0], [1, 11], [18, 0], [19, 16], [17, 14], [2, 13], [8, 10], [13, 16], [11, 0], [17, 6], [15, 5], [8, 16], [6, 14], [15, 11], [4, 17], [10, 14], [18, 3], [8, 12], [19, 16], [13, 4], [1, 17], [14, 7], [19, 15], [2, 8], [18, 0], [2, 13], [1, 11], [8, 16], [18, 7], [15, 5], [6, 14], [16, 12], [5, 1], [10, 6], [2, 8], [8, 16], [10, 17], [1, 11], [15, 5], [17, 18], [12, 10], [5, 1], [9, 14], [13, 16], [4, 17], [2, 13], [6, 14], [1, 11], [18, 7], [19, 15], [8, 16], [4, 18], [15, 11], [5, 1], [2, 8], [17, 18], [8, 12], [11, 0], [19, 4], ----End Timer [Execute Mapping]:  3.7030622959136963

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [203] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 406

Reduced: 
 - size: 112 (35.56%)
 - depth: 1 (2.22%)

