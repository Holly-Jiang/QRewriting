----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14000368118286133

[0, 19], [1, 10], [14, 16], [15, 13], [8, 18], [2, 7], [4, 9], [0, 19], [14, 16], [4, 9], [8, 12], [15, 10], [17, 5], [3, 18], [1, 6], [19, 2], [11, 0], [15, 10], [8, 12], [16, 4], [1, 6], [17, 5], [19, 8], [3, 18], [11, 0], [6, 2], [13, 1], [15, 10], [19, 8], [15, 10], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [17, 15], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [8, 12], [1, 10], [13, 11], [17, 15], [10, 2], [8, 12], [15, 13], [11, 19], [4, 9], [17, 5], [7, 3], [10, 19], [15, 13], [9, 12], [5, 14], [11, 0], [6, 2], [16, 4], [7, 3], [19, 7], [0, 9], [14, 16], [15, 1], [8, 3], [12, 18], [5, 11], [10, 2], [10, 19], [16, 4], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [10, 19], [17, 15], [4, 0], [14, 13], [7, 3], [5, 11], [10, 2], [0, 8], [12, 18], [7, 3], [15, 13], [16, 4], [5, 14], [10, 19], [9, 12], [13, 11], [5, 14], [0, 8], [6, 2], [16, 4], [17, 15], [3, 18], [10, 2], [8, 18], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [2, 7], [16, 0], [8, 18], [14, 13], [12, 3], [5, 11], [2, 7], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [6, 2], [14, 11], [19, 7], [13, 10], [17, 5], [12, 18], [6, 2], [8, 3], [16, 9], [7, 3], [19, 8], [13, 1], [12, 18], [16, 9], [17, 5], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [7, 3], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 10], [16, 4], [12, 18], [0, 9], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [16, 4], [1, 10], [0, 9], [19, 8], [5, 11], [15, 1], [10, 2], [19, 8], [3, 18], [17, 5], [16, 0], [15, 1], [12, 18], [19, 8], [14, 11], [0, 9], [2, 7], [17, 5], [15, 10], [14, 11], [1, 6], [16, 4], [9, 12], [2, 7], [17, 5], [0, 8], [10, 2], [12, 18], [16, 9], [7, 3], [11, 19], [1, 6], [5, 13], [17, 15], [4, 0], [10, 2], [1, 6], [8, 3], [11, 19], [16, 4], [17, 15], [12, 18], [0, 9], [19, 2], [5, 13], [11, 0], [8, 18], [15, 1], [16, 4], [10, 7], [12, 3], [10, 2], [12, 3], [5, 11], [15, 13], [19, 7], [16, 9], [15, 10], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [15, 10], [8, 12], [5, 11], [4, 0], [14, 16], [10, 19], [17, 15], [8, 18], [16, 9], [5, 13], [4, 0], [1, 6], [7, 3], [0, 19], [17, 15], [5, 14], [8, 12], [1, 10], [19, 8], [4, 0], [13, 1], [16, 9], [12, 18], [7, 3], [10, 2], [5, 11], [11, 8], [5, 14], [19, 7], [4, 0], [13, 1], [10, 2], [12, 3], [11, 19], [12, 18], [13, 10], [15, 1], [0, 9], [14, 16], [2, 7], [11, 19], [15, 13], [1, 10], [9, 12], [14, 16], [8, 18], [4, 0], [7, 3], [5, 11], [0, 8], [6, 2], [16, 4], [10, 19], [12, 3], [13, 1], [17, 15], [5, 11], [2, 7], [1, 10], [0, 9], [8, 18], [14, 11], [15, 10], [8, 12], [17, 5], [16, 4], [0, 9], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [15, 10], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[147, 152, 157]
[156, 161, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 68, 75]
[135, 141, 148]
[168, 176, 181]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.187315225601196

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 7] cc => I, Pos: [0, 7] cc => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 9] cc => I, Pos: [6, 9] cc => I, Pos: [10, 18] cc => I, Pos: [10, 18] cc => I, Pos: [11, 17] cc => I, Pos: [11, 17] cc => I, Pos: [12, 21] cc => I, Pos: [12, 21] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [16, 24] cc => I, Pos: [16, 24] cc => I, Pos: [17, 27] cc => I, Pos: [17, 27] cc => I, Pos: [22, 28] cc => I, Pos: [22, 28] cc => I, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [27, 29] cc => I, Pos: [27, 29] cc => I, Pos: [41, 50] cc => I, Pos: [41, 50] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [53, 59] cc => I, Pos: [53, 59] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [64, 68, 75] ccc => cc, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [74, 81] cc => I, Pos: [74, 81] cc => I, Pos: [81, 94] cc => I, Pos: [81, 94] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 98] cc => I, Pos: [88, 98] cc => I, Pos: [92, 100] cc => I, Pos: [92, 100] cc => I, Pos: [93, 97] cc => I, Pos: [93, 97] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [110, 116] cc => I, Pos: [110, 116] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 140] cc => I, Pos: [130, 140] cc => I, Pos: [131, 138] cc => I, Pos: [131, 138] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 141, 148] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [140, 146] cc => I, Pos: [140, 146] cc => I, Pos: [147, 152, 157] ccc => cc, Pos: [148, 154] cc => I, Pos: [148, 154] cc => I, Pos: [156, 161, 167] ccc => cc, Pos: [157, 166] cc => I, Pos: [157, 166] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [166, 187] cc => I, Pos: [166, 187] cc => I, Pos: [168, 176, 181] ccc => cc, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I, Pos: [171, 177] cc => I, Pos: [171, 177] cc => I, Pos: [173, 179] cc => I, Pos: [173, 179] cc => I, Pos: [175, 183] cc => I, Pos: [175, 183] cc => I, Pos: [180, 185] cc => I, Pos: [180, 185] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [186, 197] cc => I, Pos: [186, 197] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 207] cc => I, Pos: [193, 207] cc => I, Pos: [196, 204] cc => I, Pos: [196, 204] cc => I, Pos: [197, 202] cc => I, Pos: [197, 202] cc => I, Pos: [198, 210] cc => I, Pos: [198, 210] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [205, 214] cc => I, Pos: [205, 214] cc => I, Pos: [216, 218] cc => I, Pos: [216, 218] cc => I, Pos: [219, 232] cc => I, Pos: [219, 232] cc => I, Pos: [223, 230] cc => I, Pos: [223, 230] cc => I, Pos: [224, 233] cc => I, Pos: [224, 233] cc => I, Pos: [231, 246] cc => I, Pos: [231, 246] cc => I, Pos: [232, 255] cc => I, Pos: [232, 255] cc => I, Pos: [233, 240] cc => I, Pos: [233, 240] cc => I, Pos: [236, 244] cc => I, Pos: [236, 244] cc => I, Pos: [238, 251] cc => I, Pos: [238, 251] cc => I, Pos: [242, 253] cc => I, Pos: [242, 253] cc => I, Pos: [245, 257] cc => I, Pos: [245, 257] cc => I, Pos: [249, 259] cc => I, Pos: [249, 259] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [252, 264] cc => I, Pos: [252, 264] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [263, 270] cc => I, Pos: [263, 270] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [278, 286] cc => I, Pos: [278, 286] cc => I, Pos: [281, 295] cc => I, Pos: [281, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [292, 307] cc => I, Pos: [292, 307] cc => I]

Plan: 1
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [11, 17] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [13, 23] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [27, 29] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [74, 81] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 140] cc => I,
 Pos: [131, 138] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 141, 148] ccc => cc,
 Pos: [147, 152, 157] ccc => cc,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [166, 187] cc => I,
 Pos: [169, 173] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [175, 183] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [186, 197] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [219, 232] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [224, 233] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 64, Saving: 248

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [11, 17] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [13, 23] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [27, 29] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [74, 81] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 140] cc => I,
 Pos: [131, 138] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 141, 148] ccc => cc,
 Pos: [147, 152, 157] ccc => cc,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [166, 187] cc => I,
 Pos: [169, 173] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [175, 183] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [186, 197] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [219, 232] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [224, 233] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 64, Saving: 248

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 7] cc => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 9] cc => I
Apply:  Pos: [10, 18] cc => I
Apply:  Pos: [11, 17] cc => I
Apply:  Pos: [12, 21] cc => I
Apply:  Pos: [13, 23] cc => I
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [16, 24] cc => I
Apply:  Pos: [22, 28] cc => I
Apply:  Pos: [27, 29] cc => I
Apply:  Pos: [41, 50] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [53, 59] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [64, 68, 75] ccc => cc
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [74, 81] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 98] cc => I
Apply:  Pos: [92, 100] cc => I
Apply:  Pos: [93, 97] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [110, 116] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 140] cc => I
Apply:  Pos: [131, 138] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 141, 148] ccc => cc
Apply:  Pos: [147, 152, 157] ccc => cc
Apply:  Pos: [156, 161, 167] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [166, 187] cc => I
Apply:  Pos: [169, 173] cc => I
Apply:  Pos: [171, 177] cc => I
Apply:  Pos: [175, 183] cc => I
Apply:  Pos: [180, 185] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [186, 197] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 207] cc => I
Apply:  Pos: [196, 204] cc => I
Apply:  Pos: [198, 210] cc => I
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [205, 214] cc => I
Apply:  Pos: [216, 218] cc => I
Apply:  Pos: [219, 232] cc => I
Apply:  Pos: [223, 230] cc => I
Apply:  Pos: [224, 233] cc => I
Apply:  Pos: [231, 246] cc => I
Apply:  Pos: [236, 244] cc => I
Apply:  Pos: [238, 251] cc => I
Apply:  Pos: [242, 253] cc => I
Apply:  Pos: [245, 257] cc => I
Apply:  Pos: [249, 259] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [252, 264] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 270] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [278, 286] cc => I
Apply:  Pos: [281, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [292, 307] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 4], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [10, 19], [9, 12], [13, 11], [6, 2], [17, 15], [3, 18], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [12, 3], [5, 11], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [7, 3], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [15, 13], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  6.187315225601196

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[86, 98]
[105, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 12, 17]
[30, 36, 54]
[99, 106, 108]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 15, 20]
[36, 54, 64]
[59, 68, 73]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[86, 98]
[105, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4374892711639404

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12, 17] ccc => cc, Pos: [11, 15, 20] ccc => cc, Pos: [30, 36, 54] ccc => cc, Pos: [36, 54, 64] ccc => cc, Pos: [59, 68, 73] ccc => cc, Pos: [86, 98] cc => I, Pos: [86, 98] cc => I, Pos: [99, 106, 108] ccc => cc, Pos: [105, 131] cc => I, Pos: [105, 131] cc => I]

Plan: 1
[Pos: [5, 12, 17] ccc => cc,
 Pos: [11, 15, 20] ccc => cc,
 Pos: [30, 36, 54] ccc => cc,
 Pos: [59, 68, 73] ccc => cc,
 Pos: [86, 98] cc => I,
 Pos: [99, 106, 108] ccc => cc,
 Pos: [105, 131] cc => I]
Change: 7, Saving: 18

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 12, 17] ccc => cc,
 Pos: [11, 15, 20] ccc => cc,
 Pos: [30, 36, 54] ccc => cc,
 Pos: [59, 68, 73] ccc => cc,
 Pos: [86, 98] cc => I,
 Pos: [99, 106, 108] ccc => cc,
 Pos: [105, 131] cc => I]
Change: 7, Saving: 18

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 12, 17] ccc => cc
Apply:  Pos: [11, 15, 20] ccc => cc
Apply:  Pos: [30, 36, 54] ccc => cc
Apply:  Pos: [59, 68, 73] ccc => cc
Apply:  Pos: [86, 98] cc => I
Apply:  Pos: [99, 106, 108] ccc => cc
Apply:  Pos: [105, 131] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.4374892711639404

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 109, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.265636444091797

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [98, 109, 126] ccc => cc]

Plan: 1
[Pos: [34, 61] cc => I, Pos: [98, 109, 126] ccc => cc]
Change: 2, Saving: 6

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [34, 61] cc => I, Pos: [98, 109, 126] ccc => cc]
Change: 2, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [34, 61] cc => I
Apply:  Pos: [98, 109, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [5, 19], [0, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [5, 14], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [19, 7], [16, 9], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.265636444091797

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.203125476837158

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [5, 14], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [19, 7], [10, 7], [16, 9], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.203125476837158

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [179] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 358

Reduced: 
 - size: 136 (43.17%)
 - cycle: 272 (43.17%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499570846557617

[0, 19], [1, 10], [14, 16], [15, 13], [8, 18], [2, 7], [4, 9], [0, 19], [14, 16], [4, 9], [8, 12], [15, 10], [17, 5], [3, 18], [1, 6], [19, 2], [11, 0], [15, 10], [8, 12], [16, 4], [1, 6], [17, 5], [19, 8], [3, 18], [11, 0], [6, 2], [13, 1], [15, 10], [19, 8], [15, 10], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [17, 15], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [8, 12], [1, 10], [13, 11], [17, 15], [10, 2], [8, 12], [15, 13], [11, 19], [4, 9], [17, 5], [7, 3], [10, 19], [15, 13], [9, 12], [5, 14], [11, 0], [6, 2], [16, 4], [7, 3], [19, 7], [0, 9], [14, 16], [15, 1], [8, 3], [12, 18], [5, 11], [10, 2], [10, 19], [16, 4], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [10, 19], [17, 15], [4, 0], [14, 13], [7, 3], [5, 11], [10, 2], [0, 8], [12, 18], [7, 3], [15, 13], [16, 4], [5, 14], [10, 19], [9, 12], [13, 11], [5, 14], [0, 8], [6, 2], [16, 4], [17, 15], [3, 18], [10, 2], [8, 18], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [2, 7], [16, 0], [8, 18], [14, 13], [12, 3], [5, 11], [2, 7], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [6, 2], [14, 11], [19, 7], [13, 10], [17, 5], [12, 18], [6, 2], [8, 3], [16, 9], [7, 3], [19, 8], [13, 1], [12, 18], [16, 9], [17, 5], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [7, 3], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 10], [16, 4], [12, 18], [0, 9], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [16, 4], [1, 10], [0, 9], [19, 8], [5, 11], [15, 1], [10, 2], [19, 8], [3, 18], [17, 5], [16, 0], [15, 1], [12, 18], [19, 8], [14, 11], [0, 9], [2, 7], [17, 5], [15, 10], [14, 11], [1, 6], [16, 4], [9, 12], [2, 7], [17, 5], [0, 8], [10, 2], [12, 18], [16, 9], [7, 3], [11, 19], [1, 6], [5, 13], [17, 15], [4, 0], [10, 2], [1, 6], [8, 3], [11, 19], [16, 4], [17, 15], [12, 18], [0, 9], [19, 2], [5, 13], [11, 0], [8, 18], [15, 1], [16, 4], [10, 7], [12, 3], [10, 2], [12, 3], [5, 11], [15, 13], [19, 7], [16, 9], [15, 10], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [15, 10], [8, 12], [5, 11], [4, 0], [14, 16], [10, 19], [17, 15], [8, 18], [16, 9], [5, 13], [4, 0], [1, 6], [7, 3], [0, 19], [17, 15], [5, 14], [8, 12], [1, 10], [19, 8], [4, 0], [13, 1], [16, 9], [12, 18], [7, 3], [10, 2], [5, 11], [11, 8], [5, 14], [19, 7], [4, 0], [13, 1], [10, 2], [12, 3], [11, 19], [12, 18], [13, 10], [15, 1], [0, 9], [14, 16], [2, 7], [11, 19], [15, 13], [1, 10], [9, 12], [14, 16], [8, 18], [4, 0], [7, 3], [5, 11], [0, 8], [6, 2], [16, 4], [10, 19], [12, 3], [13, 1], [17, 15], [5, 11], [2, 7], [1, 10], [0, 9], [8, 18], [14, 11], [15, 10], [8, 12], [17, 5], [16, 4], [0, 9], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [15, 10], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[147, 152, 157]
[156, 161, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 68, 75]
[135, 141, 148]
[168, 176, 181]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.109371900558472

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 7] cc => I, Pos: [0, 7] cc => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 9] cc => I, Pos: [6, 9] cc => I, Pos: [10, 18] cc => I, Pos: [10, 18] cc => I, Pos: [11, 17] cc => I, Pos: [11, 17] cc => I, Pos: [12, 21] cc => I, Pos: [12, 21] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [16, 24] cc => I, Pos: [16, 24] cc => I, Pos: [17, 27] cc => I, Pos: [17, 27] cc => I, Pos: [22, 28] cc => I, Pos: [22, 28] cc => I, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [27, 29] cc => I, Pos: [27, 29] cc => I, Pos: [41, 50] cc => I, Pos: [41, 50] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [53, 59] cc => I, Pos: [53, 59] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [64, 68, 75] ccc => cc, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [74, 81] cc => I, Pos: [74, 81] cc => I, Pos: [81, 94] cc => I, Pos: [81, 94] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 98] cc => I, Pos: [88, 98] cc => I, Pos: [92, 100] cc => I, Pos: [92, 100] cc => I, Pos: [93, 97] cc => I, Pos: [93, 97] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [110, 116] cc => I, Pos: [110, 116] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 140] cc => I, Pos: [130, 140] cc => I, Pos: [131, 138] cc => I, Pos: [131, 138] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 141, 148] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [140, 146] cc => I, Pos: [140, 146] cc => I, Pos: [147, 152, 157] ccc => cc, Pos: [148, 154] cc => I, Pos: [148, 154] cc => I, Pos: [156, 161, 167] ccc => cc, Pos: [157, 166] cc => I, Pos: [157, 166] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [166, 187] cc => I, Pos: [166, 187] cc => I, Pos: [168, 176, 181] ccc => cc, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I, Pos: [171, 177] cc => I, Pos: [171, 177] cc => I, Pos: [173, 179] cc => I, Pos: [173, 179] cc => I, Pos: [175, 183] cc => I, Pos: [175, 183] cc => I, Pos: [180, 185] cc => I, Pos: [180, 185] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [186, 197] cc => I, Pos: [186, 197] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 207] cc => I, Pos: [193, 207] cc => I, Pos: [196, 204] cc => I, Pos: [196, 204] cc => I, Pos: [197, 202] cc => I, Pos: [197, 202] cc => I, Pos: [198, 210] cc => I, Pos: [198, 210] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [205, 214] cc => I, Pos: [205, 214] cc => I, Pos: [216, 218] cc => I, Pos: [216, 218] cc => I, Pos: [219, 232] cc => I, Pos: [219, 232] cc => I, Pos: [223, 230] cc => I, Pos: [223, 230] cc => I, Pos: [224, 233] cc => I, Pos: [224, 233] cc => I, Pos: [231, 246] cc => I, Pos: [231, 246] cc => I, Pos: [232, 255] cc => I, Pos: [232, 255] cc => I, Pos: [233, 240] cc => I, Pos: [233, 240] cc => I, Pos: [236, 244] cc => I, Pos: [236, 244] cc => I, Pos: [238, 251] cc => I, Pos: [238, 251] cc => I, Pos: [242, 253] cc => I, Pos: [242, 253] cc => I, Pos: [245, 257] cc => I, Pos: [245, 257] cc => I, Pos: [249, 259] cc => I, Pos: [249, 259] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [252, 264] cc => I, Pos: [252, 264] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [263, 270] cc => I, Pos: [263, 270] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [278, 286] cc => I, Pos: [278, 286] cc => I, Pos: [281, 295] cc => I, Pos: [281, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [292, 307] cc => I, Pos: [292, 307] cc => I]

Plan: 1
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [11, 17] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [13, 23] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [27, 29] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [74, 81] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 140] cc => I,
 Pos: [131, 138] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 141, 148] ccc => cc,
 Pos: [147, 152, 157] ccc => cc,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [166, 187] cc => I,
 Pos: [169, 173] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [175, 183] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [186, 197] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [219, 232] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [224, 233] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 64, Saving: 65

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.15625786781311035

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [11, 17] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [13, 23] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [27, 29] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [74, 81] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 140] cc => I,
 Pos: [131, 138] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 141, 148] ccc => cc,
 Pos: [147, 152, 157] ccc => cc,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [166, 187] cc => I,
 Pos: [169, 173] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [175, 183] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [186, 197] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [219, 232] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [224, 233] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 64, Saving: 65

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 7] cc => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 9] cc => I
Apply:  Pos: [10, 18] cc => I
Apply:  Pos: [11, 17] cc => I
Apply:  Pos: [12, 21] cc => I
Apply:  Pos: [13, 23] cc => I
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [16, 24] cc => I
Apply:  Pos: [22, 28] cc => I
Apply:  Pos: [27, 29] cc => I
Apply:  Pos: [41, 50] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [53, 59] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [64, 68, 75] ccc => cc
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [74, 81] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 98] cc => I
Apply:  Pos: [92, 100] cc => I
Apply:  Pos: [93, 97] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [110, 116] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 140] cc => I
Apply:  Pos: [131, 138] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 141, 148] ccc => cc
Apply:  Pos: [147, 152, 157] ccc => cc
Apply:  Pos: [156, 161, 167] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [166, 187] cc => I
Apply:  Pos: [169, 173] cc => I
Apply:  Pos: [171, 177] cc => I
Apply:  Pos: [175, 183] cc => I
Apply:  Pos: [180, 185] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [186, 197] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 207] cc => I
Apply:  Pos: [196, 204] cc => I
Apply:  Pos: [198, 210] cc => I
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [205, 214] cc => I
Apply:  Pos: [216, 218] cc => I
Apply:  Pos: [219, 232] cc => I
Apply:  Pos: [223, 230] cc => I
Apply:  Pos: [224, 233] cc => I
Apply:  Pos: [231, 246] cc => I
Apply:  Pos: [236, 244] cc => I
Apply:  Pos: [238, 251] cc => I
Apply:  Pos: [242, 253] cc => I
Apply:  Pos: [245, 257] cc => I
Apply:  Pos: [249, 259] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [252, 264] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 270] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [278, 286] cc => I
Apply:  Pos: [281, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [292, 307] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 4], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [10, 19], [9, 12], [13, 11], [6, 2], [17, 15], [3, 18], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [12, 3], [5, 11], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [7, 3], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [15, 13], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  6.265629768371582

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[86, 98]
[105, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 12, 17]
[30, 36, 54]
[99, 106, 108]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 15, 20]
[36, 54, 64]
[59, 68, 73]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[86, 98]
[105, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.468764543533325

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12, 17] ccc => cc, Pos: [11, 15, 20] ccc => cc, Pos: [30, 36, 54] ccc => cc, Pos: [36, 54, 64] ccc => cc, Pos: [59, 68, 73] ccc => cc, Pos: [86, 98] cc => I, Pos: [86, 98] cc => I, Pos: [99, 106, 108] ccc => cc, Pos: [105, 131] cc => I, Pos: [105, 131] cc => I]

Plan: 1
[Pos: [5, 12, 17] ccc => cc,
 Pos: [11, 15, 20] ccc => cc,
 Pos: [30, 36, 54] ccc => cc,
 Pos: [59, 68, 73] ccc => cc,
 Pos: [86, 98] cc => I,
 Pos: [99, 106, 108] ccc => cc,
 Pos: [105, 131] cc => I]
Change: 7, Saving: 7

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 12, 17] ccc => cc,
 Pos: [11, 15, 20] ccc => cc,
 Pos: [30, 36, 54] ccc => cc,
 Pos: [59, 68, 73] ccc => cc,
 Pos: [86, 98] cc => I,
 Pos: [99, 106, 108] ccc => cc,
 Pos: [105, 131] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 12, 17] ccc => cc
Apply:  Pos: [11, 15, 20] ccc => cc
Apply:  Pos: [30, 36, 54] ccc => cc
Apply:  Pos: [59, 68, 73] ccc => cc
Apply:  Pos: [86, 98] cc => I
Apply:  Pos: [99, 106, 108] ccc => cc
Apply:  Pos: [105, 131] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.484388589859009

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 109, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2501327991485596

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [98, 109, 126] ccc => cc]

Plan: 1
[Pos: [34, 61] cc => I, Pos: [98, 109, 126] ccc => cc]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015505552291870117

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [34, 61] cc => I, Pos: [98, 109, 126] ccc => cc]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [34, 61] cc => I
Apply:  Pos: [98, 109, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [5, 19], [0, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [5, 14], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [19, 7], [16, 9], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.2656383514404297

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.171847343444824

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [5, 14], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [19, 7], [10, 7], [16, 9], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.171847343444824

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [179] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 358

Reduced: 
 - size: 136 (43.17%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499117851257324

[0, 19], [1, 10], [14, 16], [15, 13], [8, 18], [2, 7], [4, 9], [0, 19], [14, 16], [4, 9], [8, 12], [15, 10], [17, 5], [3, 18], [1, 6], [19, 2], [11, 0], [15, 10], [8, 12], [16, 4], [1, 6], [17, 5], [19, 8], [3, 18], [11, 0], [6, 2], [13, 1], [15, 10], [19, 8], [15, 10], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [17, 15], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [8, 12], [1, 10], [13, 11], [17, 15], [10, 2], [8, 12], [15, 13], [11, 19], [4, 9], [17, 5], [7, 3], [10, 19], [15, 13], [9, 12], [5, 14], [11, 0], [6, 2], [16, 4], [7, 3], [19, 7], [0, 9], [14, 16], [15, 1], [8, 3], [12, 18], [5, 11], [10, 2], [10, 19], [16, 4], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [10, 19], [17, 15], [4, 0], [14, 13], [7, 3], [5, 11], [10, 2], [0, 8], [12, 18], [7, 3], [15, 13], [16, 4], [5, 14], [10, 19], [9, 12], [13, 11], [5, 14], [0, 8], [6, 2], [16, 4], [17, 15], [3, 18], [10, 2], [8, 18], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [2, 7], [16, 0], [8, 18], [14, 13], [12, 3], [5, 11], [2, 7], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [6, 2], [14, 11], [19, 7], [13, 10], [17, 5], [12, 18], [6, 2], [8, 3], [16, 9], [7, 3], [19, 8], [13, 1], [12, 18], [16, 9], [17, 5], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [7, 3], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 10], [16, 4], [12, 18], [0, 9], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [16, 4], [1, 10], [0, 9], [19, 8], [5, 11], [15, 1], [10, 2], [19, 8], [3, 18], [17, 5], [16, 0], [15, 1], [12, 18], [19, 8], [14, 11], [0, 9], [2, 7], [17, 5], [15, 10], [14, 11], [1, 6], [16, 4], [9, 12], [2, 7], [17, 5], [0, 8], [10, 2], [12, 18], [16, 9], [7, 3], [11, 19], [1, 6], [5, 13], [17, 15], [4, 0], [10, 2], [1, 6], [8, 3], [11, 19], [16, 4], [17, 15], [12, 18], [0, 9], [19, 2], [5, 13], [11, 0], [8, 18], [15, 1], [16, 4], [10, 7], [12, 3], [10, 2], [12, 3], [5, 11], [15, 13], [19, 7], [16, 9], [15, 10], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [15, 10], [8, 12], [5, 11], [4, 0], [14, 16], [10, 19], [17, 15], [8, 18], [16, 9], [5, 13], [4, 0], [1, 6], [7, 3], [0, 19], [17, 15], [5, 14], [8, 12], [1, 10], [19, 8], [4, 0], [13, 1], [16, 9], [12, 18], [7, 3], [10, 2], [5, 11], [11, 8], [5, 14], [19, 7], [4, 0], [13, 1], [10, 2], [12, 3], [11, 19], [12, 18], [13, 10], [15, 1], [0, 9], [14, 16], [2, 7], [11, 19], [15, 13], [1, 10], [9, 12], [14, 16], [8, 18], [4, 0], [7, 3], [5, 11], [0, 8], [6, 2], [16, 4], [10, 19], [12, 3], [13, 1], [17, 15], [5, 11], [2, 7], [1, 10], [0, 9], [8, 18], [14, 11], [15, 10], [8, 12], [17, 5], [16, 4], [0, 9], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [15, 10], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[147, 152, 157]
[156, 161, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 68, 75]
[135, 141, 148]
[168, 176, 181]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.1325812339782715

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 7] cc => I, Pos: [0, 7] cc => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 9] cc => I, Pos: [6, 9] cc => I, Pos: [10, 18] cc => I, Pos: [10, 18] cc => I, Pos: [11, 17] cc => I, Pos: [11, 17] cc => I, Pos: [12, 21] cc => I, Pos: [12, 21] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [16, 24] cc => I, Pos: [16, 24] cc => I, Pos: [17, 27] cc => I, Pos: [17, 27] cc => I, Pos: [22, 28] cc => I, Pos: [22, 28] cc => I, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [27, 29] cc => I, Pos: [27, 29] cc => I, Pos: [41, 50] cc => I, Pos: [41, 50] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [53, 59] cc => I, Pos: [53, 59] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [64, 68, 75] ccc => cc, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [74, 81] cc => I, Pos: [74, 81] cc => I, Pos: [81, 94] cc => I, Pos: [81, 94] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 98] cc => I, Pos: [88, 98] cc => I, Pos: [92, 100] cc => I, Pos: [92, 100] cc => I, Pos: [93, 97] cc => I, Pos: [93, 97] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [110, 116] cc => I, Pos: [110, 116] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 140] cc => I, Pos: [130, 140] cc => I, Pos: [131, 138] cc => I, Pos: [131, 138] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 141, 148] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [140, 146] cc => I, Pos: [140, 146] cc => I, Pos: [147, 152, 157] ccc => cc, Pos: [148, 154] cc => I, Pos: [148, 154] cc => I, Pos: [156, 161, 167] ccc => cc, Pos: [157, 166] cc => I, Pos: [157, 166] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [166, 187] cc => I, Pos: [166, 187] cc => I, Pos: [168, 176, 181] ccc => cc, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I, Pos: [171, 177] cc => I, Pos: [171, 177] cc => I, Pos: [173, 179] cc => I, Pos: [173, 179] cc => I, Pos: [175, 183] cc => I, Pos: [175, 183] cc => I, Pos: [180, 185] cc => I, Pos: [180, 185] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [186, 197] cc => I, Pos: [186, 197] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 207] cc => I, Pos: [193, 207] cc => I, Pos: [196, 204] cc => I, Pos: [196, 204] cc => I, Pos: [197, 202] cc => I, Pos: [197, 202] cc => I, Pos: [198, 210] cc => I, Pos: [198, 210] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [205, 214] cc => I, Pos: [205, 214] cc => I, Pos: [216, 218] cc => I, Pos: [216, 218] cc => I, Pos: [219, 232] cc => I, Pos: [219, 232] cc => I, Pos: [223, 230] cc => I, Pos: [223, 230] cc => I, Pos: [224, 233] cc => I, Pos: [224, 233] cc => I, Pos: [231, 246] cc => I, Pos: [231, 246] cc => I, Pos: [232, 255] cc => I, Pos: [232, 255] cc => I, Pos: [233, 240] cc => I, Pos: [233, 240] cc => I, Pos: [236, 244] cc => I, Pos: [236, 244] cc => I, Pos: [238, 251] cc => I, Pos: [238, 251] cc => I, Pos: [242, 253] cc => I, Pos: [242, 253] cc => I, Pos: [245, 257] cc => I, Pos: [245, 257] cc => I, Pos: [249, 259] cc => I, Pos: [249, 259] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [252, 264] cc => I, Pos: [252, 264] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [263, 270] cc => I, Pos: [263, 270] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [278, 286] cc => I, Pos: [278, 286] cc => I, Pos: [281, 295] cc => I, Pos: [281, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [292, 307] cc => I, Pos: [292, 307] cc => I]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [17, 27] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [23, 32] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [74, 81] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 140] cc => I,
 Pos: [138, 142] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [148, 154] cc => I,
 Pos: [147, 152, 157] ccc => cc,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [166, 187] cc => I,
 Pos: [169, 173] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [186, 197] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [219, 232] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [224, 233] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 63, Saving: 246

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 7] cc => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 9] cc => I
Apply:  Pos: [10, 18] cc => I
Apply:  Pos: [17, 27] cc => I
Apply:  Pos: [12, 21] cc => I
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [16, 24] cc => I
Apply:  Pos: [22, 28] cc => I
Apply:  Pos: [41, 50] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [53, 59] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [64, 68, 75] ccc => cc
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [74, 81] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 98] cc => I
Apply:  Pos: [92, 100] cc => I
Apply:  Pos: [93, 97] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [110, 116] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 140] cc => I
Apply:  Pos: [138, 142] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [148, 154] cc => I
Apply:  Pos: [147, 152, 157] ccc => cc
Apply:  Pos: [156, 161, 167] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [166, 187] cc => I
Apply:  Pos: [169, 173] cc => I
Apply:  Pos: [171, 177] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [180, 185] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [186, 197] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 207] cc => I
Apply:  Pos: [196, 204] cc => I
Apply:  Pos: [198, 210] cc => I
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [205, 214] cc => I
Apply:  Pos: [216, 218] cc => I
Apply:  Pos: [219, 232] cc => I
Apply:  Pos: [223, 230] cc => I
Apply:  Pos: [224, 233] cc => I
Apply:  Pos: [231, 246] cc => I
Apply:  Pos: [236, 244] cc => I
Apply:  Pos: [238, 251] cc => I
Apply:  Pos: [242, 253] cc => I
Apply:  Pos: [245, 257] cc => I
Apply:  Pos: [249, 259] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [252, 264] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 270] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [278, 286] cc => I
Apply:  Pos: [281, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [292, 307] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [15, 10], [3, 18], [19, 2], [16, 4], [6, 2], [13, 1], [15, 10], [16, 9], [5, 13], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [10, 19], [9, 12], [13, 11], [6, 2], [17, 15], [3, 18], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [12, 3], [5, 11], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [12, 18], [8, 3], [7, 3], [19, 8], [13, 1], [2, 7], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [5, 11], [10, 2], [3, 18], [17, 5], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [15, 13], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  6.148204803466797

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 10]
[106, 132]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[7, 14, 19]
[32, 38, 56]
[100, 107, 109]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 17, 22]
[38, 56, 66]
[61, 70, 75]
[77, 82, 85]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 10]
[106, 132]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4694664478302

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10] cc => I, Pos: [4, 10] cc => I, Pos: [7, 14, 19] ccc => cc, Pos: [13, 17, 22] ccc => cc, Pos: [32, 38, 56] ccc => cc, Pos: [38, 56, 66] ccc => cc, Pos: [61, 70, 75] ccc => cc, Pos: [77, 82, 85] ccc => cc, Pos: [100, 107, 109] ccc => cc, Pos: [106, 132] cc => I, Pos: [106, 132] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10] cc => I,
 Pos: [7, 14, 19] ccc => cc,
 Pos: [13, 17, 22] ccc => cc,
 Pos: [38, 56, 66] ccc => cc,
 Pos: [61, 70, 75] ccc => cc,
 Pos: [77, 82, 85] ccc => cc,
 Pos: [100, 107, 109] ccc => cc,
 Pos: [106, 132] cc => I]
Change: 8, Saving: 20

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10] cc => I
Apply:  Pos: [7, 14, 19] ccc => cc
Apply:  Pos: [13, 17, 22] ccc => cc
Apply:  Pos: [38, 56, 66] ccc => cc
Apply:  Pos: [61, 70, 75] ccc => cc
Apply:  Pos: [77, 82, 85] ccc => cc
Apply:  Pos: [100, 107, 109] ccc => cc
Apply:  Pos: [106, 132] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [10, 19], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [19, 7], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [19, 7], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [12, 18], [8, 3], [19, 8], [13, 1], [2, 7], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [10, 2], [3, 18], [17, 5], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.4694664478302

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[28, 34]
[52, 71]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 103, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[28, 34]
[52, 71]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2194900512695312

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [28, 34] cc => I, Pos: [28, 34] cc => I, Pos: [52, 71] cc => I, Pos: [52, 71] cc => I, Pos: [98, 103, 126] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [28, 34] cc => I, Pos: [52, 71] cc => I, Pos: [98, 103, 126] ccc => cc]
Change: 3, Saving: 10

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [28, 34] cc => I
Apply:  Pos: [52, 71] cc => I
Apply:  Pos: [98, 103, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [12, 18], [8, 3], [19, 8], [13, 1], [2, 7], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [5, 19], [0, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [5, 14], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [19, 7], [16, 9], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.2194900512695312

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.109633207321167

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [12, 18], [8, 3], [19, 8], [13, 1], [2, 7], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [5, 14], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [19, 7], [10, 7], [16, 9], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.109633207321167

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [177] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 354

Reduced: 
 - size: 138 (43.81%)
 - cycle: 276 (43.81%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499570846557617

[0, 19], [1, 10], [14, 16], [15, 13], [8, 18], [2, 7], [4, 9], [0, 19], [14, 16], [4, 9], [8, 12], [15, 10], [17, 5], [3, 18], [1, 6], [19, 2], [11, 0], [15, 10], [8, 12], [16, 4], [1, 6], [17, 5], [19, 8], [3, 18], [11, 0], [6, 2], [13, 1], [15, 10], [19, 8], [15, 10], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [17, 15], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [8, 12], [1, 10], [13, 11], [17, 15], [10, 2], [8, 12], [15, 13], [11, 19], [4, 9], [17, 5], [7, 3], [10, 19], [15, 13], [9, 12], [5, 14], [11, 0], [6, 2], [16, 4], [7, 3], [19, 7], [0, 9], [14, 16], [15, 1], [8, 3], [12, 18], [5, 11], [10, 2], [10, 19], [16, 4], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [10, 19], [17, 15], [4, 0], [14, 13], [7, 3], [5, 11], [10, 2], [0, 8], [12, 18], [7, 3], [15, 13], [16, 4], [5, 14], [10, 19], [9, 12], [13, 11], [5, 14], [0, 8], [6, 2], [16, 4], [17, 15], [3, 18], [10, 2], [8, 18], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [2, 7], [16, 0], [8, 18], [14, 13], [12, 3], [5, 11], [2, 7], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [6, 2], [14, 11], [19, 7], [13, 10], [17, 5], [12, 18], [6, 2], [8, 3], [16, 9], [7, 3], [19, 8], [13, 1], [12, 18], [16, 9], [17, 5], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [7, 3], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 10], [16, 4], [12, 18], [0, 9], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [16, 4], [1, 10], [0, 9], [19, 8], [5, 11], [15, 1], [10, 2], [19, 8], [3, 18], [17, 5], [16, 0], [15, 1], [12, 18], [19, 8], [14, 11], [0, 9], [2, 7], [17, 5], [15, 10], [14, 11], [1, 6], [16, 4], [9, 12], [2, 7], [17, 5], [0, 8], [10, 2], [12, 18], [16, 9], [7, 3], [11, 19], [1, 6], [5, 13], [17, 15], [4, 0], [10, 2], [1, 6], [8, 3], [11, 19], [16, 4], [17, 15], [12, 18], [0, 9], [19, 2], [5, 13], [11, 0], [8, 18], [15, 1], [16, 4], [10, 7], [12, 3], [10, 2], [12, 3], [5, 11], [15, 13], [19, 7], [16, 9], [15, 10], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [15, 10], [8, 12], [5, 11], [4, 0], [14, 16], [10, 19], [17, 15], [8, 18], [16, 9], [5, 13], [4, 0], [1, 6], [7, 3], [0, 19], [17, 15], [5, 14], [8, 12], [1, 10], [19, 8], [4, 0], [13, 1], [16, 9], [12, 18], [7, 3], [10, 2], [5, 11], [11, 8], [5, 14], [19, 7], [4, 0], [13, 1], [10, 2], [12, 3], [11, 19], [12, 18], [13, 10], [15, 1], [0, 9], [14, 16], [2, 7], [11, 19], [15, 13], [1, 10], [9, 12], [14, 16], [8, 18], [4, 0], [7, 3], [5, 11], [0, 8], [6, 2], [16, 4], [10, 19], [12, 3], [13, 1], [17, 15], [5, 11], [2, 7], [1, 10], [0, 9], [8, 18], [14, 11], [15, 10], [8, 12], [17, 5], [16, 4], [0, 9], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [15, 10], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[147, 152, 157]
[156, 161, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 68, 75]
[135, 141, 148]
[168, 176, 181]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.191262483596802

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 7] cc => I, Pos: [0, 7] cc => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 9] cc => I, Pos: [6, 9] cc => I, Pos: [10, 18] cc => I, Pos: [10, 18] cc => I, Pos: [11, 17] cc => I, Pos: [11, 17] cc => I, Pos: [12, 21] cc => I, Pos: [12, 21] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [16, 24] cc => I, Pos: [16, 24] cc => I, Pos: [17, 27] cc => I, Pos: [17, 27] cc => I, Pos: [22, 28] cc => I, Pos: [22, 28] cc => I, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [27, 29] cc => I, Pos: [27, 29] cc => I, Pos: [41, 50] cc => I, Pos: [41, 50] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [53, 59] cc => I, Pos: [53, 59] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [64, 68, 75] ccc => cc, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [74, 81] cc => I, Pos: [74, 81] cc => I, Pos: [81, 94] cc => I, Pos: [81, 94] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 98] cc => I, Pos: [88, 98] cc => I, Pos: [92, 100] cc => I, Pos: [92, 100] cc => I, Pos: [93, 97] cc => I, Pos: [93, 97] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [110, 116] cc => I, Pos: [110, 116] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 140] cc => I, Pos: [130, 140] cc => I, Pos: [131, 138] cc => I, Pos: [131, 138] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 141, 148] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [140, 146] cc => I, Pos: [140, 146] cc => I, Pos: [147, 152, 157] ccc => cc, Pos: [148, 154] cc => I, Pos: [148, 154] cc => I, Pos: [156, 161, 167] ccc => cc, Pos: [157, 166] cc => I, Pos: [157, 166] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [166, 187] cc => I, Pos: [166, 187] cc => I, Pos: [168, 176, 181] ccc => cc, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I, Pos: [171, 177] cc => I, Pos: [171, 177] cc => I, Pos: [173, 179] cc => I, Pos: [173, 179] cc => I, Pos: [175, 183] cc => I, Pos: [175, 183] cc => I, Pos: [180, 185] cc => I, Pos: [180, 185] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [186, 197] cc => I, Pos: [186, 197] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 207] cc => I, Pos: [193, 207] cc => I, Pos: [196, 204] cc => I, Pos: [196, 204] cc => I, Pos: [197, 202] cc => I, Pos: [197, 202] cc => I, Pos: [198, 210] cc => I, Pos: [198, 210] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [205, 214] cc => I, Pos: [205, 214] cc => I, Pos: [216, 218] cc => I, Pos: [216, 218] cc => I, Pos: [219, 232] cc => I, Pos: [219, 232] cc => I, Pos: [223, 230] cc => I, Pos: [223, 230] cc => I, Pos: [224, 233] cc => I, Pos: [224, 233] cc => I, Pos: [231, 246] cc => I, Pos: [231, 246] cc => I, Pos: [232, 255] cc => I, Pos: [232, 255] cc => I, Pos: [233, 240] cc => I, Pos: [233, 240] cc => I, Pos: [236, 244] cc => I, Pos: [236, 244] cc => I, Pos: [238, 251] cc => I, Pos: [238, 251] cc => I, Pos: [242, 253] cc => I, Pos: [242, 253] cc => I, Pos: [245, 257] cc => I, Pos: [245, 257] cc => I, Pos: [249, 259] cc => I, Pos: [249, 259] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [252, 264] cc => I, Pos: [252, 264] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [263, 270] cc => I, Pos: [263, 270] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [278, 286] cc => I, Pos: [278, 286] cc => I, Pos: [281, 295] cc => I, Pos: [281, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [292, 307] cc => I, Pos: [292, 307] cc => I]

--------End Timer [Generate Plans]:  0.15622568130493164

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [11, 17] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [23, 32] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [27, 29] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [74, 81] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 140] cc => I,
 Pos: [131, 138] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [148, 154] cc => I,
 Pos: [157, 166] cc => I,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [173, 179] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [197, 202] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [219, 232] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [233, 240] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 63, Saving: 64

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 7] cc => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 9] cc => I
Apply:  Pos: [10, 18] cc => I
Apply:  Pos: [11, 17] cc => I
Apply:  Pos: [12, 21] cc => I
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [16, 24] cc => I
Apply:  Pos: [22, 28] cc => I
Apply:  Pos: [27, 29] cc => I
Apply:  Pos: [41, 50] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [53, 59] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [64, 68, 75] ccc => cc
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [74, 81] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 98] cc => I
Apply:  Pos: [92, 100] cc => I
Apply:  Pos: [93, 97] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [110, 116] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 140] cc => I
Apply:  Pos: [131, 138] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [148, 154] cc => I
Apply:  Pos: [157, 166] cc => I
Apply:  Pos: [156, 161, 167] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [173, 179] cc => I
Apply:  Pos: [171, 177] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [180, 185] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [197, 202] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 207] cc => I
Apply:  Pos: [196, 204] cc => I
Apply:  Pos: [198, 210] cc => I
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [205, 214] cc => I
Apply:  Pos: [216, 218] cc => I
Apply:  Pos: [219, 232] cc => I
Apply:  Pos: [223, 230] cc => I
Apply:  Pos: [233, 240] cc => I
Apply:  Pos: [231, 246] cc => I
Apply:  Pos: [236, 244] cc => I
Apply:  Pos: [238, 251] cc => I
Apply:  Pos: [242, 253] cc => I
Apply:  Pos: [245, 257] cc => I
Apply:  Pos: [249, 259] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [252, 264] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 270] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [278, 286] cc => I
Apply:  Pos: [281, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [292, 307] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 4], [6, 2], [13, 1], [16, 9], [5, 13], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [10, 19], [9, 12], [13, 11], [6, 2], [17, 15], [3, 18], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [12, 3], [5, 11], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [7, 3], [19, 8], [13, 1], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [19, 8], [5, 11], [10, 2], [3, 18], [17, 5], [16, 0], [12, 18], [0, 9], [15, 10], [1, 6], [16, 4], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [15, 13], [19, 7], [16, 9], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  6.347488164901733

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[104, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 12, 17]
[30, 36, 54]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 15, 20]
[36, 54, 64]
[59, 68, 73]
[75, 80, 82]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[104, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4540538787841797

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 12, 17] ccc => cc, Pos: [11, 15, 20] ccc => cc, Pos: [30, 36, 54] ccc => cc, Pos: [36, 54, 64] ccc => cc, Pos: [59, 68, 73] ccc => cc, Pos: [75, 80, 82] ccc => cc, Pos: [104, 131] cc => I, Pos: [104, 131] cc => I]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 12, 17] ccc => cc,
 Pos: [11, 15, 20] ccc => cc,
 Pos: [30, 36, 54] ccc => cc,
 Pos: [59, 68, 73] ccc => cc,
 Pos: [75, 80, 82] ccc => cc,
 Pos: [104, 131] cc => I]
Change: 6, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 12, 17] ccc => cc
Apply:  Pos: [11, 15, 20] ccc => cc
Apply:  Pos: [30, 36, 54] ccc => cc
Apply:  Pos: [59, 68, 73] ccc => cc
Apply:  Pos: [75, 80, 82] ccc => cc
Apply:  Pos: [104, 131] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [19, 7], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [8, 3], [19, 8], [13, 1], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [19, 8], [5, 11], [10, 2], [3, 18], [17, 5], [16, 0], [12, 18], [0, 9], [15, 10], [1, 6], [16, 4], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [19, 7], [16, 9], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.469677448272705

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]
[61, 71]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]
[61, 71]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.297307014465332

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [61, 71] cc => I, Pos: [61, 71] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [61, 71] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [61, 71] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [8, 3], [19, 8], [13, 1], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [19, 8], [5, 11], [10, 2], [3, 18], [17, 5], [16, 0], [12, 18], [0, 9], [15, 10], [1, 6], [16, 4], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [19, 7], [16, 9], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.297307014465332

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2823989391326904

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [8, 3], [19, 8], [13, 1], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [19, 8], [5, 11], [10, 2], [3, 18], [17, 5], [16, 0], [12, 18], [0, 9], [15, 10], [1, 6], [16, 4], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [19, 7], [10, 7], [16, 9], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.2823989391326904

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 133 (42.22%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061522483825684

[0, 19], [1, 10], [14, 16], [15, 13], [8, 18], [2, 7], [4, 9], [0, 19], [14, 16], [4, 9], [8, 12], [15, 10], [17, 5], [3, 18], [1, 6], [19, 2], [11, 0], [15, 10], [8, 12], [16, 4], [1, 6], [17, 5], [19, 8], [3, 18], [11, 0], [6, 2], [13, 1], [15, 10], [19, 8], [15, 10], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [17, 15], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [8, 12], [1, 10], [13, 11], [17, 15], [10, 2], [8, 12], [15, 13], [11, 19], [4, 9], [17, 5], [7, 3], [10, 19], [15, 13], [9, 12], [5, 14], [11, 0], [6, 2], [16, 4], [7, 3], [19, 7], [0, 9], [14, 16], [15, 1], [8, 3], [12, 18], [5, 11], [10, 2], [10, 19], [16, 4], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [10, 19], [17, 15], [4, 0], [14, 13], [7, 3], [5, 11], [10, 2], [0, 8], [12, 18], [7, 3], [15, 13], [16, 4], [5, 14], [10, 19], [9, 12], [13, 11], [5, 14], [0, 8], [6, 2], [16, 4], [17, 15], [3, 18], [10, 2], [8, 18], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [2, 7], [16, 0], [8, 18], [14, 13], [12, 3], [5, 11], [2, 7], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [6, 2], [14, 11], [19, 7], [13, 10], [17, 5], [12, 18], [6, 2], [8, 3], [16, 9], [7, 3], [19, 8], [13, 1], [12, 18], [16, 9], [17, 5], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [7, 3], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 10], [16, 4], [12, 18], [0, 9], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [16, 4], [1, 10], [0, 9], [19, 8], [5, 11], [15, 1], [10, 2], [19, 8], [3, 18], [17, 5], [16, 0], [15, 1], [12, 18], [19, 8], [14, 11], [0, 9], [2, 7], [17, 5], [15, 10], [14, 11], [1, 6], [16, 4], [9, 12], [2, 7], [17, 5], [0, 8], [10, 2], [12, 18], [16, 9], [7, 3], [11, 19], [1, 6], [5, 13], [17, 15], [4, 0], [10, 2], [1, 6], [8, 3], [11, 19], [16, 4], [17, 15], [12, 18], [0, 9], [19, 2], [5, 13], [11, 0], [8, 18], [15, 1], [16, 4], [10, 7], [12, 3], [10, 2], [12, 3], [5, 11], [15, 13], [19, 7], [16, 9], [15, 10], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [15, 10], [8, 12], [5, 11], [4, 0], [14, 16], [10, 19], [17, 15], [8, 18], [16, 9], [5, 13], [4, 0], [1, 6], [7, 3], [0, 19], [17, 15], [5, 14], [8, 12], [1, 10], [19, 8], [4, 0], [13, 1], [16, 9], [12, 18], [7, 3], [10, 2], [5, 11], [11, 8], [5, 14], [19, 7], [4, 0], [13, 1], [10, 2], [12, 3], [11, 19], [12, 18], [13, 10], [15, 1], [0, 9], [14, 16], [2, 7], [11, 19], [15, 13], [1, 10], [9, 12], [14, 16], [8, 18], [4, 0], [7, 3], [5, 11], [0, 8], [6, 2], [16, 4], [10, 19], [12, 3], [13, 1], [17, 15], [5, 11], [2, 7], [1, 10], [0, 9], [8, 18], [14, 11], [15, 10], [8, 12], [17, 5], [16, 4], [0, 9], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [15, 10], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[147, 152, 157]
[156, 161, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 68, 75]
[135, 141, 148]
[168, 176, 181]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.187546968460083

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 7] cc => I, Pos: [0, 7] cc => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 9] cc => I, Pos: [6, 9] cc => I, Pos: [10, 18] cc => I, Pos: [10, 18] cc => I, Pos: [11, 17] cc => I, Pos: [11, 17] cc => I, Pos: [12, 21] cc => I, Pos: [12, 21] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [16, 24] cc => I, Pos: [16, 24] cc => I, Pos: [17, 27] cc => I, Pos: [17, 27] cc => I, Pos: [22, 28] cc => I, Pos: [22, 28] cc => I, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [27, 29] cc => I, Pos: [27, 29] cc => I, Pos: [41, 50] cc => I, Pos: [41, 50] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [53, 59] cc => I, Pos: [53, 59] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [64, 68, 75] ccc => cc, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [74, 81] cc => I, Pos: [74, 81] cc => I, Pos: [81, 94] cc => I, Pos: [81, 94] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 98] cc => I, Pos: [88, 98] cc => I, Pos: [92, 100] cc => I, Pos: [92, 100] cc => I, Pos: [93, 97] cc => I, Pos: [93, 97] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [110, 116] cc => I, Pos: [110, 116] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 140] cc => I, Pos: [130, 140] cc => I, Pos: [131, 138] cc => I, Pos: [131, 138] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 141, 148] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [140, 146] cc => I, Pos: [140, 146] cc => I, Pos: [147, 152, 157] ccc => cc, Pos: [148, 154] cc => I, Pos: [148, 154] cc => I, Pos: [156, 161, 167] ccc => cc, Pos: [157, 166] cc => I, Pos: [157, 166] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [166, 187] cc => I, Pos: [166, 187] cc => I, Pos: [168, 176, 181] ccc => cc, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I, Pos: [171, 177] cc => I, Pos: [171, 177] cc => I, Pos: [173, 179] cc => I, Pos: [173, 179] cc => I, Pos: [175, 183] cc => I, Pos: [175, 183] cc => I, Pos: [180, 185] cc => I, Pos: [180, 185] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [186, 197] cc => I, Pos: [186, 197] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 207] cc => I, Pos: [193, 207] cc => I, Pos: [196, 204] cc => I, Pos: [196, 204] cc => I, Pos: [197, 202] cc => I, Pos: [197, 202] cc => I, Pos: [198, 210] cc => I, Pos: [198, 210] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [205, 214] cc => I, Pos: [205, 214] cc => I, Pos: [216, 218] cc => I, Pos: [216, 218] cc => I, Pos: [219, 232] cc => I, Pos: [219, 232] cc => I, Pos: [223, 230] cc => I, Pos: [223, 230] cc => I, Pos: [224, 233] cc => I, Pos: [224, 233] cc => I, Pos: [231, 246] cc => I, Pos: [231, 246] cc => I, Pos: [232, 255] cc => I, Pos: [232, 255] cc => I, Pos: [233, 240] cc => I, Pos: [233, 240] cc => I, Pos: [236, 244] cc => I, Pos: [236, 244] cc => I, Pos: [238, 251] cc => I, Pos: [238, 251] cc => I, Pos: [242, 253] cc => I, Pos: [242, 253] cc => I, Pos: [245, 257] cc => I, Pos: [245, 257] cc => I, Pos: [249, 259] cc => I, Pos: [249, 259] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [252, 264] cc => I, Pos: [252, 264] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [263, 270] cc => I, Pos: [263, 270] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [278, 286] cc => I, Pos: [278, 286] cc => I, Pos: [281, 295] cc => I, Pos: [281, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [292, 307] cc => I, Pos: [292, 307] cc => I]

--------End Timer [Generate Plans]:  0.15661144256591797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [11, 17] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [13, 23] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [27, 29] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [74, 81] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [140, 146] cc => I,
 Pos: [131, 138] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 141, 148] ccc => cc,
 Pos: [157, 166] cc => I,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [169, 173] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [197, 202] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [219, 232] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [224, 233] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 63, Saving: 64

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 7] cc => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 9] cc => I
Apply:  Pos: [10, 18] cc => I
Apply:  Pos: [11, 17] cc => I
Apply:  Pos: [12, 21] cc => I
Apply:  Pos: [13, 23] cc => I
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [16, 24] cc => I
Apply:  Pos: [22, 28] cc => I
Apply:  Pos: [27, 29] cc => I
Apply:  Pos: [41, 50] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [53, 59] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [64, 68, 75] ccc => cc
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [74, 81] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 98] cc => I
Apply:  Pos: [92, 100] cc => I
Apply:  Pos: [93, 97] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [110, 116] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [140, 146] cc => I
Apply:  Pos: [131, 138] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 141, 148] ccc => cc
Apply:  Pos: [157, 166] cc => I
Apply:  Pos: [156, 161, 167] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [169, 173] cc => I
Apply:  Pos: [171, 177] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [180, 185] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [197, 202] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 207] cc => I
Apply:  Pos: [196, 204] cc => I
Apply:  Pos: [198, 210] cc => I
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [205, 214] cc => I
Apply:  Pos: [216, 218] cc => I
Apply:  Pos: [219, 232] cc => I
Apply:  Pos: [223, 230] cc => I
Apply:  Pos: [224, 233] cc => I
Apply:  Pos: [231, 246] cc => I
Apply:  Pos: [236, 244] cc => I
Apply:  Pos: [238, 251] cc => I
Apply:  Pos: [242, 253] cc => I
Apply:  Pos: [245, 257] cc => I
Apply:  Pos: [249, 259] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [252, 264] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 270] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [278, 286] cc => I
Apply:  Pos: [281, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [292, 307] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 4], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [10, 19], [9, 12], [13, 11], [6, 2], [17, 15], [3, 18], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [12, 3], [5, 11], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [17, 5], [8, 3], [2, 7], [19, 8], [13, 1], [7, 3], [12, 18], [15, 1], [11, 19], [0, 8], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [5, 11], [10, 2], [3, 18], [17, 5], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [1, 6], [16, 4], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [15, 13], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  6.344158411026001

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 98]
[105, 132]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 12, 17]
[30, 36, 54]
[99, 106, 108]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 15, 20]
[36, 54, 64]
[59, 68, 73]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[87, 98]
[105, 132]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.468628406524658

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12, 17] ccc => cc, Pos: [11, 15, 20] ccc => cc, Pos: [30, 36, 54] ccc => cc, Pos: [36, 54, 64] ccc => cc, Pos: [59, 68, 73] ccc => cc, Pos: [87, 98] cc => I, Pos: [87, 98] cc => I, Pos: [99, 106, 108] ccc => cc, Pos: [105, 132] cc => I, Pos: [105, 132] cc => I]

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 12, 17] ccc => cc,
 Pos: [11, 15, 20] ccc => cc,
 Pos: [30, 36, 54] ccc => cc,
 Pos: [59, 68, 73] ccc => cc,
 Pos: [87, 98] cc => I,
 Pos: [99, 106, 108] ccc => cc,
 Pos: [105, 132] cc => I]
Change: 7, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 12, 17] ccc => cc
Apply:  Pos: [11, 15, 20] ccc => cc
Apply:  Pos: [30, 36, 54] ccc => cc
Apply:  Pos: [59, 68, 73] ccc => cc
Apply:  Pos: [87, 98] cc => I
Apply:  Pos: [99, 106, 108] ccc => cc
Apply:  Pos: [105, 132] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [17, 5], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [10, 2], [3, 18], [17, 5], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [1, 6], [16, 4], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.4842529296875

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 103, 127]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.250051975250244

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [98, 103, 127] ccc => cc]

--------End Timer [Generate Plans]:  0.01562666893005371

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [34, 61] cc => I, Pos: [98, 103, 127] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [34, 61] cc => I
Apply:  Pos: [98, 103, 127] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [17, 5], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [5, 19], [0, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [5, 14], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [1, 6], [16, 4], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [19, 7], [16, 9], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.265678644180298

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.20314621925354

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [17, 5], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [5, 14], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [1, 6], [16, 4], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [19, 7], [10, 7], [16, 9], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.20314621925354

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 360

Reduced: 
 - size: 135 (42.86%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12497782707214355

[0, 19], [1, 10], [14, 16], [15, 13], [8, 18], [2, 7], [4, 9], [0, 19], [14, 16], [4, 9], [8, 12], [15, 10], [17, 5], [3, 18], [1, 6], [19, 2], [11, 0], [15, 10], [8, 12], [16, 4], [1, 6], [17, 5], [19, 8], [3, 18], [11, 0], [6, 2], [13, 1], [15, 10], [19, 8], [15, 10], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [17, 15], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [8, 12], [1, 10], [13, 11], [17, 15], [10, 2], [8, 12], [15, 13], [11, 19], [4, 9], [17, 5], [7, 3], [10, 19], [15, 13], [9, 12], [5, 14], [11, 0], [6, 2], [16, 4], [7, 3], [19, 7], [0, 9], [14, 16], [15, 1], [8, 3], [12, 18], [5, 11], [10, 2], [10, 19], [16, 4], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [10, 19], [17, 15], [4, 0], [14, 13], [7, 3], [5, 11], [10, 2], [0, 8], [12, 18], [7, 3], [15, 13], [16, 4], [5, 14], [10, 19], [9, 12], [13, 11], [5, 14], [0, 8], [6, 2], [16, 4], [17, 15], [3, 18], [10, 2], [8, 18], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [2, 7], [16, 0], [8, 18], [14, 13], [12, 3], [5, 11], [2, 7], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [6, 2], [14, 11], [19, 7], [13, 10], [17, 5], [12, 18], [6, 2], [8, 3], [16, 9], [7, 3], [19, 8], [13, 1], [12, 18], [16, 9], [17, 5], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [7, 3], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 10], [16, 4], [12, 18], [0, 9], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [16, 4], [1, 10], [0, 9], [19, 8], [5, 11], [15, 1], [10, 2], [19, 8], [3, 18], [17, 5], [16, 0], [15, 1], [12, 18], [19, 8], [14, 11], [0, 9], [2, 7], [17, 5], [15, 10], [14, 11], [1, 6], [16, 4], [9, 12], [2, 7], [17, 5], [0, 8], [10, 2], [12, 18], [16, 9], [7, 3], [11, 19], [1, 6], [5, 13], [17, 15], [4, 0], [10, 2], [1, 6], [8, 3], [11, 19], [16, 4], [17, 15], [12, 18], [0, 9], [19, 2], [5, 13], [11, 0], [8, 18], [15, 1], [16, 4], [10, 7], [12, 3], [10, 2], [12, 3], [5, 11], [15, 13], [19, 7], [16, 9], [15, 10], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [15, 10], [8, 12], [5, 11], [4, 0], [14, 16], [10, 19], [17, 15], [8, 18], [16, 9], [5, 13], [4, 0], [1, 6], [7, 3], [0, 19], [17, 15], [5, 14], [8, 12], [1, 10], [19, 8], [4, 0], [13, 1], [16, 9], [12, 18], [7, 3], [10, 2], [5, 11], [11, 8], [5, 14], [19, 7], [4, 0], [13, 1], [10, 2], [12, 3], [11, 19], [12, 18], [13, 10], [15, 1], [0, 9], [14, 16], [2, 7], [11, 19], [15, 13], [1, 10], [9, 12], [14, 16], [8, 18], [4, 0], [7, 3], [5, 11], [0, 8], [6, 2], [16, 4], [10, 19], [12, 3], [13, 1], [17, 15], [5, 11], [2, 7], [1, 10], [0, 9], [8, 18], [14, 11], [15, 10], [8, 12], [17, 5], [16, 4], [0, 9], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [15, 10], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[147, 152, 157]
[156, 161, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 68, 75]
[135, 141, 148]
[168, 176, 181]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.140965700149536

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 7] cc => I, Pos: [0, 7] cc => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 9] cc => I, Pos: [6, 9] cc => I, Pos: [10, 18] cc => I, Pos: [10, 18] cc => I, Pos: [11, 17] cc => I, Pos: [11, 17] cc => I, Pos: [12, 21] cc => I, Pos: [12, 21] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [16, 24] cc => I, Pos: [16, 24] cc => I, Pos: [17, 27] cc => I, Pos: [17, 27] cc => I, Pos: [22, 28] cc => I, Pos: [22, 28] cc => I, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [27, 29] cc => I, Pos: [27, 29] cc => I, Pos: [41, 50] cc => I, Pos: [41, 50] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [53, 59] cc => I, Pos: [53, 59] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [64, 68, 75] ccc => cc, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [74, 81] cc => I, Pos: [74, 81] cc => I, Pos: [81, 94] cc => I, Pos: [81, 94] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 98] cc => I, Pos: [88, 98] cc => I, Pos: [92, 100] cc => I, Pos: [92, 100] cc => I, Pos: [93, 97] cc => I, Pos: [93, 97] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [110, 116] cc => I, Pos: [110, 116] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 140] cc => I, Pos: [130, 140] cc => I, Pos: [131, 138] cc => I, Pos: [131, 138] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 141, 148] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [140, 146] cc => I, Pos: [140, 146] cc => I, Pos: [147, 152, 157] ccc => cc, Pos: [148, 154] cc => I, Pos: [148, 154] cc => I, Pos: [156, 161, 167] ccc => cc, Pos: [157, 166] cc => I, Pos: [157, 166] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [166, 187] cc => I, Pos: [166, 187] cc => I, Pos: [168, 176, 181] ccc => cc, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I, Pos: [171, 177] cc => I, Pos: [171, 177] cc => I, Pos: [173, 179] cc => I, Pos: [173, 179] cc => I, Pos: [175, 183] cc => I, Pos: [175, 183] cc => I, Pos: [180, 185] cc => I, Pos: [180, 185] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [186, 197] cc => I, Pos: [186, 197] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 207] cc => I, Pos: [193, 207] cc => I, Pos: [196, 204] cc => I, Pos: [196, 204] cc => I, Pos: [197, 202] cc => I, Pos: [197, 202] cc => I, Pos: [198, 210] cc => I, Pos: [198, 210] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [205, 214] cc => I, Pos: [205, 214] cc => I, Pos: [216, 218] cc => I, Pos: [216, 218] cc => I, Pos: [219, 232] cc => I, Pos: [219, 232] cc => I, Pos: [223, 230] cc => I, Pos: [223, 230] cc => I, Pos: [224, 233] cc => I, Pos: [224, 233] cc => I, Pos: [231, 246] cc => I, Pos: [231, 246] cc => I, Pos: [232, 255] cc => I, Pos: [232, 255] cc => I, Pos: [233, 240] cc => I, Pos: [233, 240] cc => I, Pos: [236, 244] cc => I, Pos: [236, 244] cc => I, Pos: [238, 251] cc => I, Pos: [238, 251] cc => I, Pos: [242, 253] cc => I, Pos: [242, 253] cc => I, Pos: [245, 257] cc => I, Pos: [245, 257] cc => I, Pos: [249, 259] cc => I, Pos: [249, 259] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [252, 264] cc => I, Pos: [252, 264] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [263, 270] cc => I, Pos: [263, 270] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [278, 286] cc => I, Pos: [278, 286] cc => I, Pos: [281, 295] cc => I, Pos: [281, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [292, 307] cc => I, Pos: [292, 307] cc => I]

--------End Timer [Generate Plans]:  0.15624475479125977

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [17, 27] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [23, 32] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [74, 81] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 140] cc => I,
 Pos: [131, 138] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 141, 148] ccc => cc,
 Pos: [157, 166] cc => I,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [169, 173] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [183, 190] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [197, 202] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [219, 232] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [233, 240] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 62, Saving: 63

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 7] cc => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 9] cc => I
Apply:  Pos: [10, 18] cc => I
Apply:  Pos: [17, 27] cc => I
Apply:  Pos: [12, 21] cc => I
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [16, 24] cc => I
Apply:  Pos: [22, 28] cc => I
Apply:  Pos: [41, 50] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [53, 59] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [64, 68, 75] ccc => cc
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [74, 81] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 98] cc => I
Apply:  Pos: [92, 100] cc => I
Apply:  Pos: [93, 97] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [110, 116] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 140] cc => I
Apply:  Pos: [131, 138] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 141, 148] ccc => cc
Apply:  Pos: [157, 166] cc => I
Apply:  Pos: [156, 161, 167] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [169, 173] cc => I
Apply:  Pos: [171, 177] cc => I
Apply:  Pos: [183, 190] cc => I
Apply:  Pos: [180, 185] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [197, 202] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 207] cc => I
Apply:  Pos: [196, 204] cc => I
Apply:  Pos: [198, 210] cc => I
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [205, 214] cc => I
Apply:  Pos: [216, 218] cc => I
Apply:  Pos: [219, 232] cc => I
Apply:  Pos: [223, 230] cc => I
Apply:  Pos: [233, 240] cc => I
Apply:  Pos: [231, 246] cc => I
Apply:  Pos: [236, 244] cc => I
Apply:  Pos: [238, 251] cc => I
Apply:  Pos: [242, 253] cc => I
Apply:  Pos: [245, 257] cc => I
Apply:  Pos: [249, 259] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [252, 264] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 270] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [278, 286] cc => I
Apply:  Pos: [281, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [292, 307] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [15, 10], [3, 18], [19, 2], [16, 4], [6, 2], [13, 1], [15, 10], [16, 9], [5, 13], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [10, 19], [9, 12], [13, 11], [6, 2], [17, 15], [3, 18], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [12, 3], [5, 11], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [7, 3], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [5, 11], [10, 2], [3, 18], [17, 5], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [1, 6], [16, 4], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [15, 13], [19, 7], [16, 9], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  6.297210454940796

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 10]
[88, 100]
[107, 134]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[7, 14, 19]
[32, 38, 56]
[101, 108, 110]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[13, 17, 22]
[38, 56, 66]
[61, 70, 75]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 10]
[88, 100]
[107, 134]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.453472852706909

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 10] cc => I, Pos: [4, 10] cc => I, Pos: [7, 14, 19] ccc => cc, Pos: [13, 17, 22] ccc => cc, Pos: [32, 38, 56] ccc => cc, Pos: [38, 56, 66] ccc => cc, Pos: [61, 70, 75] ccc => cc, Pos: [88, 100] cc => I, Pos: [88, 100] cc => I, Pos: [101, 108, 110] ccc => cc, Pos: [107, 134] cc => I, Pos: [107, 134] cc => I]

--------End Timer [Generate Plans]:  0.0312347412109375

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 10] cc => I,
 Pos: [7, 14, 19] ccc => cc,
 Pos: [13, 17, 22] ccc => cc,
 Pos: [38, 56, 66] ccc => cc,
 Pos: [61, 70, 75] ccc => cc,
 Pos: [88, 100] cc => I,
 Pos: [101, 108, 110] ccc => cc,
 Pos: [107, 134] cc => I]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 10] cc => I
Apply:  Pos: [7, 14, 19] ccc => cc
Apply:  Pos: [13, 17, 22] ccc => cc
Apply:  Pos: [38, 56, 66] ccc => cc
Apply:  Pos: [61, 70, 75] ccc => cc
Apply:  Pos: [88, 100] cc => I
Apply:  Pos: [101, 108, 110] ccc => cc
Apply:  Pos: [107, 134] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [10, 19], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [19, 7], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [10, 2], [3, 18], [17, 5], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [1, 6], [16, 4], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [19, 7], [16, 9], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.4847075939178467

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[28, 34]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 103, 128]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[28, 34]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2034788131713867

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [28, 34] cc => I, Pos: [28, 34] cc => I, Pos: [98, 103, 128] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [28, 34] cc => I, Pos: [98, 103, 128] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [28, 34] cc => I
Apply:  Pos: [98, 103, 128] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [19, 7], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [5, 19], [0, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [5, 14], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [1, 6], [16, 4], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [19, 7], [16, 9], [4, 0], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.2034788131713867

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.172032356262207

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [19, 7], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [5, 14], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [1, 6], [16, 4], [9, 12], [0, 8], [16, 9], [7, 3], [4, 0], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [19, 7], [10, 7], [16, 9], [4, 0], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.172032356262207

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 360

Reduced: 
 - size: 135 (42.86%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1249854564666748

[0, 19], [1, 10], [14, 16], [15, 13], [8, 18], [2, 7], [4, 9], [0, 19], [14, 16], [4, 9], [8, 12], [15, 10], [17, 5], [3, 18], [1, 6], [19, 2], [11, 0], [15, 10], [8, 12], [16, 4], [1, 6], [17, 5], [19, 8], [3, 18], [11, 0], [6, 2], [13, 1], [15, 10], [19, 8], [15, 10], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [17, 15], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [8, 12], [1, 10], [13, 11], [17, 15], [10, 2], [8, 12], [15, 13], [11, 19], [4, 9], [17, 5], [7, 3], [10, 19], [15, 13], [9, 12], [5, 14], [11, 0], [6, 2], [16, 4], [7, 3], [19, 7], [0, 9], [14, 16], [15, 1], [8, 3], [12, 18], [5, 11], [10, 2], [10, 19], [16, 4], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [10, 19], [17, 15], [4, 0], [14, 13], [7, 3], [5, 11], [10, 2], [0, 8], [12, 18], [7, 3], [15, 13], [16, 4], [5, 14], [10, 19], [9, 12], [13, 11], [5, 14], [0, 8], [6, 2], [16, 4], [17, 15], [3, 18], [10, 2], [8, 18], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [2, 7], [16, 0], [8, 18], [14, 13], [12, 3], [5, 11], [2, 7], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [6, 2], [14, 11], [19, 7], [13, 10], [17, 5], [12, 18], [6, 2], [8, 3], [16, 9], [7, 3], [19, 8], [13, 1], [12, 18], [16, 9], [17, 5], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [7, 3], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 10], [16, 4], [12, 18], [0, 9], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [16, 4], [1, 10], [0, 9], [19, 8], [5, 11], [15, 1], [10, 2], [19, 8], [3, 18], [17, 5], [16, 0], [15, 1], [12, 18], [19, 8], [14, 11], [0, 9], [2, 7], [17, 5], [15, 10], [14, 11], [1, 6], [16, 4], [9, 12], [2, 7], [17, 5], [0, 8], [10, 2], [12, 18], [16, 9], [7, 3], [11, 19], [1, 6], [5, 13], [17, 15], [4, 0], [10, 2], [1, 6], [8, 3], [11, 19], [16, 4], [17, 15], [12, 18], [0, 9], [19, 2], [5, 13], [11, 0], [8, 18], [15, 1], [16, 4], [10, 7], [12, 3], [10, 2], [12, 3], [5, 11], [15, 13], [19, 7], [16, 9], [15, 10], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [15, 10], [8, 12], [5, 11], [4, 0], [14, 16], [10, 19], [17, 15], [8, 18], [16, 9], [5, 13], [4, 0], [1, 6], [7, 3], [0, 19], [17, 15], [5, 14], [8, 12], [1, 10], [19, 8], [4, 0], [13, 1], [16, 9], [12, 18], [7, 3], [10, 2], [5, 11], [11, 8], [5, 14], [19, 7], [4, 0], [13, 1], [10, 2], [12, 3], [11, 19], [12, 18], [13, 10], [15, 1], [0, 9], [14, 16], [2, 7], [11, 19], [15, 13], [1, 10], [9, 12], [14, 16], [8, 18], [4, 0], [7, 3], [5, 11], [0, 8], [6, 2], [16, 4], [10, 19], [12, 3], [13, 1], [17, 15], [5, 11], [2, 7], [1, 10], [0, 9], [8, 18], [14, 11], [15, 10], [8, 12], [17, 5], [16, 4], [0, 9], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [15, 10], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[147, 152, 157]
[156, 161, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 68, 75]
[135, 141, 148]
[168, 176, 181]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.263810396194458

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 7] cc => I, Pos: [0, 7] cc => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 9] cc => I, Pos: [6, 9] cc => I, Pos: [10, 18] cc => I, Pos: [10, 18] cc => I, Pos: [11, 17] cc => I, Pos: [11, 17] cc => I, Pos: [12, 21] cc => I, Pos: [12, 21] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [16, 24] cc => I, Pos: [16, 24] cc => I, Pos: [17, 27] cc => I, Pos: [17, 27] cc => I, Pos: [22, 28] cc => I, Pos: [22, 28] cc => I, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [27, 29] cc => I, Pos: [27, 29] cc => I, Pos: [41, 50] cc => I, Pos: [41, 50] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [53, 59] cc => I, Pos: [53, 59] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [64, 68, 75] ccc => cc, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [74, 81] cc => I, Pos: [74, 81] cc => I, Pos: [81, 94] cc => I, Pos: [81, 94] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 98] cc => I, Pos: [88, 98] cc => I, Pos: [92, 100] cc => I, Pos: [92, 100] cc => I, Pos: [93, 97] cc => I, Pos: [93, 97] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [110, 116] cc => I, Pos: [110, 116] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 140] cc => I, Pos: [130, 140] cc => I, Pos: [131, 138] cc => I, Pos: [131, 138] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 141, 148] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [140, 146] cc => I, Pos: [140, 146] cc => I, Pos: [147, 152, 157] ccc => cc, Pos: [148, 154] cc => I, Pos: [148, 154] cc => I, Pos: [156, 161, 167] ccc => cc, Pos: [157, 166] cc => I, Pos: [157, 166] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [166, 187] cc => I, Pos: [166, 187] cc => I, Pos: [168, 176, 181] ccc => cc, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I, Pos: [171, 177] cc => I, Pos: [171, 177] cc => I, Pos: [173, 179] cc => I, Pos: [173, 179] cc => I, Pos: [175, 183] cc => I, Pos: [175, 183] cc => I, Pos: [180, 185] cc => I, Pos: [180, 185] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [186, 197] cc => I, Pos: [186, 197] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 207] cc => I, Pos: [193, 207] cc => I, Pos: [196, 204] cc => I, Pos: [196, 204] cc => I, Pos: [197, 202] cc => I, Pos: [197, 202] cc => I, Pos: [198, 210] cc => I, Pos: [198, 210] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [205, 214] cc => I, Pos: [205, 214] cc => I, Pos: [216, 218] cc => I, Pos: [216, 218] cc => I, Pos: [219, 232] cc => I, Pos: [219, 232] cc => I, Pos: [223, 230] cc => I, Pos: [223, 230] cc => I, Pos: [224, 233] cc => I, Pos: [224, 233] cc => I, Pos: [231, 246] cc => I, Pos: [231, 246] cc => I, Pos: [232, 255] cc => I, Pos: [232, 255] cc => I, Pos: [233, 240] cc => I, Pos: [233, 240] cc => I, Pos: [236, 244] cc => I, Pos: [236, 244] cc => I, Pos: [238, 251] cc => I, Pos: [238, 251] cc => I, Pos: [242, 253] cc => I, Pos: [242, 253] cc => I, Pos: [245, 257] cc => I, Pos: [245, 257] cc => I, Pos: [249, 259] cc => I, Pos: [249, 259] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [252, 264] cc => I, Pos: [252, 264] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [263, 270] cc => I, Pos: [263, 270] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [278, 286] cc => I, Pos: [278, 286] cc => I, Pos: [281, 295] cc => I, Pos: [281, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [292, 307] cc => I, Pos: [292, 307] cc => I]

--------End Timer [Generate Plans]:  0.15623974800109863

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [11, 17] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [13, 23] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [27, 29] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [81, 94] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 140] cc => I,
 Pos: [131, 138] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [148, 154] cc => I,
 Pos: [157, 166] cc => I,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [169, 173] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [175, 183] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [186, 197] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [219, 232] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [233, 240] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 63, Saving: 64

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 7] cc => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 9] cc => I
Apply:  Pos: [10, 18] cc => I
Apply:  Pos: [11, 17] cc => I
Apply:  Pos: [12, 21] cc => I
Apply:  Pos: [13, 23] cc => I
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [16, 24] cc => I
Apply:  Pos: [22, 28] cc => I
Apply:  Pos: [27, 29] cc => I
Apply:  Pos: [41, 50] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [53, 59] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [64, 68, 75] ccc => cc
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [81, 94] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 98] cc => I
Apply:  Pos: [92, 100] cc => I
Apply:  Pos: [93, 97] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [110, 116] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 140] cc => I
Apply:  Pos: [131, 138] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [148, 154] cc => I
Apply:  Pos: [157, 166] cc => I
Apply:  Pos: [156, 161, 167] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [169, 173] cc => I
Apply:  Pos: [171, 177] cc => I
Apply:  Pos: [175, 183] cc => I
Apply:  Pos: [180, 185] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [186, 197] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 207] cc => I
Apply:  Pos: [196, 204] cc => I
Apply:  Pos: [198, 210] cc => I
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [205, 214] cc => I
Apply:  Pos: [216, 218] cc => I
Apply:  Pos: [219, 232] cc => I
Apply:  Pos: [223, 230] cc => I
Apply:  Pos: [233, 240] cc => I
Apply:  Pos: [231, 246] cc => I
Apply:  Pos: [236, 244] cc => I
Apply:  Pos: [238, 251] cc => I
Apply:  Pos: [242, 253] cc => I
Apply:  Pos: [245, 257] cc => I
Apply:  Pos: [249, 259] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [252, 264] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 270] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [278, 286] cc => I
Apply:  Pos: [281, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [292, 307] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 4], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [10, 19], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [3, 18], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [12, 3], [5, 11], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [7, 3], [19, 8], [13, 1], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [15, 13], [19, 7], [16, 9], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  6.420050144195557

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[104, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 12, 17]
[30, 36, 43]
[98, 105, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 15, 20]
[36, 43, 64]
[59, 68, 73]
[75, 80, 82]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[104, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4847309589385986

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12, 17] ccc => cc, Pos: [11, 15, 20] ccc => cc, Pos: [30, 36, 43] ccc => cc, Pos: [36, 43, 64] ccc => cc, Pos: [59, 68, 73] ccc => cc, Pos: [75, 80, 82] ccc => cc, Pos: [98, 105, 107] ccc => cc, Pos: [104, 131] cc => I, Pos: [104, 131] cc => I]

--------End Timer [Generate Plans]:  0.015638351440429688

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 12, 17] ccc => cc,
 Pos: [11, 15, 20] ccc => cc,
 Pos: [36, 43, 64] ccc => cc,
 Pos: [59, 68, 73] ccc => cc,
 Pos: [75, 80, 82] ccc => cc,
 Pos: [98, 105, 107] ccc => cc,
 Pos: [104, 131] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 12, 17] ccc => cc
Apply:  Pos: [11, 15, 20] ccc => cc
Apply:  Pos: [36, 43, 64] ccc => cc
Apply:  Pos: [59, 68, 73] ccc => cc
Apply:  Pos: [75, 80, 82] ccc => cc
Apply:  Pos: [98, 105, 107] ccc => cc
Apply:  Pos: [104, 131] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [10, 19], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [19, 7], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [19, 7], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [8, 3], [19, 8], [13, 1], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [19, 7], [16, 9], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.5003693103790283

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[28, 34]
[41, 71]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 110, 128]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[28, 34]
[41, 71]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.312810182571411

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [28, 34] cc => I, Pos: [28, 34] cc => I, Pos: [41, 71] cc => I, Pos: [41, 71] cc => I, Pos: [98, 110, 128] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [28, 34] cc => I, Pos: [41, 71] cc => I, Pos: [98, 110, 128] ccc => cc]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [28, 34] cc => I
Apply:  Pos: [41, 71] cc => I
Apply:  Pos: [98, 110, 128] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [8, 3], [19, 8], [13, 1], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [5, 19], [0, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [16, 4], [9, 12], [5, 14], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [19, 7], [16, 9], [4, 0], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.312810182571411

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1878576278686523

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [8, 3], [19, 8], [13, 1], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [16, 4], [9, 12], [5, 14], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [19, 7], [10, 7], [16, 9], [4, 0], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.1878576278686523

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [178] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 356

Reduced: 
 - size: 137 (43.49%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500882148742676

[0, 19], [1, 10], [14, 16], [15, 13], [8, 18], [2, 7], [4, 9], [0, 19], [14, 16], [4, 9], [8, 12], [15, 10], [17, 5], [3, 18], [1, 6], [19, 2], [11, 0], [15, 10], [8, 12], [16, 4], [1, 6], [17, 5], [19, 8], [3, 18], [11, 0], [6, 2], [13, 1], [15, 10], [19, 8], [15, 10], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [17, 15], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [8, 12], [1, 10], [13, 11], [17, 15], [10, 2], [8, 12], [15, 13], [11, 19], [4, 9], [17, 5], [7, 3], [10, 19], [15, 13], [9, 12], [5, 14], [11, 0], [6, 2], [16, 4], [7, 3], [19, 7], [0, 9], [14, 16], [15, 1], [8, 3], [12, 18], [5, 11], [10, 2], [10, 19], [16, 4], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [10, 19], [17, 15], [4, 0], [14, 13], [7, 3], [5, 11], [10, 2], [0, 8], [12, 18], [7, 3], [15, 13], [16, 4], [5, 14], [10, 19], [9, 12], [13, 11], [5, 14], [0, 8], [6, 2], [16, 4], [17, 15], [3, 18], [10, 2], [8, 18], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [2, 7], [16, 0], [8, 18], [14, 13], [12, 3], [5, 11], [2, 7], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [6, 2], [14, 11], [19, 7], [13, 10], [17, 5], [12, 18], [6, 2], [8, 3], [16, 9], [7, 3], [19, 8], [13, 1], [12, 18], [16, 9], [17, 5], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [7, 3], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 10], [16, 4], [12, 18], [0, 9], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [16, 4], [1, 10], [0, 9], [19, 8], [5, 11], [15, 1], [10, 2], [19, 8], [3, 18], [17, 5], [16, 0], [15, 1], [12, 18], [19, 8], [14, 11], [0, 9], [2, 7], [17, 5], [15, 10], [14, 11], [1, 6], [16, 4], [9, 12], [2, 7], [17, 5], [0, 8], [10, 2], [12, 18], [16, 9], [7, 3], [11, 19], [1, 6], [5, 13], [17, 15], [4, 0], [10, 2], [1, 6], [8, 3], [11, 19], [16, 4], [17, 15], [12, 18], [0, 9], [19, 2], [5, 13], [11, 0], [8, 18], [15, 1], [16, 4], [10, 7], [12, 3], [10, 2], [12, 3], [5, 11], [15, 13], [19, 7], [16, 9], [15, 10], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [15, 10], [8, 12], [5, 11], [4, 0], [14, 16], [10, 19], [17, 15], [8, 18], [16, 9], [5, 13], [4, 0], [1, 6], [7, 3], [0, 19], [17, 15], [5, 14], [8, 12], [1, 10], [19, 8], [4, 0], [13, 1], [16, 9], [12, 18], [7, 3], [10, 2], [5, 11], [11, 8], [5, 14], [19, 7], [4, 0], [13, 1], [10, 2], [12, 3], [11, 19], [12, 18], [13, 10], [15, 1], [0, 9], [14, 16], [2, 7], [11, 19], [15, 13], [1, 10], [9, 12], [14, 16], [8, 18], [4, 0], [7, 3], [5, 11], [0, 8], [6, 2], [16, 4], [10, 19], [12, 3], [13, 1], [17, 15], [5, 11], [2, 7], [1, 10], [0, 9], [8, 18], [14, 11], [15, 10], [8, 12], [17, 5], [16, 4], [0, 9], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [15, 10], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[147, 152, 157]
[156, 161, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 68, 75]
[135, 141, 148]
[168, 176, 181]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.234396696090698

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 7] cc => I, Pos: [0, 7] cc => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 9] cc => I, Pos: [6, 9] cc => I, Pos: [10, 18] cc => I, Pos: [10, 18] cc => I, Pos: [11, 17] cc => I, Pos: [11, 17] cc => I, Pos: [12, 21] cc => I, Pos: [12, 21] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [16, 24] cc => I, Pos: [16, 24] cc => I, Pos: [17, 27] cc => I, Pos: [17, 27] cc => I, Pos: [22, 28] cc => I, Pos: [22, 28] cc => I, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [27, 29] cc => I, Pos: [27, 29] cc => I, Pos: [41, 50] cc => I, Pos: [41, 50] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [53, 59] cc => I, Pos: [53, 59] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [64, 68, 75] ccc => cc, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [74, 81] cc => I, Pos: [74, 81] cc => I, Pos: [81, 94] cc => I, Pos: [81, 94] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 98] cc => I, Pos: [88, 98] cc => I, Pos: [92, 100] cc => I, Pos: [92, 100] cc => I, Pos: [93, 97] cc => I, Pos: [93, 97] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [110, 116] cc => I, Pos: [110, 116] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 140] cc => I, Pos: [130, 140] cc => I, Pos: [131, 138] cc => I, Pos: [131, 138] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 141, 148] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [140, 146] cc => I, Pos: [140, 146] cc => I, Pos: [147, 152, 157] ccc => cc, Pos: [148, 154] cc => I, Pos: [148, 154] cc => I, Pos: [156, 161, 167] ccc => cc, Pos: [157, 166] cc => I, Pos: [157, 166] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [166, 187] cc => I, Pos: [166, 187] cc => I, Pos: [168, 176, 181] ccc => cc, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I, Pos: [171, 177] cc => I, Pos: [171, 177] cc => I, Pos: [173, 179] cc => I, Pos: [173, 179] cc => I, Pos: [175, 183] cc => I, Pos: [175, 183] cc => I, Pos: [180, 185] cc => I, Pos: [180, 185] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [186, 197] cc => I, Pos: [186, 197] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 207] cc => I, Pos: [193, 207] cc => I, Pos: [196, 204] cc => I, Pos: [196, 204] cc => I, Pos: [197, 202] cc => I, Pos: [197, 202] cc => I, Pos: [198, 210] cc => I, Pos: [198, 210] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [205, 214] cc => I, Pos: [205, 214] cc => I, Pos: [216, 218] cc => I, Pos: [216, 218] cc => I, Pos: [219, 232] cc => I, Pos: [219, 232] cc => I, Pos: [223, 230] cc => I, Pos: [223, 230] cc => I, Pos: [224, 233] cc => I, Pos: [224, 233] cc => I, Pos: [231, 246] cc => I, Pos: [231, 246] cc => I, Pos: [232, 255] cc => I, Pos: [232, 255] cc => I, Pos: [233, 240] cc => I, Pos: [233, 240] cc => I, Pos: [236, 244] cc => I, Pos: [236, 244] cc => I, Pos: [238, 251] cc => I, Pos: [238, 251] cc => I, Pos: [242, 253] cc => I, Pos: [242, 253] cc => I, Pos: [245, 257] cc => I, Pos: [245, 257] cc => I, Pos: [249, 259] cc => I, Pos: [249, 259] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [252, 264] cc => I, Pos: [252, 264] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [263, 270] cc => I, Pos: [263, 270] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [278, 286] cc => I, Pos: [278, 286] cc => I, Pos: [281, 295] cc => I, Pos: [281, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [292, 307] cc => I, Pos: [292, 307] cc => I]

--------End Timer [Generate Plans]:  0.15625238418579102

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [11, 17] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [23, 32] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [27, 29] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [81, 94] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [140, 146] cc => I,
 Pos: [138, 142] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [148, 154] cc => I,
 Pos: [157, 166] cc => I,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [173, 179] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [175, 183] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [186, 197] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [219, 232] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [224, 233] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 63, Saving: 64

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 7] cc => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 9] cc => I
Apply:  Pos: [10, 18] cc => I
Apply:  Pos: [11, 17] cc => I
Apply:  Pos: [12, 21] cc => I
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [16, 24] cc => I
Apply:  Pos: [22, 28] cc => I
Apply:  Pos: [27, 29] cc => I
Apply:  Pos: [41, 50] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [53, 59] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [64, 68, 75] ccc => cc
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [81, 94] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 98] cc => I
Apply:  Pos: [92, 100] cc => I
Apply:  Pos: [93, 97] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [110, 116] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [140, 146] cc => I
Apply:  Pos: [138, 142] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [148, 154] cc => I
Apply:  Pos: [157, 166] cc => I
Apply:  Pos: [156, 161, 167] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [173, 179] cc => I
Apply:  Pos: [171, 177] cc => I
Apply:  Pos: [175, 183] cc => I
Apply:  Pos: [180, 185] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [186, 197] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 207] cc => I
Apply:  Pos: [196, 204] cc => I
Apply:  Pos: [198, 210] cc => I
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [205, 214] cc => I
Apply:  Pos: [216, 218] cc => I
Apply:  Pos: [219, 232] cc => I
Apply:  Pos: [223, 230] cc => I
Apply:  Pos: [224, 233] cc => I
Apply:  Pos: [231, 246] cc => I
Apply:  Pos: [236, 244] cc => I
Apply:  Pos: [238, 251] cc => I
Apply:  Pos: [242, 253] cc => I
Apply:  Pos: [245, 257] cc => I
Apply:  Pos: [249, 259] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [252, 264] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 270] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [278, 286] cc => I
Apply:  Pos: [281, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [292, 307] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015624284744262695

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 4], [6, 2], [13, 1], [16, 9], [5, 13], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [10, 19], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [3, 18], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [12, 3], [5, 11], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [17, 5], [12, 18], [8, 3], [7, 3], [19, 8], [13, 1], [2, 7], [15, 1], [11, 19], [0, 8], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [19, 8], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [15, 13], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  6.406273365020752

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[104, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 12, 17]
[30, 36, 43]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 15, 20]
[36, 43, 64]
[59, 68, 73]
[75, 80, 84]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[104, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4532132148742676

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 12, 17] ccc => cc, Pos: [11, 15, 20] ccc => cc, Pos: [30, 36, 43] ccc => cc, Pos: [36, 43, 64] ccc => cc, Pos: [59, 68, 73] ccc => cc, Pos: [75, 80, 84] ccc => cc, Pos: [104, 131] cc => I, Pos: [104, 131] cc => I]

--------End Timer [Generate Plans]:  0.015628337860107422

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 12, 17] ccc => cc,
 Pos: [11, 15, 20] ccc => cc,
 Pos: [30, 36, 43] ccc => cc,
 Pos: [59, 68, 73] ccc => cc,
 Pos: [75, 80, 84] ccc => cc,
 Pos: [104, 131] cc => I]
Change: 6, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 12, 17] ccc => cc
Apply:  Pos: [11, 15, 20] ccc => cc
Apply:  Pos: [30, 36, 43] ccc => cc
Apply:  Pos: [59, 68, 73] ccc => cc
Apply:  Pos: [75, 80, 84] ccc => cc
Apply:  Pos: [104, 131] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [19, 7], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [17, 5], [12, 18], [8, 3], [19, 8], [13, 1], [2, 7], [15, 1], [11, 19], [0, 8], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [19, 8], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.468841552734375

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]
[61, 71]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]
[61, 71]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.327730178833008

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [61, 71] cc => I, Pos: [61, 71] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [34, 61] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [34, 61] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [19, 7], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [17, 5], [12, 18], [8, 3], [19, 8], [13, 1], [2, 7], [15, 1], [11, 19], [0, 8], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [19, 8], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.327730178833008

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2500104904174805

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [19, 7], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [17, 5], [12, 18], [8, 3], [19, 8], [13, 1], [2, 7], [15, 1], [11, 19], [0, 8], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [19, 8], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [19, 7], [10, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.2500104904174805

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 133 (42.22%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12497830390930176

[0, 19], [1, 10], [14, 16], [15, 13], [8, 18], [2, 7], [4, 9], [0, 19], [14, 16], [4, 9], [8, 12], [15, 10], [17, 5], [3, 18], [1, 6], [19, 2], [11, 0], [15, 10], [8, 12], [16, 4], [1, 6], [17, 5], [19, 8], [3, 18], [11, 0], [6, 2], [13, 1], [15, 10], [19, 8], [15, 10], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [17, 15], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [8, 12], [1, 10], [13, 11], [17, 15], [10, 2], [8, 12], [15, 13], [11, 19], [4, 9], [17, 5], [7, 3], [10, 19], [15, 13], [9, 12], [5, 14], [11, 0], [6, 2], [16, 4], [7, 3], [19, 7], [0, 9], [14, 16], [15, 1], [8, 3], [12, 18], [5, 11], [10, 2], [10, 19], [16, 4], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [10, 19], [17, 15], [4, 0], [14, 13], [7, 3], [5, 11], [10, 2], [0, 8], [12, 18], [7, 3], [15, 13], [16, 4], [5, 14], [10, 19], [9, 12], [13, 11], [5, 14], [0, 8], [6, 2], [16, 4], [17, 15], [3, 18], [10, 2], [8, 18], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [2, 7], [16, 0], [8, 18], [14, 13], [12, 3], [5, 11], [2, 7], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [6, 2], [14, 11], [19, 7], [13, 10], [17, 5], [12, 18], [6, 2], [8, 3], [16, 9], [7, 3], [19, 8], [13, 1], [12, 18], [16, 9], [17, 5], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [7, 3], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 10], [16, 4], [12, 18], [0, 9], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [16, 4], [1, 10], [0, 9], [19, 8], [5, 11], [15, 1], [10, 2], [19, 8], [3, 18], [17, 5], [16, 0], [15, 1], [12, 18], [19, 8], [14, 11], [0, 9], [2, 7], [17, 5], [15, 10], [14, 11], [1, 6], [16, 4], [9, 12], [2, 7], [17, 5], [0, 8], [10, 2], [12, 18], [16, 9], [7, 3], [11, 19], [1, 6], [5, 13], [17, 15], [4, 0], [10, 2], [1, 6], [8, 3], [11, 19], [16, 4], [17, 15], [12, 18], [0, 9], [19, 2], [5, 13], [11, 0], [8, 18], [15, 1], [16, 4], [10, 7], [12, 3], [10, 2], [12, 3], [5, 11], [15, 13], [19, 7], [16, 9], [15, 10], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [15, 10], [8, 12], [5, 11], [4, 0], [14, 16], [10, 19], [17, 15], [8, 18], [16, 9], [5, 13], [4, 0], [1, 6], [7, 3], [0, 19], [17, 15], [5, 14], [8, 12], [1, 10], [19, 8], [4, 0], [13, 1], [16, 9], [12, 18], [7, 3], [10, 2], [5, 11], [11, 8], [5, 14], [19, 7], [4, 0], [13, 1], [10, 2], [12, 3], [11, 19], [12, 18], [13, 10], [15, 1], [0, 9], [14, 16], [2, 7], [11, 19], [15, 13], [1, 10], [9, 12], [14, 16], [8, 18], [4, 0], [7, 3], [5, 11], [0, 8], [6, 2], [16, 4], [10, 19], [12, 3], [13, 1], [17, 15], [5, 11], [2, 7], [1, 10], [0, 9], [8, 18], [14, 11], [15, 10], [8, 12], [17, 5], [16, 4], [0, 9], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [15, 10], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[147, 152, 157]
[156, 161, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 68, 75]
[135, 141, 148]
[168, 176, 181]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.171960830688477

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 7] cc => I, Pos: [0, 7] cc => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 9] cc => I, Pos: [6, 9] cc => I, Pos: [10, 18] cc => I, Pos: [10, 18] cc => I, Pos: [11, 17] cc => I, Pos: [11, 17] cc => I, Pos: [12, 21] cc => I, Pos: [12, 21] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [16, 24] cc => I, Pos: [16, 24] cc => I, Pos: [17, 27] cc => I, Pos: [17, 27] cc => I, Pos: [22, 28] cc => I, Pos: [22, 28] cc => I, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [27, 29] cc => I, Pos: [27, 29] cc => I, Pos: [41, 50] cc => I, Pos: [41, 50] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [53, 59] cc => I, Pos: [53, 59] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [64, 68, 75] ccc => cc, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [74, 81] cc => I, Pos: [74, 81] cc => I, Pos: [81, 94] cc => I, Pos: [81, 94] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 98] cc => I, Pos: [88, 98] cc => I, Pos: [92, 100] cc => I, Pos: [92, 100] cc => I, Pos: [93, 97] cc => I, Pos: [93, 97] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [110, 116] cc => I, Pos: [110, 116] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 140] cc => I, Pos: [130, 140] cc => I, Pos: [131, 138] cc => I, Pos: [131, 138] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 141, 148] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [140, 146] cc => I, Pos: [140, 146] cc => I, Pos: [147, 152, 157] ccc => cc, Pos: [148, 154] cc => I, Pos: [148, 154] cc => I, Pos: [156, 161, 167] ccc => cc, Pos: [157, 166] cc => I, Pos: [157, 166] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [166, 187] cc => I, Pos: [166, 187] cc => I, Pos: [168, 176, 181] ccc => cc, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I, Pos: [171, 177] cc => I, Pos: [171, 177] cc => I, Pos: [173, 179] cc => I, Pos: [173, 179] cc => I, Pos: [175, 183] cc => I, Pos: [175, 183] cc => I, Pos: [180, 185] cc => I, Pos: [180, 185] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [186, 197] cc => I, Pos: [186, 197] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 207] cc => I, Pos: [193, 207] cc => I, Pos: [196, 204] cc => I, Pos: [196, 204] cc => I, Pos: [197, 202] cc => I, Pos: [197, 202] cc => I, Pos: [198, 210] cc => I, Pos: [198, 210] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [205, 214] cc => I, Pos: [205, 214] cc => I, Pos: [216, 218] cc => I, Pos: [216, 218] cc => I, Pos: [219, 232] cc => I, Pos: [219, 232] cc => I, Pos: [223, 230] cc => I, Pos: [223, 230] cc => I, Pos: [224, 233] cc => I, Pos: [224, 233] cc => I, Pos: [231, 246] cc => I, Pos: [231, 246] cc => I, Pos: [232, 255] cc => I, Pos: [232, 255] cc => I, Pos: [233, 240] cc => I, Pos: [233, 240] cc => I, Pos: [236, 244] cc => I, Pos: [236, 244] cc => I, Pos: [238, 251] cc => I, Pos: [238, 251] cc => I, Pos: [242, 253] cc => I, Pos: [242, 253] cc => I, Pos: [245, 257] cc => I, Pos: [245, 257] cc => I, Pos: [249, 259] cc => I, Pos: [249, 259] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [252, 264] cc => I, Pos: [252, 264] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [263, 270] cc => I, Pos: [263, 270] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [278, 286] cc => I, Pos: [278, 286] cc => I, Pos: [281, 295] cc => I, Pos: [281, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [292, 307] cc => I, Pos: [292, 307] cc => I]

--------End Timer [Generate Plans]:  0.15633869171142578

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [11, 17] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [23, 32] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [27, 29] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [81, 94] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 140] cc => I,
 Pos: [138, 142] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [148, 154] cc => I,
 Pos: [157, 166] cc => I,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [169, 173] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [175, 183] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [186, 197] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [232, 255] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [233, 240] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 63, Saving: 64

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 7] cc => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 9] cc => I
Apply:  Pos: [10, 18] cc => I
Apply:  Pos: [11, 17] cc => I
Apply:  Pos: [12, 21] cc => I
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [16, 24] cc => I
Apply:  Pos: [22, 28] cc => I
Apply:  Pos: [27, 29] cc => I
Apply:  Pos: [41, 50] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [53, 59] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [64, 68, 75] ccc => cc
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [81, 94] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 98] cc => I
Apply:  Pos: [92, 100] cc => I
Apply:  Pos: [93, 97] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [110, 116] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 140] cc => I
Apply:  Pos: [138, 142] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [148, 154] cc => I
Apply:  Pos: [157, 166] cc => I
Apply:  Pos: [156, 161, 167] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [169, 173] cc => I
Apply:  Pos: [171, 177] cc => I
Apply:  Pos: [175, 183] cc => I
Apply:  Pos: [180, 185] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [186, 197] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 207] cc => I
Apply:  Pos: [196, 204] cc => I
Apply:  Pos: [198, 210] cc => I
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [205, 214] cc => I
Apply:  Pos: [216, 218] cc => I
Apply:  Pos: [232, 255] cc => I
Apply:  Pos: [223, 230] cc => I
Apply:  Pos: [233, 240] cc => I
Apply:  Pos: [231, 246] cc => I
Apply:  Pos: [236, 244] cc => I
Apply:  Pos: [238, 251] cc => I
Apply:  Pos: [242, 253] cc => I
Apply:  Pos: [245, 257] cc => I
Apply:  Pos: [249, 259] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [252, 264] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 270] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [278, 286] cc => I
Apply:  Pos: [281, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [292, 307] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 4], [6, 2], [13, 1], [16, 9], [5, 13], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [10, 19], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [3, 18], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [12, 3], [5, 11], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [12, 18], [8, 3], [7, 3], [19, 8], [13, 1], [2, 7], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [5, 11], [15, 13], [19, 7], [16, 9], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  6.328299522399902

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[104, 132]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 12, 17]
[30, 36, 43]
[98, 105, 107]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 15, 20]
[36, 43, 64]
[59, 68, 73]
[75, 80, 83]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[104, 132]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.453127861022949

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 12, 17] ccc => cc, Pos: [11, 15, 20] ccc => cc, Pos: [30, 36, 43] ccc => cc, Pos: [36, 43, 64] ccc => cc, Pos: [59, 68, 73] ccc => cc, Pos: [75, 80, 83] ccc => cc, Pos: [98, 105, 107] ccc => cc, Pos: [104, 132] cc => I, Pos: [104, 132] cc => I]

--------End Timer [Generate Plans]:  0.01563739776611328

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 12, 17] ccc => cc,
 Pos: [11, 15, 20] ccc => cc,
 Pos: [36, 43, 64] ccc => cc,
 Pos: [59, 68, 73] ccc => cc,
 Pos: [75, 80, 83] ccc => cc,
 Pos: [98, 105, 107] ccc => cc,
 Pos: [104, 132] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 12, 17] ccc => cc
Apply:  Pos: [11, 15, 20] ccc => cc
Apply:  Pos: [36, 43, 64] ccc => cc
Apply:  Pos: [59, 68, 73] ccc => cc
Apply:  Pos: [75, 80, 83] ccc => cc
Apply:  Pos: [98, 105, 107] ccc => cc
Apply:  Pos: [104, 132] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [10, 19], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [19, 7], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [19, 7], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [12, 18], [8, 3], [19, 8], [13, 1], [2, 7], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [5, 11], [19, 7], [16, 9], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [11, 8], [19, 7], [19, 8], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.4687652587890625

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[28, 34]
[41, 71]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[28, 34]
[41, 71]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2499330043792725

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [28, 34] cc => I, Pos: [28, 34] cc => I, Pos: [41, 71] cc => I, Pos: [41, 71] cc => I]

--------End Timer [Generate Plans]:  0.01563119888305664

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [28, 34] cc => I, Pos: [41, 71] cc => I]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [28, 34] cc => I
Apply:  Pos: [41, 71] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [12, 18], [8, 3], [19, 8], [13, 1], [2, 7], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [5, 19], [0, 19], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [5, 11], [19, 7], [16, 9], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [11, 8], [19, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.265564203262329

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1875414848327637

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [12, 18], [8, 3], [19, 8], [13, 1], [2, 7], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [5, 11], [19, 7], [16, 9], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [1, 6], [0, 19], [1, 10], [19, 8], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.1875414848327637

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [179] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 358

Reduced: 
 - size: 136 (43.17%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10944867134094238

[0, 19], [1, 10], [14, 16], [15, 13], [8, 18], [2, 7], [4, 9], [0, 19], [14, 16], [4, 9], [8, 12], [15, 10], [17, 5], [3, 18], [1, 6], [19, 2], [11, 0], [15, 10], [8, 12], [16, 4], [1, 6], [17, 5], [19, 8], [3, 18], [11, 0], [6, 2], [13, 1], [15, 10], [19, 8], [15, 10], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [17, 15], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [8, 12], [1, 10], [13, 11], [17, 15], [10, 2], [8, 12], [15, 13], [11, 19], [4, 9], [17, 5], [7, 3], [10, 19], [15, 13], [9, 12], [5, 14], [11, 0], [6, 2], [16, 4], [7, 3], [19, 7], [0, 9], [14, 16], [15, 1], [8, 3], [12, 18], [5, 11], [10, 2], [10, 19], [16, 4], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [10, 19], [17, 15], [4, 0], [14, 13], [7, 3], [5, 11], [10, 2], [0, 8], [12, 18], [7, 3], [15, 13], [16, 4], [5, 14], [10, 19], [9, 12], [13, 11], [5, 14], [0, 8], [6, 2], [16, 4], [17, 15], [3, 18], [10, 2], [8, 18], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [2, 7], [16, 0], [8, 18], [14, 13], [12, 3], [5, 11], [2, 7], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [6, 2], [14, 11], [19, 7], [13, 10], [17, 5], [12, 18], [6, 2], [8, 3], [16, 9], [7, 3], [19, 8], [13, 1], [12, 18], [16, 9], [17, 5], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [7, 3], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 10], [16, 4], [12, 18], [0, 9], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [16, 4], [1, 10], [0, 9], [19, 8], [5, 11], [15, 1], [10, 2], [19, 8], [3, 18], [17, 5], [16, 0], [15, 1], [12, 18], [19, 8], [14, 11], [0, 9], [2, 7], [17, 5], [15, 10], [14, 11], [1, 6], [16, 4], [9, 12], [2, 7], [17, 5], [0, 8], [10, 2], [12, 18], [16, 9], [7, 3], [11, 19], [1, 6], [5, 13], [17, 15], [4, 0], [10, 2], [1, 6], [8, 3], [11, 19], [16, 4], [17, 15], [12, 18], [0, 9], [19, 2], [5, 13], [11, 0], [8, 18], [15, 1], [16, 4], [10, 7], [12, 3], [10, 2], [12, 3], [5, 11], [15, 13], [19, 7], [16, 9], [15, 10], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [15, 10], [8, 12], [5, 11], [4, 0], [14, 16], [10, 19], [17, 15], [8, 18], [16, 9], [5, 13], [4, 0], [1, 6], [7, 3], [0, 19], [17, 15], [5, 14], [8, 12], [1, 10], [19, 8], [4, 0], [13, 1], [16, 9], [12, 18], [7, 3], [10, 2], [5, 11], [11, 8], [5, 14], [19, 7], [4, 0], [13, 1], [10, 2], [12, 3], [11, 19], [12, 18], [13, 10], [15, 1], [0, 9], [14, 16], [2, 7], [11, 19], [15, 13], [1, 10], [9, 12], [14, 16], [8, 18], [4, 0], [7, 3], [5, 11], [0, 8], [6, 2], [16, 4], [10, 19], [12, 3], [13, 1], [17, 15], [5, 11], [2, 7], [1, 10], [0, 9], [8, 18], [14, 11], [15, 10], [8, 12], [17, 5], [16, 4], [0, 9], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [15, 10], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[147, 152, 157]
[156, 161, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 68, 75]
[135, 141, 148]
[168, 176, 181]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.203133583068848

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 7] cc => I, Pos: [0, 7] cc => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 9] cc => I, Pos: [6, 9] cc => I, Pos: [10, 18] cc => I, Pos: [10, 18] cc => I, Pos: [11, 17] cc => I, Pos: [11, 17] cc => I, Pos: [12, 21] cc => I, Pos: [12, 21] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [16, 24] cc => I, Pos: [16, 24] cc => I, Pos: [17, 27] cc => I, Pos: [17, 27] cc => I, Pos: [22, 28] cc => I, Pos: [22, 28] cc => I, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [27, 29] cc => I, Pos: [27, 29] cc => I, Pos: [41, 50] cc => I, Pos: [41, 50] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [53, 59] cc => I, Pos: [53, 59] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [64, 68, 75] ccc => cc, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [74, 81] cc => I, Pos: [74, 81] cc => I, Pos: [81, 94] cc => I, Pos: [81, 94] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 98] cc => I, Pos: [88, 98] cc => I, Pos: [92, 100] cc => I, Pos: [92, 100] cc => I, Pos: [93, 97] cc => I, Pos: [93, 97] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [110, 116] cc => I, Pos: [110, 116] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 140] cc => I, Pos: [130, 140] cc => I, Pos: [131, 138] cc => I, Pos: [131, 138] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 141, 148] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [140, 146] cc => I, Pos: [140, 146] cc => I, Pos: [147, 152, 157] ccc => cc, Pos: [148, 154] cc => I, Pos: [148, 154] cc => I, Pos: [156, 161, 167] ccc => cc, Pos: [157, 166] cc => I, Pos: [157, 166] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [166, 187] cc => I, Pos: [166, 187] cc => I, Pos: [168, 176, 181] ccc => cc, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I, Pos: [171, 177] cc => I, Pos: [171, 177] cc => I, Pos: [173, 179] cc => I, Pos: [173, 179] cc => I, Pos: [175, 183] cc => I, Pos: [175, 183] cc => I, Pos: [180, 185] cc => I, Pos: [180, 185] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [186, 197] cc => I, Pos: [186, 197] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 207] cc => I, Pos: [193, 207] cc => I, Pos: [196, 204] cc => I, Pos: [196, 204] cc => I, Pos: [197, 202] cc => I, Pos: [197, 202] cc => I, Pos: [198, 210] cc => I, Pos: [198, 210] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [205, 214] cc => I, Pos: [205, 214] cc => I, Pos: [216, 218] cc => I, Pos: [216, 218] cc => I, Pos: [219, 232] cc => I, Pos: [219, 232] cc => I, Pos: [223, 230] cc => I, Pos: [223, 230] cc => I, Pos: [224, 233] cc => I, Pos: [224, 233] cc => I, Pos: [231, 246] cc => I, Pos: [231, 246] cc => I, Pos: [232, 255] cc => I, Pos: [232, 255] cc => I, Pos: [233, 240] cc => I, Pos: [233, 240] cc => I, Pos: [236, 244] cc => I, Pos: [236, 244] cc => I, Pos: [238, 251] cc => I, Pos: [238, 251] cc => I, Pos: [242, 253] cc => I, Pos: [242, 253] cc => I, Pos: [245, 257] cc => I, Pos: [245, 257] cc => I, Pos: [249, 259] cc => I, Pos: [249, 259] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [252, 264] cc => I, Pos: [252, 264] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [263, 270] cc => I, Pos: [263, 270] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [278, 286] cc => I, Pos: [278, 286] cc => I, Pos: [281, 295] cc => I, Pos: [281, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [292, 307] cc => I, Pos: [292, 307] cc => I]

--------End Timer [Generate Plans]:  0.17188096046447754

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [11, 17] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [23, 32] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [27, 29] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [74, 81] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 140] cc => I,
 Pos: [131, 138] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [148, 154] cc => I,
 Pos: [157, 166] cc => I,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [173, 179] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [175, 183] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [186, 197] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [232, 255] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [224, 233] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 63, Saving: 64

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 7] cc => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 9] cc => I
Apply:  Pos: [10, 18] cc => I
Apply:  Pos: [11, 17] cc => I
Apply:  Pos: [12, 21] cc => I
Apply:  Pos: [23, 32] cc => I
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [16, 24] cc => I
Apply:  Pos: [22, 28] cc => I
Apply:  Pos: [27, 29] cc => I
Apply:  Pos: [41, 50] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [53, 59] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [64, 68, 75] ccc => cc
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [74, 81] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 98] cc => I
Apply:  Pos: [92, 100] cc => I
Apply:  Pos: [93, 97] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [110, 116] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 140] cc => I
Apply:  Pos: [131, 138] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [148, 154] cc => I
Apply:  Pos: [157, 166] cc => I
Apply:  Pos: [156, 161, 167] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [173, 179] cc => I
Apply:  Pos: [171, 177] cc => I
Apply:  Pos: [175, 183] cc => I
Apply:  Pos: [180, 185] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [186, 197] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 207] cc => I
Apply:  Pos: [196, 204] cc => I
Apply:  Pos: [198, 210] cc => I
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [205, 214] cc => I
Apply:  Pos: [216, 218] cc => I
Apply:  Pos: [232, 255] cc => I
Apply:  Pos: [223, 230] cc => I
Apply:  Pos: [224, 233] cc => I
Apply:  Pos: [231, 246] cc => I
Apply:  Pos: [236, 244] cc => I
Apply:  Pos: [238, 251] cc => I
Apply:  Pos: [242, 253] cc => I
Apply:  Pos: [245, 257] cc => I
Apply:  Pos: [249, 259] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [252, 264] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 270] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [278, 286] cc => I
Apply:  Pos: [281, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [292, 307] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 4], [6, 2], [13, 1], [16, 9], [5, 13], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [10, 19], [9, 12], [13, 11], [6, 2], [17, 15], [3, 18], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [12, 3], [5, 11], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [7, 3], [19, 8], [13, 1], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [19, 8], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [5, 11], [15, 13], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  6.375014543533325

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[104, 132]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[6, 12, 17]
[30, 36, 54]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 15, 20]
[36, 54, 64]
[59, 68, 73]
[75, 80, 82]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[104, 132]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4687657356262207

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 12, 17] ccc => cc, Pos: [11, 15, 20] ccc => cc, Pos: [30, 36, 54] ccc => cc, Pos: [36, 54, 64] ccc => cc, Pos: [59, 68, 73] ccc => cc, Pos: [75, 80, 82] ccc => cc, Pos: [104, 132] cc => I, Pos: [104, 132] cc => I]

--------End Timer [Generate Plans]:  0.015611410140991211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 12, 17] ccc => cc,
 Pos: [11, 15, 20] ccc => cc,
 Pos: [30, 36, 54] ccc => cc,
 Pos: [59, 68, 73] ccc => cc,
 Pos: [75, 80, 82] ccc => cc,
 Pos: [104, 132] cc => I]
Change: 6, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [6, 12, 17] ccc => cc
Apply:  Pos: [11, 15, 20] ccc => cc
Apply:  Pos: [30, 36, 54] ccc => cc
Apply:  Pos: [59, 68, 73] ccc => cc
Apply:  Pos: [75, 80, 82] ccc => cc
Apply:  Pos: [104, 132] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [19, 7], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [8, 3], [19, 8], [13, 1], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [19, 8], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [5, 11], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [11, 8], [19, 7], [19, 8], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.484377145767212

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]
[61, 71]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]
[61, 71]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3281378746032715

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [61, 71] cc => I, Pos: [61, 71] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [61, 71] cc => I]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [61, 71] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [8, 3], [19, 8], [13, 1], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [19, 8], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [5, 11], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [11, 8], [19, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.3281378746032715

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.250007152557373

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [3, 18], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [0, 9], [15, 10], [5, 13], [14, 11], [7, 3], [13, 10], [8, 3], [19, 8], [13, 1], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [19, 8], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [0, 9], [15, 10], [16, 4], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [5, 11], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.250007152557373

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [182] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 133 (42.22%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500500679016113

[0, 19], [1, 10], [14, 16], [15, 13], [8, 18], [2, 7], [4, 9], [0, 19], [14, 16], [4, 9], [8, 12], [15, 10], [17, 5], [3, 18], [1, 6], [19, 2], [11, 0], [15, 10], [8, 12], [16, 4], [1, 6], [17, 5], [19, 8], [3, 18], [11, 0], [6, 2], [13, 1], [15, 10], [19, 8], [15, 10], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [17, 15], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [8, 12], [1, 10], [13, 11], [17, 15], [10, 2], [8, 12], [15, 13], [11, 19], [4, 9], [17, 5], [7, 3], [10, 19], [15, 13], [9, 12], [5, 14], [11, 0], [6, 2], [16, 4], [7, 3], [19, 7], [0, 9], [14, 16], [15, 1], [8, 3], [12, 18], [5, 11], [10, 2], [10, 19], [16, 4], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [10, 19], [17, 15], [4, 0], [14, 13], [7, 3], [5, 11], [10, 2], [0, 8], [12, 18], [7, 3], [15, 13], [16, 4], [5, 14], [10, 19], [9, 12], [13, 11], [5, 14], [0, 8], [6, 2], [16, 4], [17, 15], [3, 18], [10, 2], [8, 18], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [2, 7], [16, 0], [8, 18], [14, 13], [12, 3], [5, 11], [2, 7], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [6, 2], [14, 11], [19, 7], [13, 10], [17, 5], [12, 18], [6, 2], [8, 3], [16, 9], [7, 3], [19, 8], [13, 1], [12, 18], [16, 9], [17, 5], [2, 7], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 4], [7, 3], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 10], [16, 4], [12, 18], [0, 9], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [16, 4], [1, 10], [0, 9], [19, 8], [5, 11], [15, 1], [10, 2], [19, 8], [3, 18], [17, 5], [16, 0], [15, 1], [12, 18], [19, 8], [14, 11], [0, 9], [2, 7], [17, 5], [15, 10], [14, 11], [1, 6], [16, 4], [9, 12], [2, 7], [17, 5], [0, 8], [10, 2], [12, 18], [16, 9], [7, 3], [11, 19], [1, 6], [5, 13], [17, 15], [4, 0], [10, 2], [1, 6], [8, 3], [11, 19], [16, 4], [17, 15], [12, 18], [0, 9], [19, 2], [5, 13], [11, 0], [8, 18], [15, 1], [16, 4], [10, 7], [12, 3], [10, 2], [12, 3], [5, 11], [15, 13], [19, 7], [16, 9], [15, 10], [4, 0], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [15, 10], [8, 12], [5, 11], [4, 0], [14, 16], [10, 19], [17, 15], [8, 18], [16, 9], [5, 13], [4, 0], [1, 6], [7, 3], [0, 19], [17, 15], [5, 14], [8, 12], [1, 10], [19, 8], [4, 0], [13, 1], [16, 9], [12, 18], [7, 3], [10, 2], [5, 11], [11, 8], [5, 14], [19, 7], [4, 0], [13, 1], [10, 2], [12, 3], [11, 19], [12, 18], [13, 10], [15, 1], [0, 9], [14, 16], [2, 7], [11, 19], [15, 13], [1, 10], [9, 12], [14, 16], [8, 18], [4, 0], [7, 3], [5, 11], [0, 8], [6, 2], [16, 4], [10, 19], [12, 3], [13, 1], [17, 15], [5, 11], [2, 7], [1, 10], [0, 9], [8, 18], [14, 11], [15, 10], [8, 12], [17, 5], [16, 4], [0, 9], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [15, 10], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[147, 152, 157]
[156, 161, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 68, 75]
[135, 141, 148]
[168, 176, 181]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[0, 7]
[2, 8]
[6, 9]
[11, 17]
[10, 18]
[14, 20]
[12, 21]
[13, 23]
[16, 24]
[17, 27]
[22, 28]
[27, 29]
[23, 32]
[41, 50]
[47, 52]
[53, 59]
[57, 65]
[74, 81]
[73, 87]
[85, 90]
[81, 94]
[93, 97]
[88, 98]
[92, 100]
[104, 112]
[110, 116]
[126, 132]
[131, 138]
[134, 139]
[130, 140]
[138, 142]
[140, 146]
[148, 154]
[157, 166]
[159, 168]
[169, 173]
[171, 177]
[173, 179]
[175, 183]
[180, 185]
[166, 187]
[182, 189]
[183, 190]
[186, 197]
[192, 201]
[197, 202]
[196, 204]
[199, 206]
[193, 207]
[198, 210]
[205, 214]
[216, 218]
[223, 230]
[219, 232]
[224, 233]
[233, 240]
[236, 244]
[231, 246]
[238, 251]
[242, 253]
[232, 255]
[245, 257]
[249, 259]
[250, 260]
[254, 261]
[252, 264]
[263, 270]
[268, 274]
[278, 286]
[281, 295]
[289, 296]
[292, 307]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.140628814697266

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 7] cc => I, Pos: [0, 7] cc => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [6, 9] cc => I, Pos: [6, 9] cc => I, Pos: [10, 18] cc => I, Pos: [10, 18] cc => I, Pos: [11, 17] cc => I, Pos: [11, 17] cc => I, Pos: [12, 21] cc => I, Pos: [12, 21] cc => I, Pos: [13, 23] cc => I, Pos: [13, 23] cc => I, Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [16, 24] cc => I, Pos: [16, 24] cc => I, Pos: [17, 27] cc => I, Pos: [17, 27] cc => I, Pos: [22, 28] cc => I, Pos: [22, 28] cc => I, Pos: [23, 32] cc => I, Pos: [23, 32] cc => I, Pos: [27, 29] cc => I, Pos: [27, 29] cc => I, Pos: [41, 50] cc => I, Pos: [41, 50] cc => I, Pos: [47, 52] cc => I, Pos: [47, 52] cc => I, Pos: [53, 59] cc => I, Pos: [53, 59] cc => I, Pos: [57, 65] cc => I, Pos: [57, 65] cc => I, Pos: [64, 68, 75] ccc => cc, Pos: [73, 87] cc => I, Pos: [73, 87] cc => I, Pos: [74, 81] cc => I, Pos: [74, 81] cc => I, Pos: [81, 94] cc => I, Pos: [81, 94] cc => I, Pos: [85, 90] cc => I, Pos: [85, 90] cc => I, Pos: [88, 98] cc => I, Pos: [88, 98] cc => I, Pos: [92, 100] cc => I, Pos: [92, 100] cc => I, Pos: [93, 97] cc => I, Pos: [93, 97] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [110, 116] cc => I, Pos: [110, 116] cc => I, Pos: [126, 132] cc => I, Pos: [126, 132] cc => I, Pos: [130, 140] cc => I, Pos: [130, 140] cc => I, Pos: [131, 138] cc => I, Pos: [131, 138] cc => I, Pos: [134, 139] cc => I, Pos: [134, 139] cc => I, Pos: [135, 141, 148] ccc => cc, Pos: [138, 142] cc => I, Pos: [138, 142] cc => I, Pos: [140, 146] cc => I, Pos: [140, 146] cc => I, Pos: [147, 152, 157] ccc => cc, Pos: [148, 154] cc => I, Pos: [148, 154] cc => I, Pos: [156, 161, 167] ccc => cc, Pos: [157, 166] cc => I, Pos: [157, 166] cc => I, Pos: [159, 168] cc => I, Pos: [159, 168] cc => I, Pos: [166, 187] cc => I, Pos: [166, 187] cc => I, Pos: [168, 176, 181] ccc => cc, Pos: [169, 173] cc => I, Pos: [169, 173] cc => I, Pos: [171, 177] cc => I, Pos: [171, 177] cc => I, Pos: [173, 179] cc => I, Pos: [173, 179] cc => I, Pos: [175, 183] cc => I, Pos: [175, 183] cc => I, Pos: [180, 185] cc => I, Pos: [180, 185] cc => I, Pos: [182, 189] cc => I, Pos: [182, 189] cc => I, Pos: [183, 190] cc => I, Pos: [183, 190] cc => I, Pos: [186, 197] cc => I, Pos: [186, 197] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [193, 207] cc => I, Pos: [193, 207] cc => I, Pos: [196, 204] cc => I, Pos: [196, 204] cc => I, Pos: [197, 202] cc => I, Pos: [197, 202] cc => I, Pos: [198, 210] cc => I, Pos: [198, 210] cc => I, Pos: [199, 206] cc => I, Pos: [199, 206] cc => I, Pos: [205, 214] cc => I, Pos: [205, 214] cc => I, Pos: [216, 218] cc => I, Pos: [216, 218] cc => I, Pos: [219, 232] cc => I, Pos: [219, 232] cc => I, Pos: [223, 230] cc => I, Pos: [223, 230] cc => I, Pos: [224, 233] cc => I, Pos: [224, 233] cc => I, Pos: [231, 246] cc => I, Pos: [231, 246] cc => I, Pos: [232, 255] cc => I, Pos: [232, 255] cc => I, Pos: [233, 240] cc => I, Pos: [233, 240] cc => I, Pos: [236, 244] cc => I, Pos: [236, 244] cc => I, Pos: [238, 251] cc => I, Pos: [238, 251] cc => I, Pos: [242, 253] cc => I, Pos: [242, 253] cc => I, Pos: [245, 257] cc => I, Pos: [245, 257] cc => I, Pos: [249, 259] cc => I, Pos: [249, 259] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [252, 264] cc => I, Pos: [252, 264] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [263, 270] cc => I, Pos: [263, 270] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [278, 286] cc => I, Pos: [278, 286] cc => I, Pos: [281, 295] cc => I, Pos: [281, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [292, 307] cc => I, Pos: [292, 307] cc => I]

Plan: 1
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [11, 17] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [13, 23] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [27, 29] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [74, 81] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 140] cc => I,
 Pos: [131, 138] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 141, 148] ccc => cc,
 Pos: [147, 152, 157] ccc => cc,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [166, 187] cc => I,
 Pos: [169, 173] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [175, 183] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [186, 197] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [219, 232] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [224, 233] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 64, Saving: 65

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.15622162818908691

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 7] cc => I,
 Pos: [2, 8] cc => I,
 Pos: [6, 9] cc => I,
 Pos: [10, 18] cc => I,
 Pos: [11, 17] cc => I,
 Pos: [12, 21] cc => I,
 Pos: [13, 23] cc => I,
 Pos: [14, 20] cc => I,
 Pos: [16, 24] cc => I,
 Pos: [22, 28] cc => I,
 Pos: [27, 29] cc => I,
 Pos: [41, 50] cc => I,
 Pos: [47, 52] cc => I,
 Pos: [53, 59] cc => I,
 Pos: [57, 65] cc => I,
 Pos: [64, 68, 75] ccc => cc,
 Pos: [73, 87] cc => I,
 Pos: [74, 81] cc => I,
 Pos: [85, 90] cc => I,
 Pos: [88, 98] cc => I,
 Pos: [92, 100] cc => I,
 Pos: [93, 97] cc => I,
 Pos: [104, 112] cc => I,
 Pos: [110, 116] cc => I,
 Pos: [126, 132] cc => I,
 Pos: [130, 140] cc => I,
 Pos: [131, 138] cc => I,
 Pos: [134, 139] cc => I,
 Pos: [135, 141, 148] ccc => cc,
 Pos: [147, 152, 157] ccc => cc,
 Pos: [156, 161, 167] ccc => cc,
 Pos: [159, 168] cc => I,
 Pos: [166, 187] cc => I,
 Pos: [169, 173] cc => I,
 Pos: [171, 177] cc => I,
 Pos: [175, 183] cc => I,
 Pos: [180, 185] cc => I,
 Pos: [182, 189] cc => I,
 Pos: [186, 197] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [193, 207] cc => I,
 Pos: [196, 204] cc => I,
 Pos: [198, 210] cc => I,
 Pos: [199, 206] cc => I,
 Pos: [205, 214] cc => I,
 Pos: [216, 218] cc => I,
 Pos: [219, 232] cc => I,
 Pos: [223, 230] cc => I,
 Pos: [224, 233] cc => I,
 Pos: [231, 246] cc => I,
 Pos: [236, 244] cc => I,
 Pos: [238, 251] cc => I,
 Pos: [242, 253] cc => I,
 Pos: [245, 257] cc => I,
 Pos: [249, 259] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [252, 264] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 270] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [278, 286] cc => I,
 Pos: [281, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [292, 307] cc => I]
Change: 64, Saving: 65

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [0, 7] cc => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [6, 9] cc => I
Apply:  Pos: [10, 18] cc => I
Apply:  Pos: [11, 17] cc => I
Apply:  Pos: [12, 21] cc => I
Apply:  Pos: [13, 23] cc => I
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [16, 24] cc => I
Apply:  Pos: [22, 28] cc => I
Apply:  Pos: [27, 29] cc => I
Apply:  Pos: [41, 50] cc => I
Apply:  Pos: [47, 52] cc => I
Apply:  Pos: [53, 59] cc => I
Apply:  Pos: [57, 65] cc => I
Apply:  Pos: [64, 68, 75] ccc => cc
Apply:  Pos: [73, 87] cc => I
Apply:  Pos: [74, 81] cc => I
Apply:  Pos: [85, 90] cc => I
Apply:  Pos: [88, 98] cc => I
Apply:  Pos: [92, 100] cc => I
Apply:  Pos: [93, 97] cc => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [110, 116] cc => I
Apply:  Pos: [126, 132] cc => I
Apply:  Pos: [130, 140] cc => I
Apply:  Pos: [131, 138] cc => I
Apply:  Pos: [134, 139] cc => I
Apply:  Pos: [135, 141, 148] ccc => cc
Apply:  Pos: [147, 152, 157] ccc => cc
Apply:  Pos: [156, 161, 167] ccc => cc
Apply:  Pos: [159, 168] cc => I
Apply:  Pos: [166, 187] cc => I
Apply:  Pos: [169, 173] cc => I
Apply:  Pos: [171, 177] cc => I
Apply:  Pos: [175, 183] cc => I
Apply:  Pos: [180, 185] cc => I
Apply:  Pos: [182, 189] cc => I
Apply:  Pos: [186, 197] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [193, 207] cc => I
Apply:  Pos: [196, 204] cc => I
Apply:  Pos: [198, 210] cc => I
Apply:  Pos: [199, 206] cc => I
Apply:  Pos: [205, 214] cc => I
Apply:  Pos: [216, 218] cc => I
Apply:  Pos: [219, 232] cc => I
Apply:  Pos: [223, 230] cc => I
Apply:  Pos: [224, 233] cc => I
Apply:  Pos: [231, 246] cc => I
Apply:  Pos: [236, 244] cc => I
Apply:  Pos: [238, 251] cc => I
Apply:  Pos: [242, 253] cc => I
Apply:  Pos: [245, 257] cc => I
Apply:  Pos: [249, 259] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [252, 264] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 270] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [278, 286] cc => I
Apply:  Pos: [281, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [292, 307] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.01563715934753418

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 4], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [2, 7], [4, 0], [14, 11], [1, 6], [19, 2], [5, 14], [16, 4], [11, 0], [13, 1], [10, 7], [2, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 19], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [10, 19], [9, 12], [13, 11], [6, 2], [17, 15], [3, 18], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [12, 3], [5, 11], [14, 16], [19, 8], [17, 15], [3, 18], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [7, 3], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [7, 3], [5, 11], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [15, 13], [11, 19], [8, 3], [5, 11], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [15, 13], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  6.312487602233887

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[86, 98]
[105, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[5, 12, 17]
[30, 36, 54]
[99, 106, 108]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[11, 15, 20]
[36, 54, 64]
[59, 68, 73]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[86, 98]
[105, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.421421766281128

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 12, 17] ccc => cc, Pos: [11, 15, 20] ccc => cc, Pos: [30, 36, 54] ccc => cc, Pos: [36, 54, 64] ccc => cc, Pos: [59, 68, 73] ccc => cc, Pos: [86, 98] cc => I, Pos: [86, 98] cc => I, Pos: [99, 106, 108] ccc => cc, Pos: [105, 131] cc => I, Pos: [105, 131] cc => I]

Plan: 1
[Pos: [5, 12, 17] ccc => cc,
 Pos: [11, 15, 20] ccc => cc,
 Pos: [30, 36, 54] ccc => cc,
 Pos: [59, 68, 73] ccc => cc,
 Pos: [86, 98] cc => I,
 Pos: [99, 106, 108] ccc => cc,
 Pos: [105, 131] cc => I]
Change: 7, Saving: 7

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 12, 17] ccc => cc,
 Pos: [11, 15, 20] ccc => cc,
 Pos: [30, 36, 54] ccc => cc,
 Pos: [59, 68, 73] ccc => cc,
 Pos: [86, 98] cc => I,
 Pos: [99, 106, 108] ccc => cc,
 Pos: [105, 131] cc => I]
Change: 7, Saving: 7

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [5, 12, 17] ccc => cc
Apply:  Pos: [11, 15, 20] ccc => cc
Apply:  Pos: [30, 36, 54] ccc => cc
Apply:  Pos: [59, 68, 73] ccc => cc
Apply:  Pos: [86, 98] cc => I
Apply:  Pos: [99, 106, 108] ccc => cc
Apply:  Pos: [105, 131] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [19, 7], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [19, 7], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [5, 14], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [17, 5], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [10, 7], [19, 7], [16, 9], [19, 2], [5, 14], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.4370458126068115

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[98, 109, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[34, 61]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2343552112579346

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [34, 61] cc => I, Pos: [34, 61] cc => I, Pos: [98, 109, 126] ccc => cc]

Plan: 1
[Pos: [34, 61] cc => I, Pos: [98, 109, 126] ccc => cc]
Change: 2, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [34, 61] cc => I, Pos: [98, 109, 126] ccc => cc]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [34, 61] cc => I
Apply:  Pos: [98, 109, 126] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [5, 19], [0, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [5, 14], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 7], [10, 2], [19, 7], [16, 9], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.2343552112579346

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1562600135803223

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[1, 10], [15, 13], [8, 18], [2, 7], [19, 2], [16, 0], [6, 2], [13, 1], [16, 9], [5, 13], [3, 18], [19, 2], [4, 0], [14, 11], [1, 6], [2, 7], [5, 14], [11, 0], [13, 1], [10, 7], [0, 9], [14, 16], [1, 10], [13, 11], [10, 2], [11, 19], [4, 9], [17, 5], [10, 7], [9, 12], [5, 14], [11, 0], [6, 2], [14, 16], [0, 9], [16, 4], [15, 1], [8, 3], [12, 18], [5, 11], [17, 5], [1, 6], [8, 12], [3, 18], [13, 11], [17, 15], [4, 0], [14, 13], [5, 11], [12, 18], [15, 13], [9, 12], [13, 11], [6, 2], [17, 15], [12, 3], [10, 2], [14, 16], [15, 13], [11, 0], [17, 5], [16, 0], [14, 13], [3, 18], [5, 11], [14, 16], [19, 8], [17, 15], [13, 11], [7, 3], [0, 9], [15, 10], [5, 13], [14, 11], [19, 7], [13, 10], [8, 3], [2, 7], [19, 8], [13, 1], [12, 18], [15, 1], [11, 19], [0, 8], [17, 5], [16, 9], [5, 13], [17, 15], [8, 12], [4, 9], [0, 19], [5, 19], [1, 7], [12, 18], [6, 2], [10, 7], [17, 5], [11, 19], [8, 3], [10, 2], [3, 18], [16, 0], [12, 18], [19, 8], [0, 9], [15, 10], [9, 12], [5, 14], [0, 8], [16, 9], [7, 3], [4, 0], [1, 6], [8, 3], [0, 9], [19, 2], [11, 0], [8, 18], [15, 1], [10, 2], [19, 7], [10, 7], [16, 9], [19, 2], [3, 18], [13, 1], [9, 12], [14, 16], [10, 19], [8, 18], [5, 13], [4, 0], [1, 6], [0, 19], [1, 10], [19, 8], [5, 11], [11, 8], [19, 7], [12, 3], [13, 10], [15, 1], [0, 9], [2, 7], [15, 13], [1, 10], [9, 12], [8, 18], [4, 0], [7, 3], [0, 8], [6, 2], [10, 19], [12, 3], [13, 1], [17, 15], [2, 7], [1, 10], [8, 18], [14, 11], [8, 12], [17, 5], [19, 7], [6, 2], [14, 13], [16, 9], [5, 11], [8, 3], [0, 19], [2, 7], [12, 18], [1, 6], [14, 16], [13, 11], [10, 2], [15, 1], [12, 3], [4, 0], [19, 7], ----End Timer [Execute Mapping]:  3.1562600135803223

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [179] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 358

Reduced: 
 - size: 136 (43.17%)
 - depth: 8 (17.78%)

