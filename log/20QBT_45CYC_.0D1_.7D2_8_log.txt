----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499260902404785

[1, 2], [15, 5], [18, 12], [0, 6], [19, 17], [4, 11], [16, 10], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [19, 0], [4, 11], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [16, 4], [1, 15], [0, 6], [11, 12], [14, 19], [7, 17], [9, 12], [17, 0], [13, 18], [5, 3], [7, 1], [11, 12], [1, 5], [7, 17], [13, 18], [16, 4], [0, 6], [15, 2], [9, 11], [17, 0], [8, 7], [16, 10], [13, 3], [5, 2], [9, 11], [17, 0], [14, 8], [16, 3], [15, 2], [6, 10], [5, 18], [4, 11], [14, 8], [0, 6], [18, 9], [7, 1], [19, 17], [3, 10], [15, 2], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [1, 15], [8, 7], [0, 16], [17, 13], [9, 11], [3, 10], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [7, 13], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [16, 4], [13, 5], [19, 17], [14, 8], [0, 6], [18, 11], [1, 15], [2, 9], [16, 10], [13, 5], [4, 11], [7, 1], [14, 8], [19, 17], [0, 6], [6, 10], [7, 1], [17, 16], [4, 11], [19, 0], [15, 2], [13, 5], [14, 8], [0, 6], [13, 5], [2, 9], [18, 11], [3, 10], [1, 15], [19, 17], [14, 8], [6, 10], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [6, 10], [18, 11], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [17, 16], [19, 0], [14, 8], [6, 10], [13, 3], [19, 0], [15, 5], [17, 16], [14, 8], [6, 10], [17, 0], [13, 18], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [3, 4], [5, 2], [9, 11], [19, 16], [0, 16], [8, 7], [3, 4], [13, 18], [5, 2], [9, 11], [6, 10], [16, 3], [8, 7], [18, 9], [15, 2], [0, 6], [1, 5], [4, 11], [17, 13], [3, 10], [15, 2], [7, 17], [0, 6], [9, 12], [8, 13], [10, 4], [0, 16], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [4, 11], [7, 17], [8, 13], [19, 0], [1, 15], [3, 18], [5, 2], [3, 10], [19, 17], [15, 2], [14, 8], [4, 11], [0, 16], [18, 9], [13, 5], [3, 10], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [19, 0], [3, 18], [16, 10], [2, 9], [13, 18], [5, 3], [16, 10], [19, 0], [9, 12], [15, 5], [8, 13], [1, 2], [19, 16], [1, 5], [7, 13], [3, 18], [9, 12], [17, 0], [19, 16], [7, 17], [1, 5], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [7, 13], [4, 11], [8, 17], [3, 18], [16, 10], [7, 17], [19, 0], [13, 18], [4, 11], [5, 3], [1, 2], [16, 10], [4, 11], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [13, 3], [18, 12], [15, 2], [7, 1], [4, 11], [0, 6], [10, 4], [14, 19], [18, 12], [8, 17], [1, 2], [15, 5], [9, 11], [16, 10], [8, 7], [1, 2], [15, 5], [11, 12], [0, 6], [13, 3], [14, 19], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [16, 4], [17, 13], [3, 10], [14, 8], [7, 1], [18, 12], [19, 0], [16, 4], [1, 5], [7, 13], [8, 17], [0, 6], [9, 11], [19, 16], [1, 5], [9, 11], [8, 13], [18, 12], [6, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 26, 32]
[109, 113, 125]
[162, 175, 180]
[189, 192, 199]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 12, 21]
[82, 94, 98]
[103, 116, 121]
[191, 200, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[95, 96, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.203159809112549

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 12, 21] ccc => cc, Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [6, 40] cc => I, Pos: [6, 40] cc => I, Pos: [19, 34] cc => I, Pos: [19, 34] cc => I, Pos: [24, 26, 32] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [45, 51] cc => I, Pos: [45, 51] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [56, 71] cc => I, Pos: [56, 71] cc => I, Pos: [64, 66] cc => I, Pos: [64, 66] cc => I, Pos: [66, 77] cc => I, Pos: [66, 77] cc => I, Pos: [73, 100] cc => I, Pos: [73, 100] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [82, 94, 98] ccc => cc, Pos: [83, 99] cc => I, Pos: [83, 99] cc => I, Pos: [88, 92] cc => I, Pos: [88, 92] cc => I, Pos: [95, 96, 104] ccc => cc, Pos: [97, 105] cc => I, Pos: [97, 105] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [99, 108] cc => I, Pos: [99, 108] cc => I, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [103, 116, 121] ccc => cc, Pos: [105, 117] cc => I, Pos: [105, 117] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [109, 113, 125] ccc => cc, Pos: [117, 120] cc => I, Pos: [117, 120] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 136] cc => I, Pos: [122, 136] cc => I, Pos: [125, 140] cc => I, Pos: [125, 140] cc => I, Pos: [126, 130] cc => I, Pos: [126, 130] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [148, 155] cc => I, Pos: [148, 155] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [156, 163] cc => I, Pos: [156, 163] cc => I, Pos: [159, 172] cc => I, Pos: [159, 172] cc => I, Pos: [162, 175, 180] ccc => cc, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [166, 173] cc => I, Pos: [166, 173] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 187] cc => I, Pos: [180, 187] cc => I, Pos: [189, 192, 199] ccc => cc, Pos: [191, 200, 209] ccc => cc, Pos: [197, 208] cc => I, Pos: [197, 208] cc => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [219, 226] cc => I, Pos: [219, 226] cc => I, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [226, 230] cc => I, Pos: [226, 230] cc => I, Pos: [232, 240] cc => I, Pos: [232, 240] cc => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [238, 250] cc => I, Pos: [238, 250] cc => I, Pos: [242, 248] cc => I, Pos: [242, 248] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [258, 262] cc => I, Pos: [258, 262] cc => I, Pos: [261, 268] cc => I, Pos: [261, 268] cc => I, Pos: [262, 273] cc => I, Pos: [262, 273] cc => I, Pos: [263, 280] cc => I, Pos: [263, 280] cc => I, Pos: [265, 270] cc => I, Pos: [265, 270] cc => I, Pos: [269, 288] cc => I, Pos: [269, 288] cc => I, Pos: [270, 277] cc => I, Pos: [270, 277] cc => I, Pos: [274, 287] cc => I, Pos: [274, 287] cc => I, Pos: [276, 289] cc => I, Pos: [276, 289] cc => I, Pos: [279, 284] cc => I, Pos: [279, 284] cc => I, Pos: [280, 285] cc => I, Pos: [280, 285] cc => I, Pos: [296, 303] cc => I, Pos: [296, 303] cc => I, Pos: [301, 313] cc => I, Pos: [301, 313] cc => I, Pos: [304, 310] cc => I, Pos: [304, 310] cc => I, Pos: [308, 311] cc => I, Pos: [308, 311] cc => I]

Plan: 1
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [64, 66] cc => I,
 Pos: [73, 100] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [82, 94, 98] ccc => cc,
 Pos: [83, 99] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [97, 105] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [109, 113, 125] ccc => cc,
 Pos: [117, 120] cc => I,
 Pos: [122, 136] cc => I,
 Pos: [126, 130] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [162, 175, 180] ccc => cc,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [219, 226] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [236, 242] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [262, 273] cc => I,
 Pos: [263, 280] cc => I,
 Pos: [265, 270] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 61, Saving: 226

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [64, 66] cc => I,
 Pos: [73, 100] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [82, 94, 98] ccc => cc,
 Pos: [83, 99] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [97, 105] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [109, 113, 125] ccc => cc,
 Pos: [117, 120] cc => I,
 Pos: [122, 136] cc => I,
 Pos: [126, 130] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [162, 175, 180] ccc => cc,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [219, 226] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [236, 242] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [262, 273] cc => I,
 Pos: [263, 280] cc => I,
 Pos: [265, 270] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 61, Saving: 226

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 12, 21] ccc => cc
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [6, 40] cc => I
Apply:  Pos: [19, 34] cc => I
Apply:  Pos: [24, 26, 32] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [45, 51] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [56, 71] cc => I
Apply:  Pos: [64, 66] cc => I
Apply:  Pos: [73, 100] cc => I
Apply:  Pos: [79, 88] cc => I
Apply:  Pos: [82, 94, 98] ccc => cc
Apply:  Pos: [83, 99] cc => I
Apply:  Pos: [95, 96, 104] ccc => cc
Apply:  Pos: [97, 105] cc => I
Apply:  Pos: [103, 116, 121] ccc => cc
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [109, 113, 125] ccc => cc
Apply:  Pos: [117, 120] cc => I
Apply:  Pos: [122, 136] cc => I
Apply:  Pos: [126, 130] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [148, 155] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [159, 172] cc => I
Apply:  Pos: [162, 175, 180] ccc => cc
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [166, 173] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [189, 192, 199] ccc => cc
Apply:  Pos: [191, 200, 209] ccc => cc
Apply:  Pos: [197, 208] cc => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [219, 226] cc => I
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [232, 240] cc => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [238, 250] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [262, 273] cc => I
Apply:  Pos: [263, 280] cc => I
Apply:  Pos: [265, 270] cc => I
Apply:  Pos: [269, 288] cc => I
Apply:  Pos: [274, 287] cc => I
Apply:  Pos: [276, 289] cc => I
Apply:  Pos: [279, 284] cc => I
Apply:  Pos: [296, 303] cc => I
Apply:  Pos: [301, 313] cc => I
Apply:  Pos: [304, 310] cc => I
Apply:  Pos: [308, 311] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 6], [15, 2], [8, 7], [13, 3], [5, 2], [16, 3], [6, 10], [5, 18], [4, 11], [0, 6], [18, 9], [7, 1], [19, 17], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [16, 10], [1, 5], [14, 19], [15, 2], [9, 11], [3, 4], [18, 12], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [16, 10], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 18], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [3, 18], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [10, 4], [18, 12], [8, 17], [9, 11], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  6.203159809112549

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[50, 58]
[159, 180]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[47, 56, 63]
[78, 80, 87]
[156, 161, 165]
[174, 177, 181]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 63, 69]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[50, 58]
[159, 180]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.687488555908203

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [26, 32, 35] ccc => cc, Pos: [30, 40] cc => I, Pos: [30, 40] cc => I, Pos: [47, 56, 63] ccc => cc, Pos: [50, 58] cc => I, Pos: [50, 58] cc => I, Pos: [56, 63, 69] ccc => cc, Pos: [78, 80, 87] ccc => cc, Pos: [156, 161, 165] ccc => cc, Pos: [159, 180] cc => I, Pos: [159, 180] cc => I, Pos: [174, 177, 181] ccc => cc]

Plan: 1
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [47, 56, 63] ccc => cc,
 Pos: [50, 58] cc => I,
 Pos: [78, 80, 87] ccc => cc,
 Pos: [156, 161, 165] ccc => cc,
 Pos: [159, 180] cc => I,
 Pos: [174, 177, 181] ccc => cc]
Change: 8, Saving: 22

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [47, 56, 63] ccc => cc,
 Pos: [50, 58] cc => I,
 Pos: [78, 80, 87] ccc => cc,
 Pos: [156, 161, 165] ccc => cc,
 Pos: [159, 180] cc => I,
 Pos: [174, 177, 181] ccc => cc]
Change: 8, Saving: 22

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [30, 40] cc => I
Apply:  Pos: [47, 56, 63] ccc => cc
Apply:  Pos: [50, 58] cc => I
Apply:  Pos: [78, 80, 87] ccc => cc
Apply:  Pos: [156, 161, 165] ccc => cc
Apply:  Pos: [159, 180] cc => I
Apply:  Pos: [174, 177, 181] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [16, 10], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [16, 10], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [10, 4], [18, 12], [8, 17], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.687488555908203

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[52, 63]
[151, 156]
[168, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[52, 63]
[151, 156]
[168, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.468736410140991

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [52, 63] cc => I, Pos: [52, 63] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [168, 175] cc => I, Pos: [168, 175] cc => I]

Plan: 1
[Pos: [52, 63] cc => I, Pos: [151, 156] cc => I, Pos: [168, 175] cc => I]
Change: 3, Saving: 12

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [52, 63] cc => I, Pos: [151, 156] cc => I, Pos: [168, 175] cc => I]
Change: 3, Saving: 12

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [52, 63] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [168, 175] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [15, 2], [9, 11], [3, 4], [9, 12], [18, 12], [15, 5], [7, 13], [3, 18], [19, 17], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [18, 12], [8, 7], [8, 17], [15, 5], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.468736410140991

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.389904260635376

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [18, 12], [8, 17], [8, 7], [15, 5], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.389904260635376

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [185] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 370

Reduced: 
 - size: 130 (41.27%)
 - cycle: 260 (41.27%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500476837158203

[1, 2], [15, 5], [18, 12], [0, 6], [19, 17], [4, 11], [16, 10], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [19, 0], [4, 11], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [16, 4], [1, 15], [0, 6], [11, 12], [14, 19], [7, 17], [9, 12], [17, 0], [13, 18], [5, 3], [7, 1], [11, 12], [1, 5], [7, 17], [13, 18], [16, 4], [0, 6], [15, 2], [9, 11], [17, 0], [8, 7], [16, 10], [13, 3], [5, 2], [9, 11], [17, 0], [14, 8], [16, 3], [15, 2], [6, 10], [5, 18], [4, 11], [14, 8], [0, 6], [18, 9], [7, 1], [19, 17], [3, 10], [15, 2], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [1, 15], [8, 7], [0, 16], [17, 13], [9, 11], [3, 10], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [7, 13], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [16, 4], [13, 5], [19, 17], [14, 8], [0, 6], [18, 11], [1, 15], [2, 9], [16, 10], [13, 5], [4, 11], [7, 1], [14, 8], [19, 17], [0, 6], [6, 10], [7, 1], [17, 16], [4, 11], [19, 0], [15, 2], [13, 5], [14, 8], [0, 6], [13, 5], [2, 9], [18, 11], [3, 10], [1, 15], [19, 17], [14, 8], [6, 10], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [6, 10], [18, 11], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [17, 16], [19, 0], [14, 8], [6, 10], [13, 3], [19, 0], [15, 5], [17, 16], [14, 8], [6, 10], [17, 0], [13, 18], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [3, 4], [5, 2], [9, 11], [19, 16], [0, 16], [8, 7], [3, 4], [13, 18], [5, 2], [9, 11], [6, 10], [16, 3], [8, 7], [18, 9], [15, 2], [0, 6], [1, 5], [4, 11], [17, 13], [3, 10], [15, 2], [7, 17], [0, 6], [9, 12], [8, 13], [10, 4], [0, 16], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [4, 11], [7, 17], [8, 13], [19, 0], [1, 15], [3, 18], [5, 2], [3, 10], [19, 17], [15, 2], [14, 8], [4, 11], [0, 16], [18, 9], [13, 5], [3, 10], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [19, 0], [3, 18], [16, 10], [2, 9], [13, 18], [5, 3], [16, 10], [19, 0], [9, 12], [15, 5], [8, 13], [1, 2], [19, 16], [1, 5], [7, 13], [3, 18], [9, 12], [17, 0], [19, 16], [7, 17], [1, 5], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [7, 13], [4, 11], [8, 17], [3, 18], [16, 10], [7, 17], [19, 0], [13, 18], [4, 11], [5, 3], [1, 2], [16, 10], [4, 11], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [13, 3], [18, 12], [15, 2], [7, 1], [4, 11], [0, 6], [10, 4], [14, 19], [18, 12], [8, 17], [1, 2], [15, 5], [9, 11], [16, 10], [8, 7], [1, 2], [15, 5], [11, 12], [0, 6], [13, 3], [14, 19], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [16, 4], [17, 13], [3, 10], [14, 8], [7, 1], [18, 12], [19, 0], [16, 4], [1, 5], [7, 13], [8, 17], [0, 6], [9, 11], [19, 16], [1, 5], [9, 11], [8, 13], [18, 12], [6, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 26, 32]
[109, 113, 125]
[162, 175, 180]
[189, 192, 199]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 12, 21]
[82, 94, 98]
[103, 116, 121]
[191, 200, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[95, 96, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.140816926956177

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 12, 21] ccc => cc, Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [6, 40] cc => I, Pos: [6, 40] cc => I, Pos: [19, 34] cc => I, Pos: [19, 34] cc => I, Pos: [24, 26, 32] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [45, 51] cc => I, Pos: [45, 51] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [56, 71] cc => I, Pos: [56, 71] cc => I, Pos: [64, 66] cc => I, Pos: [64, 66] cc => I, Pos: [66, 77] cc => I, Pos: [66, 77] cc => I, Pos: [73, 100] cc => I, Pos: [73, 100] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [82, 94, 98] ccc => cc, Pos: [83, 99] cc => I, Pos: [83, 99] cc => I, Pos: [88, 92] cc => I, Pos: [88, 92] cc => I, Pos: [95, 96, 104] ccc => cc, Pos: [97, 105] cc => I, Pos: [97, 105] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [99, 108] cc => I, Pos: [99, 108] cc => I, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [103, 116, 121] ccc => cc, Pos: [105, 117] cc => I, Pos: [105, 117] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [109, 113, 125] ccc => cc, Pos: [117, 120] cc => I, Pos: [117, 120] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 136] cc => I, Pos: [122, 136] cc => I, Pos: [125, 140] cc => I, Pos: [125, 140] cc => I, Pos: [126, 130] cc => I, Pos: [126, 130] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [148, 155] cc => I, Pos: [148, 155] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [156, 163] cc => I, Pos: [156, 163] cc => I, Pos: [159, 172] cc => I, Pos: [159, 172] cc => I, Pos: [162, 175, 180] ccc => cc, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [166, 173] cc => I, Pos: [166, 173] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 187] cc => I, Pos: [180, 187] cc => I, Pos: [189, 192, 199] ccc => cc, Pos: [191, 200, 209] ccc => cc, Pos: [197, 208] cc => I, Pos: [197, 208] cc => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [219, 226] cc => I, Pos: [219, 226] cc => I, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [226, 230] cc => I, Pos: [226, 230] cc => I, Pos: [232, 240] cc => I, Pos: [232, 240] cc => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [238, 250] cc => I, Pos: [238, 250] cc => I, Pos: [242, 248] cc => I, Pos: [242, 248] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [258, 262] cc => I, Pos: [258, 262] cc => I, Pos: [261, 268] cc => I, Pos: [261, 268] cc => I, Pos: [262, 273] cc => I, Pos: [262, 273] cc => I, Pos: [263, 280] cc => I, Pos: [263, 280] cc => I, Pos: [265, 270] cc => I, Pos: [265, 270] cc => I, Pos: [269, 288] cc => I, Pos: [269, 288] cc => I, Pos: [270, 277] cc => I, Pos: [270, 277] cc => I, Pos: [274, 287] cc => I, Pos: [274, 287] cc => I, Pos: [276, 289] cc => I, Pos: [276, 289] cc => I, Pos: [279, 284] cc => I, Pos: [279, 284] cc => I, Pos: [280, 285] cc => I, Pos: [280, 285] cc => I, Pos: [296, 303] cc => I, Pos: [296, 303] cc => I, Pos: [301, 313] cc => I, Pos: [301, 313] cc => I, Pos: [304, 310] cc => I, Pos: [304, 310] cc => I, Pos: [308, 311] cc => I, Pos: [308, 311] cc => I]

Plan: 1
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [64, 66] cc => I,
 Pos: [73, 100] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [82, 94, 98] ccc => cc,
 Pos: [83, 99] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [97, 105] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [109, 113, 125] ccc => cc,
 Pos: [117, 120] cc => I,
 Pos: [122, 136] cc => I,
 Pos: [126, 130] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [162, 175, 180] ccc => cc,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [219, 226] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [236, 242] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [262, 273] cc => I,
 Pos: [263, 280] cc => I,
 Pos: [265, 270] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 61, Saving: 63

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.15605878829956055

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [64, 66] cc => I,
 Pos: [73, 100] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [82, 94, 98] ccc => cc,
 Pos: [83, 99] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [97, 105] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [109, 113, 125] ccc => cc,
 Pos: [117, 120] cc => I,
 Pos: [122, 136] cc => I,
 Pos: [126, 130] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [162, 175, 180] ccc => cc,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [219, 226] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [236, 242] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [262, 273] cc => I,
 Pos: [263, 280] cc => I,
 Pos: [265, 270] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 61, Saving: 63

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 12, 21] ccc => cc
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [6, 40] cc => I
Apply:  Pos: [19, 34] cc => I
Apply:  Pos: [24, 26, 32] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [45, 51] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [56, 71] cc => I
Apply:  Pos: [64, 66] cc => I
Apply:  Pos: [73, 100] cc => I
Apply:  Pos: [79, 88] cc => I
Apply:  Pos: [82, 94, 98] ccc => cc
Apply:  Pos: [83, 99] cc => I
Apply:  Pos: [95, 96, 104] ccc => cc
Apply:  Pos: [97, 105] cc => I
Apply:  Pos: [103, 116, 121] ccc => cc
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [109, 113, 125] ccc => cc
Apply:  Pos: [117, 120] cc => I
Apply:  Pos: [122, 136] cc => I
Apply:  Pos: [126, 130] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [148, 155] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [159, 172] cc => I
Apply:  Pos: [162, 175, 180] ccc => cc
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [166, 173] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [189, 192, 199] ccc => cc
Apply:  Pos: [191, 200, 209] ccc => cc
Apply:  Pos: [197, 208] cc => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [219, 226] cc => I
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [232, 240] cc => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [238, 250] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [262, 273] cc => I
Apply:  Pos: [263, 280] cc => I
Apply:  Pos: [265, 270] cc => I
Apply:  Pos: [269, 288] cc => I
Apply:  Pos: [274, 287] cc => I
Apply:  Pos: [276, 289] cc => I
Apply:  Pos: [279, 284] cc => I
Apply:  Pos: [296, 303] cc => I
Apply:  Pos: [301, 313] cc => I
Apply:  Pos: [304, 310] cc => I
Apply:  Pos: [308, 311] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 6], [15, 2], [8, 7], [13, 3], [5, 2], [16, 3], [6, 10], [5, 18], [4, 11], [0, 6], [18, 9], [7, 1], [19, 17], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [16, 10], [1, 5], [14, 19], [15, 2], [9, 11], [3, 4], [18, 12], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [16, 10], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 18], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [3, 18], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [10, 4], [18, 12], [8, 17], [9, 11], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  6.296875715255737

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[50, 58]
[159, 180]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[47, 56, 63]
[78, 80, 87]
[156, 161, 165]
[174, 177, 181]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 63, 69]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[50, 58]
[159, 180]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6875596046447754

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [26, 32, 35] ccc => cc, Pos: [30, 40] cc => I, Pos: [30, 40] cc => I, Pos: [47, 56, 63] ccc => cc, Pos: [50, 58] cc => I, Pos: [50, 58] cc => I, Pos: [56, 63, 69] ccc => cc, Pos: [78, 80, 87] ccc => cc, Pos: [156, 161, 165] ccc => cc, Pos: [159, 180] cc => I, Pos: [159, 180] cc => I, Pos: [174, 177, 181] ccc => cc]

Plan: 1
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [47, 56, 63] ccc => cc,
 Pos: [50, 58] cc => I,
 Pos: [78, 80, 87] ccc => cc,
 Pos: [156, 161, 165] ccc => cc,
 Pos: [159, 180] cc => I,
 Pos: [174, 177, 181] ccc => cc]
Change: 8, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015622854232788086

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [47, 56, 63] ccc => cc,
 Pos: [50, 58] cc => I,
 Pos: [78, 80, 87] ccc => cc,
 Pos: [156, 161, 165] ccc => cc,
 Pos: [159, 180] cc => I,
 Pos: [174, 177, 181] ccc => cc]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [30, 40] cc => I
Apply:  Pos: [47, 56, 63] ccc => cc
Apply:  Pos: [50, 58] cc => I
Apply:  Pos: [78, 80, 87] ccc => cc
Apply:  Pos: [156, 161, 165] ccc => cc
Apply:  Pos: [159, 180] cc => I
Apply:  Pos: [174, 177, 181] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [16, 10], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [16, 10], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [10, 4], [18, 12], [8, 17], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.7031824588775635

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[52, 63]
[151, 156]
[168, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[52, 63]
[151, 156]
[168, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.405953884124756

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [52, 63] cc => I, Pos: [52, 63] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [168, 175] cc => I, Pos: [168, 175] cc => I]

Plan: 1
[Pos: [52, 63] cc => I, Pos: [151, 156] cc => I, Pos: [168, 175] cc => I]
Change: 3, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015619754791259766

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [52, 63] cc => I, Pos: [151, 156] cc => I, Pos: [168, 175] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [52, 63] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [168, 175] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [15, 2], [9, 11], [3, 4], [9, 12], [18, 12], [15, 5], [7, 13], [3, 18], [19, 17], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [18, 12], [8, 7], [8, 17], [15, 5], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.4215736389160156

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.312498092651367

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [18, 12], [8, 17], [8, 7], [15, 5], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.312498092651367

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [185] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 370

Reduced: 
 - size: 130 (41.27%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499046325683594

[1, 2], [15, 5], [18, 12], [0, 6], [19, 17], [4, 11], [16, 10], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [19, 0], [4, 11], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [16, 4], [1, 15], [0, 6], [11, 12], [14, 19], [7, 17], [9, 12], [17, 0], [13, 18], [5, 3], [7, 1], [11, 12], [1, 5], [7, 17], [13, 18], [16, 4], [0, 6], [15, 2], [9, 11], [17, 0], [8, 7], [16, 10], [13, 3], [5, 2], [9, 11], [17, 0], [14, 8], [16, 3], [15, 2], [6, 10], [5, 18], [4, 11], [14, 8], [0, 6], [18, 9], [7, 1], [19, 17], [3, 10], [15, 2], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [1, 15], [8, 7], [0, 16], [17, 13], [9, 11], [3, 10], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [7, 13], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [16, 4], [13, 5], [19, 17], [14, 8], [0, 6], [18, 11], [1, 15], [2, 9], [16, 10], [13, 5], [4, 11], [7, 1], [14, 8], [19, 17], [0, 6], [6, 10], [7, 1], [17, 16], [4, 11], [19, 0], [15, 2], [13, 5], [14, 8], [0, 6], [13, 5], [2, 9], [18, 11], [3, 10], [1, 15], [19, 17], [14, 8], [6, 10], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [6, 10], [18, 11], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [17, 16], [19, 0], [14, 8], [6, 10], [13, 3], [19, 0], [15, 5], [17, 16], [14, 8], [6, 10], [17, 0], [13, 18], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [3, 4], [5, 2], [9, 11], [19, 16], [0, 16], [8, 7], [3, 4], [13, 18], [5, 2], [9, 11], [6, 10], [16, 3], [8, 7], [18, 9], [15, 2], [0, 6], [1, 5], [4, 11], [17, 13], [3, 10], [15, 2], [7, 17], [0, 6], [9, 12], [8, 13], [10, 4], [0, 16], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [4, 11], [7, 17], [8, 13], [19, 0], [1, 15], [3, 18], [5, 2], [3, 10], [19, 17], [15, 2], [14, 8], [4, 11], [0, 16], [18, 9], [13, 5], [3, 10], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [19, 0], [3, 18], [16, 10], [2, 9], [13, 18], [5, 3], [16, 10], [19, 0], [9, 12], [15, 5], [8, 13], [1, 2], [19, 16], [1, 5], [7, 13], [3, 18], [9, 12], [17, 0], [19, 16], [7, 17], [1, 5], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [7, 13], [4, 11], [8, 17], [3, 18], [16, 10], [7, 17], [19, 0], [13, 18], [4, 11], [5, 3], [1, 2], [16, 10], [4, 11], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [13, 3], [18, 12], [15, 2], [7, 1], [4, 11], [0, 6], [10, 4], [14, 19], [18, 12], [8, 17], [1, 2], [15, 5], [9, 11], [16, 10], [8, 7], [1, 2], [15, 5], [11, 12], [0, 6], [13, 3], [14, 19], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [16, 4], [17, 13], [3, 10], [14, 8], [7, 1], [18, 12], [19, 0], [16, 4], [1, 5], [7, 13], [8, 17], [0, 6], [9, 11], [19, 16], [1, 5], [9, 11], [8, 13], [18, 12], [6, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 26, 32]
[109, 113, 125]
[162, 175, 180]
[189, 192, 199]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 12, 21]
[82, 94, 98]
[103, 116, 121]
[191, 200, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[95, 96, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.108696222305298

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 12, 21] ccc => cc, Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [6, 40] cc => I, Pos: [6, 40] cc => I, Pos: [19, 34] cc => I, Pos: [19, 34] cc => I, Pos: [24, 26, 32] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [45, 51] cc => I, Pos: [45, 51] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [56, 71] cc => I, Pos: [56, 71] cc => I, Pos: [64, 66] cc => I, Pos: [64, 66] cc => I, Pos: [66, 77] cc => I, Pos: [66, 77] cc => I, Pos: [73, 100] cc => I, Pos: [73, 100] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [82, 94, 98] ccc => cc, Pos: [83, 99] cc => I, Pos: [83, 99] cc => I, Pos: [88, 92] cc => I, Pos: [88, 92] cc => I, Pos: [95, 96, 104] ccc => cc, Pos: [97, 105] cc => I, Pos: [97, 105] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [99, 108] cc => I, Pos: [99, 108] cc => I, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [103, 116, 121] ccc => cc, Pos: [105, 117] cc => I, Pos: [105, 117] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [109, 113, 125] ccc => cc, Pos: [117, 120] cc => I, Pos: [117, 120] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 136] cc => I, Pos: [122, 136] cc => I, Pos: [125, 140] cc => I, Pos: [125, 140] cc => I, Pos: [126, 130] cc => I, Pos: [126, 130] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [148, 155] cc => I, Pos: [148, 155] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [156, 163] cc => I, Pos: [156, 163] cc => I, Pos: [159, 172] cc => I, Pos: [159, 172] cc => I, Pos: [162, 175, 180] ccc => cc, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [166, 173] cc => I, Pos: [166, 173] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 187] cc => I, Pos: [180, 187] cc => I, Pos: [189, 192, 199] ccc => cc, Pos: [191, 200, 209] ccc => cc, Pos: [197, 208] cc => I, Pos: [197, 208] cc => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [219, 226] cc => I, Pos: [219, 226] cc => I, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [226, 230] cc => I, Pos: [226, 230] cc => I, Pos: [232, 240] cc => I, Pos: [232, 240] cc => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [238, 250] cc => I, Pos: [238, 250] cc => I, Pos: [242, 248] cc => I, Pos: [242, 248] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [258, 262] cc => I, Pos: [258, 262] cc => I, Pos: [261, 268] cc => I, Pos: [261, 268] cc => I, Pos: [262, 273] cc => I, Pos: [262, 273] cc => I, Pos: [263, 280] cc => I, Pos: [263, 280] cc => I, Pos: [265, 270] cc => I, Pos: [265, 270] cc => I, Pos: [269, 288] cc => I, Pos: [269, 288] cc => I, Pos: [270, 277] cc => I, Pos: [270, 277] cc => I, Pos: [274, 287] cc => I, Pos: [274, 287] cc => I, Pos: [276, 289] cc => I, Pos: [276, 289] cc => I, Pos: [279, 284] cc => I, Pos: [279, 284] cc => I, Pos: [280, 285] cc => I, Pos: [280, 285] cc => I, Pos: [296, 303] cc => I, Pos: [296, 303] cc => I, Pos: [301, 313] cc => I, Pos: [301, 313] cc => I, Pos: [304, 310] cc => I, Pos: [304, 310] cc => I, Pos: [308, 311] cc => I, Pos: [308, 311] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [64, 66] cc => I,
 Pos: [100, 110] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [98, 109] cc => I,
 Pos: [83, 99] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [105, 117] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 136] cc => I,
 Pos: [125, 140] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [156, 163] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [180, 187] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [219, 226] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [236, 242] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [258, 262] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [280, 285] cc => I,
 Pos: [270, 277] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 58, Saving: 220

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 12, 21] ccc => cc
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [6, 40] cc => I
Apply:  Pos: [19, 34] cc => I
Apply:  Pos: [24, 26, 32] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [45, 51] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [56, 71] cc => I
Apply:  Pos: [64, 66] cc => I
Apply:  Pos: [100, 110] cc => I
Apply:  Pos: [79, 88] cc => I
Apply:  Pos: [98, 109] cc => I
Apply:  Pos: [83, 99] cc => I
Apply:  Pos: [95, 96, 104] ccc => cc
Apply:  Pos: [105, 117] cc => I
Apply:  Pos: [103, 116, 121] ccc => cc
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 136] cc => I
Apply:  Pos: [125, 140] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [148, 155] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [156, 163] cc => I
Apply:  Pos: [159, 172] cc => I
Apply:  Pos: [180, 187] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [166, 173] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [189, 192, 199] ccc => cc
Apply:  Pos: [191, 200, 209] ccc => cc
Apply:  Pos: [197, 208] cc => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [219, 226] cc => I
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [232, 240] cc => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [238, 250] cc => I
Apply:  Pos: [258, 262] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [280, 285] cc => I
Apply:  Pos: [270, 277] cc => I
Apply:  Pos: [269, 288] cc => I
Apply:  Pos: [274, 287] cc => I
Apply:  Pos: [276, 289] cc => I
Apply:  Pos: [279, 284] cc => I
Apply:  Pos: [296, 303] cc => I
Apply:  Pos: [301, 313] cc => I
Apply:  Pos: [304, 310] cc => I
Apply:  Pos: [308, 311] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 6], [15, 2], [8, 7], [13, 3], [5, 2], [16, 3], [6, 10], [5, 18], [4, 11], [0, 6], [18, 9], [7, 1], [19, 17], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [16, 10], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [16, 10], [10, 4], [13, 5], [18, 11], [1, 15], [15, 2], [14, 8], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [13, 5], [3, 10], [1, 15], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 18], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [4, 11], [8, 17], [3, 18], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [4, 11], [10, 4], [8, 17], [9, 11], [16, 10], [8, 7], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  6.108696222305298

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[72, 82]
[76, 87]
[165, 181]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[47, 57, 64]
[79, 81, 90]
[157, 162, 167]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 64, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[72, 82]
[76, 87]
[165, 181]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.717979669570923

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [26, 32, 35] ccc => cc, Pos: [30, 40] cc => I, Pos: [30, 40] cc => I, Pos: [47, 57, 64] ccc => cc, Pos: [57, 64, 70] ccc => cc, Pos: [72, 82] cc => I, Pos: [72, 82] cc => I, Pos: [76, 87] cc => I, Pos: [76, 87] cc => I, Pos: [79, 81, 90] ccc => cc, Pos: [157, 162, 167] ccc => cc, Pos: [165, 181] cc => I, Pos: [165, 181] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [47, 57, 64] ccc => cc,
 Pos: [72, 82] cc => I,
 Pos: [76, 87] cc => I,
 Pos: [79, 81, 90] ccc => cc,
 Pos: [157, 162, 167] ccc => cc,
 Pos: [165, 181] cc => I]
Change: 8, Saving: 24

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [30, 40] cc => I
Apply:  Pos: [47, 57, 64] ccc => cc
Apply:  Pos: [72, 82] cc => I
Apply:  Pos: [76, 87] cc => I
Apply:  Pos: [79, 81, 90] ccc => cc
Apply:  Pos: [157, 162, 167] ccc => cc
Apply:  Pos: [165, 181] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [16, 10], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [16, 10], [10, 4], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [10, 4], [8, 17], [9, 11], [16, 10], [8, 7], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.717979669570923

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[54, 66]
[150, 156]
[151, 172]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[167, 170, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[54, 66]
[150, 156]
[151, 172]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.452247381210327

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [54, 66] cc => I, Pos: [54, 66] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [151, 172] cc => I, Pos: [151, 172] cc => I, Pos: [167, 170, 173] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [54, 66] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [151, 172] cc => I,
 Pos: [167, 170, 173] ccc => cc]
Change: 4, Saving: 14

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [54, 66] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [151, 172] cc => I
Apply:  Pos: [167, 170, 173] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [9, 12], [18, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [10, 4], [8, 17], [8, 7], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.452247381210327

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[165, 170]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[165, 170]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2979073524475098

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [165, 170] cc => I, Pos: [165, 170] cc => I]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [165, 170] cc => I]
Change: 1, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [165, 170] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [8, 7], [8, 17], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.313530921936035

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2821061611175537

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [9, 12], [18, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [8, 17], [8, 7], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.2821061611175537

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [184] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 368

Reduced: 
 - size: 131 (41.59%)
 - cycle: 262 (41.59%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938072204589844

[1, 2], [15, 5], [18, 12], [0, 6], [19, 17], [4, 11], [16, 10], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [19, 0], [4, 11], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [16, 4], [1, 15], [0, 6], [11, 12], [14, 19], [7, 17], [9, 12], [17, 0], [13, 18], [5, 3], [7, 1], [11, 12], [1, 5], [7, 17], [13, 18], [16, 4], [0, 6], [15, 2], [9, 11], [17, 0], [8, 7], [16, 10], [13, 3], [5, 2], [9, 11], [17, 0], [14, 8], [16, 3], [15, 2], [6, 10], [5, 18], [4, 11], [14, 8], [0, 6], [18, 9], [7, 1], [19, 17], [3, 10], [15, 2], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [1, 15], [8, 7], [0, 16], [17, 13], [9, 11], [3, 10], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [7, 13], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [16, 4], [13, 5], [19, 17], [14, 8], [0, 6], [18, 11], [1, 15], [2, 9], [16, 10], [13, 5], [4, 11], [7, 1], [14, 8], [19, 17], [0, 6], [6, 10], [7, 1], [17, 16], [4, 11], [19, 0], [15, 2], [13, 5], [14, 8], [0, 6], [13, 5], [2, 9], [18, 11], [3, 10], [1, 15], [19, 17], [14, 8], [6, 10], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [6, 10], [18, 11], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [17, 16], [19, 0], [14, 8], [6, 10], [13, 3], [19, 0], [15, 5], [17, 16], [14, 8], [6, 10], [17, 0], [13, 18], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [3, 4], [5, 2], [9, 11], [19, 16], [0, 16], [8, 7], [3, 4], [13, 18], [5, 2], [9, 11], [6, 10], [16, 3], [8, 7], [18, 9], [15, 2], [0, 6], [1, 5], [4, 11], [17, 13], [3, 10], [15, 2], [7, 17], [0, 6], [9, 12], [8, 13], [10, 4], [0, 16], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [4, 11], [7, 17], [8, 13], [19, 0], [1, 15], [3, 18], [5, 2], [3, 10], [19, 17], [15, 2], [14, 8], [4, 11], [0, 16], [18, 9], [13, 5], [3, 10], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [19, 0], [3, 18], [16, 10], [2, 9], [13, 18], [5, 3], [16, 10], [19, 0], [9, 12], [15, 5], [8, 13], [1, 2], [19, 16], [1, 5], [7, 13], [3, 18], [9, 12], [17, 0], [19, 16], [7, 17], [1, 5], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [7, 13], [4, 11], [8, 17], [3, 18], [16, 10], [7, 17], [19, 0], [13, 18], [4, 11], [5, 3], [1, 2], [16, 10], [4, 11], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [13, 3], [18, 12], [15, 2], [7, 1], [4, 11], [0, 6], [10, 4], [14, 19], [18, 12], [8, 17], [1, 2], [15, 5], [9, 11], [16, 10], [8, 7], [1, 2], [15, 5], [11, 12], [0, 6], [13, 3], [14, 19], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [16, 4], [17, 13], [3, 10], [14, 8], [7, 1], [18, 12], [19, 0], [16, 4], [1, 5], [7, 13], [8, 17], [0, 6], [9, 11], [19, 16], [1, 5], [9, 11], [8, 13], [18, 12], [6, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 26, 32]
[109, 113, 125]
[162, 175, 180]
[189, 192, 199]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 12, 21]
[82, 94, 98]
[103, 116, 121]
[191, 200, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[95, 96, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.29409384727478

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 12, 21] ccc => cc, Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [6, 40] cc => I, Pos: [6, 40] cc => I, Pos: [19, 34] cc => I, Pos: [19, 34] cc => I, Pos: [24, 26, 32] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [45, 51] cc => I, Pos: [45, 51] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [56, 71] cc => I, Pos: [56, 71] cc => I, Pos: [64, 66] cc => I, Pos: [64, 66] cc => I, Pos: [66, 77] cc => I, Pos: [66, 77] cc => I, Pos: [73, 100] cc => I, Pos: [73, 100] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [82, 94, 98] ccc => cc, Pos: [83, 99] cc => I, Pos: [83, 99] cc => I, Pos: [88, 92] cc => I, Pos: [88, 92] cc => I, Pos: [95, 96, 104] ccc => cc, Pos: [97, 105] cc => I, Pos: [97, 105] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [99, 108] cc => I, Pos: [99, 108] cc => I, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [103, 116, 121] ccc => cc, Pos: [105, 117] cc => I, Pos: [105, 117] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [109, 113, 125] ccc => cc, Pos: [117, 120] cc => I, Pos: [117, 120] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 136] cc => I, Pos: [122, 136] cc => I, Pos: [125, 140] cc => I, Pos: [125, 140] cc => I, Pos: [126, 130] cc => I, Pos: [126, 130] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [148, 155] cc => I, Pos: [148, 155] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [156, 163] cc => I, Pos: [156, 163] cc => I, Pos: [159, 172] cc => I, Pos: [159, 172] cc => I, Pos: [162, 175, 180] ccc => cc, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [166, 173] cc => I, Pos: [166, 173] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 187] cc => I, Pos: [180, 187] cc => I, Pos: [189, 192, 199] ccc => cc, Pos: [191, 200, 209] ccc => cc, Pos: [197, 208] cc => I, Pos: [197, 208] cc => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [219, 226] cc => I, Pos: [219, 226] cc => I, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [226, 230] cc => I, Pos: [226, 230] cc => I, Pos: [232, 240] cc => I, Pos: [232, 240] cc => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [238, 250] cc => I, Pos: [238, 250] cc => I, Pos: [242, 248] cc => I, Pos: [242, 248] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [258, 262] cc => I, Pos: [258, 262] cc => I, Pos: [261, 268] cc => I, Pos: [261, 268] cc => I, Pos: [262, 273] cc => I, Pos: [262, 273] cc => I, Pos: [263, 280] cc => I, Pos: [263, 280] cc => I, Pos: [265, 270] cc => I, Pos: [265, 270] cc => I, Pos: [269, 288] cc => I, Pos: [269, 288] cc => I, Pos: [270, 277] cc => I, Pos: [270, 277] cc => I, Pos: [274, 287] cc => I, Pos: [274, 287] cc => I, Pos: [276, 289] cc => I, Pos: [276, 289] cc => I, Pos: [279, 284] cc => I, Pos: [279, 284] cc => I, Pos: [280, 285] cc => I, Pos: [280, 285] cc => I, Pos: [296, 303] cc => I, Pos: [296, 303] cc => I, Pos: [301, 313] cc => I, Pos: [301, 313] cc => I, Pos: [304, 310] cc => I, Pos: [304, 310] cc => I, Pos: [308, 311] cc => I, Pos: [308, 311] cc => I]

--------End Timer [Generate Plans]:  0.16350245475769043

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [66, 77] cc => I,
 Pos: [73, 100] cc => I,
 Pos: [88, 92] cc => I,
 Pos: [98, 109] cc => I,
 Pos: [99, 108] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [97, 105] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [117, 120] cc => I,
 Pos: [126, 130] cc => I,
 Pos: [122, 136] cc => I,
 Pos: [125, 140] cc => I,
 Pos: [135, 143] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [156, 163] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [180, 187] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [219, 226] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [236, 242] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [258, 262] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 280] cc => I,
 Pos: [270, 277] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 59, Saving: 60

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 12, 21] ccc => cc
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [6, 40] cc => I
Apply:  Pos: [19, 34] cc => I
Apply:  Pos: [24, 26, 32] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [45, 51] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [56, 71] cc => I
Apply:  Pos: [66, 77] cc => I
Apply:  Pos: [73, 100] cc => I
Apply:  Pos: [88, 92] cc => I
Apply:  Pos: [98, 109] cc => I
Apply:  Pos: [99, 108] cc => I
Apply:  Pos: [95, 96, 104] ccc => cc
Apply:  Pos: [97, 105] cc => I
Apply:  Pos: [103, 116, 121] ccc => cc
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [117, 120] cc => I
Apply:  Pos: [126, 130] cc => I
Apply:  Pos: [122, 136] cc => I
Apply:  Pos: [125, 140] cc => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [148, 155] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [156, 163] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [159, 172] cc => I
Apply:  Pos: [180, 187] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [166, 173] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [189, 192, 199] ccc => cc
Apply:  Pos: [191, 200, 209] ccc => cc
Apply:  Pos: [197, 208] cc => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [219, 226] cc => I
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [232, 240] cc => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [238, 250] cc => I
Apply:  Pos: [258, 262] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 280] cc => I
Apply:  Pos: [270, 277] cc => I
Apply:  Pos: [269, 288] cc => I
Apply:  Pos: [274, 287] cc => I
Apply:  Pos: [276, 289] cc => I
Apply:  Pos: [279, 284] cc => I
Apply:  Pos: [296, 303] cc => I
Apply:  Pos: [301, 313] cc => I
Apply:  Pos: [304, 310] cc => I
Apply:  Pos: [308, 311] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 6], [15, 2], [8, 7], [13, 3], [5, 2], [16, 3], [6, 10], [5, 18], [4, 11], [0, 6], [18, 9], [7, 1], [19, 17], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [0, 16], [9, 12], [15, 5], [3, 18], [14, 19], [16, 10], [10, 4], [18, 11], [1, 15], [15, 2], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [14, 8], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 18], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [4, 11], [8, 17], [3, 18], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [4, 11], [10, 4], [8, 17], [9, 11], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  6.457596302032471

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[60, 80]
[163, 178]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[48, 57, 65]
[155, 160, 165]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 65, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[60, 80]
[163, 178]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.725083112716675

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [26, 32, 35] ccc => cc, Pos: [30, 40] cc => I, Pos: [30, 40] cc => I, Pos: [48, 57, 65] ccc => cc, Pos: [57, 65, 70] ccc => cc, Pos: [60, 80] cc => I, Pos: [60, 80] cc => I, Pos: [155, 160, 165] ccc => cc, Pos: [163, 178] cc => I, Pos: [163, 178] cc => I]

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [57, 65, 70] ccc => cc,
 Pos: [60, 80] cc => I,
 Pos: [155, 160, 165] ccc => cc,
 Pos: [163, 178] cc => I]
Change: 6, Saving: 6

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [30, 40] cc => I
Apply:  Pos: [57, 65, 70] ccc => cc
Apply:  Pos: [60, 80] cc => I
Apply:  Pos: [155, 160, 165] ccc => cc
Apply:  Pos: [163, 178] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [0, 16], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [10, 4], [8, 17], [9, 11], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.7407069206237793

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[45, 54]
[151, 157]
[152, 172]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[167, 170, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[45, 54]
[151, 157]
[152, 172]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5479629039764404

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [45, 54] cc => I, Pos: [45, 54] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 172] cc => I, Pos: [152, 172] cc => I, Pos: [167, 170, 173] ccc => cc]

--------End Timer [Generate Plans]:  0.015504598617553711

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [45, 54] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 172] cc => I,
 Pos: [167, 170, 173] ccc => cc]
Change: 4, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [45, 54] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 172] cc => I
Apply:  Pos: [167, 170, 173] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [10, 4], [8, 17], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.563467502593994

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[165, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[165, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3766250610351562

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [165, 171] cc => I, Pos: [165, 171] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [165, 171] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [165, 171] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [8, 7], [8, 17], [15, 5], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.3766250610351562

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.343827962875366

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [8, 17], [8, 7], [15, 5], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.343827962875366

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [185] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 370

Reduced: 
 - size: 130 (41.27%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061570167541504

[1, 2], [15, 5], [18, 12], [0, 6], [19, 17], [4, 11], [16, 10], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [19, 0], [4, 11], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [16, 4], [1, 15], [0, 6], [11, 12], [14, 19], [7, 17], [9, 12], [17, 0], [13, 18], [5, 3], [7, 1], [11, 12], [1, 5], [7, 17], [13, 18], [16, 4], [0, 6], [15, 2], [9, 11], [17, 0], [8, 7], [16, 10], [13, 3], [5, 2], [9, 11], [17, 0], [14, 8], [16, 3], [15, 2], [6, 10], [5, 18], [4, 11], [14, 8], [0, 6], [18, 9], [7, 1], [19, 17], [3, 10], [15, 2], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [1, 15], [8, 7], [0, 16], [17, 13], [9, 11], [3, 10], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [7, 13], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [16, 4], [13, 5], [19, 17], [14, 8], [0, 6], [18, 11], [1, 15], [2, 9], [16, 10], [13, 5], [4, 11], [7, 1], [14, 8], [19, 17], [0, 6], [6, 10], [7, 1], [17, 16], [4, 11], [19, 0], [15, 2], [13, 5], [14, 8], [0, 6], [13, 5], [2, 9], [18, 11], [3, 10], [1, 15], [19, 17], [14, 8], [6, 10], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [6, 10], [18, 11], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [17, 16], [19, 0], [14, 8], [6, 10], [13, 3], [19, 0], [15, 5], [17, 16], [14, 8], [6, 10], [17, 0], [13, 18], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [3, 4], [5, 2], [9, 11], [19, 16], [0, 16], [8, 7], [3, 4], [13, 18], [5, 2], [9, 11], [6, 10], [16, 3], [8, 7], [18, 9], [15, 2], [0, 6], [1, 5], [4, 11], [17, 13], [3, 10], [15, 2], [7, 17], [0, 6], [9, 12], [8, 13], [10, 4], [0, 16], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [4, 11], [7, 17], [8, 13], [19, 0], [1, 15], [3, 18], [5, 2], [3, 10], [19, 17], [15, 2], [14, 8], [4, 11], [0, 16], [18, 9], [13, 5], [3, 10], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [19, 0], [3, 18], [16, 10], [2, 9], [13, 18], [5, 3], [16, 10], [19, 0], [9, 12], [15, 5], [8, 13], [1, 2], [19, 16], [1, 5], [7, 13], [3, 18], [9, 12], [17, 0], [19, 16], [7, 17], [1, 5], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [7, 13], [4, 11], [8, 17], [3, 18], [16, 10], [7, 17], [19, 0], [13, 18], [4, 11], [5, 3], [1, 2], [16, 10], [4, 11], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [13, 3], [18, 12], [15, 2], [7, 1], [4, 11], [0, 6], [10, 4], [14, 19], [18, 12], [8, 17], [1, 2], [15, 5], [9, 11], [16, 10], [8, 7], [1, 2], [15, 5], [11, 12], [0, 6], [13, 3], [14, 19], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [16, 4], [17, 13], [3, 10], [14, 8], [7, 1], [18, 12], [19, 0], [16, 4], [1, 5], [7, 13], [8, 17], [0, 6], [9, 11], [19, 16], [1, 5], [9, 11], [8, 13], [18, 12], [6, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 26, 32]
[109, 113, 125]
[162, 175, 180]
[189, 192, 199]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 12, 21]
[82, 94, 98]
[103, 116, 121]
[191, 200, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[95, 96, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.20308518409729

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 12, 21] ccc => cc, Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [6, 40] cc => I, Pos: [6, 40] cc => I, Pos: [19, 34] cc => I, Pos: [19, 34] cc => I, Pos: [24, 26, 32] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [45, 51] cc => I, Pos: [45, 51] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [56, 71] cc => I, Pos: [56, 71] cc => I, Pos: [64, 66] cc => I, Pos: [64, 66] cc => I, Pos: [66, 77] cc => I, Pos: [66, 77] cc => I, Pos: [73, 100] cc => I, Pos: [73, 100] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [82, 94, 98] ccc => cc, Pos: [83, 99] cc => I, Pos: [83, 99] cc => I, Pos: [88, 92] cc => I, Pos: [88, 92] cc => I, Pos: [95, 96, 104] ccc => cc, Pos: [97, 105] cc => I, Pos: [97, 105] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [99, 108] cc => I, Pos: [99, 108] cc => I, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [103, 116, 121] ccc => cc, Pos: [105, 117] cc => I, Pos: [105, 117] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [109, 113, 125] ccc => cc, Pos: [117, 120] cc => I, Pos: [117, 120] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 136] cc => I, Pos: [122, 136] cc => I, Pos: [125, 140] cc => I, Pos: [125, 140] cc => I, Pos: [126, 130] cc => I, Pos: [126, 130] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [148, 155] cc => I, Pos: [148, 155] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [156, 163] cc => I, Pos: [156, 163] cc => I, Pos: [159, 172] cc => I, Pos: [159, 172] cc => I, Pos: [162, 175, 180] ccc => cc, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [166, 173] cc => I, Pos: [166, 173] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 187] cc => I, Pos: [180, 187] cc => I, Pos: [189, 192, 199] ccc => cc, Pos: [191, 200, 209] ccc => cc, Pos: [197, 208] cc => I, Pos: [197, 208] cc => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [219, 226] cc => I, Pos: [219, 226] cc => I, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [226, 230] cc => I, Pos: [226, 230] cc => I, Pos: [232, 240] cc => I, Pos: [232, 240] cc => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [238, 250] cc => I, Pos: [238, 250] cc => I, Pos: [242, 248] cc => I, Pos: [242, 248] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [258, 262] cc => I, Pos: [258, 262] cc => I, Pos: [261, 268] cc => I, Pos: [261, 268] cc => I, Pos: [262, 273] cc => I, Pos: [262, 273] cc => I, Pos: [263, 280] cc => I, Pos: [263, 280] cc => I, Pos: [265, 270] cc => I, Pos: [265, 270] cc => I, Pos: [269, 288] cc => I, Pos: [269, 288] cc => I, Pos: [270, 277] cc => I, Pos: [270, 277] cc => I, Pos: [274, 287] cc => I, Pos: [274, 287] cc => I, Pos: [276, 289] cc => I, Pos: [276, 289] cc => I, Pos: [279, 284] cc => I, Pos: [279, 284] cc => I, Pos: [280, 285] cc => I, Pos: [280, 285] cc => I, Pos: [296, 303] cc => I, Pos: [296, 303] cc => I, Pos: [301, 313] cc => I, Pos: [301, 313] cc => I, Pos: [304, 310] cc => I, Pos: [304, 310] cc => I, Pos: [308, 311] cc => I, Pos: [308, 311] cc => I]

--------End Timer [Generate Plans]:  0.15623927116394043

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [66, 77] cc => I,
 Pos: [73, 100] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [98, 109] cc => I,
 Pos: [99, 108] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [105, 117] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [126, 130] cc => I,
 Pos: [122, 136] cc => I,
 Pos: [125, 140] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [180, 187] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [226, 230] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [236, 242] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [262, 273] cc => I,
 Pos: [280, 285] cc => I,
 Pos: [270, 277] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 59, Saving: 60

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 12, 21] ccc => cc
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [6, 40] cc => I
Apply:  Pos: [19, 34] cc => I
Apply:  Pos: [24, 26, 32] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [45, 51] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [56, 71] cc => I
Apply:  Pos: [66, 77] cc => I
Apply:  Pos: [73, 100] cc => I
Apply:  Pos: [79, 88] cc => I
Apply:  Pos: [98, 109] cc => I
Apply:  Pos: [99, 108] cc => I
Apply:  Pos: [95, 96, 104] ccc => cc
Apply:  Pos: [105, 117] cc => I
Apply:  Pos: [103, 116, 121] ccc => cc
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [126, 130] cc => I
Apply:  Pos: [122, 136] cc => I
Apply:  Pos: [125, 140] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [148, 155] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [159, 172] cc => I
Apply:  Pos: [180, 187] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [166, 173] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [189, 192, 199] ccc => cc
Apply:  Pos: [191, 200, 209] ccc => cc
Apply:  Pos: [197, 208] cc => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [226, 230] cc => I
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [232, 240] cc => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [238, 250] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [262, 273] cc => I
Apply:  Pos: [280, 285] cc => I
Apply:  Pos: [270, 277] cc => I
Apply:  Pos: [269, 288] cc => I
Apply:  Pos: [274, 287] cc => I
Apply:  Pos: [276, 289] cc => I
Apply:  Pos: [279, 284] cc => I
Apply:  Pos: [296, 303] cc => I
Apply:  Pos: [301, 313] cc => I
Apply:  Pos: [304, 310] cc => I
Apply:  Pos: [308, 311] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 6], [15, 2], [8, 7], [13, 3], [5, 2], [16, 3], [6, 10], [5, 18], [4, 11], [0, 6], [18, 9], [7, 1], [19, 17], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [8, 17], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [16, 10], [10, 4], [13, 5], [18, 11], [1, 15], [15, 2], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [14, 8], [0, 6], [13, 5], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [3, 18], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [3, 18], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [10, 4], [8, 17], [9, 11], [16, 10], [8, 7], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  6.3593244552612305

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[59, 81]
[72, 83]
[160, 182]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[48, 56, 64]
[79, 82, 90]
[157, 162, 166]
[177, 180, 183]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 64, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[59, 81]
[72, 83]
[160, 182]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.718799591064453

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [26, 32, 35] ccc => cc, Pos: [30, 40] cc => I, Pos: [30, 40] cc => I, Pos: [48, 56, 64] ccc => cc, Pos: [56, 64, 70] ccc => cc, Pos: [59, 81] cc => I, Pos: [59, 81] cc => I, Pos: [72, 83] cc => I, Pos: [72, 83] cc => I, Pos: [79, 82, 90] ccc => cc, Pos: [157, 162, 166] ccc => cc, Pos: [160, 182] cc => I, Pos: [160, 182] cc => I, Pos: [177, 180, 183] ccc => cc]

--------End Timer [Generate Plans]:  0.03124856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [56, 64, 70] ccc => cc,
 Pos: [59, 81] cc => I,
 Pos: [72, 83] cc => I,
 Pos: [79, 82, 90] ccc => cc,
 Pos: [157, 162, 166] ccc => cc,
 Pos: [160, 182] cc => I,
 Pos: [177, 180, 183] ccc => cc]
Change: 9, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [30, 40] cc => I
Apply:  Pos: [56, 64, 70] ccc => cc
Apply:  Pos: [59, 81] cc => I
Apply:  Pos: [72, 83] cc => I
Apply:  Pos: [79, 82, 90] ccc => cc
Apply:  Pos: [157, 162, 166] ccc => cc
Apply:  Pos: [160, 182] cc => I
Apply:  Pos: [177, 180, 183] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [8, 17], [0, 16], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [10, 4], [8, 17], [8, 7], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.7500481605529785

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[45, 53]
[150, 155]
[169, 174]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[45, 53]
[150, 155]
[169, 174]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4061672687530518

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [150, 155] cc => I, Pos: [150, 155] cc => I, Pos: [169, 174] cc => I, Pos: [169, 174] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [45, 53] cc => I, Pos: [150, 155] cc => I, Pos: [169, 174] cc => I]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [150, 155] cc => I
Apply:  Pos: [169, 174] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [8, 17], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [8, 7], [8, 17], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.4061672687530518

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3133509159088135

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [8, 17], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [8, 17], [8, 7], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.3133509159088135

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [184] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 368

Reduced: 
 - size: 131 (41.59%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938000679016113

[1, 2], [15, 5], [18, 12], [0, 6], [19, 17], [4, 11], [16, 10], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [19, 0], [4, 11], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [16, 4], [1, 15], [0, 6], [11, 12], [14, 19], [7, 17], [9, 12], [17, 0], [13, 18], [5, 3], [7, 1], [11, 12], [1, 5], [7, 17], [13, 18], [16, 4], [0, 6], [15, 2], [9, 11], [17, 0], [8, 7], [16, 10], [13, 3], [5, 2], [9, 11], [17, 0], [14, 8], [16, 3], [15, 2], [6, 10], [5, 18], [4, 11], [14, 8], [0, 6], [18, 9], [7, 1], [19, 17], [3, 10], [15, 2], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [1, 15], [8, 7], [0, 16], [17, 13], [9, 11], [3, 10], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [7, 13], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [16, 4], [13, 5], [19, 17], [14, 8], [0, 6], [18, 11], [1, 15], [2, 9], [16, 10], [13, 5], [4, 11], [7, 1], [14, 8], [19, 17], [0, 6], [6, 10], [7, 1], [17, 16], [4, 11], [19, 0], [15, 2], [13, 5], [14, 8], [0, 6], [13, 5], [2, 9], [18, 11], [3, 10], [1, 15], [19, 17], [14, 8], [6, 10], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [6, 10], [18, 11], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [17, 16], [19, 0], [14, 8], [6, 10], [13, 3], [19, 0], [15, 5], [17, 16], [14, 8], [6, 10], [17, 0], [13, 18], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [3, 4], [5, 2], [9, 11], [19, 16], [0, 16], [8, 7], [3, 4], [13, 18], [5, 2], [9, 11], [6, 10], [16, 3], [8, 7], [18, 9], [15, 2], [0, 6], [1, 5], [4, 11], [17, 13], [3, 10], [15, 2], [7, 17], [0, 6], [9, 12], [8, 13], [10, 4], [0, 16], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [4, 11], [7, 17], [8, 13], [19, 0], [1, 15], [3, 18], [5, 2], [3, 10], [19, 17], [15, 2], [14, 8], [4, 11], [0, 16], [18, 9], [13, 5], [3, 10], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [19, 0], [3, 18], [16, 10], [2, 9], [13, 18], [5, 3], [16, 10], [19, 0], [9, 12], [15, 5], [8, 13], [1, 2], [19, 16], [1, 5], [7, 13], [3, 18], [9, 12], [17, 0], [19, 16], [7, 17], [1, 5], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [7, 13], [4, 11], [8, 17], [3, 18], [16, 10], [7, 17], [19, 0], [13, 18], [4, 11], [5, 3], [1, 2], [16, 10], [4, 11], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [13, 3], [18, 12], [15, 2], [7, 1], [4, 11], [0, 6], [10, 4], [14, 19], [18, 12], [8, 17], [1, 2], [15, 5], [9, 11], [16, 10], [8, 7], [1, 2], [15, 5], [11, 12], [0, 6], [13, 3], [14, 19], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [16, 4], [17, 13], [3, 10], [14, 8], [7, 1], [18, 12], [19, 0], [16, 4], [1, 5], [7, 13], [8, 17], [0, 6], [9, 11], [19, 16], [1, 5], [9, 11], [8, 13], [18, 12], [6, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 26, 32]
[109, 113, 125]
[162, 175, 180]
[189, 192, 199]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 12, 21]
[82, 94, 98]
[103, 116, 121]
[191, 200, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[95, 96, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.094081878662109

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 12, 21] ccc => cc, Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [6, 40] cc => I, Pos: [6, 40] cc => I, Pos: [19, 34] cc => I, Pos: [19, 34] cc => I, Pos: [24, 26, 32] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [45, 51] cc => I, Pos: [45, 51] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [56, 71] cc => I, Pos: [56, 71] cc => I, Pos: [64, 66] cc => I, Pos: [64, 66] cc => I, Pos: [66, 77] cc => I, Pos: [66, 77] cc => I, Pos: [73, 100] cc => I, Pos: [73, 100] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [82, 94, 98] ccc => cc, Pos: [83, 99] cc => I, Pos: [83, 99] cc => I, Pos: [88, 92] cc => I, Pos: [88, 92] cc => I, Pos: [95, 96, 104] ccc => cc, Pos: [97, 105] cc => I, Pos: [97, 105] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [99, 108] cc => I, Pos: [99, 108] cc => I, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [103, 116, 121] ccc => cc, Pos: [105, 117] cc => I, Pos: [105, 117] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [109, 113, 125] ccc => cc, Pos: [117, 120] cc => I, Pos: [117, 120] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 136] cc => I, Pos: [122, 136] cc => I, Pos: [125, 140] cc => I, Pos: [125, 140] cc => I, Pos: [126, 130] cc => I, Pos: [126, 130] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [148, 155] cc => I, Pos: [148, 155] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [156, 163] cc => I, Pos: [156, 163] cc => I, Pos: [159, 172] cc => I, Pos: [159, 172] cc => I, Pos: [162, 175, 180] ccc => cc, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [166, 173] cc => I, Pos: [166, 173] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 187] cc => I, Pos: [180, 187] cc => I, Pos: [189, 192, 199] ccc => cc, Pos: [191, 200, 209] ccc => cc, Pos: [197, 208] cc => I, Pos: [197, 208] cc => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [219, 226] cc => I, Pos: [219, 226] cc => I, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [226, 230] cc => I, Pos: [226, 230] cc => I, Pos: [232, 240] cc => I, Pos: [232, 240] cc => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [238, 250] cc => I, Pos: [238, 250] cc => I, Pos: [242, 248] cc => I, Pos: [242, 248] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [258, 262] cc => I, Pos: [258, 262] cc => I, Pos: [261, 268] cc => I, Pos: [261, 268] cc => I, Pos: [262, 273] cc => I, Pos: [262, 273] cc => I, Pos: [263, 280] cc => I, Pos: [263, 280] cc => I, Pos: [265, 270] cc => I, Pos: [265, 270] cc => I, Pos: [269, 288] cc => I, Pos: [269, 288] cc => I, Pos: [270, 277] cc => I, Pos: [270, 277] cc => I, Pos: [274, 287] cc => I, Pos: [274, 287] cc => I, Pos: [276, 289] cc => I, Pos: [276, 289] cc => I, Pos: [279, 284] cc => I, Pos: [279, 284] cc => I, Pos: [280, 285] cc => I, Pos: [280, 285] cc => I, Pos: [296, 303] cc => I, Pos: [296, 303] cc => I, Pos: [301, 313] cc => I, Pos: [301, 313] cc => I, Pos: [304, 310] cc => I, Pos: [304, 310] cc => I, Pos: [308, 311] cc => I, Pos: [308, 311] cc => I]

--------End Timer [Generate Plans]:  0.15623974800109863

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [66, 77] cc => I,
 Pos: [73, 100] cc => I,
 Pos: [88, 92] cc => I,
 Pos: [82, 94, 98] ccc => cc,
 Pos: [83, 99] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [97, 105] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [125, 140] cc => I,
 Pos: [117, 120] cc => I,
 Pos: [122, 136] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [156, 163] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [180, 187] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [226, 230] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [242, 248] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [262, 273] cc => I,
 Pos: [280, 285] cc => I,
 Pos: [265, 270] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 60, Saving: 61

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 12, 21] ccc => cc
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [6, 40] cc => I
Apply:  Pos: [19, 34] cc => I
Apply:  Pos: [24, 26, 32] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [45, 51] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [56, 71] cc => I
Apply:  Pos: [66, 77] cc => I
Apply:  Pos: [73, 100] cc => I
Apply:  Pos: [88, 92] cc => I
Apply:  Pos: [82, 94, 98] ccc => cc
Apply:  Pos: [83, 99] cc => I
Apply:  Pos: [95, 96, 104] ccc => cc
Apply:  Pos: [97, 105] cc => I
Apply:  Pos: [103, 116, 121] ccc => cc
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [125, 140] cc => I
Apply:  Pos: [117, 120] cc => I
Apply:  Pos: [122, 136] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [148, 155] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [156, 163] cc => I
Apply:  Pos: [159, 172] cc => I
Apply:  Pos: [180, 187] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [166, 173] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [189, 192, 199] ccc => cc
Apply:  Pos: [191, 200, 209] ccc => cc
Apply:  Pos: [197, 208] cc => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [226, 230] cc => I
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [232, 240] cc => I
Apply:  Pos: [242, 248] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [238, 250] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [262, 273] cc => I
Apply:  Pos: [280, 285] cc => I
Apply:  Pos: [265, 270] cc => I
Apply:  Pos: [269, 288] cc => I
Apply:  Pos: [274, 287] cc => I
Apply:  Pos: [276, 289] cc => I
Apply:  Pos: [279, 284] cc => I
Apply:  Pos: [296, 303] cc => I
Apply:  Pos: [301, 313] cc => I
Apply:  Pos: [304, 310] cc => I
Apply:  Pos: [308, 311] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 6], [15, 2], [8, 7], [13, 3], [5, 2], [16, 3], [6, 10], [5, 18], [4, 11], [0, 6], [18, 9], [7, 1], [19, 17], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [16, 10], [1, 5], [14, 19], [15, 2], [9, 11], [3, 4], [18, 12], [0, 16], [9, 12], [15, 5], [3, 18], [19, 17], [16, 10], [10, 4], [18, 11], [1, 15], [15, 2], [14, 8], [19, 17], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [19, 16], [3, 18], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [15, 2], [8, 17], [3, 18], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [10, 4], [18, 12], [8, 17], [9, 11], [16, 10], [8, 7], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  6.250321626663208

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[51, 59]
[68, 75]
[74, 86]
[160, 181]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[48, 57, 64]
[79, 81, 89]
[141, 144, 156]
[157, 162, 165]
[175, 178, 182]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 64, 69]
[161, 175, 178]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[51, 59]
[68, 75]
[74, 86]
[160, 181]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.64092755317688

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [26, 32, 35] ccc => cc, Pos: [30, 40] cc => I, Pos: [30, 40] cc => I, Pos: [48, 57, 64] ccc => cc, Pos: [51, 59] cc => I, Pos: [51, 59] cc => I, Pos: [57, 64, 69] ccc => cc, Pos: [68, 75] cc => I, Pos: [68, 75] cc => I, Pos: [74, 86] cc => I, Pos: [74, 86] cc => I, Pos: [79, 81, 89] ccc => cc, Pos: [141, 144, 156] ccc => cc, Pos: [157, 162, 165] ccc => cc, Pos: [160, 181] cc => I, Pos: [160, 181] cc => I, Pos: [161, 175, 178] ccc => cc, Pos: [175, 178, 182] ccc => cc]

--------End Timer [Generate Plans]:  0.031261444091796875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [57, 64, 69] ccc => cc,
 Pos: [51, 59] cc => I,
 Pos: [68, 75] cc => I,
 Pos: [74, 86] cc => I,
 Pos: [79, 81, 89] ccc => cc,
 Pos: [141, 144, 156] ccc => cc,
 Pos: [157, 162, 165] ccc => cc,
 Pos: [160, 181] cc => I,
 Pos: [175, 178, 182] ccc => cc]
Change: 11, Saving: 12

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [30, 40] cc => I
Apply:  Pos: [57, 64, 69] ccc => cc
Apply:  Pos: [51, 59] cc => I
Apply:  Pos: [68, 75] cc => I
Apply:  Pos: [74, 86] cc => I
Apply:  Pos: [79, 81, 89] ccc => cc
Apply:  Pos: [141, 144, 156] ccc => cc
Apply:  Pos: [157, 162, 165] ccc => cc
Apply:  Pos: [160, 181] cc => I
Apply:  Pos: [175, 178, 182] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [0, 16], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [3, 18], [10, 4], [18, 11], [1, 15], [15, 2], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 10], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [10, 4], [18, 12], [15, 2], [8, 17], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [10, 4], [18, 12], [8, 17], [8, 7], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.6721889972686768

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[45, 53]
[147, 151]
[164, 170]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[45, 53]
[147, 151]
[164, 170]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2815418243408203

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [45, 53] cc => I, Pos: [45, 53] cc => I, Pos: [147, 151] cc => I, Pos: [147, 151] cc => I, Pos: [164, 170] cc => I, Pos: [164, 170] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [45, 53] cc => I, Pos: [147, 151] cc => I, Pos: [164, 170] cc => I]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [45, 53] cc => I
Apply:  Pos: [147, 151] cc => I
Apply:  Pos: [164, 170] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [3, 18], [10, 4], [18, 11], [1, 15], [15, 2], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 10], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [18, 12], [8, 7], [8, 17], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.2815418243408203

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.1564671993255615

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [3, 18], [10, 4], [18, 11], [1, 15], [15, 2], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 6], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 10], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [18, 12], [8, 17], [8, 7], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.1564671993255615

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [180] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 360

Reduced: 
 - size: 135 (42.86%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499046325683594

[1, 2], [15, 5], [18, 12], [0, 6], [19, 17], [4, 11], [16, 10], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [19, 0], [4, 11], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [16, 4], [1, 15], [0, 6], [11, 12], [14, 19], [7, 17], [9, 12], [17, 0], [13, 18], [5, 3], [7, 1], [11, 12], [1, 5], [7, 17], [13, 18], [16, 4], [0, 6], [15, 2], [9, 11], [17, 0], [8, 7], [16, 10], [13, 3], [5, 2], [9, 11], [17, 0], [14, 8], [16, 3], [15, 2], [6, 10], [5, 18], [4, 11], [14, 8], [0, 6], [18, 9], [7, 1], [19, 17], [3, 10], [15, 2], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [1, 15], [8, 7], [0, 16], [17, 13], [9, 11], [3, 10], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [7, 13], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [16, 4], [13, 5], [19, 17], [14, 8], [0, 6], [18, 11], [1, 15], [2, 9], [16, 10], [13, 5], [4, 11], [7, 1], [14, 8], [19, 17], [0, 6], [6, 10], [7, 1], [17, 16], [4, 11], [19, 0], [15, 2], [13, 5], [14, 8], [0, 6], [13, 5], [2, 9], [18, 11], [3, 10], [1, 15], [19, 17], [14, 8], [6, 10], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [6, 10], [18, 11], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [17, 16], [19, 0], [14, 8], [6, 10], [13, 3], [19, 0], [15, 5], [17, 16], [14, 8], [6, 10], [17, 0], [13, 18], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [3, 4], [5, 2], [9, 11], [19, 16], [0, 16], [8, 7], [3, 4], [13, 18], [5, 2], [9, 11], [6, 10], [16, 3], [8, 7], [18, 9], [15, 2], [0, 6], [1, 5], [4, 11], [17, 13], [3, 10], [15, 2], [7, 17], [0, 6], [9, 12], [8, 13], [10, 4], [0, 16], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [4, 11], [7, 17], [8, 13], [19, 0], [1, 15], [3, 18], [5, 2], [3, 10], [19, 17], [15, 2], [14, 8], [4, 11], [0, 16], [18, 9], [13, 5], [3, 10], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [19, 0], [3, 18], [16, 10], [2, 9], [13, 18], [5, 3], [16, 10], [19, 0], [9, 12], [15, 5], [8, 13], [1, 2], [19, 16], [1, 5], [7, 13], [3, 18], [9, 12], [17, 0], [19, 16], [7, 17], [1, 5], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [7, 13], [4, 11], [8, 17], [3, 18], [16, 10], [7, 17], [19, 0], [13, 18], [4, 11], [5, 3], [1, 2], [16, 10], [4, 11], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [13, 3], [18, 12], [15, 2], [7, 1], [4, 11], [0, 6], [10, 4], [14, 19], [18, 12], [8, 17], [1, 2], [15, 5], [9, 11], [16, 10], [8, 7], [1, 2], [15, 5], [11, 12], [0, 6], [13, 3], [14, 19], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [16, 4], [17, 13], [3, 10], [14, 8], [7, 1], [18, 12], [19, 0], [16, 4], [1, 5], [7, 13], [8, 17], [0, 6], [9, 11], [19, 16], [1, 5], [9, 11], [8, 13], [18, 12], [6, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 26, 32]
[109, 113, 125]
[162, 175, 180]
[189, 192, 199]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 12, 21]
[82, 94, 98]
[103, 116, 121]
[191, 200, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[95, 96, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.280556917190552

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 12, 21] ccc => cc, Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [6, 40] cc => I, Pos: [6, 40] cc => I, Pos: [19, 34] cc => I, Pos: [19, 34] cc => I, Pos: [24, 26, 32] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [45, 51] cc => I, Pos: [45, 51] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [56, 71] cc => I, Pos: [56, 71] cc => I, Pos: [64, 66] cc => I, Pos: [64, 66] cc => I, Pos: [66, 77] cc => I, Pos: [66, 77] cc => I, Pos: [73, 100] cc => I, Pos: [73, 100] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [82, 94, 98] ccc => cc, Pos: [83, 99] cc => I, Pos: [83, 99] cc => I, Pos: [88, 92] cc => I, Pos: [88, 92] cc => I, Pos: [95, 96, 104] ccc => cc, Pos: [97, 105] cc => I, Pos: [97, 105] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [99, 108] cc => I, Pos: [99, 108] cc => I, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [103, 116, 121] ccc => cc, Pos: [105, 117] cc => I, Pos: [105, 117] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [109, 113, 125] ccc => cc, Pos: [117, 120] cc => I, Pos: [117, 120] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 136] cc => I, Pos: [122, 136] cc => I, Pos: [125, 140] cc => I, Pos: [125, 140] cc => I, Pos: [126, 130] cc => I, Pos: [126, 130] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [148, 155] cc => I, Pos: [148, 155] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [156, 163] cc => I, Pos: [156, 163] cc => I, Pos: [159, 172] cc => I, Pos: [159, 172] cc => I, Pos: [162, 175, 180] ccc => cc, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [166, 173] cc => I, Pos: [166, 173] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 187] cc => I, Pos: [180, 187] cc => I, Pos: [189, 192, 199] ccc => cc, Pos: [191, 200, 209] ccc => cc, Pos: [197, 208] cc => I, Pos: [197, 208] cc => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [219, 226] cc => I, Pos: [219, 226] cc => I, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [226, 230] cc => I, Pos: [226, 230] cc => I, Pos: [232, 240] cc => I, Pos: [232, 240] cc => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [238, 250] cc => I, Pos: [238, 250] cc => I, Pos: [242, 248] cc => I, Pos: [242, 248] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [258, 262] cc => I, Pos: [258, 262] cc => I, Pos: [261, 268] cc => I, Pos: [261, 268] cc => I, Pos: [262, 273] cc => I, Pos: [262, 273] cc => I, Pos: [263, 280] cc => I, Pos: [263, 280] cc => I, Pos: [265, 270] cc => I, Pos: [265, 270] cc => I, Pos: [269, 288] cc => I, Pos: [269, 288] cc => I, Pos: [270, 277] cc => I, Pos: [270, 277] cc => I, Pos: [274, 287] cc => I, Pos: [274, 287] cc => I, Pos: [276, 289] cc => I, Pos: [276, 289] cc => I, Pos: [279, 284] cc => I, Pos: [279, 284] cc => I, Pos: [280, 285] cc => I, Pos: [280, 285] cc => I, Pos: [296, 303] cc => I, Pos: [296, 303] cc => I, Pos: [301, 313] cc => I, Pos: [301, 313] cc => I, Pos: [304, 310] cc => I, Pos: [304, 310] cc => I, Pos: [308, 311] cc => I, Pos: [308, 311] cc => I]

--------End Timer [Generate Plans]:  0.15624070167541504

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [64, 66] cc => I,
 Pos: [100, 110] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [82, 94, 98] ccc => cc,
 Pos: [83, 99] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [105, 117] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [109, 113, 125] ccc => cc,
 Pos: [122, 136] cc => I,
 Pos: [126, 130] cc => I,
 Pos: [135, 143] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [180, 187] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [219, 226] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [236, 242] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [261, 268] cc => I,
 Pos: [262, 273] cc => I,
 Pos: [280, 285] cc => I,
 Pos: [265, 270] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 60, Saving: 62

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 12, 21] ccc => cc
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [6, 40] cc => I
Apply:  Pos: [19, 34] cc => I
Apply:  Pos: [24, 26, 32] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [45, 51] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [56, 71] cc => I
Apply:  Pos: [64, 66] cc => I
Apply:  Pos: [100, 110] cc => I
Apply:  Pos: [79, 88] cc => I
Apply:  Pos: [82, 94, 98] ccc => cc
Apply:  Pos: [83, 99] cc => I
Apply:  Pos: [95, 96, 104] ccc => cc
Apply:  Pos: [105, 117] cc => I
Apply:  Pos: [103, 116, 121] ccc => cc
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [109, 113, 125] ccc => cc
Apply:  Pos: [122, 136] cc => I
Apply:  Pos: [126, 130] cc => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [148, 155] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [159, 172] cc => I
Apply:  Pos: [180, 187] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [166, 173] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [189, 192, 199] ccc => cc
Apply:  Pos: [191, 200, 209] ccc => cc
Apply:  Pos: [197, 208] cc => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [219, 226] cc => I
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [232, 240] cc => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [238, 250] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [261, 268] cc => I
Apply:  Pos: [262, 273] cc => I
Apply:  Pos: [280, 285] cc => I
Apply:  Pos: [265, 270] cc => I
Apply:  Pos: [269, 288] cc => I
Apply:  Pos: [274, 287] cc => I
Apply:  Pos: [276, 289] cc => I
Apply:  Pos: [279, 284] cc => I
Apply:  Pos: [296, 303] cc => I
Apply:  Pos: [301, 313] cc => I
Apply:  Pos: [304, 310] cc => I
Apply:  Pos: [308, 311] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 6], [15, 2], [8, 7], [13, 3], [5, 2], [16, 3], [6, 10], [5, 18], [4, 11], [0, 6], [18, 9], [7, 1], [19, 17], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [16, 10], [1, 5], [14, 19], [15, 2], [9, 11], [3, 4], [18, 12], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [16, 10], [10, 4], [13, 5], [18, 11], [1, 15], [15, 2], [19, 16], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [13, 5], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 18], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [3, 18], [16, 10], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [14, 8], [19, 17], [15, 2], [7, 1], [10, 4], [18, 12], [8, 17], [9, 11], [16, 10], [8, 7], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  6.436797618865967

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[50, 59]
[72, 82]
[160, 182]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[47, 57, 64]
[157, 162, 166]
[167, 179, 183]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 64, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[50, 59]
[72, 82]
[160, 182]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.750566005706787

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [26, 32, 35] ccc => cc, Pos: [30, 40] cc => I, Pos: [30, 40] cc => I, Pos: [47, 57, 64] ccc => cc, Pos: [50, 59] cc => I, Pos: [50, 59] cc => I, Pos: [57, 64, 70] ccc => cc, Pos: [72, 82] cc => I, Pos: [72, 82] cc => I, Pos: [157, 162, 166] ccc => cc, Pos: [160, 182] cc => I, Pos: [160, 182] cc => I, Pos: [167, 179, 183] ccc => cc]

--------End Timer [Generate Plans]:  0.03122997283935547

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [57, 64, 70] ccc => cc,
 Pos: [50, 59] cc => I,
 Pos: [72, 82] cc => I,
 Pos: [157, 162, 166] ccc => cc,
 Pos: [160, 182] cc => I,
 Pos: [167, 179, 183] ccc => cc]
Change: 8, Saving: 9

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [30, 40] cc => I
Apply:  Pos: [57, 64, 70] ccc => cc
Apply:  Pos: [50, 59] cc => I
Apply:  Pos: [72, 82] cc => I
Apply:  Pos: [157, 162, 166] ccc => cc
Apply:  Pos: [160, 182] cc => I
Apply:  Pos: [167, 179, 183] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [0, 16], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [16, 4], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [14, 8], [19, 17], [15, 2], [7, 1], [10, 4], [18, 12], [8, 17], [8, 7], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.7817959785461426

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[44, 53]
[169, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[159, 174, 184]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[44, 53]
[169, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.453235149383545

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [44, 53] cc => I, Pos: [44, 53] cc => I, Pos: [159, 174, 184] ccc => cc, Pos: [169, 175] cc => I, Pos: [169, 175] cc => I]

--------End Timer [Generate Plans]:  0.01563739776611328

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [44, 53] cc => I, Pos: [159, 174, 184] ccc => cc, Pos: [169, 175] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [44, 53] cc => I
Apply:  Pos: [159, 174, 184] ccc => cc
Apply:  Pos: [169, 175] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [17, 13], [9, 11], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [16, 4], [7, 17], [19, 16], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [14, 8], [19, 17], [15, 2], [7, 1], [18, 12], [8, 7], [8, 17], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.468872547149658

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[152, 155, 157]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3911638259887695

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [152, 155, 157] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [152, 155, 157] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [152, 155, 157] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [17, 13], [9, 11], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [10, 4], [18, 12], [19, 4], [15, 2], [8, 17], [16, 4], [7, 17], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [14, 8], [19, 17], [15, 2], [7, 1], [18, 12], [8, 17], [8, 7], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 13], [7, 1], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.3911638259887695

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3442208766937256

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [17, 13], [9, 11], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [16, 10], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [10, 4], [18, 12], [19, 4], [15, 2], [8, 17], [16, 4], [7, 17], [13, 18], [5, 3], [1, 2], [15, 5], [7, 13], [14, 8], [19, 17], [15, 2], [7, 1], [18, 12], [8, 7], [8, 17], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.3442208766937256

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [185] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 38 - (small)
 - circuit cycle: 370

Reduced: 
 - size: 130 (41.27%)
 - depth: 7 (15.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500405311584473

[1, 2], [15, 5], [18, 12], [0, 6], [19, 17], [4, 11], [16, 10], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [19, 0], [4, 11], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [16, 4], [1, 15], [0, 6], [11, 12], [14, 19], [7, 17], [9, 12], [17, 0], [13, 18], [5, 3], [7, 1], [11, 12], [1, 5], [7, 17], [13, 18], [16, 4], [0, 6], [15, 2], [9, 11], [17, 0], [8, 7], [16, 10], [13, 3], [5, 2], [9, 11], [17, 0], [14, 8], [16, 3], [15, 2], [6, 10], [5, 18], [4, 11], [14, 8], [0, 6], [18, 9], [7, 1], [19, 17], [3, 10], [15, 2], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [1, 15], [8, 7], [0, 16], [17, 13], [9, 11], [3, 10], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [7, 13], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [16, 4], [13, 5], [19, 17], [14, 8], [0, 6], [18, 11], [1, 15], [2, 9], [16, 10], [13, 5], [4, 11], [7, 1], [14, 8], [19, 17], [0, 6], [6, 10], [7, 1], [17, 16], [4, 11], [19, 0], [15, 2], [13, 5], [14, 8], [0, 6], [13, 5], [2, 9], [18, 11], [3, 10], [1, 15], [19, 17], [14, 8], [6, 10], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [6, 10], [18, 11], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [17, 16], [19, 0], [14, 8], [6, 10], [13, 3], [19, 0], [15, 5], [17, 16], [14, 8], [6, 10], [17, 0], [13, 18], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [3, 4], [5, 2], [9, 11], [19, 16], [0, 16], [8, 7], [3, 4], [13, 18], [5, 2], [9, 11], [6, 10], [16, 3], [8, 7], [18, 9], [15, 2], [0, 6], [1, 5], [4, 11], [17, 13], [3, 10], [15, 2], [7, 17], [0, 6], [9, 12], [8, 13], [10, 4], [0, 16], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [4, 11], [7, 17], [8, 13], [19, 0], [1, 15], [3, 18], [5, 2], [3, 10], [19, 17], [15, 2], [14, 8], [4, 11], [0, 16], [18, 9], [13, 5], [3, 10], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [19, 0], [3, 18], [16, 10], [2, 9], [13, 18], [5, 3], [16, 10], [19, 0], [9, 12], [15, 5], [8, 13], [1, 2], [19, 16], [1, 5], [7, 13], [3, 18], [9, 12], [17, 0], [19, 16], [7, 17], [1, 5], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [7, 13], [4, 11], [8, 17], [3, 18], [16, 10], [7, 17], [19, 0], [13, 18], [4, 11], [5, 3], [1, 2], [16, 10], [4, 11], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [13, 3], [18, 12], [15, 2], [7, 1], [4, 11], [0, 6], [10, 4], [14, 19], [18, 12], [8, 17], [1, 2], [15, 5], [9, 11], [16, 10], [8, 7], [1, 2], [15, 5], [11, 12], [0, 6], [13, 3], [14, 19], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [16, 4], [17, 13], [3, 10], [14, 8], [7, 1], [18, 12], [19, 0], [16, 4], [1, 5], [7, 13], [8, 17], [0, 6], [9, 11], [19, 16], [1, 5], [9, 11], [8, 13], [18, 12], [6, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 26, 32]
[109, 113, 125]
[162, 175, 180]
[189, 192, 199]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 12, 21]
[82, 94, 98]
[103, 116, 121]
[191, 200, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[95, 96, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.218851327896118

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 12, 21] ccc => cc, Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [6, 40] cc => I, Pos: [6, 40] cc => I, Pos: [19, 34] cc => I, Pos: [19, 34] cc => I, Pos: [24, 26, 32] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [45, 51] cc => I, Pos: [45, 51] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [56, 71] cc => I, Pos: [56, 71] cc => I, Pos: [64, 66] cc => I, Pos: [64, 66] cc => I, Pos: [66, 77] cc => I, Pos: [66, 77] cc => I, Pos: [73, 100] cc => I, Pos: [73, 100] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [82, 94, 98] ccc => cc, Pos: [83, 99] cc => I, Pos: [83, 99] cc => I, Pos: [88, 92] cc => I, Pos: [88, 92] cc => I, Pos: [95, 96, 104] ccc => cc, Pos: [97, 105] cc => I, Pos: [97, 105] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [99, 108] cc => I, Pos: [99, 108] cc => I, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [103, 116, 121] ccc => cc, Pos: [105, 117] cc => I, Pos: [105, 117] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [109, 113, 125] ccc => cc, Pos: [117, 120] cc => I, Pos: [117, 120] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 136] cc => I, Pos: [122, 136] cc => I, Pos: [125, 140] cc => I, Pos: [125, 140] cc => I, Pos: [126, 130] cc => I, Pos: [126, 130] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [148, 155] cc => I, Pos: [148, 155] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [156, 163] cc => I, Pos: [156, 163] cc => I, Pos: [159, 172] cc => I, Pos: [159, 172] cc => I, Pos: [162, 175, 180] ccc => cc, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [166, 173] cc => I, Pos: [166, 173] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 187] cc => I, Pos: [180, 187] cc => I, Pos: [189, 192, 199] ccc => cc, Pos: [191, 200, 209] ccc => cc, Pos: [197, 208] cc => I, Pos: [197, 208] cc => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [219, 226] cc => I, Pos: [219, 226] cc => I, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [226, 230] cc => I, Pos: [226, 230] cc => I, Pos: [232, 240] cc => I, Pos: [232, 240] cc => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [238, 250] cc => I, Pos: [238, 250] cc => I, Pos: [242, 248] cc => I, Pos: [242, 248] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [258, 262] cc => I, Pos: [258, 262] cc => I, Pos: [261, 268] cc => I, Pos: [261, 268] cc => I, Pos: [262, 273] cc => I, Pos: [262, 273] cc => I, Pos: [263, 280] cc => I, Pos: [263, 280] cc => I, Pos: [265, 270] cc => I, Pos: [265, 270] cc => I, Pos: [269, 288] cc => I, Pos: [269, 288] cc => I, Pos: [270, 277] cc => I, Pos: [270, 277] cc => I, Pos: [274, 287] cc => I, Pos: [274, 287] cc => I, Pos: [276, 289] cc => I, Pos: [276, 289] cc => I, Pos: [279, 284] cc => I, Pos: [279, 284] cc => I, Pos: [280, 285] cc => I, Pos: [280, 285] cc => I, Pos: [296, 303] cc => I, Pos: [296, 303] cc => I, Pos: [301, 313] cc => I, Pos: [301, 313] cc => I, Pos: [304, 310] cc => I, Pos: [304, 310] cc => I, Pos: [308, 311] cc => I, Pos: [308, 311] cc => I]

--------End Timer [Generate Plans]:  0.1405012607574463

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [64, 66] cc => I,
 Pos: [100, 110] cc => I,
 Pos: [88, 92] cc => I,
 Pos: [98, 109] cc => I,
 Pos: [99, 108] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [105, 117] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 136] cc => I,
 Pos: [125, 140] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [162, 175, 180] ccc => cc,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [219, 226] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [236, 242] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [258, 262] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 280] cc => I,
 Pos: [270, 277] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 58, Saving: 59

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 12, 21] ccc => cc
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [6, 40] cc => I
Apply:  Pos: [19, 34] cc => I
Apply:  Pos: [24, 26, 32] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [45, 51] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [56, 71] cc => I
Apply:  Pos: [64, 66] cc => I
Apply:  Pos: [100, 110] cc => I
Apply:  Pos: [88, 92] cc => I
Apply:  Pos: [98, 109] cc => I
Apply:  Pos: [99, 108] cc => I
Apply:  Pos: [95, 96, 104] ccc => cc
Apply:  Pos: [105, 117] cc => I
Apply:  Pos: [103, 116, 121] ccc => cc
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 136] cc => I
Apply:  Pos: [125, 140] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [148, 155] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [159, 172] cc => I
Apply:  Pos: [162, 175, 180] ccc => cc
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [166, 173] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [189, 192, 199] ccc => cc
Apply:  Pos: [191, 200, 209] ccc => cc
Apply:  Pos: [197, 208] cc => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [219, 226] cc => I
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [232, 240] cc => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [238, 250] cc => I
Apply:  Pos: [258, 262] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 280] cc => I
Apply:  Pos: [270, 277] cc => I
Apply:  Pos: [269, 288] cc => I
Apply:  Pos: [274, 287] cc => I
Apply:  Pos: [276, 289] cc => I
Apply:  Pos: [279, 284] cc => I
Apply:  Pos: [296, 303] cc => I
Apply:  Pos: [301, 313] cc => I
Apply:  Pos: [304, 310] cc => I
Apply:  Pos: [308, 311] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015625953674316406

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 6], [15, 2], [8, 7], [13, 3], [5, 2], [16, 3], [6, 10], [5, 18], [4, 11], [0, 6], [18, 9], [7, 1], [19, 17], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [0, 16], [9, 12], [15, 5], [3, 18], [14, 19], [16, 10], [10, 4], [13, 5], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [13, 5], [3, 10], [1, 15], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 18], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [4, 11], [8, 17], [3, 18], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [4, 11], [10, 4], [8, 17], [9, 11], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  6.374978542327881

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[73, 82]
[61, 87]
[166, 181]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[47, 58, 66]
[79, 81, 90]
[158, 163, 168]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[58, 66, 71]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[73, 82]
[61, 87]
[166, 181]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7656102180480957

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [26, 32, 35] ccc => cc, Pos: [30, 40] cc => I, Pos: [30, 40] cc => I, Pos: [47, 58, 66] ccc => cc, Pos: [58, 66, 71] ccc => cc, Pos: [61, 87] cc => I, Pos: [61, 87] cc => I, Pos: [73, 82] cc => I, Pos: [73, 82] cc => I, Pos: [79, 81, 90] ccc => cc, Pos: [158, 163, 168] ccc => cc, Pos: [166, 181] cc => I, Pos: [166, 181] cc => I]

--------End Timer [Generate Plans]:  0.03228497505187988

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [47, 58, 66] ccc => cc,
 Pos: [61, 87] cc => I,
 Pos: [73, 82] cc => I,
 Pos: [79, 81, 90] ccc => cc,
 Pos: [158, 163, 168] ccc => cc,
 Pos: [166, 181] cc => I]
Change: 8, Saving: 9

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [30, 40] cc => I
Apply:  Pos: [47, 58, 66] ccc => cc
Apply:  Pos: [61, 87] cc => I
Apply:  Pos: [73, 82] cc => I
Apply:  Pos: [79, 81, 90] ccc => cc
Apply:  Pos: [158, 163, 168] ccc => cc
Apply:  Pos: [166, 181] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [3, 18], [14, 19], [16, 10], [10, 4], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [10, 4], [8, 17], [9, 11], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.7978951930999756

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[55, 66]
[151, 157]
[152, 172]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[167, 170, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[55, 66]
[151, 157]
[152, 172]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4996178150177

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [152, 172] cc => I, Pos: [152, 172] cc => I, Pos: [167, 170, 173] ccc => cc]

--------End Timer [Generate Plans]:  0.01563739776611328

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [55, 66] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [152, 172] cc => I,
 Pos: [167, 170, 173] ccc => cc]
Change: 4, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [152, 172] cc => I
Apply:  Pos: [167, 170, 173] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [9, 12], [18, 12], [15, 5], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [10, 4], [8, 17], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.5152552127838135

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[165, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[165, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3598010540008545

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [165, 171] cc => I, Pos: [165, 171] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [165, 171] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [165, 171] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [8, 7], [8, 17], [15, 5], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.3598010540008545

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.327972650527954

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [9, 12], [18, 12], [15, 5], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [8, 17], [8, 7], [15, 5], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.327972650527954

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [185] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 370

Reduced: 
 - size: 130 (41.27%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500500679016113

[1, 2], [15, 5], [18, 12], [0, 6], [19, 17], [4, 11], [16, 10], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [19, 0], [4, 11], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [16, 4], [1, 15], [0, 6], [11, 12], [14, 19], [7, 17], [9, 12], [17, 0], [13, 18], [5, 3], [7, 1], [11, 12], [1, 5], [7, 17], [13, 18], [16, 4], [0, 6], [15, 2], [9, 11], [17, 0], [8, 7], [16, 10], [13, 3], [5, 2], [9, 11], [17, 0], [14, 8], [16, 3], [15, 2], [6, 10], [5, 18], [4, 11], [14, 8], [0, 6], [18, 9], [7, 1], [19, 17], [3, 10], [15, 2], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [1, 15], [8, 7], [0, 16], [17, 13], [9, 11], [3, 10], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [7, 13], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [16, 4], [13, 5], [19, 17], [14, 8], [0, 6], [18, 11], [1, 15], [2, 9], [16, 10], [13, 5], [4, 11], [7, 1], [14, 8], [19, 17], [0, 6], [6, 10], [7, 1], [17, 16], [4, 11], [19, 0], [15, 2], [13, 5], [14, 8], [0, 6], [13, 5], [2, 9], [18, 11], [3, 10], [1, 15], [19, 17], [14, 8], [6, 10], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [6, 10], [18, 11], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [17, 16], [19, 0], [14, 8], [6, 10], [13, 3], [19, 0], [15, 5], [17, 16], [14, 8], [6, 10], [17, 0], [13, 18], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [3, 4], [5, 2], [9, 11], [19, 16], [0, 16], [8, 7], [3, 4], [13, 18], [5, 2], [9, 11], [6, 10], [16, 3], [8, 7], [18, 9], [15, 2], [0, 6], [1, 5], [4, 11], [17, 13], [3, 10], [15, 2], [7, 17], [0, 6], [9, 12], [8, 13], [10, 4], [0, 16], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [4, 11], [7, 17], [8, 13], [19, 0], [1, 15], [3, 18], [5, 2], [3, 10], [19, 17], [15, 2], [14, 8], [4, 11], [0, 16], [18, 9], [13, 5], [3, 10], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [19, 0], [3, 18], [16, 10], [2, 9], [13, 18], [5, 3], [16, 10], [19, 0], [9, 12], [15, 5], [8, 13], [1, 2], [19, 16], [1, 5], [7, 13], [3, 18], [9, 12], [17, 0], [19, 16], [7, 17], [1, 5], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [7, 13], [4, 11], [8, 17], [3, 18], [16, 10], [7, 17], [19, 0], [13, 18], [4, 11], [5, 3], [1, 2], [16, 10], [4, 11], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [13, 3], [18, 12], [15, 2], [7, 1], [4, 11], [0, 6], [10, 4], [14, 19], [18, 12], [8, 17], [1, 2], [15, 5], [9, 11], [16, 10], [8, 7], [1, 2], [15, 5], [11, 12], [0, 6], [13, 3], [14, 19], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [16, 4], [17, 13], [3, 10], [14, 8], [7, 1], [18, 12], [19, 0], [16, 4], [1, 5], [7, 13], [8, 17], [0, 6], [9, 11], [19, 16], [1, 5], [9, 11], [8, 13], [18, 12], [6, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 26, 32]
[109, 113, 125]
[162, 175, 180]
[189, 192, 199]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 12, 21]
[82, 94, 98]
[103, 116, 121]
[191, 200, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[95, 96, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.171841621398926

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 12, 21] ccc => cc, Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [6, 40] cc => I, Pos: [6, 40] cc => I, Pos: [19, 34] cc => I, Pos: [19, 34] cc => I, Pos: [24, 26, 32] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [45, 51] cc => I, Pos: [45, 51] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [56, 71] cc => I, Pos: [56, 71] cc => I, Pos: [64, 66] cc => I, Pos: [64, 66] cc => I, Pos: [66, 77] cc => I, Pos: [66, 77] cc => I, Pos: [73, 100] cc => I, Pos: [73, 100] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [82, 94, 98] ccc => cc, Pos: [83, 99] cc => I, Pos: [83, 99] cc => I, Pos: [88, 92] cc => I, Pos: [88, 92] cc => I, Pos: [95, 96, 104] ccc => cc, Pos: [97, 105] cc => I, Pos: [97, 105] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [99, 108] cc => I, Pos: [99, 108] cc => I, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [103, 116, 121] ccc => cc, Pos: [105, 117] cc => I, Pos: [105, 117] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [109, 113, 125] ccc => cc, Pos: [117, 120] cc => I, Pos: [117, 120] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 136] cc => I, Pos: [122, 136] cc => I, Pos: [125, 140] cc => I, Pos: [125, 140] cc => I, Pos: [126, 130] cc => I, Pos: [126, 130] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [148, 155] cc => I, Pos: [148, 155] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [156, 163] cc => I, Pos: [156, 163] cc => I, Pos: [159, 172] cc => I, Pos: [159, 172] cc => I, Pos: [162, 175, 180] ccc => cc, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [166, 173] cc => I, Pos: [166, 173] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 187] cc => I, Pos: [180, 187] cc => I, Pos: [189, 192, 199] ccc => cc, Pos: [191, 200, 209] ccc => cc, Pos: [197, 208] cc => I, Pos: [197, 208] cc => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [219, 226] cc => I, Pos: [219, 226] cc => I, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [226, 230] cc => I, Pos: [226, 230] cc => I, Pos: [232, 240] cc => I, Pos: [232, 240] cc => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [238, 250] cc => I, Pos: [238, 250] cc => I, Pos: [242, 248] cc => I, Pos: [242, 248] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [258, 262] cc => I, Pos: [258, 262] cc => I, Pos: [261, 268] cc => I, Pos: [261, 268] cc => I, Pos: [262, 273] cc => I, Pos: [262, 273] cc => I, Pos: [263, 280] cc => I, Pos: [263, 280] cc => I, Pos: [265, 270] cc => I, Pos: [265, 270] cc => I, Pos: [269, 288] cc => I, Pos: [269, 288] cc => I, Pos: [270, 277] cc => I, Pos: [270, 277] cc => I, Pos: [274, 287] cc => I, Pos: [274, 287] cc => I, Pos: [276, 289] cc => I, Pos: [276, 289] cc => I, Pos: [279, 284] cc => I, Pos: [279, 284] cc => I, Pos: [280, 285] cc => I, Pos: [280, 285] cc => I, Pos: [296, 303] cc => I, Pos: [296, 303] cc => I, Pos: [301, 313] cc => I, Pos: [301, 313] cc => I, Pos: [304, 310] cc => I, Pos: [304, 310] cc => I, Pos: [308, 311] cc => I, Pos: [308, 311] cc => I]

--------End Timer [Generate Plans]:  0.1406092643737793

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [64, 66] cc => I,
 Pos: [100, 110] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [98, 109] cc => I,
 Pos: [83, 99] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [105, 117] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [122, 136] cc => I,
 Pos: [125, 140] cc => I,
 Pos: [126, 130] cc => I,
 Pos: [135, 143] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [156, 163] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [162, 175, 180] ccc => cc,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [219, 226] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [242, 248] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [258, 262] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [263, 280] cc => I,
 Pos: [265, 270] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 59, Saving: 60

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 12, 21] ccc => cc
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [6, 40] cc => I
Apply:  Pos: [19, 34] cc => I
Apply:  Pos: [24, 26, 32] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [45, 51] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [56, 71] cc => I
Apply:  Pos: [64, 66] cc => I
Apply:  Pos: [100, 110] cc => I
Apply:  Pos: [79, 88] cc => I
Apply:  Pos: [98, 109] cc => I
Apply:  Pos: [83, 99] cc => I
Apply:  Pos: [95, 96, 104] ccc => cc
Apply:  Pos: [105, 117] cc => I
Apply:  Pos: [103, 116, 121] ccc => cc
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [122, 136] cc => I
Apply:  Pos: [125, 140] cc => I
Apply:  Pos: [126, 130] cc => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [148, 155] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [156, 163] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [159, 172] cc => I
Apply:  Pos: [162, 175, 180] ccc => cc
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [166, 173] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [189, 192, 199] ccc => cc
Apply:  Pos: [191, 200, 209] ccc => cc
Apply:  Pos: [197, 208] cc => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [219, 226] cc => I
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [232, 240] cc => I
Apply:  Pos: [242, 248] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [238, 250] cc => I
Apply:  Pos: [258, 262] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [263, 280] cc => I
Apply:  Pos: [265, 270] cc => I
Apply:  Pos: [269, 288] cc => I
Apply:  Pos: [274, 287] cc => I
Apply:  Pos: [276, 289] cc => I
Apply:  Pos: [279, 284] cc => I
Apply:  Pos: [296, 303] cc => I
Apply:  Pos: [301, 313] cc => I
Apply:  Pos: [304, 310] cc => I
Apply:  Pos: [308, 311] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 6], [15, 2], [8, 7], [13, 3], [5, 2], [16, 3], [6, 10], [5, 18], [4, 11], [0, 6], [18, 9], [7, 1], [19, 17], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [16, 10], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [16, 10], [10, 4], [13, 5], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [13, 5], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 10], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [19, 16], [3, 18], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [15, 2], [4, 11], [8, 17], [3, 18], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [4, 11], [10, 4], [18, 12], [8, 17], [9, 11], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  6.312450885772705

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[72, 81]
[164, 178]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[47, 57, 64]
[141, 152, 156]
[157, 162, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 64, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[72, 81]
[164, 178]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7344272136688232

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [26, 32, 35] ccc => cc, Pos: [30, 40] cc => I, Pos: [30, 40] cc => I, Pos: [47, 57, 64] ccc => cc, Pos: [57, 64, 70] ccc => cc, Pos: [72, 81] cc => I, Pos: [72, 81] cc => I, Pos: [141, 152, 156] ccc => cc, Pos: [157, 162, 166] ccc => cc, Pos: [164, 178] cc => I, Pos: [164, 178] cc => I]

--------End Timer [Generate Plans]:  0.015610218048095703

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [47, 57, 64] ccc => cc,
 Pos: [72, 81] cc => I,
 Pos: [141, 152, 156] ccc => cc,
 Pos: [157, 162, 166] ccc => cc,
 Pos: [164, 178] cc => I]
Change: 7, Saving: 7

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [30, 40] cc => I
Apply:  Pos: [47, 57, 64] ccc => cc
Apply:  Pos: [72, 81] cc => I
Apply:  Pos: [141, 152, 156] ccc => cc
Apply:  Pos: [157, 162, 166] ccc => cc
Apply:  Pos: [164, 178] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [16, 10], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [16, 10], [10, 4], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 10], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 10], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [15, 2], [8, 17], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [10, 4], [18, 12], [8, 17], [9, 11], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.750037431716919

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[54, 66]
[152, 157]
[153, 172]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[146, 154, 166]
[166, 169, 173]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[154, 166, 169]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[54, 66]
[152, 157]
[153, 172]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4843459129333496

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [54, 66] cc => I, Pos: [54, 66] cc => I, Pos: [146, 154, 166] ccc => cc, Pos: [152, 157] cc => I, Pos: [152, 157] cc => I, Pos: [153, 172] cc => I, Pos: [153, 172] cc => I, Pos: [154, 166, 169] ccc => cc, Pos: [166, 169, 173] ccc => cc]

--------End Timer [Generate Plans]:  0.015638351440429688

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [54, 66] cc => I,
 Pos: [154, 166, 169] ccc => cc,
 Pos: [152, 157] cc => I,
 Pos: [153, 172] cc => I]
Change: 4, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [54, 66] cc => I
Apply:  Pos: [154, 166, 169] ccc => cc
Apply:  Pos: [152, 157] cc => I
Apply:  Pos: [153, 172] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [9, 12], [18, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 10], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 10], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [16, 10], [18, 12], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [10, 4], [15, 2], [7, 1], [18, 12], [8, 17], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.4999842643737793

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[144, 150]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[150, 161, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[144, 150]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.343942165374756

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [144, 150] cc => I, Pos: [144, 150] cc => I, Pos: [150, 161, 166] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [144, 150] cc => I]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [144, 150] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 10], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 10], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [18, 12], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [10, 4], [15, 2], [7, 1], [18, 12], [8, 17], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.343942165374756

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.3280303478240967

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [19, 17], [15, 2], [9, 11], [3, 4], [9, 12], [18, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [18, 11], [1, 15], [15, 2], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [14, 8], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 10], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 10], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [18, 12], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [10, 4], [15, 2], [7, 1], [18, 12], [8, 17], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.3280303478240967

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [185] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 37 - (small)
 - circuit cycle: 370

Reduced: 
 - size: 130 (41.27%)
 - depth: 8 (17.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499117851257324

[1, 2], [15, 5], [18, 12], [0, 6], [19, 17], [4, 11], [16, 10], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [19, 0], [4, 11], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [16, 4], [1, 15], [0, 6], [11, 12], [14, 19], [7, 17], [9, 12], [17, 0], [13, 18], [5, 3], [7, 1], [11, 12], [1, 5], [7, 17], [13, 18], [16, 4], [0, 6], [15, 2], [9, 11], [17, 0], [8, 7], [16, 10], [13, 3], [5, 2], [9, 11], [17, 0], [14, 8], [16, 3], [15, 2], [6, 10], [5, 18], [4, 11], [14, 8], [0, 6], [18, 9], [7, 1], [19, 17], [3, 10], [15, 2], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [1, 15], [8, 7], [0, 16], [17, 13], [9, 11], [3, 10], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [7, 13], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [16, 4], [13, 5], [19, 17], [14, 8], [0, 6], [18, 11], [1, 15], [2, 9], [16, 10], [13, 5], [4, 11], [7, 1], [14, 8], [19, 17], [0, 6], [6, 10], [7, 1], [17, 16], [4, 11], [19, 0], [15, 2], [13, 5], [14, 8], [0, 6], [13, 5], [2, 9], [18, 11], [3, 10], [1, 15], [19, 17], [14, 8], [6, 10], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [6, 10], [18, 11], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [17, 16], [19, 0], [14, 8], [6, 10], [13, 3], [19, 0], [15, 5], [17, 16], [14, 8], [6, 10], [17, 0], [13, 18], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [3, 4], [5, 2], [9, 11], [19, 16], [0, 16], [8, 7], [3, 4], [13, 18], [5, 2], [9, 11], [6, 10], [16, 3], [8, 7], [18, 9], [15, 2], [0, 6], [1, 5], [4, 11], [17, 13], [3, 10], [15, 2], [7, 17], [0, 6], [9, 12], [8, 13], [10, 4], [0, 16], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [4, 11], [7, 17], [8, 13], [19, 0], [1, 15], [3, 18], [5, 2], [3, 10], [19, 17], [15, 2], [14, 8], [4, 11], [0, 16], [18, 9], [13, 5], [3, 10], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [19, 0], [3, 18], [16, 10], [2, 9], [13, 18], [5, 3], [16, 10], [19, 0], [9, 12], [15, 5], [8, 13], [1, 2], [19, 16], [1, 5], [7, 13], [3, 18], [9, 12], [17, 0], [19, 16], [7, 17], [1, 5], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [7, 13], [4, 11], [8, 17], [3, 18], [16, 10], [7, 17], [19, 0], [13, 18], [4, 11], [5, 3], [1, 2], [16, 10], [4, 11], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [13, 3], [18, 12], [15, 2], [7, 1], [4, 11], [0, 6], [10, 4], [14, 19], [18, 12], [8, 17], [1, 2], [15, 5], [9, 11], [16, 10], [8, 7], [1, 2], [15, 5], [11, 12], [0, 6], [13, 3], [14, 19], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [16, 4], [17, 13], [3, 10], [14, 8], [7, 1], [18, 12], [19, 0], [16, 4], [1, 5], [7, 13], [8, 17], [0, 6], [9, 11], [19, 16], [1, 5], [9, 11], [8, 13], [18, 12], [6, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 26, 32]
[109, 113, 125]
[162, 175, 180]
[189, 192, 199]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 12, 21]
[82, 94, 98]
[103, 116, 121]
[191, 200, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[95, 96, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.234415292739868

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 12, 21] ccc => cc, Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [6, 40] cc => I, Pos: [6, 40] cc => I, Pos: [19, 34] cc => I, Pos: [19, 34] cc => I, Pos: [24, 26, 32] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [45, 51] cc => I, Pos: [45, 51] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [56, 71] cc => I, Pos: [56, 71] cc => I, Pos: [64, 66] cc => I, Pos: [64, 66] cc => I, Pos: [66, 77] cc => I, Pos: [66, 77] cc => I, Pos: [73, 100] cc => I, Pos: [73, 100] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [82, 94, 98] ccc => cc, Pos: [83, 99] cc => I, Pos: [83, 99] cc => I, Pos: [88, 92] cc => I, Pos: [88, 92] cc => I, Pos: [95, 96, 104] ccc => cc, Pos: [97, 105] cc => I, Pos: [97, 105] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [99, 108] cc => I, Pos: [99, 108] cc => I, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [103, 116, 121] ccc => cc, Pos: [105, 117] cc => I, Pos: [105, 117] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [109, 113, 125] ccc => cc, Pos: [117, 120] cc => I, Pos: [117, 120] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 136] cc => I, Pos: [122, 136] cc => I, Pos: [125, 140] cc => I, Pos: [125, 140] cc => I, Pos: [126, 130] cc => I, Pos: [126, 130] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [148, 155] cc => I, Pos: [148, 155] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [156, 163] cc => I, Pos: [156, 163] cc => I, Pos: [159, 172] cc => I, Pos: [159, 172] cc => I, Pos: [162, 175, 180] ccc => cc, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [166, 173] cc => I, Pos: [166, 173] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 187] cc => I, Pos: [180, 187] cc => I, Pos: [189, 192, 199] ccc => cc, Pos: [191, 200, 209] ccc => cc, Pos: [197, 208] cc => I, Pos: [197, 208] cc => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [219, 226] cc => I, Pos: [219, 226] cc => I, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [226, 230] cc => I, Pos: [226, 230] cc => I, Pos: [232, 240] cc => I, Pos: [232, 240] cc => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [238, 250] cc => I, Pos: [238, 250] cc => I, Pos: [242, 248] cc => I, Pos: [242, 248] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [258, 262] cc => I, Pos: [258, 262] cc => I, Pos: [261, 268] cc => I, Pos: [261, 268] cc => I, Pos: [262, 273] cc => I, Pos: [262, 273] cc => I, Pos: [263, 280] cc => I, Pos: [263, 280] cc => I, Pos: [265, 270] cc => I, Pos: [265, 270] cc => I, Pos: [269, 288] cc => I, Pos: [269, 288] cc => I, Pos: [270, 277] cc => I, Pos: [270, 277] cc => I, Pos: [274, 287] cc => I, Pos: [274, 287] cc => I, Pos: [276, 289] cc => I, Pos: [276, 289] cc => I, Pos: [279, 284] cc => I, Pos: [279, 284] cc => I, Pos: [280, 285] cc => I, Pos: [280, 285] cc => I, Pos: [296, 303] cc => I, Pos: [296, 303] cc => I, Pos: [301, 313] cc => I, Pos: [301, 313] cc => I, Pos: [304, 310] cc => I, Pos: [304, 310] cc => I, Pos: [308, 311] cc => I, Pos: [308, 311] cc => I]

--------End Timer [Generate Plans]:  0.15619921684265137

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [66, 77] cc => I,
 Pos: [73, 100] cc => I,
 Pos: [88, 92] cc => I,
 Pos: [82, 94, 98] ccc => cc,
 Pos: [83, 99] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [105, 117] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [109, 113, 125] ccc => cc,
 Pos: [122, 136] cc => I,
 Pos: [135, 143] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [151, 157] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [180, 187] cc => I,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [226, 230] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [242, 248] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [262, 273] cc => I,
 Pos: [263, 280] cc => I,
 Pos: [270, 277] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 59, Saving: 61

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 12, 21] ccc => cc
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [6, 40] cc => I
Apply:  Pos: [19, 34] cc => I
Apply:  Pos: [24, 26, 32] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [45, 51] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [56, 71] cc => I
Apply:  Pos: [66, 77] cc => I
Apply:  Pos: [73, 100] cc => I
Apply:  Pos: [88, 92] cc => I
Apply:  Pos: [82, 94, 98] ccc => cc
Apply:  Pos: [83, 99] cc => I
Apply:  Pos: [95, 96, 104] ccc => cc
Apply:  Pos: [105, 117] cc => I
Apply:  Pos: [103, 116, 121] ccc => cc
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [109, 113, 125] ccc => cc
Apply:  Pos: [122, 136] cc => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [148, 155] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [151, 157] cc => I
Apply:  Pos: [159, 172] cc => I
Apply:  Pos: [180, 187] cc => I
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [166, 173] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [189, 192, 199] ccc => cc
Apply:  Pos: [191, 200, 209] ccc => cc
Apply:  Pos: [197, 208] cc => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [226, 230] cc => I
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [232, 240] cc => I
Apply:  Pos: [242, 248] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [238, 250] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [262, 273] cc => I
Apply:  Pos: [263, 280] cc => I
Apply:  Pos: [270, 277] cc => I
Apply:  Pos: [269, 288] cc => I
Apply:  Pos: [274, 287] cc => I
Apply:  Pos: [276, 289] cc => I
Apply:  Pos: [279, 284] cc => I
Apply:  Pos: [296, 303] cc => I
Apply:  Pos: [301, 313] cc => I
Apply:  Pos: [304, 310] cc => I
Apply:  Pos: [308, 311] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 6], [15, 2], [8, 7], [13, 3], [5, 2], [16, 3], [6, 10], [5, 18], [4, 11], [0, 6], [18, 9], [7, 1], [19, 17], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [16, 10], [1, 5], [14, 19], [15, 2], [9, 11], [3, 4], [18, 12], [0, 16], [9, 12], [15, 5], [3, 18], [19, 17], [16, 10], [10, 4], [13, 5], [18, 11], [1, 15], [15, 2], [14, 8], [19, 16], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [13, 5], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [19, 16], [3, 18], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [15, 2], [8, 17], [3, 18], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [10, 4], [8, 17], [9, 11], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  6.3906145095825195

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[51, 59]
[71, 83]
[75, 89]
[163, 183]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[48, 57, 64]
[144, 147, 159]
[160, 165, 168]
[178, 181, 184]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 64, 69]
[164, 178, 181]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[51, 59]
[71, 83]
[75, 89]
[163, 183]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7968780994415283

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [26, 32, 35] ccc => cc, Pos: [30, 40] cc => I, Pos: [30, 40] cc => I, Pos: [48, 57, 64] ccc => cc, Pos: [51, 59] cc => I, Pos: [51, 59] cc => I, Pos: [57, 64, 69] ccc => cc, Pos: [71, 83] cc => I, Pos: [71, 83] cc => I, Pos: [75, 89] cc => I, Pos: [75, 89] cc => I, Pos: [144, 147, 159] ccc => cc, Pos: [160, 165, 168] ccc => cc, Pos: [163, 183] cc => I, Pos: [163, 183] cc => I, Pos: [164, 178, 181] ccc => cc, Pos: [178, 181, 184] ccc => cc]

--------End Timer [Generate Plans]:  0.031247854232788086

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [48, 57, 64] ccc => cc,
 Pos: [51, 59] cc => I,
 Pos: [71, 83] cc => I,
 Pos: [75, 89] cc => I,
 Pos: [144, 147, 159] ccc => cc,
 Pos: [160, 165, 168] ccc => cc,
 Pos: [163, 183] cc => I,
 Pos: [164, 178, 181] ccc => cc]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [30, 40] cc => I
Apply:  Pos: [48, 57, 64] ccc => cc
Apply:  Pos: [51, 59] cc => I
Apply:  Pos: [71, 83] cc => I
Apply:  Pos: [75, 89] cc => I
Apply:  Pos: [144, 147, 159] ccc => cc
Apply:  Pos: [160, 165, 168] ccc => cc
Apply:  Pos: [163, 183] cc => I
Apply:  Pos: [164, 178, 181] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [16, 10], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [3, 18], [19, 17], [16, 10], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 10], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [16, 10], [18, 12], [15, 2], [8, 17], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [10, 4], [15, 2], [7, 1], [8, 17], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.8281259536743164

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 63]
[137, 152]
[151, 155]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[152, 165, 169]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 63]
[137, 152]
[151, 155]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4219303131103516

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [53, 63] cc => I, Pos: [53, 63] cc => I, Pos: [137, 152] cc => I, Pos: [137, 152] cc => I, Pos: [151, 155] cc => I, Pos: [151, 155] cc => I, Pos: [152, 165, 169] ccc => cc]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [53, 63] cc => I, Pos: [137, 152] cc => I, Pos: [151, 155] cc => I]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [53, 63] cc => I
Apply:  Pos: [137, 152] cc => I
Apply:  Pos: [151, 155] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [1, 5], [15, 2], [9, 11], [3, 4], [9, 12], [18, 12], [15, 5], [3, 18], [19, 17], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 10], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [18, 12], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [10, 4], [15, 2], [7, 1], [8, 17], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.437554359436035

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.312501907348633

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [8, 17], [7, 13], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [3, 18], [19, 17], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [6, 10], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [17, 0], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 10], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [18, 12], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [18, 12], [14, 8], [19, 17], [10, 4], [15, 2], [7, 1], [8, 17], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.312501907348633

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [184] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 368

Reduced: 
 - size: 131 (41.59%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12505054473876953

[1, 2], [15, 5], [18, 12], [0, 6], [19, 17], [4, 11], [16, 10], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [19, 0], [4, 11], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [16, 4], [1, 15], [0, 6], [11, 12], [14, 19], [7, 17], [9, 12], [17, 0], [13, 18], [5, 3], [7, 1], [11, 12], [1, 5], [7, 17], [13, 18], [16, 4], [0, 6], [15, 2], [9, 11], [17, 0], [8, 7], [16, 10], [13, 3], [5, 2], [9, 11], [17, 0], [14, 8], [16, 3], [15, 2], [6, 10], [5, 18], [4, 11], [14, 8], [0, 6], [18, 9], [7, 1], [19, 17], [3, 10], [15, 2], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [1, 15], [3, 18], [1, 15], [8, 7], [0, 16], [17, 13], [9, 11], [3, 10], [14, 19], [0, 6], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [7, 13], [16, 10], [1, 5], [19, 17], [14, 8], [15, 2], [9, 11], [3, 4], [18, 12], [7, 13], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [14, 19], [10, 4], [16, 4], [13, 5], [19, 17], [14, 8], [0, 6], [18, 11], [1, 15], [2, 9], [16, 10], [13, 5], [4, 11], [7, 1], [14, 8], [19, 17], [0, 6], [6, 10], [7, 1], [17, 16], [4, 11], [19, 0], [15, 2], [13, 5], [14, 8], [0, 6], [13, 5], [2, 9], [18, 11], [3, 10], [1, 15], [19, 17], [14, 8], [6, 10], [7, 1], [15, 5], [14, 8], [18, 12], [16, 4], [19, 0], [13, 3], [6, 10], [18, 11], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [6, 10], [7, 13], [5, 3], [1, 15], [11, 12], [17, 16], [19, 0], [14, 8], [6, 10], [13, 3], [19, 0], [15, 5], [17, 16], [14, 8], [6, 10], [17, 0], [13, 18], [2, 9], [7, 1], [0, 6], [14, 8], [1, 15], [3, 4], [5, 2], [9, 11], [19, 16], [0, 16], [8, 7], [3, 4], [13, 18], [5, 2], [9, 11], [6, 10], [16, 3], [8, 7], [18, 9], [15, 2], [0, 6], [1, 5], [4, 11], [17, 13], [3, 10], [15, 2], [7, 17], [0, 6], [9, 12], [8, 13], [10, 4], [0, 16], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [4, 11], [7, 17], [8, 13], [19, 0], [1, 15], [3, 18], [5, 2], [3, 10], [19, 17], [15, 2], [14, 8], [4, 11], [0, 16], [18, 9], [13, 5], [3, 10], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [16, 10], [8, 7], [13, 5], [15, 2], [4, 11], [19, 0], [3, 18], [16, 10], [2, 9], [13, 18], [5, 3], [16, 10], [19, 0], [9, 12], [15, 5], [8, 13], [1, 2], [19, 16], [1, 5], [7, 13], [3, 18], [9, 12], [17, 0], [19, 16], [7, 17], [1, 5], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [7, 13], [4, 11], [8, 17], [3, 18], [16, 10], [7, 17], [19, 0], [13, 18], [4, 11], [5, 3], [1, 2], [16, 10], [4, 11], [15, 5], [7, 13], [18, 12], [14, 8], [19, 17], [16, 10], [13, 3], [18, 12], [15, 2], [7, 1], [4, 11], [0, 6], [10, 4], [14, 19], [18, 12], [8, 17], [1, 2], [15, 5], [9, 11], [16, 10], [8, 7], [1, 2], [15, 5], [11, 12], [0, 6], [13, 3], [14, 19], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [16, 4], [17, 13], [3, 10], [14, 8], [7, 1], [18, 12], [19, 0], [16, 4], [1, 5], [7, 13], [8, 17], [0, 6], [9, 11], [19, 16], [1, 5], [9, 11], [8, 13], [18, 12], [6, 10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 26, 32]
[109, 113, 125]
[162, 175, 180]
[189, 192, 199]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[3, 12, 21]
[82, 94, 98]
[103, 116, 121]
[191, 200, 209]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[95, 96, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 13]
[27, 33]
[19, 34]
[6, 40]
[37, 43]
[38, 44]
[45, 51]
[47, 57]
[64, 66]
[56, 71]
[66, 77]
[79, 88]
[88, 92]
[83, 99]
[73, 100]
[97, 105]
[99, 108]
[98, 109]
[100, 110]
[107, 112]
[106, 114]
[105, 117]
[108, 118]
[117, 120]
[118, 126]
[126, 130]
[127, 135]
[122, 136]
[125, 140]
[135, 143]
[143, 151]
[149, 153]
[148, 155]
[150, 156]
[151, 157]
[156, 163]
[165, 171]
[159, 172]
[166, 173]
[167, 174]
[170, 177]
[179, 185]
[180, 187]
[197, 208]
[204, 212]
[219, 226]
[226, 230]
[224, 231]
[232, 240]
[236, 242]
[237, 244]
[242, 248]
[238, 250]
[251, 258]
[254, 261]
[258, 262]
[261, 268]
[265, 270]
[262, 273]
[270, 277]
[263, 280]
[279, 284]
[280, 285]
[274, 287]
[269, 288]
[276, 289]
[296, 303]
[304, 310]
[308, 311]
[301, 313]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  6.171789169311523

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [3, 12, 21] ccc => cc, Pos: [5, 13] cc => I, Pos: [5, 13] cc => I, Pos: [6, 40] cc => I, Pos: [6, 40] cc => I, Pos: [19, 34] cc => I, Pos: [19, 34] cc => I, Pos: [24, 26, 32] ccc => cc, Pos: [27, 33] cc => I, Pos: [27, 33] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [45, 51] cc => I, Pos: [45, 51] cc => I, Pos: [47, 57] cc => I, Pos: [47, 57] cc => I, Pos: [56, 71] cc => I, Pos: [56, 71] cc => I, Pos: [64, 66] cc => I, Pos: [64, 66] cc => I, Pos: [66, 77] cc => I, Pos: [66, 77] cc => I, Pos: [73, 100] cc => I, Pos: [73, 100] cc => I, Pos: [79, 88] cc => I, Pos: [79, 88] cc => I, Pos: [82, 94, 98] ccc => cc, Pos: [83, 99] cc => I, Pos: [83, 99] cc => I, Pos: [88, 92] cc => I, Pos: [88, 92] cc => I, Pos: [95, 96, 104] ccc => cc, Pos: [97, 105] cc => I, Pos: [97, 105] cc => I, Pos: [98, 109] cc => I, Pos: [98, 109] cc => I, Pos: [99, 108] cc => I, Pos: [99, 108] cc => I, Pos: [100, 110] cc => I, Pos: [100, 110] cc => I, Pos: [103, 116, 121] ccc => cc, Pos: [105, 117] cc => I, Pos: [105, 117] cc => I, Pos: [106, 114] cc => I, Pos: [106, 114] cc => I, Pos: [107, 112] cc => I, Pos: [107, 112] cc => I, Pos: [108, 118] cc => I, Pos: [108, 118] cc => I, Pos: [109, 113, 125] ccc => cc, Pos: [117, 120] cc => I, Pos: [117, 120] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 136] cc => I, Pos: [122, 136] cc => I, Pos: [125, 140] cc => I, Pos: [125, 140] cc => I, Pos: [126, 130] cc => I, Pos: [126, 130] cc => I, Pos: [127, 135] cc => I, Pos: [127, 135] cc => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [148, 155] cc => I, Pos: [148, 155] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [150, 156] cc => I, Pos: [150, 156] cc => I, Pos: [151, 157] cc => I, Pos: [151, 157] cc => I, Pos: [156, 163] cc => I, Pos: [156, 163] cc => I, Pos: [159, 172] cc => I, Pos: [159, 172] cc => I, Pos: [162, 175, 180] ccc => cc, Pos: [165, 171] cc => I, Pos: [165, 171] cc => I, Pos: [166, 173] cc => I, Pos: [166, 173] cc => I, Pos: [167, 174] cc => I, Pos: [167, 174] cc => I, Pos: [170, 177] cc => I, Pos: [170, 177] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 187] cc => I, Pos: [180, 187] cc => I, Pos: [189, 192, 199] ccc => cc, Pos: [191, 200, 209] ccc => cc, Pos: [197, 208] cc => I, Pos: [197, 208] cc => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [219, 226] cc => I, Pos: [219, 226] cc => I, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [226, 230] cc => I, Pos: [226, 230] cc => I, Pos: [232, 240] cc => I, Pos: [232, 240] cc => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [237, 244] cc => I, Pos: [237, 244] cc => I, Pos: [238, 250] cc => I, Pos: [238, 250] cc => I, Pos: [242, 248] cc => I, Pos: [242, 248] cc => I, Pos: [251, 258] cc => I, Pos: [251, 258] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I, Pos: [258, 262] cc => I, Pos: [258, 262] cc => I, Pos: [261, 268] cc => I, Pos: [261, 268] cc => I, Pos: [262, 273] cc => I, Pos: [262, 273] cc => I, Pos: [263, 280] cc => I, Pos: [263, 280] cc => I, Pos: [265, 270] cc => I, Pos: [265, 270] cc => I, Pos: [269, 288] cc => I, Pos: [269, 288] cc => I, Pos: [270, 277] cc => I, Pos: [270, 277] cc => I, Pos: [274, 287] cc => I, Pos: [274, 287] cc => I, Pos: [276, 289] cc => I, Pos: [276, 289] cc => I, Pos: [279, 284] cc => I, Pos: [279, 284] cc => I, Pos: [280, 285] cc => I, Pos: [280, 285] cc => I, Pos: [296, 303] cc => I, Pos: [296, 303] cc => I, Pos: [301, 313] cc => I, Pos: [301, 313] cc => I, Pos: [304, 310] cc => I, Pos: [304, 310] cc => I, Pos: [308, 311] cc => I, Pos: [308, 311] cc => I]

Plan: 1
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [64, 66] cc => I,
 Pos: [73, 100] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [82, 94, 98] ccc => cc,
 Pos: [83, 99] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [97, 105] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [109, 113, 125] ccc => cc,
 Pos: [117, 120] cc => I,
 Pos: [122, 136] cc => I,
 Pos: [126, 130] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [162, 175, 180] ccc => cc,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [219, 226] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [236, 242] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [262, 273] cc => I,
 Pos: [263, 280] cc => I,
 Pos: [265, 270] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 61, Saving: 63

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.14063167572021484

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [3, 12, 21] ccc => cc,
 Pos: [5, 13] cc => I,
 Pos: [6, 40] cc => I,
 Pos: [19, 34] cc => I,
 Pos: [24, 26, 32] ccc => cc,
 Pos: [27, 33] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [38, 44] cc => I,
 Pos: [45, 51] cc => I,
 Pos: [47, 57] cc => I,
 Pos: [56, 71] cc => I,
 Pos: [64, 66] cc => I,
 Pos: [73, 100] cc => I,
 Pos: [79, 88] cc => I,
 Pos: [82, 94, 98] ccc => cc,
 Pos: [83, 99] cc => I,
 Pos: [95, 96, 104] ccc => cc,
 Pos: [97, 105] cc => I,
 Pos: [103, 116, 121] ccc => cc,
 Pos: [106, 114] cc => I,
 Pos: [107, 112] cc => I,
 Pos: [108, 118] cc => I,
 Pos: [109, 113, 125] ccc => cc,
 Pos: [117, 120] cc => I,
 Pos: [122, 136] cc => I,
 Pos: [126, 130] cc => I,
 Pos: [127, 135] cc => I,
 Pos: [143, 151] cc => I,
 Pos: [148, 155] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [150, 156] cc => I,
 Pos: [159, 172] cc => I,
 Pos: [162, 175, 180] ccc => cc,
 Pos: [165, 171] cc => I,
 Pos: [166, 173] cc => I,
 Pos: [167, 174] cc => I,
 Pos: [170, 177] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [189, 192, 199] ccc => cc,
 Pos: [191, 200, 209] ccc => cc,
 Pos: [197, 208] cc => I,
 Pos: [204, 212] cc => I,
 Pos: [219, 226] cc => I,
 Pos: [224, 231] cc => I,
 Pos: [232, 240] cc => I,
 Pos: [236, 242] cc => I,
 Pos: [237, 244] cc => I,
 Pos: [238, 250] cc => I,
 Pos: [251, 258] cc => I,
 Pos: [254, 261] cc => I,
 Pos: [262, 273] cc => I,
 Pos: [263, 280] cc => I,
 Pos: [265, 270] cc => I,
 Pos: [269, 288] cc => I,
 Pos: [274, 287] cc => I,
 Pos: [276, 289] cc => I,
 Pos: [279, 284] cc => I,
 Pos: [296, 303] cc => I,
 Pos: [301, 313] cc => I,
 Pos: [304, 310] cc => I,
 Pos: [308, 311] cc => I]
Change: 61, Saving: 63

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [3, 12, 21] ccc => cc
Apply:  Pos: [5, 13] cc => I
Apply:  Pos: [6, 40] cc => I
Apply:  Pos: [19, 34] cc => I
Apply:  Pos: [24, 26, 32] ccc => cc
Apply:  Pos: [27, 33] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [45, 51] cc => I
Apply:  Pos: [47, 57] cc => I
Apply:  Pos: [56, 71] cc => I
Apply:  Pos: [64, 66] cc => I
Apply:  Pos: [73, 100] cc => I
Apply:  Pos: [79, 88] cc => I
Apply:  Pos: [82, 94, 98] ccc => cc
Apply:  Pos: [83, 99] cc => I
Apply:  Pos: [95, 96, 104] ccc => cc
Apply:  Pos: [97, 105] cc => I
Apply:  Pos: [103, 116, 121] ccc => cc
Apply:  Pos: [106, 114] cc => I
Apply:  Pos: [107, 112] cc => I
Apply:  Pos: [108, 118] cc => I
Apply:  Pos: [109, 113, 125] ccc => cc
Apply:  Pos: [117, 120] cc => I
Apply:  Pos: [122, 136] cc => I
Apply:  Pos: [126, 130] cc => I
Apply:  Pos: [127, 135] cc => I
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [148, 155] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [150, 156] cc => I
Apply:  Pos: [159, 172] cc => I
Apply:  Pos: [162, 175, 180] ccc => cc
Apply:  Pos: [165, 171] cc => I
Apply:  Pos: [166, 173] cc => I
Apply:  Pos: [167, 174] cc => I
Apply:  Pos: [170, 177] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [189, 192, 199] ccc => cc
Apply:  Pos: [191, 200, 209] ccc => cc
Apply:  Pos: [197, 208] cc => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [219, 226] cc => I
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [232, 240] cc => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [237, 244] cc => I
Apply:  Pos: [238, 250] cc => I
Apply:  Pos: [251, 258] cc => I
Apply:  Pos: [254, 261] cc => I
Apply:  Pos: [262, 273] cc => I
Apply:  Pos: [263, 280] cc => I
Apply:  Pos: [265, 270] cc => I
Apply:  Pos: [269, 288] cc => I
Apply:  Pos: [274, 287] cc => I
Apply:  Pos: [276, 289] cc => I
Apply:  Pos: [279, 284] cc => I
Apply:  Pos: [296, 303] cc => I
Apply:  Pos: [301, 313] cc => I
Apply:  Pos: [304, 310] cc => I
Apply:  Pos: [308, 311] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 6], [15, 2], [8, 7], [13, 3], [5, 2], [16, 3], [6, 10], [5, 18], [4, 11], [0, 6], [18, 9], [7, 1], [19, 17], [18, 11], [5, 2], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 16], [17, 13], [9, 11], [14, 19], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [16, 10], [1, 5], [14, 19], [15, 2], [9, 11], [3, 4], [18, 12], [0, 16], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [16, 10], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 0], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [19, 0], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 18], [17, 0], [7, 17], [9, 11], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [3, 18], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 10], [15, 2], [7, 1], [10, 4], [18, 12], [8, 17], [9, 11], [16, 10], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  6.312420845031738

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[50, 58]
[159, 180]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[26, 32, 35]
[47, 56, 63]
[78, 80, 87]
[156, 161, 165]
[174, 177, 181]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 63, 69]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[30, 40]
[50, 58]
[159, 180]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6406571865081787

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [26, 32, 35] ccc => cc, Pos: [30, 40] cc => I, Pos: [30, 40] cc => I, Pos: [47, 56, 63] ccc => cc, Pos: [50, 58] cc => I, Pos: [50, 58] cc => I, Pos: [56, 63, 69] ccc => cc, Pos: [78, 80, 87] ccc => cc, Pos: [156, 161, 165] ccc => cc, Pos: [159, 180] cc => I, Pos: [159, 180] cc => I, Pos: [174, 177, 181] ccc => cc]

Plan: 1
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [47, 56, 63] ccc => cc,
 Pos: [50, 58] cc => I,
 Pos: [78, 80, 87] ccc => cc,
 Pos: [156, 161, 165] ccc => cc,
 Pos: [159, 180] cc => I,
 Pos: [174, 177, 181] ccc => cc]
Change: 8, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015636920928955078

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 32, 35] ccc => cc,
 Pos: [30, 40] cc => I,
 Pos: [47, 56, 63] ccc => cc,
 Pos: [50, 58] cc => I,
 Pos: [78, 80, 87] ccc => cc,
 Pos: [156, 161, 165] ccc => cc,
 Pos: [159, 180] cc => I,
 Pos: [174, 177, 181] ccc => cc]
Change: 8, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [26, 32, 35] ccc => cc
Apply:  Pos: [30, 40] cc => I
Apply:  Pos: [47, 56, 63] ccc => cc
Apply:  Pos: [50, 58] cc => I
Apply:  Pos: [78, 80, 87] ccc => cc
Apply:  Pos: [156, 161, 165] ccc => cc
Apply:  Pos: [159, 180] cc => I
Apply:  Pos: [174, 177, 181] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [16, 10], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [16, 10], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [7, 17], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [7, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [10, 4], [18, 12], [8, 17], [8, 7], [15, 5], [11, 12], [0, 16], [10, 4], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.656294107437134

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[52, 63]
[151, 156]
[168, 175]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[52, 63]
[151, 156]
[168, 175]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4213204383850098

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [52, 63] cc => I, Pos: [52, 63] cc => I, Pos: [151, 156] cc => I, Pos: [151, 156] cc => I, Pos: [168, 175] cc => I, Pos: [168, 175] cc => I]

Plan: 1
[Pos: [52, 63] cc => I, Pos: [151, 156] cc => I, Pos: [168, 175] cc => I]
Change: 3, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [52, 63] cc => I, Pos: [151, 156] cc => I, Pos: [168, 175] cc => I]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [52, 63] cc => I
Apply:  Pos: [151, 156] cc => I
Apply:  Pos: [168, 175] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[1, 2], [15, 5], [18, 12], [19, 0], [19, 17], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [18, 9], [2, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [16, 3], [13, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [15, 2], [9, 11], [3, 4], [9, 12], [18, 12], [15, 5], [7, 13], [3, 18], [19, 17], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [19, 16], [0, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [18, 12], [8, 7], [8, 17], [15, 5], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.4213204383850098

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.2969751358032227

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[1, 2], [15, 5], [18, 12], [19, 17], [19, 0], [7, 13], [14, 8], [15, 2], [13, 5], [16, 3], [0, 6], [8, 7], [2, 9], [18, 9], [8, 13], [3, 18], [1, 15], [11, 12], [14, 19], [7, 0], [9, 12], [17, 0], [5, 3], [7, 1], [11, 12], [1, 5], [0, 10], [15, 2], [8, 7], [13, 3], [16, 3], [6, 10], [5, 18], [4, 11], [18, 9], [7, 1], [19, 17], [18, 11], [7, 17], [19, 0], [9, 12], [8, 13], [3, 18], [8, 7], [0, 10], [17, 13], [9, 11], [5, 18], [2, 9], [4, 11], [1, 15], [8, 17], [1, 5], [15, 2], [9, 11], [3, 4], [18, 12], [9, 12], [15, 5], [7, 13], [3, 18], [19, 17], [10, 4], [18, 11], [1, 15], [15, 2], [19, 16], [0, 6], [6, 10], [17, 16], [19, 6], [2, 9], [0, 6], [3, 10], [1, 15], [7, 1], [15, 5], [18, 12], [16, 4], [13, 3], [1, 5], [3, 4], [9, 12], [19, 17], [8, 7], [0, 16], [7, 13], [5, 3], [1, 15], [11, 12], [13, 3], [15, 5], [6, 10], [17, 0], [2, 9], [7, 1], [0, 10], [14, 8], [1, 15], [0, 16], [19, 16], [6, 10], [16, 3], [18, 9], [1, 5], [4, 11], [17, 13], [3, 10], [7, 17], [0, 6], [9, 12], [8, 18], [10, 4], [19, 0], [13, 18], [7, 1], [9, 11], [8, 17], [6, 10], [7, 17], [0, 16], [1, 15], [3, 18], [5, 2], [19, 17], [15, 2], [14, 8], [18, 9], [13, 5], [8, 13], [5, 2], [9, 11], [19, 16], [0, 6], [1, 15], [8, 7], [13, 5], [15, 2], [4, 11], [3, 18], [2, 9], [13, 18], [5, 3], [16, 10], [15, 5], [8, 13], [1, 2], [3, 12], [17, 0], [10, 4], [18, 12], [19, 16], [15, 2], [8, 17], [19, 0], [13, 18], [5, 3], [1, 2], [7, 13], [14, 8], [19, 17], [16, 4], [15, 2], [7, 1], [18, 12], [8, 17], [8, 7], [15, 5], [11, 12], [0, 16], [1, 15], [5, 2], [18, 11], [7, 17], [17, 13], [3, 10], [14, 8], [7, 1], [19, 0], [7, 13], [8, 17], [0, 6], [19, 16], [8, 13], [6, 10], ----End Timer [Execute Mapping]:  3.2969751358032227

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 630


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [185] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 370

Reduced: 
 - size: 130 (41.27%)
 - depth: 6 (13.33%)

