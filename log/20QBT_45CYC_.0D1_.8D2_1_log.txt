----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.15619921684265137

[3, 10], [8, 9], [12, 17], [4, 16], [19, 5], [0, 13], [7, 14], [1, 6], [11, 15], [10, 1], [15, 17], [4, 16], [19, 5], [2, 12], [11, 6], [7, 14], [1, 15], [8, 9], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [8, 9], [12, 0], [3, 1], [13, 18], [10, 2], [4, 16], [1, 15], [6, 5], [3, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [4, 16], [14, 11], [9, 12], [1, 6], [3, 10], [7, 19], [1, 15], [8, 3], [14, 11], [5, 13], [9, 12], [10, 7], [2, 4], [17, 0], [6, 18], [1, 15], [3, 10], [5, 13], [9, 4], [7, 11], [17, 0], [2, 12], [6, 18], [14, 19], [15, 17], [13, 18], [3, 2], [4, 16], [10, 7], [14, 19], [11, 6], [12, 0], [8, 9], [15, 17], [2, 12], [11, 6], [8, 3], [7, 14], [10, 1], [5, 13], [4, 16], [15, 17], [14, 11], [8, 3], [5, 13], [2, 12], [6, 18], [4, 16], [7, 19], [10, 1], [12, 15], [2, 1], [9, 4], [11, 6], [0, 13], [7, 19], [3, 10], [15, 17], [7, 11], [2, 12], [5, 13], [8, 3], [14, 19], [9, 4], [10, 1], [1, 15], [11, 6], [9, 2], [7, 14], [16, 17], [3, 10], [1, 15], [12, 0], [3, 2], [6, 5], [9, 4], [13, 18], [14, 19], [1, 15], [5, 18], [16, 17], [11, 6], [12, 0], [3, 2], [7, 14], [9, 4], [1, 15], [3, 10], [8, 9], [14, 19], [13, 18], [17, 0], [11, 6], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [6, 18], [14, 19], [12, 17], [11, 15], [6, 18], [3, 1], [5, 13], [10, 7], [17, 0], [9, 2], [4, 12], [11, 15], [12, 0], [6, 5], [7, 14], [10, 1], [9, 2], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [10, 1], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [14, 19], [6, 13], [9, 4], [16, 17], [5, 18], [10, 2], [7, 11], [14, 19], [16, 17], [13, 18], [9, 4], [3, 2], [1, 15], [7, 11], [12, 0], [19, 5], [6, 18], [2, 4], [1, 15], [3, 10], [8, 9], [7, 19], [1, 11], [10, 2], [15, 0], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [11, 19], [6, 18], [5, 13], [4, 12], [16, 17], [15, 0], [7, 14], [3, 1], [10, 2], [11, 19], [10, 1], [4, 16], [6, 13], [12, 0], [5, 18], [9, 2], [8, 3], [19, 5], [1, 6], [9, 4], [15, 17], [2, 12], [7, 14], [8, 3], [5, 18], [4, 16], [8, 3], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [8, 9], [6, 18], [3, 10], [7, 14], [17, 0], [4, 16], [1, 15], [2, 12], [13, 18], [2, 12], [11, 15], [7, 19], [17, 0], [8, 9], [10, 1], [4, 16], [13, 18], [9, 4], [2, 12], [17, 0], [11, 15], [7, 14], [10, 1], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [5, 18], [4, 16], [12, 17], [3, 1], [7, 14], [15, 6], [8, 9], [11, 19], [10, 2], [5, 18], [10, 1], [7, 11], [14, 19], [17, 0], [15, 6], [9, 4], [8, 3], [2, 12], [19, 5], [17, 0], [6, 13], [3, 1], [11, 15], [9, 4], [2, 12], [14, 19], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [7, 19], [2, 12], [13, 18], [10, 1], [17, 0], [14, 11], [8, 9], [15, 6], [4, 16], [7, 14], [9, 4], [8, 3], [5, 18], [17, 0], [11, 6], [10, 1], [12, 15], [7, 14], [2, 12], [0, 13], [1, 11], [6, 18], [8, 3], [15, 17], [7, 19], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [12, 17], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 17], [4, 16], [15, 0], [10, 2], [12, 15], [6, 13], [19, 5], [4, 16], [1, 11], [7, 14], [3, 10], [15, 0], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[39, 47, 50]
[118, 127, 134]
[206, 212, 219]
[251, 263, 266]
[261, 267, 276]
[284, 290, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 108, 116]
[112, 118, 127]
[127, 134, 139]
[222, 225, 232]
[219, 227, 233]
[343, 345, 352]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[33, 43, 51]
[38, 42, 54]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.23433780670166

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 17] cc => I, Pos: [1, 17] cc => I, Pos: [3, 11] cc => I, Pos: [3, 11] cc => I, Pos: [4, 12] cc => I, Pos: [4, 12] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 34] cc => I, Pos: [24, 34] cc => I, Pos: [33, 43, 51] ccc => cc, Pos: [34, 44] cc => I, Pos: [34, 44] cc => I, Pos: [38, 42, 54] ccc => cc, Pos: [39, 47, 50] ccc => cc, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [52, 60] cc => I, Pos: [52, 60] cc => I, Pos: [56, 65] cc => I, Pos: [56, 65] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [63, 70] cc => I, Pos: [63, 70] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [77, 90] cc => I, Pos: [77, 90] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [84, 95] cc => I, Pos: [84, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 99] cc => I, Pos: [88, 99] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [90, 97] cc => I, Pos: [90, 97] cc => I, Pos: [98, 105] cc => I, Pos: [98, 105] cc => I, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [103, 108, 116] ccc => cc, Pos: [112, 118, 127] ccc => cc, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [118, 127, 134] ccc => cc, Pos: [119, 130] cc => I, Pos: [119, 130] cc => I, Pos: [120, 137] cc => I, Pos: [120, 137] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [122, 132] cc => I, Pos: [122, 132] cc => I, Pos: [123, 133] cc => I, Pos: [123, 133] cc => I, Pos: [125, 135] cc => I, Pos: [125, 135] cc => I, Pos: [127, 134, 139] ccc => cc, Pos: [128, 136] cc => I, Pos: [128, 136] cc => I, Pos: [131, 142] cc => I, Pos: [131, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [139, 150] cc => I, Pos: [139, 150] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [152, 160] cc => I, Pos: [152, 160] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [181, 186] cc => I, Pos: [181, 186] cc => I, Pos: [184, 191] cc => I, Pos: [184, 191] cc => I, Pos: [190, 196] cc => I, Pos: [190, 196] cc => I, Pos: [201, 216] cc => I, Pos: [201, 216] cc => I, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [206, 212, 219] ccc => cc, Pos: [208, 217] cc => I, Pos: [208, 217] cc => I, Pos: [214, 230] cc => I, Pos: [214, 230] cc => I, Pos: [219, 227, 233] ccc => cc, Pos: [222, 225, 232] ccc => cc, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [229, 235] cc => I, Pos: [229, 235] cc => I, Pos: [230, 243] cc => I, Pos: [230, 243] cc => I, Pos: [231, 234] cc => I, Pos: [231, 234] cc => I, Pos: [233, 245] cc => I, Pos: [233, 245] cc => I, Pos: [235, 247] cc => I, Pos: [235, 247] cc => I, Pos: [236, 251] cc => I, Pos: [236, 251] cc => I, Pos: [240, 253] cc => I, Pos: [240, 253] cc => I, Pos: [243, 261] cc => I, Pos: [243, 261] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [247, 249] cc => I, Pos: [247, 249] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [249, 258] cc => I, Pos: [249, 258] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [251, 263, 266] ccc => cc, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [254, 262] cc => I, Pos: [254, 262] cc => I, Pos: [261, 267, 276] ccc => cc, Pos: [262, 268] cc => I, Pos: [262, 268] cc => I, Pos: [272, 281] cc => I, Pos: [272, 281] cc => I, Pos: [277, 286] cc => I, Pos: [277, 286] cc => I, Pos: [284, 290, 297] ccc => cc, Pos: [285, 291] cc => I, Pos: [285, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [303, 308] cc => I, Pos: [303, 308] cc => I, Pos: [305, 329] cc => I, Pos: [305, 329] cc => I, Pos: [308, 320] cc => I, Pos: [308, 320] cc => I, Pos: [309, 318] cc => I, Pos: [309, 318] cc => I, Pos: [314, 322] cc => I, Pos: [314, 322] cc => I, Pos: [316, 327] cc => I, Pos: [316, 327] cc => I, Pos: [335, 341] cc => I, Pos: [335, 341] cc => I, Pos: [342, 348] cc => I, Pos: [342, 348] cc => I, Pos: [343, 345, 352] ccc => cc]

Plan: 1
[Pos: [1, 17] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [24, 34] cc => I,
 Pos: [33, 43, 51] ccc => cc,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [77, 90] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [102, 113] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [112, 118, 127] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [125, 135] cc => I,
 Pos: [128, 136] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [139, 150] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [206, 212, 219] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [214, 230] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [224, 231] cc => I,
 Pos: [229, 235] cc => I,
 Pos: [233, 245] cc => I,
 Pos: [236, 251] cc => I,
 Pos: [240, 253] cc => I,
 Pos: [243, 261] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [247, 249] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [254, 262] cc => I,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [303, 308] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 74, Saving: 278

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 17] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [24, 34] cc => I,
 Pos: [33, 43, 51] ccc => cc,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [77, 90] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [102, 113] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [112, 118, 127] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [125, 135] cc => I,
 Pos: [128, 136] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [139, 150] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [206, 212, 219] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [214, 230] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [224, 231] cc => I,
 Pos: [229, 235] cc => I,
 Pos: [233, 245] cc => I,
 Pos: [236, 251] cc => I,
 Pos: [240, 253] cc => I,
 Pos: [243, 261] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [247, 249] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [254, 262] cc => I,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [303, 308] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 74, Saving: 278

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 17] cc => I
Apply:  Pos: [3, 11] cc => I
Apply:  Pos: [4, 12] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [24, 34] cc => I
Apply:  Pos: [33, 43, 51] ccc => cc
Apply:  Pos: [38, 42, 54] ccc => cc
Apply:  Pos: [39, 47, 50] ccc => cc
Apply:  Pos: [52, 60] cc => I
Apply:  Pos: [56, 65] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [63, 70] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [77, 90] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [84, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 99] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [98, 105] cc => I
Apply:  Pos: [102, 113] cc => I
Apply:  Pos: [103, 108, 116] ccc => cc
Apply:  Pos: [112, 118, 127] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [119, 130] cc => I
Apply:  Pos: [120, 137] cc => I
Apply:  Pos: [122, 132] cc => I
Apply:  Pos: [123, 133] cc => I
Apply:  Pos: [125, 135] cc => I
Apply:  Pos: [128, 136] cc => I
Apply:  Pos: [131, 142] cc => I
Apply:  Pos: [139, 150] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [152, 160] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [181, 186] cc => I
Apply:  Pos: [184, 191] cc => I
Apply:  Pos: [190, 196] cc => I
Apply:  Pos: [201, 216] cc => I
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [206, 212, 219] ccc => cc
Apply:  Pos: [208, 217] cc => I
Apply:  Pos: [214, 230] cc => I
Apply:  Pos: [222, 225, 232] ccc => cc
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [229, 235] cc => I
Apply:  Pos: [233, 245] cc => I
Apply:  Pos: [236, 251] cc => I
Apply:  Pos: [240, 253] cc => I
Apply:  Pos: [243, 261] cc => I
Apply:  Pos: [244, 252] cc => I
Apply:  Pos: [247, 249] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [254, 262] cc => I
Apply:  Pos: [272, 281] cc => I
Apply:  Pos: [277, 286] cc => I
Apply:  Pos: [284, 290, 297] ccc => cc
Apply:  Pos: [285, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [303, 308] cc => I
Apply:  Pos: [305, 329] cc => I
Apply:  Pos: [309, 318] cc => I
Apply:  Pos: [314, 322] cc => I
Apply:  Pos: [316, 327] cc => I
Apply:  Pos: [335, 341] cc => I
Apply:  Pos: [342, 348] cc => I
Apply:  Pos: [343, 345, 352] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [3, 10], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [13, 18], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [15, 17], [14, 11], [6, 18], [4, 16], [12, 15], [2, 1], [7, 11], [0, 13], [3, 10], [15, 17], [11, 6], [2, 12], [5, 13], [8, 3], [7, 14], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [5, 18], [7, 14], [8, 9], [13, 18], [17, 0], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [3, 1], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 2], [5, 18], [1, 6], [9, 4], [15, 17], [8, 3], [15, 0], [1, 11], [5, 13], [6, 18], [3, 10], [1, 15], [4, 16], [9, 4], [2, 12], [17, 0], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [4, 16], [12, 17], [3, 1], [7, 14], [8, 9], [11, 19], [10, 2], [10, 1], [7, 11], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [8, 9], [15, 6], [4, 16], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  7.23433780670166

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 28]
[39, 50]
[76, 79]
[59, 81]
[78, 102]
[102, 117]
[143, 151]
[163, 183]
[159, 185]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 73, 77]
[137, 146, 147]
[167, 173, 174]
[152, 160, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 60, 65]
[88, 96, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 28]
[39, 50]
[76, 79]
[59, 81]
[78, 102]
[102, 117]
[143, 151]
[163, 183]
[159, 185]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.125019311904907

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 28] cc => I, Pos: [19, 28] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [56, 60, 65] ccc => cc, Pos: [59, 81] cc => I, Pos: [59, 81] cc => I, Pos: [70, 73, 77] ccc => cc, Pos: [76, 79] cc => I, Pos: [76, 79] cc => I, Pos: [78, 102] cc => I, Pos: [78, 102] cc => I, Pos: [88, 96, 106] ccc => cc, Pos: [102, 117] cc => I, Pos: [102, 117] cc => I, Pos: [137, 146, 147] ccc => cc, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [152, 160, 176] ccc => cc, Pos: [159, 185] cc => I, Pos: [159, 185] cc => I, Pos: [163, 183] cc => I, Pos: [163, 183] cc => I, Pos: [167, 173, 174] ccc => cc]

Plan: 1
[Pos: [19, 28] cc => I,
 Pos: [39, 50] cc => I,
 Pos: [56, 60, 65] ccc => cc,
 Pos: [59, 81] cc => I,
 Pos: [70, 73, 77] ccc => cc,
 Pos: [76, 79] cc => I,
 Pos: [78, 102] cc => I,
 Pos: [88, 96, 106] ccc => cc,
 Pos: [137, 146, 147] ccc => cc,
 Pos: [143, 151] cc => I,
 Pos: [152, 160, 176] ccc => cc,
 Pos: [159, 185] cc => I,
 Pos: [163, 183] cc => I,
 Pos: [167, 173, 174] ccc => cc]
Change: 14, Saving: 44

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 28] cc => I,
 Pos: [39, 50] cc => I,
 Pos: [56, 60, 65] ccc => cc,
 Pos: [59, 81] cc => I,
 Pos: [70, 73, 77] ccc => cc,
 Pos: [76, 79] cc => I,
 Pos: [78, 102] cc => I,
 Pos: [88, 96, 106] ccc => cc,
 Pos: [137, 146, 147] ccc => cc,
 Pos: [143, 151] cc => I,
 Pos: [152, 160, 176] ccc => cc,
 Pos: [159, 185] cc => I,
 Pos: [163, 183] cc => I,
 Pos: [167, 173, 174] ccc => cc]
Change: 14, Saving: 44

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 28] cc => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [56, 60, 65] ccc => cc
Apply:  Pos: [59, 81] cc => I
Apply:  Pos: [70, 73, 77] ccc => cc
Apply:  Pos: [76, 79] cc => I
Apply:  Pos: [78, 102] cc => I
Apply:  Pos: [88, 96, 106] ccc => cc
Apply:  Pos: [137, 146, 147] ccc => cc
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [152, 160, 176] ccc => cc
Apply:  Pos: [159, 185] cc => I
Apply:  Pos: [163, 183] cc => I
Apply:  Pos: [167, 173, 174] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [8, 3], [7, 19], [10, 1], [9, 2], [14, 19], [6, 5], [5, 18], [17, 0], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [8, 3], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 2], [5, 18], [1, 6], [9, 16], [15, 17], [8, 3], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [4, 16], [2, 12], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  4.125019311904907

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[63, 77]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[121, 133, 140]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[61, 66, 71]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[63, 77]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.655839681625366

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [61, 66, 71] ccc => cc, Pos: [63, 77] cc => I, Pos: [63, 77] cc => I, Pos: [121, 133, 140] ccc => cc]

Plan: 1
[Pos: [61, 66, 71] ccc => cc,
 Pos: [63, 77] cc => I,
 Pos: [121, 133, 140] ccc => cc]
Change: 3, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [61, 66, 71] ccc => cc,
 Pos: [63, 77] cc => I,
 Pos: [121, 133, 140] ccc => cc]
Change: 3, Saving: 8

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [61, 66, 71] ccc => cc
Apply:  Pos: [63, 77] cc => I
Apply:  Pos: [121, 133, 140] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [7, 19], [10, 1], [2, 12], [14, 19], [6, 5], [5, 18], [17, 0], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 12], [5, 18], [1, 6], [9, 16], [15, 17], [8, 3], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [4, 16], [2, 12], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 2], [10, 1], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.655839681625366

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.531226396560669

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [7, 19], [10, 1], [2, 12], [14, 19], [6, 5], [5, 18], [17, 0], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 12], [5, 18], [1, 6], [9, 16], [15, 17], [8, 3], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [4, 16], [2, 12], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.531226396560669

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [195] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 390

Reduced: 
 - size: 165 (45.83%)
 - cycle: 330 (45.83%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14070868492126465

[3, 10], [8, 9], [12, 17], [4, 16], [19, 5], [0, 13], [7, 14], [1, 6], [11, 15], [10, 1], [15, 17], [4, 16], [19, 5], [2, 12], [11, 6], [7, 14], [1, 15], [8, 9], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [8, 9], [12, 0], [3, 1], [13, 18], [10, 2], [4, 16], [1, 15], [6, 5], [3, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [4, 16], [14, 11], [9, 12], [1, 6], [3, 10], [7, 19], [1, 15], [8, 3], [14, 11], [5, 13], [9, 12], [10, 7], [2, 4], [17, 0], [6, 18], [1, 15], [3, 10], [5, 13], [9, 4], [7, 11], [17, 0], [2, 12], [6, 18], [14, 19], [15, 17], [13, 18], [3, 2], [4, 16], [10, 7], [14, 19], [11, 6], [12, 0], [8, 9], [15, 17], [2, 12], [11, 6], [8, 3], [7, 14], [10, 1], [5, 13], [4, 16], [15, 17], [14, 11], [8, 3], [5, 13], [2, 12], [6, 18], [4, 16], [7, 19], [10, 1], [12, 15], [2, 1], [9, 4], [11, 6], [0, 13], [7, 19], [3, 10], [15, 17], [7, 11], [2, 12], [5, 13], [8, 3], [14, 19], [9, 4], [10, 1], [1, 15], [11, 6], [9, 2], [7, 14], [16, 17], [3, 10], [1, 15], [12, 0], [3, 2], [6, 5], [9, 4], [13, 18], [14, 19], [1, 15], [5, 18], [16, 17], [11, 6], [12, 0], [3, 2], [7, 14], [9, 4], [1, 15], [3, 10], [8, 9], [14, 19], [13, 18], [17, 0], [11, 6], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [6, 18], [14, 19], [12, 17], [11, 15], [6, 18], [3, 1], [5, 13], [10, 7], [17, 0], [9, 2], [4, 12], [11, 15], [12, 0], [6, 5], [7, 14], [10, 1], [9, 2], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [10, 1], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [14, 19], [6, 13], [9, 4], [16, 17], [5, 18], [10, 2], [7, 11], [14, 19], [16, 17], [13, 18], [9, 4], [3, 2], [1, 15], [7, 11], [12, 0], [19, 5], [6, 18], [2, 4], [1, 15], [3, 10], [8, 9], [7, 19], [1, 11], [10, 2], [15, 0], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [11, 19], [6, 18], [5, 13], [4, 12], [16, 17], [15, 0], [7, 14], [3, 1], [10, 2], [11, 19], [10, 1], [4, 16], [6, 13], [12, 0], [5, 18], [9, 2], [8, 3], [19, 5], [1, 6], [9, 4], [15, 17], [2, 12], [7, 14], [8, 3], [5, 18], [4, 16], [8, 3], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [8, 9], [6, 18], [3, 10], [7, 14], [17, 0], [4, 16], [1, 15], [2, 12], [13, 18], [2, 12], [11, 15], [7, 19], [17, 0], [8, 9], [10, 1], [4, 16], [13, 18], [9, 4], [2, 12], [17, 0], [11, 15], [7, 14], [10, 1], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [5, 18], [4, 16], [12, 17], [3, 1], [7, 14], [15, 6], [8, 9], [11, 19], [10, 2], [5, 18], [10, 1], [7, 11], [14, 19], [17, 0], [15, 6], [9, 4], [8, 3], [2, 12], [19, 5], [17, 0], [6, 13], [3, 1], [11, 15], [9, 4], [2, 12], [14, 19], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [7, 19], [2, 12], [13, 18], [10, 1], [17, 0], [14, 11], [8, 9], [15, 6], [4, 16], [7, 14], [9, 4], [8, 3], [5, 18], [17, 0], [11, 6], [10, 1], [12, 15], [7, 14], [2, 12], [0, 13], [1, 11], [6, 18], [8, 3], [15, 17], [7, 19], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [12, 17], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 17], [4, 16], [15, 0], [10, 2], [12, 15], [6, 13], [19, 5], [4, 16], [1, 11], [7, 14], [3, 10], [15, 0], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[39, 47, 50]
[118, 127, 134]
[206, 212, 219]
[251, 263, 266]
[261, 267, 276]
[284, 290, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 108, 116]
[112, 118, 127]
[127, 134, 139]
[222, 225, 232]
[219, 227, 233]
[343, 345, 352]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[33, 43, 51]
[38, 42, 54]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.14062762260437

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 17] cc => I, Pos: [1, 17] cc => I, Pos: [3, 11] cc => I, Pos: [3, 11] cc => I, Pos: [4, 12] cc => I, Pos: [4, 12] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 34] cc => I, Pos: [24, 34] cc => I, Pos: [33, 43, 51] ccc => cc, Pos: [34, 44] cc => I, Pos: [34, 44] cc => I, Pos: [38, 42, 54] ccc => cc, Pos: [39, 47, 50] ccc => cc, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [52, 60] cc => I, Pos: [52, 60] cc => I, Pos: [56, 65] cc => I, Pos: [56, 65] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [63, 70] cc => I, Pos: [63, 70] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [77, 90] cc => I, Pos: [77, 90] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [84, 95] cc => I, Pos: [84, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 99] cc => I, Pos: [88, 99] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [90, 97] cc => I, Pos: [90, 97] cc => I, Pos: [98, 105] cc => I, Pos: [98, 105] cc => I, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [103, 108, 116] ccc => cc, Pos: [112, 118, 127] ccc => cc, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [118, 127, 134] ccc => cc, Pos: [119, 130] cc => I, Pos: [119, 130] cc => I, Pos: [120, 137] cc => I, Pos: [120, 137] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [122, 132] cc => I, Pos: [122, 132] cc => I, Pos: [123, 133] cc => I, Pos: [123, 133] cc => I, Pos: [125, 135] cc => I, Pos: [125, 135] cc => I, Pos: [127, 134, 139] ccc => cc, Pos: [128, 136] cc => I, Pos: [128, 136] cc => I, Pos: [131, 142] cc => I, Pos: [131, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [139, 150] cc => I, Pos: [139, 150] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [152, 160] cc => I, Pos: [152, 160] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [181, 186] cc => I, Pos: [181, 186] cc => I, Pos: [184, 191] cc => I, Pos: [184, 191] cc => I, Pos: [190, 196] cc => I, Pos: [190, 196] cc => I, Pos: [201, 216] cc => I, Pos: [201, 216] cc => I, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [206, 212, 219] ccc => cc, Pos: [208, 217] cc => I, Pos: [208, 217] cc => I, Pos: [214, 230] cc => I, Pos: [214, 230] cc => I, Pos: [219, 227, 233] ccc => cc, Pos: [222, 225, 232] ccc => cc, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [229, 235] cc => I, Pos: [229, 235] cc => I, Pos: [230, 243] cc => I, Pos: [230, 243] cc => I, Pos: [231, 234] cc => I, Pos: [231, 234] cc => I, Pos: [233, 245] cc => I, Pos: [233, 245] cc => I, Pos: [235, 247] cc => I, Pos: [235, 247] cc => I, Pos: [236, 251] cc => I, Pos: [236, 251] cc => I, Pos: [240, 253] cc => I, Pos: [240, 253] cc => I, Pos: [243, 261] cc => I, Pos: [243, 261] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [247, 249] cc => I, Pos: [247, 249] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [249, 258] cc => I, Pos: [249, 258] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [251, 263, 266] ccc => cc, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [254, 262] cc => I, Pos: [254, 262] cc => I, Pos: [261, 267, 276] ccc => cc, Pos: [262, 268] cc => I, Pos: [262, 268] cc => I, Pos: [272, 281] cc => I, Pos: [272, 281] cc => I, Pos: [277, 286] cc => I, Pos: [277, 286] cc => I, Pos: [284, 290, 297] ccc => cc, Pos: [285, 291] cc => I, Pos: [285, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [303, 308] cc => I, Pos: [303, 308] cc => I, Pos: [305, 329] cc => I, Pos: [305, 329] cc => I, Pos: [308, 320] cc => I, Pos: [308, 320] cc => I, Pos: [309, 318] cc => I, Pos: [309, 318] cc => I, Pos: [314, 322] cc => I, Pos: [314, 322] cc => I, Pos: [316, 327] cc => I, Pos: [316, 327] cc => I, Pos: [335, 341] cc => I, Pos: [335, 341] cc => I, Pos: [342, 348] cc => I, Pos: [342, 348] cc => I, Pos: [343, 345, 352] ccc => cc]

Plan: 1
[Pos: [1, 17] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [24, 34] cc => I,
 Pos: [33, 43, 51] ccc => cc,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [77, 90] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [102, 113] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [112, 118, 127] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [125, 135] cc => I,
 Pos: [128, 136] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [139, 150] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [206, 212, 219] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [214, 230] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [224, 231] cc => I,
 Pos: [229, 235] cc => I,
 Pos: [233, 245] cc => I,
 Pos: [236, 251] cc => I,
 Pos: [240, 253] cc => I,
 Pos: [243, 261] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [247, 249] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [254, 262] cc => I,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [303, 308] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 74, Saving: 76

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.1873178482055664

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 17] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [24, 34] cc => I,
 Pos: [33, 43, 51] ccc => cc,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [77, 90] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [102, 113] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [112, 118, 127] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [125, 135] cc => I,
 Pos: [128, 136] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [139, 150] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [206, 212, 219] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [214, 230] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [224, 231] cc => I,
 Pos: [229, 235] cc => I,
 Pos: [233, 245] cc => I,
 Pos: [236, 251] cc => I,
 Pos: [240, 253] cc => I,
 Pos: [243, 261] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [247, 249] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [254, 262] cc => I,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [303, 308] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 74, Saving: 76

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 17] cc => I
Apply:  Pos: [3, 11] cc => I
Apply:  Pos: [4, 12] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [24, 34] cc => I
Apply:  Pos: [33, 43, 51] ccc => cc
Apply:  Pos: [38, 42, 54] ccc => cc
Apply:  Pos: [39, 47, 50] ccc => cc
Apply:  Pos: [52, 60] cc => I
Apply:  Pos: [56, 65] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [63, 70] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [77, 90] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [84, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 99] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [98, 105] cc => I
Apply:  Pos: [102, 113] cc => I
Apply:  Pos: [103, 108, 116] ccc => cc
Apply:  Pos: [112, 118, 127] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [119, 130] cc => I
Apply:  Pos: [120, 137] cc => I
Apply:  Pos: [122, 132] cc => I
Apply:  Pos: [123, 133] cc => I
Apply:  Pos: [125, 135] cc => I
Apply:  Pos: [128, 136] cc => I
Apply:  Pos: [131, 142] cc => I
Apply:  Pos: [139, 150] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [152, 160] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [181, 186] cc => I
Apply:  Pos: [184, 191] cc => I
Apply:  Pos: [190, 196] cc => I
Apply:  Pos: [201, 216] cc => I
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [206, 212, 219] ccc => cc
Apply:  Pos: [208, 217] cc => I
Apply:  Pos: [214, 230] cc => I
Apply:  Pos: [222, 225, 232] ccc => cc
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [229, 235] cc => I
Apply:  Pos: [233, 245] cc => I
Apply:  Pos: [236, 251] cc => I
Apply:  Pos: [240, 253] cc => I
Apply:  Pos: [243, 261] cc => I
Apply:  Pos: [244, 252] cc => I
Apply:  Pos: [247, 249] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [254, 262] cc => I
Apply:  Pos: [272, 281] cc => I
Apply:  Pos: [277, 286] cc => I
Apply:  Pos: [284, 290, 297] ccc => cc
Apply:  Pos: [285, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [303, 308] cc => I
Apply:  Pos: [305, 329] cc => I
Apply:  Pos: [309, 318] cc => I
Apply:  Pos: [314, 322] cc => I
Apply:  Pos: [316, 327] cc => I
Apply:  Pos: [335, 341] cc => I
Apply:  Pos: [342, 348] cc => I
Apply:  Pos: [343, 345, 352] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [3, 10], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [13, 18], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [15, 17], [14, 11], [6, 18], [4, 16], [12, 15], [2, 1], [7, 11], [0, 13], [3, 10], [15, 17], [11, 6], [2, 12], [5, 13], [8, 3], [7, 14], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [5, 18], [7, 14], [8, 9], [13, 18], [17, 0], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [3, 1], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 2], [5, 18], [1, 6], [9, 4], [15, 17], [8, 3], [15, 0], [1, 11], [5, 13], [6, 18], [3, 10], [1, 15], [4, 16], [9, 4], [2, 12], [17, 0], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [4, 16], [12, 17], [3, 1], [7, 14], [8, 9], [11, 19], [10, 2], [10, 1], [7, 11], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [8, 9], [15, 6], [4, 16], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  7.3279454708099365

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 28]
[39, 50]
[76, 79]
[59, 81]
[78, 102]
[102, 117]
[143, 151]
[163, 183]
[159, 185]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 73, 77]
[137, 146, 147]
[167, 173, 174]
[152, 160, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 60, 65]
[88, 96, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 28]
[39, 50]
[76, 79]
[59, 81]
[78, 102]
[102, 117]
[143, 151]
[163, 183]
[159, 185]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.109335899353027

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 28] cc => I, Pos: [19, 28] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [56, 60, 65] ccc => cc, Pos: [59, 81] cc => I, Pos: [59, 81] cc => I, Pos: [70, 73, 77] ccc => cc, Pos: [76, 79] cc => I, Pos: [76, 79] cc => I, Pos: [78, 102] cc => I, Pos: [78, 102] cc => I, Pos: [88, 96, 106] ccc => cc, Pos: [102, 117] cc => I, Pos: [102, 117] cc => I, Pos: [137, 146, 147] ccc => cc, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [152, 160, 176] ccc => cc, Pos: [159, 185] cc => I, Pos: [159, 185] cc => I, Pos: [163, 183] cc => I, Pos: [163, 183] cc => I, Pos: [167, 173, 174] ccc => cc]

Plan: 1
[Pos: [19, 28] cc => I,
 Pos: [39, 50] cc => I,
 Pos: [56, 60, 65] ccc => cc,
 Pos: [59, 81] cc => I,
 Pos: [70, 73, 77] ccc => cc,
 Pos: [76, 79] cc => I,
 Pos: [78, 102] cc => I,
 Pos: [88, 96, 106] ccc => cc,
 Pos: [137, 146, 147] ccc => cc,
 Pos: [143, 151] cc => I,
 Pos: [152, 160, 176] ccc => cc,
 Pos: [159, 185] cc => I,
 Pos: [163, 183] cc => I,
 Pos: [167, 173, 174] ccc => cc]
Change: 14, Saving: 14

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0312502384185791

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 28] cc => I,
 Pos: [39, 50] cc => I,
 Pos: [56, 60, 65] ccc => cc,
 Pos: [59, 81] cc => I,
 Pos: [70, 73, 77] ccc => cc,
 Pos: [76, 79] cc => I,
 Pos: [78, 102] cc => I,
 Pos: [88, 96, 106] ccc => cc,
 Pos: [137, 146, 147] ccc => cc,
 Pos: [143, 151] cc => I,
 Pos: [152, 160, 176] ccc => cc,
 Pos: [159, 185] cc => I,
 Pos: [163, 183] cc => I,
 Pos: [167, 173, 174] ccc => cc]
Change: 14, Saving: 14

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 28] cc => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [56, 60, 65] ccc => cc
Apply:  Pos: [59, 81] cc => I
Apply:  Pos: [70, 73, 77] ccc => cc
Apply:  Pos: [76, 79] cc => I
Apply:  Pos: [78, 102] cc => I
Apply:  Pos: [88, 96, 106] ccc => cc
Apply:  Pos: [137, 146, 147] ccc => cc
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [152, 160, 176] ccc => cc
Apply:  Pos: [159, 185] cc => I
Apply:  Pos: [163, 183] cc => I
Apply:  Pos: [167, 173, 174] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [8, 3], [7, 19], [10, 1], [9, 2], [14, 19], [6, 5], [5, 18], [17, 0], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [8, 3], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 2], [5, 18], [1, 6], [9, 16], [15, 17], [8, 3], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [4, 16], [2, 12], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  4.1405861377716064

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[63, 77]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[121, 133, 140]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[61, 66, 71]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[63, 77]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.625037670135498

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [61, 66, 71] ccc => cc, Pos: [63, 77] cc => I, Pos: [63, 77] cc => I, Pos: [121, 133, 140] ccc => cc]

Plan: 1
[Pos: [61, 66, 71] ccc => cc,
 Pos: [63, 77] cc => I,
 Pos: [121, 133, 140] ccc => cc]
Change: 3, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015642642974853516

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [61, 66, 71] ccc => cc,
 Pos: [63, 77] cc => I,
 Pos: [121, 133, 140] ccc => cc]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [61, 66, 71] ccc => cc
Apply:  Pos: [63, 77] cc => I
Apply:  Pos: [121, 133, 140] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [7, 19], [10, 1], [2, 12], [14, 19], [6, 5], [5, 18], [17, 0], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 12], [5, 18], [1, 6], [9, 16], [15, 17], [8, 3], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [4, 16], [2, 12], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 2], [10, 1], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.6406803131103516

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4999818801879883

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [7, 19], [10, 1], [2, 12], [14, 19], [6, 5], [5, 18], [17, 0], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 12], [5, 18], [1, 6], [9, 16], [15, 17], [8, 3], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [4, 16], [2, 12], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.4999818801879883

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [195] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 390

Reduced: 
 - size: 165 (45.83%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1406099796295166

[3, 10], [8, 9], [12, 17], [4, 16], [19, 5], [0, 13], [7, 14], [1, 6], [11, 15], [10, 1], [15, 17], [4, 16], [19, 5], [2, 12], [11, 6], [7, 14], [1, 15], [8, 9], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [8, 9], [12, 0], [3, 1], [13, 18], [10, 2], [4, 16], [1, 15], [6, 5], [3, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [4, 16], [14, 11], [9, 12], [1, 6], [3, 10], [7, 19], [1, 15], [8, 3], [14, 11], [5, 13], [9, 12], [10, 7], [2, 4], [17, 0], [6, 18], [1, 15], [3, 10], [5, 13], [9, 4], [7, 11], [17, 0], [2, 12], [6, 18], [14, 19], [15, 17], [13, 18], [3, 2], [4, 16], [10, 7], [14, 19], [11, 6], [12, 0], [8, 9], [15, 17], [2, 12], [11, 6], [8, 3], [7, 14], [10, 1], [5, 13], [4, 16], [15, 17], [14, 11], [8, 3], [5, 13], [2, 12], [6, 18], [4, 16], [7, 19], [10, 1], [12, 15], [2, 1], [9, 4], [11, 6], [0, 13], [7, 19], [3, 10], [15, 17], [7, 11], [2, 12], [5, 13], [8, 3], [14, 19], [9, 4], [10, 1], [1, 15], [11, 6], [9, 2], [7, 14], [16, 17], [3, 10], [1, 15], [12, 0], [3, 2], [6, 5], [9, 4], [13, 18], [14, 19], [1, 15], [5, 18], [16, 17], [11, 6], [12, 0], [3, 2], [7, 14], [9, 4], [1, 15], [3, 10], [8, 9], [14, 19], [13, 18], [17, 0], [11, 6], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [6, 18], [14, 19], [12, 17], [11, 15], [6, 18], [3, 1], [5, 13], [10, 7], [17, 0], [9, 2], [4, 12], [11, 15], [12, 0], [6, 5], [7, 14], [10, 1], [9, 2], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [10, 1], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [14, 19], [6, 13], [9, 4], [16, 17], [5, 18], [10, 2], [7, 11], [14, 19], [16, 17], [13, 18], [9, 4], [3, 2], [1, 15], [7, 11], [12, 0], [19, 5], [6, 18], [2, 4], [1, 15], [3, 10], [8, 9], [7, 19], [1, 11], [10, 2], [15, 0], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [11, 19], [6, 18], [5, 13], [4, 12], [16, 17], [15, 0], [7, 14], [3, 1], [10, 2], [11, 19], [10, 1], [4, 16], [6, 13], [12, 0], [5, 18], [9, 2], [8, 3], [19, 5], [1, 6], [9, 4], [15, 17], [2, 12], [7, 14], [8, 3], [5, 18], [4, 16], [8, 3], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [8, 9], [6, 18], [3, 10], [7, 14], [17, 0], [4, 16], [1, 15], [2, 12], [13, 18], [2, 12], [11, 15], [7, 19], [17, 0], [8, 9], [10, 1], [4, 16], [13, 18], [9, 4], [2, 12], [17, 0], [11, 15], [7, 14], [10, 1], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [5, 18], [4, 16], [12, 17], [3, 1], [7, 14], [15, 6], [8, 9], [11, 19], [10, 2], [5, 18], [10, 1], [7, 11], [14, 19], [17, 0], [15, 6], [9, 4], [8, 3], [2, 12], [19, 5], [17, 0], [6, 13], [3, 1], [11, 15], [9, 4], [2, 12], [14, 19], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [7, 19], [2, 12], [13, 18], [10, 1], [17, 0], [14, 11], [8, 9], [15, 6], [4, 16], [7, 14], [9, 4], [8, 3], [5, 18], [17, 0], [11, 6], [10, 1], [12, 15], [7, 14], [2, 12], [0, 13], [1, 11], [6, 18], [8, 3], [15, 17], [7, 19], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [12, 17], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 17], [4, 16], [15, 0], [10, 2], [12, 15], [6, 13], [19, 5], [4, 16], [1, 11], [7, 14], [3, 10], [15, 0], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[39, 47, 50]
[118, 127, 134]
[206, 212, 219]
[251, 263, 266]
[261, 267, 276]
[284, 290, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 108, 116]
[112, 118, 127]
[127, 134, 139]
[222, 225, 232]
[219, 227, 233]
[343, 345, 352]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[33, 43, 51]
[38, 42, 54]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.164235591888428

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 17] cc => I, Pos: [1, 17] cc => I, Pos: [3, 11] cc => I, Pos: [3, 11] cc => I, Pos: [4, 12] cc => I, Pos: [4, 12] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 34] cc => I, Pos: [24, 34] cc => I, Pos: [33, 43, 51] ccc => cc, Pos: [34, 44] cc => I, Pos: [34, 44] cc => I, Pos: [38, 42, 54] ccc => cc, Pos: [39, 47, 50] ccc => cc, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [52, 60] cc => I, Pos: [52, 60] cc => I, Pos: [56, 65] cc => I, Pos: [56, 65] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [63, 70] cc => I, Pos: [63, 70] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [77, 90] cc => I, Pos: [77, 90] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [84, 95] cc => I, Pos: [84, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 99] cc => I, Pos: [88, 99] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [90, 97] cc => I, Pos: [90, 97] cc => I, Pos: [98, 105] cc => I, Pos: [98, 105] cc => I, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [103, 108, 116] ccc => cc, Pos: [112, 118, 127] ccc => cc, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [118, 127, 134] ccc => cc, Pos: [119, 130] cc => I, Pos: [119, 130] cc => I, Pos: [120, 137] cc => I, Pos: [120, 137] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [122, 132] cc => I, Pos: [122, 132] cc => I, Pos: [123, 133] cc => I, Pos: [123, 133] cc => I, Pos: [125, 135] cc => I, Pos: [125, 135] cc => I, Pos: [127, 134, 139] ccc => cc, Pos: [128, 136] cc => I, Pos: [128, 136] cc => I, Pos: [131, 142] cc => I, Pos: [131, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [139, 150] cc => I, Pos: [139, 150] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [152, 160] cc => I, Pos: [152, 160] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [181, 186] cc => I, Pos: [181, 186] cc => I, Pos: [184, 191] cc => I, Pos: [184, 191] cc => I, Pos: [190, 196] cc => I, Pos: [190, 196] cc => I, Pos: [201, 216] cc => I, Pos: [201, 216] cc => I, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [206, 212, 219] ccc => cc, Pos: [208, 217] cc => I, Pos: [208, 217] cc => I, Pos: [214, 230] cc => I, Pos: [214, 230] cc => I, Pos: [219, 227, 233] ccc => cc, Pos: [222, 225, 232] ccc => cc, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [229, 235] cc => I, Pos: [229, 235] cc => I, Pos: [230, 243] cc => I, Pos: [230, 243] cc => I, Pos: [231, 234] cc => I, Pos: [231, 234] cc => I, Pos: [233, 245] cc => I, Pos: [233, 245] cc => I, Pos: [235, 247] cc => I, Pos: [235, 247] cc => I, Pos: [236, 251] cc => I, Pos: [236, 251] cc => I, Pos: [240, 253] cc => I, Pos: [240, 253] cc => I, Pos: [243, 261] cc => I, Pos: [243, 261] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [247, 249] cc => I, Pos: [247, 249] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [249, 258] cc => I, Pos: [249, 258] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [251, 263, 266] ccc => cc, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [254, 262] cc => I, Pos: [254, 262] cc => I, Pos: [261, 267, 276] ccc => cc, Pos: [262, 268] cc => I, Pos: [262, 268] cc => I, Pos: [272, 281] cc => I, Pos: [272, 281] cc => I, Pos: [277, 286] cc => I, Pos: [277, 286] cc => I, Pos: [284, 290, 297] ccc => cc, Pos: [285, 291] cc => I, Pos: [285, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [303, 308] cc => I, Pos: [303, 308] cc => I, Pos: [305, 329] cc => I, Pos: [305, 329] cc => I, Pos: [308, 320] cc => I, Pos: [308, 320] cc => I, Pos: [309, 318] cc => I, Pos: [309, 318] cc => I, Pos: [314, 322] cc => I, Pos: [314, 322] cc => I, Pos: [316, 327] cc => I, Pos: [316, 327] cc => I, Pos: [335, 341] cc => I, Pos: [335, 341] cc => I, Pos: [342, 348] cc => I, Pos: [342, 348] cc => I, Pos: [343, 345, 352] ccc => cc]

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [17, 24] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [33, 43, 51] ccc => cc,
 Pos: [34, 44] cc => I,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [77, 90] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [102, 113] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [127, 134, 139] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [125, 135] cc => I,
 Pos: [128, 136] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [219, 227, 233] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [214, 230] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [231, 234] cc => I,
 Pos: [235, 247] cc => I,
 Pos: [236, 251] cc => I,
 Pos: [240, 253] cc => I,
 Pos: [243, 261] cc => I,
 Pos: [252, 259] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [249, 258] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [262, 268] cc => I,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [303, 308] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 73, Saving: 274

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [3, 11] cc => I
Apply:  Pos: [4, 12] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [33, 43, 51] ccc => cc
Apply:  Pos: [34, 44] cc => I
Apply:  Pos: [38, 42, 54] ccc => cc
Apply:  Pos: [39, 47, 50] ccc => cc
Apply:  Pos: [52, 60] cc => I
Apply:  Pos: [56, 65] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [63, 70] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [77, 90] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [84, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 99] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [98, 105] cc => I
Apply:  Pos: [102, 113] cc => I
Apply:  Pos: [103, 108, 116] ccc => cc
Apply:  Pos: [127, 134, 139] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [119, 130] cc => I
Apply:  Pos: [120, 137] cc => I
Apply:  Pos: [122, 132] cc => I
Apply:  Pos: [123, 133] cc => I
Apply:  Pos: [125, 135] cc => I
Apply:  Pos: [128, 136] cc => I
Apply:  Pos: [131, 142] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [152, 160] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [181, 186] cc => I
Apply:  Pos: [184, 191] cc => I
Apply:  Pos: [190, 196] cc => I
Apply:  Pos: [201, 216] cc => I
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [219, 227, 233] ccc => cc
Apply:  Pos: [208, 217] cc => I
Apply:  Pos: [214, 230] cc => I
Apply:  Pos: [222, 225, 232] ccc => cc
Apply:  Pos: [231, 234] cc => I
Apply:  Pos: [235, 247] cc => I
Apply:  Pos: [236, 251] cc => I
Apply:  Pos: [240, 253] cc => I
Apply:  Pos: [243, 261] cc => I
Apply:  Pos: [252, 259] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [249, 258] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [262, 268] cc => I
Apply:  Pos: [272, 281] cc => I
Apply:  Pos: [277, 286] cc => I
Apply:  Pos: [284, 290, 297] ccc => cc
Apply:  Pos: [285, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [303, 308] cc => I
Apply:  Pos: [305, 329] cc => I
Apply:  Pos: [309, 318] cc => I
Apply:  Pos: [314, 322] cc => I
Apply:  Pos: [316, 327] cc => I
Apply:  Pos: [335, 341] cc => I
Apply:  Pos: [342, 348] cc => I
Apply:  Pos: [343, 345, 352] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [8, 9], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [3, 10], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [13, 18], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [15, 17], [14, 11], [6, 18], [4, 16], [12, 15], [2, 1], [7, 11], [0, 13], [3, 10], [15, 17], [11, 6], [2, 12], [5, 13], [8, 3], [14, 19], [10, 1], [9, 2], [7, 14], [6, 5], [13, 18], [7, 14], [5, 18], [14, 19], [8, 9], [13, 18], [17, 0], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [14, 19], [12, 17], [3, 1], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [9, 4], [6, 13], [12, 0], [19, 5], [9, 2], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [6, 18], [3, 10], [17, 0], [1, 15], [10, 1], [9, 4], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [9, 2], [5, 13], [8, 3], [4, 16], [12, 17], [3, 1], [7, 14], [8, 9], [11, 19], [10, 2], [10, 1], [7, 11], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [8, 9], [15, 6], [4, 16], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  7.1798601150512695

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 29]
[39, 50]
[73, 76]
[59, 82]
[78, 88]
[79, 104]
[104, 119]
[147, 154]
[165, 185]
[161, 187]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[133, 141, 152]
[169, 175, 176]
[155, 162, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 60, 65]
[90, 98, 108]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 29]
[39, 50]
[73, 76]
[59, 82]
[78, 88]
[79, 104]
[104, 119]
[147, 154]
[165, 185]
[161, 187]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.144388198852539

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [56, 60, 65] ccc => cc, Pos: [59, 82] cc => I, Pos: [59, 82] cc => I, Pos: [73, 76] cc => I, Pos: [73, 76] cc => I, Pos: [78, 88] cc => I, Pos: [78, 88] cc => I, Pos: [79, 104] cc => I, Pos: [79, 104] cc => I, Pos: [90, 98, 108] ccc => cc, Pos: [104, 119] cc => I, Pos: [104, 119] cc => I, Pos: [133, 141, 152] ccc => cc, Pos: [147, 154] cc => I, Pos: [147, 154] cc => I, Pos: [155, 162, 178] ccc => cc, Pos: [161, 187] cc => I, Pos: [161, 187] cc => I, Pos: [165, 185] cc => I, Pos: [165, 185] cc => I, Pos: [169, 175, 176] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 29] cc => I,
 Pos: [39, 50] cc => I,
 Pos: [56, 60, 65] ccc => cc,
 Pos: [59, 82] cc => I,
 Pos: [73, 76] cc => I,
 Pos: [78, 88] cc => I,
 Pos: [79, 104] cc => I,
 Pos: [90, 98, 108] ccc => cc,
 Pos: [133, 141, 152] ccc => cc,
 Pos: [147, 154] cc => I,
 Pos: [155, 162, 178] ccc => cc,
 Pos: [161, 187] cc => I,
 Pos: [165, 185] cc => I,
 Pos: [169, 175, 176] ccc => cc]
Change: 14, Saving: 46

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [56, 60, 65] ccc => cc
Apply:  Pos: [59, 82] cc => I
Apply:  Pos: [73, 76] cc => I
Apply:  Pos: [78, 88] cc => I
Apply:  Pos: [79, 104] cc => I
Apply:  Pos: [90, 98, 108] ccc => cc
Apply:  Pos: [133, 141, 152] ccc => cc
Apply:  Pos: [147, 154] cc => I
Apply:  Pos: [155, 162, 178] ccc => cc
Apply:  Pos: [161, 187] cc => I
Apply:  Pos: [165, 185] cc => I
Apply:  Pos: [169, 175, 176] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [8, 9], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [8, 3], [14, 19], [10, 1], [9, 2], [6, 5], [13, 18], [5, 18], [13, 18], [17, 0], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [8, 3], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [9, 16], [6, 13], [12, 0], [19, 5], [9, 2], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [3, 10], [17, 0], [1, 15], [10, 1], [19, 5], [4, 17], [7, 19], [14, 11], [9, 2], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  4.144388198852539

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[63, 76]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[121, 127, 139]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[61, 66, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[63, 76]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5636582374572754

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [61, 66, 70] ccc => cc, Pos: [63, 76] cc => I, Pos: [63, 76] cc => I, Pos: [121, 127, 139] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [61, 66, 70] ccc => cc,
 Pos: [63, 76] cc => I,
 Pos: [121, 127, 139] ccc => cc]
Change: 3, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [61, 66, 70] ccc => cc
Apply:  Pos: [63, 76] cc => I
Apply:  Pos: [121, 127, 139] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [8, 9], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [14, 19], [10, 1], [2, 12], [6, 5], [5, 18], [17, 0], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [9, 16], [6, 13], [12, 0], [19, 5], [9, 12], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [3, 10], [17, 0], [1, 15], [10, 1], [19, 5], [4, 17], [7, 19], [14, 11], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 2], [10, 1], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.5636582374572754

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5037102699279785

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [8, 9], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [14, 19], [10, 1], [2, 12], [6, 5], [5, 18], [17, 0], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [9, 16], [6, 13], [12, 0], [19, 5], [9, 12], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [3, 10], [17, 0], [1, 15], [10, 1], [19, 5], [4, 17], [7, 19], [14, 11], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.5037102699279785

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [194] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 388

Reduced: 
 - size: 166 (46.11%)
 - cycle: 332 (46.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061474800109863

[3, 10], [8, 9], [12, 17], [4, 16], [19, 5], [0, 13], [7, 14], [1, 6], [11, 15], [10, 1], [15, 17], [4, 16], [19, 5], [2, 12], [11, 6], [7, 14], [1, 15], [8, 9], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [8, 9], [12, 0], [3, 1], [13, 18], [10, 2], [4, 16], [1, 15], [6, 5], [3, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [4, 16], [14, 11], [9, 12], [1, 6], [3, 10], [7, 19], [1, 15], [8, 3], [14, 11], [5, 13], [9, 12], [10, 7], [2, 4], [17, 0], [6, 18], [1, 15], [3, 10], [5, 13], [9, 4], [7, 11], [17, 0], [2, 12], [6, 18], [14, 19], [15, 17], [13, 18], [3, 2], [4, 16], [10, 7], [14, 19], [11, 6], [12, 0], [8, 9], [15, 17], [2, 12], [11, 6], [8, 3], [7, 14], [10, 1], [5, 13], [4, 16], [15, 17], [14, 11], [8, 3], [5, 13], [2, 12], [6, 18], [4, 16], [7, 19], [10, 1], [12, 15], [2, 1], [9, 4], [11, 6], [0, 13], [7, 19], [3, 10], [15, 17], [7, 11], [2, 12], [5, 13], [8, 3], [14, 19], [9, 4], [10, 1], [1, 15], [11, 6], [9, 2], [7, 14], [16, 17], [3, 10], [1, 15], [12, 0], [3, 2], [6, 5], [9, 4], [13, 18], [14, 19], [1, 15], [5, 18], [16, 17], [11, 6], [12, 0], [3, 2], [7, 14], [9, 4], [1, 15], [3, 10], [8, 9], [14, 19], [13, 18], [17, 0], [11, 6], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [6, 18], [14, 19], [12, 17], [11, 15], [6, 18], [3, 1], [5, 13], [10, 7], [17, 0], [9, 2], [4, 12], [11, 15], [12, 0], [6, 5], [7, 14], [10, 1], [9, 2], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [10, 1], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [14, 19], [6, 13], [9, 4], [16, 17], [5, 18], [10, 2], [7, 11], [14, 19], [16, 17], [13, 18], [9, 4], [3, 2], [1, 15], [7, 11], [12, 0], [19, 5], [6, 18], [2, 4], [1, 15], [3, 10], [8, 9], [7, 19], [1, 11], [10, 2], [15, 0], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [11, 19], [6, 18], [5, 13], [4, 12], [16, 17], [15, 0], [7, 14], [3, 1], [10, 2], [11, 19], [10, 1], [4, 16], [6, 13], [12, 0], [5, 18], [9, 2], [8, 3], [19, 5], [1, 6], [9, 4], [15, 17], [2, 12], [7, 14], [8, 3], [5, 18], [4, 16], [8, 3], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [8, 9], [6, 18], [3, 10], [7, 14], [17, 0], [4, 16], [1, 15], [2, 12], [13, 18], [2, 12], [11, 15], [7, 19], [17, 0], [8, 9], [10, 1], [4, 16], [13, 18], [9, 4], [2, 12], [17, 0], [11, 15], [7, 14], [10, 1], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [5, 18], [4, 16], [12, 17], [3, 1], [7, 14], [15, 6], [8, 9], [11, 19], [10, 2], [5, 18], [10, 1], [7, 11], [14, 19], [17, 0], [15, 6], [9, 4], [8, 3], [2, 12], [19, 5], [17, 0], [6, 13], [3, 1], [11, 15], [9, 4], [2, 12], [14, 19], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [7, 19], [2, 12], [13, 18], [10, 1], [17, 0], [14, 11], [8, 9], [15, 6], [4, 16], [7, 14], [9, 4], [8, 3], [5, 18], [17, 0], [11, 6], [10, 1], [12, 15], [7, 14], [2, 12], [0, 13], [1, 11], [6, 18], [8, 3], [15, 17], [7, 19], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [12, 17], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 17], [4, 16], [15, 0], [10, 2], [12, 15], [6, 13], [19, 5], [4, 16], [1, 11], [7, 14], [3, 10], [15, 0], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[39, 47, 50]
[118, 127, 134]
[206, 212, 219]
[251, 263, 266]
[261, 267, 276]
[284, 290, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 108, 116]
[112, 118, 127]
[127, 134, 139]
[222, 225, 232]
[219, 227, 233]
[343, 345, 352]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[33, 43, 51]
[38, 42, 54]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.227989912033081

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 17] cc => I, Pos: [1, 17] cc => I, Pos: [3, 11] cc => I, Pos: [3, 11] cc => I, Pos: [4, 12] cc => I, Pos: [4, 12] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 34] cc => I, Pos: [24, 34] cc => I, Pos: [33, 43, 51] ccc => cc, Pos: [34, 44] cc => I, Pos: [34, 44] cc => I, Pos: [38, 42, 54] ccc => cc, Pos: [39, 47, 50] ccc => cc, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [52, 60] cc => I, Pos: [52, 60] cc => I, Pos: [56, 65] cc => I, Pos: [56, 65] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [63, 70] cc => I, Pos: [63, 70] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [77, 90] cc => I, Pos: [77, 90] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [84, 95] cc => I, Pos: [84, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 99] cc => I, Pos: [88, 99] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [90, 97] cc => I, Pos: [90, 97] cc => I, Pos: [98, 105] cc => I, Pos: [98, 105] cc => I, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [103, 108, 116] ccc => cc, Pos: [112, 118, 127] ccc => cc, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [118, 127, 134] ccc => cc, Pos: [119, 130] cc => I, Pos: [119, 130] cc => I, Pos: [120, 137] cc => I, Pos: [120, 137] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [122, 132] cc => I, Pos: [122, 132] cc => I, Pos: [123, 133] cc => I, Pos: [123, 133] cc => I, Pos: [125, 135] cc => I, Pos: [125, 135] cc => I, Pos: [127, 134, 139] ccc => cc, Pos: [128, 136] cc => I, Pos: [128, 136] cc => I, Pos: [131, 142] cc => I, Pos: [131, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [139, 150] cc => I, Pos: [139, 150] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [152, 160] cc => I, Pos: [152, 160] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [181, 186] cc => I, Pos: [181, 186] cc => I, Pos: [184, 191] cc => I, Pos: [184, 191] cc => I, Pos: [190, 196] cc => I, Pos: [190, 196] cc => I, Pos: [201, 216] cc => I, Pos: [201, 216] cc => I, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [206, 212, 219] ccc => cc, Pos: [208, 217] cc => I, Pos: [208, 217] cc => I, Pos: [214, 230] cc => I, Pos: [214, 230] cc => I, Pos: [219, 227, 233] ccc => cc, Pos: [222, 225, 232] ccc => cc, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [229, 235] cc => I, Pos: [229, 235] cc => I, Pos: [230, 243] cc => I, Pos: [230, 243] cc => I, Pos: [231, 234] cc => I, Pos: [231, 234] cc => I, Pos: [233, 245] cc => I, Pos: [233, 245] cc => I, Pos: [235, 247] cc => I, Pos: [235, 247] cc => I, Pos: [236, 251] cc => I, Pos: [236, 251] cc => I, Pos: [240, 253] cc => I, Pos: [240, 253] cc => I, Pos: [243, 261] cc => I, Pos: [243, 261] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [247, 249] cc => I, Pos: [247, 249] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [249, 258] cc => I, Pos: [249, 258] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [251, 263, 266] ccc => cc, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [254, 262] cc => I, Pos: [254, 262] cc => I, Pos: [261, 267, 276] ccc => cc, Pos: [262, 268] cc => I, Pos: [262, 268] cc => I, Pos: [272, 281] cc => I, Pos: [272, 281] cc => I, Pos: [277, 286] cc => I, Pos: [277, 286] cc => I, Pos: [284, 290, 297] ccc => cc, Pos: [285, 291] cc => I, Pos: [285, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [303, 308] cc => I, Pos: [303, 308] cc => I, Pos: [305, 329] cc => I, Pos: [305, 329] cc => I, Pos: [308, 320] cc => I, Pos: [308, 320] cc => I, Pos: [309, 318] cc => I, Pos: [309, 318] cc => I, Pos: [314, 322] cc => I, Pos: [314, 322] cc => I, Pos: [316, 327] cc => I, Pos: [316, 327] cc => I, Pos: [335, 341] cc => I, Pos: [335, 341] cc => I, Pos: [342, 348] cc => I, Pos: [342, 348] cc => I, Pos: [343, 345, 352] ccc => cc]

--------End Timer [Generate Plans]:  0.1874856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [17, 24] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [33, 43, 51] ccc => cc,
 Pos: [34, 44] cc => I,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [77, 90] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [102, 113] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [112, 118, 127] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [125, 135] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [139, 150] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [219, 227, 233] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [214, 230] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [231, 234] cc => I,
 Pos: [235, 247] cc => I,
 Pos: [236, 251] cc => I,
 Pos: [240, 253] cc => I,
 Pos: [243, 261] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [249, 258] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [262, 268] cc => I,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [303, 308] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 74, Saving: 77

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [3, 11] cc => I
Apply:  Pos: [4, 12] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [33, 43, 51] ccc => cc
Apply:  Pos: [34, 44] cc => I
Apply:  Pos: [38, 42, 54] ccc => cc
Apply:  Pos: [39, 47, 50] ccc => cc
Apply:  Pos: [52, 60] cc => I
Apply:  Pos: [56, 65] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [63, 70] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [77, 90] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [84, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 99] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [98, 105] cc => I
Apply:  Pos: [102, 113] cc => I
Apply:  Pos: [103, 108, 116] ccc => cc
Apply:  Pos: [112, 118, 127] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [119, 130] cc => I
Apply:  Pos: [120, 137] cc => I
Apply:  Pos: [122, 132] cc => I
Apply:  Pos: [123, 133] cc => I
Apply:  Pos: [125, 135] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [131, 142] cc => I
Apply:  Pos: [139, 150] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [152, 160] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [181, 186] cc => I
Apply:  Pos: [184, 191] cc => I
Apply:  Pos: [190, 196] cc => I
Apply:  Pos: [201, 216] cc => I
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [219, 227, 233] ccc => cc
Apply:  Pos: [208, 217] cc => I
Apply:  Pos: [214, 230] cc => I
Apply:  Pos: [222, 225, 232] ccc => cc
Apply:  Pos: [231, 234] cc => I
Apply:  Pos: [235, 247] cc => I
Apply:  Pos: [236, 251] cc => I
Apply:  Pos: [240, 253] cc => I
Apply:  Pos: [243, 261] cc => I
Apply:  Pos: [244, 252] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [249, 258] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [262, 268] cc => I
Apply:  Pos: [272, 281] cc => I
Apply:  Pos: [277, 286] cc => I
Apply:  Pos: [284, 290, 297] ccc => cc
Apply:  Pos: [285, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [303, 308] cc => I
Apply:  Pos: [305, 329] cc => I
Apply:  Pos: [309, 318] cc => I
Apply:  Pos: [314, 322] cc => I
Apply:  Pos: [316, 327] cc => I
Apply:  Pos: [335, 341] cc => I
Apply:  Pos: [342, 348] cc => I
Apply:  Pos: [343, 345, 352] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [8, 9], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [3, 10], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [13, 18], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [15, 17], [14, 11], [6, 18], [4, 16], [12, 15], [2, 1], [7, 11], [0, 13], [3, 10], [15, 17], [11, 6], [2, 12], [5, 13], [8, 3], [7, 14], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [1, 15], [5, 18], [7, 14], [8, 9], [13, 18], [17, 0], [4, 16], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [3, 1], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [9, 4], [6, 13], [12, 0], [19, 5], [9, 2], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [6, 18], [3, 10], [1, 15], [10, 1], [9, 4], [17, 0], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [9, 2], [5, 13], [8, 3], [4, 16], [12, 17], [3, 1], [7, 14], [8, 9], [11, 19], [10, 2], [10, 1], [7, 11], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [8, 9], [15, 6], [4, 16], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  7.415475606918335

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 29]
[39, 50]
[59, 82]
[79, 102]
[102, 117]
[145, 152]
[163, 183]
[159, 185]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 73, 78]
[131, 139, 149]
[167, 173, 174]
[153, 160, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 60, 65]
[88, 96, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 29]
[39, 50]
[59, 82]
[79, 102]
[102, 117]
[145, 152]
[163, 183]
[159, 185]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.145668983459473

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [56, 60, 65] ccc => cc, Pos: [59, 82] cc => I, Pos: [59, 82] cc => I, Pos: [70, 73, 78] ccc => cc, Pos: [79, 102] cc => I, Pos: [79, 102] cc => I, Pos: [88, 96, 106] ccc => cc, Pos: [102, 117] cc => I, Pos: [102, 117] cc => I, Pos: [131, 139, 149] ccc => cc, Pos: [145, 152] cc => I, Pos: [145, 152] cc => I, Pos: [153, 160, 176] ccc => cc, Pos: [159, 185] cc => I, Pos: [159, 185] cc => I, Pos: [163, 183] cc => I, Pos: [163, 183] cc => I, Pos: [167, 173, 174] ccc => cc]

--------End Timer [Generate Plans]:  0.03126668930053711

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 29] cc => I,
 Pos: [39, 50] cc => I,
 Pos: [56, 60, 65] ccc => cc,
 Pos: [59, 82] cc => I,
 Pos: [70, 73, 78] ccc => cc,
 Pos: [102, 117] cc => I,
 Pos: [88, 96, 106] ccc => cc,
 Pos: [131, 139, 149] ccc => cc,
 Pos: [145, 152] cc => I,
 Pos: [153, 160, 176] ccc => cc,
 Pos: [159, 185] cc => I,
 Pos: [163, 183] cc => I,
 Pos: [167, 173, 174] ccc => cc]
Change: 13, Saving: 13

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [56, 60, 65] ccc => cc
Apply:  Pos: [59, 82] cc => I
Apply:  Pos: [70, 73, 78] ccc => cc
Apply:  Pos: [102, 117] cc => I
Apply:  Pos: [88, 96, 106] ccc => cc
Apply:  Pos: [131, 139, 149] ccc => cc
Apply:  Pos: [145, 152] cc => I
Apply:  Pos: [153, 160, 176] ccc => cc
Apply:  Pos: [159, 185] cc => I
Apply:  Pos: [163, 183] cc => I
Apply:  Pos: [167, 173, 174] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [8, 9], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [8, 3], [7, 19], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [1, 15], [5, 18], [8, 9], [13, 18], [17, 0], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [8, 3], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [9, 16], [6, 13], [12, 0], [19, 5], [9, 2], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [10, 1], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [9, 2], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  4.17693567276001

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[63, 80]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[124, 130, 142]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[63, 80]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.672308921813965

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [63, 80] cc => I, Pos: [63, 80] cc => I, Pos: [124, 130, 142] ccc => cc]

--------End Timer [Generate Plans]:  0.015623331069946289

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [63, 80] cc => I, Pos: [124, 130, 142] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [63, 80] cc => I
Apply:  Pos: [124, 130, 142] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [8, 9], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [7, 19], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [1, 15], [5, 18], [8, 9], [13, 18], [17, 0], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [9, 16], [6, 13], [12, 0], [19, 5], [9, 12], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [10, 1], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 2], [10, 1], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.687932252883911

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.625469207763672

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [8, 9], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [7, 19], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [1, 15], [5, 18], [8, 9], [13, 18], [17, 0], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [9, 16], [6, 13], [12, 0], [19, 5], [9, 12], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [10, 1], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.625469207763672

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [198] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 42 - (small)
 - circuit cycle: 396

Reduced: 
 - size: 162 (45.00%)
 - depth: 3 (6.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061522483825684

[3, 10], [8, 9], [12, 17], [4, 16], [19, 5], [0, 13], [7, 14], [1, 6], [11, 15], [10, 1], [15, 17], [4, 16], [19, 5], [2, 12], [11, 6], [7, 14], [1, 15], [8, 9], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [8, 9], [12, 0], [3, 1], [13, 18], [10, 2], [4, 16], [1, 15], [6, 5], [3, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [4, 16], [14, 11], [9, 12], [1, 6], [3, 10], [7, 19], [1, 15], [8, 3], [14, 11], [5, 13], [9, 12], [10, 7], [2, 4], [17, 0], [6, 18], [1, 15], [3, 10], [5, 13], [9, 4], [7, 11], [17, 0], [2, 12], [6, 18], [14, 19], [15, 17], [13, 18], [3, 2], [4, 16], [10, 7], [14, 19], [11, 6], [12, 0], [8, 9], [15, 17], [2, 12], [11, 6], [8, 3], [7, 14], [10, 1], [5, 13], [4, 16], [15, 17], [14, 11], [8, 3], [5, 13], [2, 12], [6, 18], [4, 16], [7, 19], [10, 1], [12, 15], [2, 1], [9, 4], [11, 6], [0, 13], [7, 19], [3, 10], [15, 17], [7, 11], [2, 12], [5, 13], [8, 3], [14, 19], [9, 4], [10, 1], [1, 15], [11, 6], [9, 2], [7, 14], [16, 17], [3, 10], [1, 15], [12, 0], [3, 2], [6, 5], [9, 4], [13, 18], [14, 19], [1, 15], [5, 18], [16, 17], [11, 6], [12, 0], [3, 2], [7, 14], [9, 4], [1, 15], [3, 10], [8, 9], [14, 19], [13, 18], [17, 0], [11, 6], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [6, 18], [14, 19], [12, 17], [11, 15], [6, 18], [3, 1], [5, 13], [10, 7], [17, 0], [9, 2], [4, 12], [11, 15], [12, 0], [6, 5], [7, 14], [10, 1], [9, 2], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [10, 1], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [14, 19], [6, 13], [9, 4], [16, 17], [5, 18], [10, 2], [7, 11], [14, 19], [16, 17], [13, 18], [9, 4], [3, 2], [1, 15], [7, 11], [12, 0], [19, 5], [6, 18], [2, 4], [1, 15], [3, 10], [8, 9], [7, 19], [1, 11], [10, 2], [15, 0], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [11, 19], [6, 18], [5, 13], [4, 12], [16, 17], [15, 0], [7, 14], [3, 1], [10, 2], [11, 19], [10, 1], [4, 16], [6, 13], [12, 0], [5, 18], [9, 2], [8, 3], [19, 5], [1, 6], [9, 4], [15, 17], [2, 12], [7, 14], [8, 3], [5, 18], [4, 16], [8, 3], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [8, 9], [6, 18], [3, 10], [7, 14], [17, 0], [4, 16], [1, 15], [2, 12], [13, 18], [2, 12], [11, 15], [7, 19], [17, 0], [8, 9], [10, 1], [4, 16], [13, 18], [9, 4], [2, 12], [17, 0], [11, 15], [7, 14], [10, 1], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [5, 18], [4, 16], [12, 17], [3, 1], [7, 14], [15, 6], [8, 9], [11, 19], [10, 2], [5, 18], [10, 1], [7, 11], [14, 19], [17, 0], [15, 6], [9, 4], [8, 3], [2, 12], [19, 5], [17, 0], [6, 13], [3, 1], [11, 15], [9, 4], [2, 12], [14, 19], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [7, 19], [2, 12], [13, 18], [10, 1], [17, 0], [14, 11], [8, 9], [15, 6], [4, 16], [7, 14], [9, 4], [8, 3], [5, 18], [17, 0], [11, 6], [10, 1], [12, 15], [7, 14], [2, 12], [0, 13], [1, 11], [6, 18], [8, 3], [15, 17], [7, 19], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [12, 17], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 17], [4, 16], [15, 0], [10, 2], [12, 15], [6, 13], [19, 5], [4, 16], [1, 11], [7, 14], [3, 10], [15, 0], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[39, 47, 50]
[118, 127, 134]
[206, 212, 219]
[251, 263, 266]
[261, 267, 276]
[284, 290, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 108, 116]
[112, 118, 127]
[127, 134, 139]
[222, 225, 232]
[219, 227, 233]
[343, 345, 352]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[33, 43, 51]
[38, 42, 54]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.171945571899414

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 17] cc => I, Pos: [1, 17] cc => I, Pos: [3, 11] cc => I, Pos: [3, 11] cc => I, Pos: [4, 12] cc => I, Pos: [4, 12] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 34] cc => I, Pos: [24, 34] cc => I, Pos: [33, 43, 51] ccc => cc, Pos: [34, 44] cc => I, Pos: [34, 44] cc => I, Pos: [38, 42, 54] ccc => cc, Pos: [39, 47, 50] ccc => cc, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [52, 60] cc => I, Pos: [52, 60] cc => I, Pos: [56, 65] cc => I, Pos: [56, 65] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [63, 70] cc => I, Pos: [63, 70] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [77, 90] cc => I, Pos: [77, 90] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [84, 95] cc => I, Pos: [84, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 99] cc => I, Pos: [88, 99] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [90, 97] cc => I, Pos: [90, 97] cc => I, Pos: [98, 105] cc => I, Pos: [98, 105] cc => I, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [103, 108, 116] ccc => cc, Pos: [112, 118, 127] ccc => cc, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [118, 127, 134] ccc => cc, Pos: [119, 130] cc => I, Pos: [119, 130] cc => I, Pos: [120, 137] cc => I, Pos: [120, 137] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [122, 132] cc => I, Pos: [122, 132] cc => I, Pos: [123, 133] cc => I, Pos: [123, 133] cc => I, Pos: [125, 135] cc => I, Pos: [125, 135] cc => I, Pos: [127, 134, 139] ccc => cc, Pos: [128, 136] cc => I, Pos: [128, 136] cc => I, Pos: [131, 142] cc => I, Pos: [131, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [139, 150] cc => I, Pos: [139, 150] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [152, 160] cc => I, Pos: [152, 160] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [181, 186] cc => I, Pos: [181, 186] cc => I, Pos: [184, 191] cc => I, Pos: [184, 191] cc => I, Pos: [190, 196] cc => I, Pos: [190, 196] cc => I, Pos: [201, 216] cc => I, Pos: [201, 216] cc => I, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [206, 212, 219] ccc => cc, Pos: [208, 217] cc => I, Pos: [208, 217] cc => I, Pos: [214, 230] cc => I, Pos: [214, 230] cc => I, Pos: [219, 227, 233] ccc => cc, Pos: [222, 225, 232] ccc => cc, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [229, 235] cc => I, Pos: [229, 235] cc => I, Pos: [230, 243] cc => I, Pos: [230, 243] cc => I, Pos: [231, 234] cc => I, Pos: [231, 234] cc => I, Pos: [233, 245] cc => I, Pos: [233, 245] cc => I, Pos: [235, 247] cc => I, Pos: [235, 247] cc => I, Pos: [236, 251] cc => I, Pos: [236, 251] cc => I, Pos: [240, 253] cc => I, Pos: [240, 253] cc => I, Pos: [243, 261] cc => I, Pos: [243, 261] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [247, 249] cc => I, Pos: [247, 249] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [249, 258] cc => I, Pos: [249, 258] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [251, 263, 266] ccc => cc, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [254, 262] cc => I, Pos: [254, 262] cc => I, Pos: [261, 267, 276] ccc => cc, Pos: [262, 268] cc => I, Pos: [262, 268] cc => I, Pos: [272, 281] cc => I, Pos: [272, 281] cc => I, Pos: [277, 286] cc => I, Pos: [277, 286] cc => I, Pos: [284, 290, 297] ccc => cc, Pos: [285, 291] cc => I, Pos: [285, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [303, 308] cc => I, Pos: [303, 308] cc => I, Pos: [305, 329] cc => I, Pos: [305, 329] cc => I, Pos: [308, 320] cc => I, Pos: [308, 320] cc => I, Pos: [309, 318] cc => I, Pos: [309, 318] cc => I, Pos: [314, 322] cc => I, Pos: [314, 322] cc => I, Pos: [316, 327] cc => I, Pos: [316, 327] cc => I, Pos: [335, 341] cc => I, Pos: [335, 341] cc => I, Pos: [342, 348] cc => I, Pos: [342, 348] cc => I, Pos: [343, 345, 352] ccc => cc]

--------End Timer [Generate Plans]:  0.18747401237487793

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 17] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [34, 44] cc => I,
 Pos: [33, 43, 51] ccc => cc,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [77, 90] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [102, 113] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [112, 118, 127] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [125, 135] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [139, 150] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [219, 227, 233] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [214, 230] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [231, 234] cc => I,
 Pos: [235, 247] cc => I,
 Pos: [236, 251] cc => I,
 Pos: [240, 253] cc => I,
 Pos: [261, 267, 276] ccc => cc,
 Pos: [252, 259] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [249, 258] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [262, 268] cc => I,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [308, 320] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 74, Saving: 78

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 17] cc => I
Apply:  Pos: [3, 11] cc => I
Apply:  Pos: [4, 12] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [34, 44] cc => I
Apply:  Pos: [33, 43, 51] ccc => cc
Apply:  Pos: [38, 42, 54] ccc => cc
Apply:  Pos: [39, 47, 50] ccc => cc
Apply:  Pos: [52, 60] cc => I
Apply:  Pos: [56, 65] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [63, 70] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [83, 91] cc => I
Apply:  Pos: [77, 90] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [84, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 99] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [98, 105] cc => I
Apply:  Pos: [102, 113] cc => I
Apply:  Pos: [103, 108, 116] ccc => cc
Apply:  Pos: [112, 118, 127] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [119, 130] cc => I
Apply:  Pos: [120, 137] cc => I
Apply:  Pos: [122, 132] cc => I
Apply:  Pos: [123, 133] cc => I
Apply:  Pos: [125, 135] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [131, 142] cc => I
Apply:  Pos: [139, 150] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [152, 160] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [181, 186] cc => I
Apply:  Pos: [184, 191] cc => I
Apply:  Pos: [190, 196] cc => I
Apply:  Pos: [201, 216] cc => I
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [219, 227, 233] ccc => cc
Apply:  Pos: [208, 217] cc => I
Apply:  Pos: [214, 230] cc => I
Apply:  Pos: [222, 225, 232] ccc => cc
Apply:  Pos: [231, 234] cc => I
Apply:  Pos: [235, 247] cc => I
Apply:  Pos: [236, 251] cc => I
Apply:  Pos: [240, 253] cc => I
Apply:  Pos: [261, 267, 276] ccc => cc
Apply:  Pos: [252, 259] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [249, 258] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [262, 268] cc => I
Apply:  Pos: [272, 281] cc => I
Apply:  Pos: [277, 286] cc => I
Apply:  Pos: [284, 290, 297] ccc => cc
Apply:  Pos: [285, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [308, 320] cc => I
Apply:  Pos: [305, 329] cc => I
Apply:  Pos: [309, 318] cc => I
Apply:  Pos: [314, 322] cc => I
Apply:  Pos: [316, 327] cc => I
Apply:  Pos: [335, 341] cc => I
Apply:  Pos: [342, 348] cc => I
Apply:  Pos: [343, 345, 352] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [3, 10], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [15, 17], [13, 18], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [14, 11], [6, 18], [4, 16], [12, 15], [2, 1], [7, 11], [0, 13], [3, 10], [15, 17], [11, 6], [2, 12], [5, 13], [8, 3], [7, 14], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [1, 15], [5, 18], [7, 14], [8, 9], [13, 18], [17, 0], [4, 16], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [3, 1], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [9, 4], [6, 13], [12, 0], [19, 5], [9, 2], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [6, 18], [3, 10], [7, 14], [17, 0], [1, 15], [10, 1], [9, 4], [7, 11], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [9, 2], [5, 13], [8, 3], [4, 16], [12, 17], [3, 1], [8, 9], [11, 19], [10, 2], [10, 1], [7, 11], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [2, 12], [13, 18], [14, 11], [8, 9], [15, 6], [4, 16], [9, 4], [5, 18], [11, 6], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  7.359419584274292

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 29]
[39, 51]
[59, 82]
[79, 102]
[102, 117]
[145, 154]
[164, 185]
[161, 187]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 73, 78]
[131, 139, 151]
[168, 174, 175]
[155, 162, 177]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[50, 60, 65]
[88, 96, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 29]
[39, 51]
[59, 82]
[79, 102]
[102, 117]
[145, 154]
[164, 185]
[161, 187]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.124907970428467

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [39, 51] cc => I, Pos: [39, 51] cc => I, Pos: [50, 60, 65] ccc => cc, Pos: [59, 82] cc => I, Pos: [59, 82] cc => I, Pos: [70, 73, 78] ccc => cc, Pos: [79, 102] cc => I, Pos: [79, 102] cc => I, Pos: [88, 96, 106] ccc => cc, Pos: [102, 117] cc => I, Pos: [102, 117] cc => I, Pos: [131, 139, 151] ccc => cc, Pos: [145, 154] cc => I, Pos: [145, 154] cc => I, Pos: [155, 162, 177] ccc => cc, Pos: [161, 187] cc => I, Pos: [161, 187] cc => I, Pos: [164, 185] cc => I, Pos: [164, 185] cc => I, Pos: [168, 174, 175] ccc => cc]

--------End Timer [Generate Plans]:  0.03124833106994629

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 29] cc => I,
 Pos: [39, 51] cc => I,
 Pos: [50, 60, 65] ccc => cc,
 Pos: [59, 82] cc => I,
 Pos: [70, 73, 78] ccc => cc,
 Pos: [79, 102] cc => I,
 Pos: [88, 96, 106] ccc => cc,
 Pos: [131, 139, 151] ccc => cc,
 Pos: [145, 154] cc => I,
 Pos: [155, 162, 177] ccc => cc,
 Pos: [161, 187] cc => I,
 Pos: [164, 185] cc => I,
 Pos: [168, 174, 175] ccc => cc]
Change: 13, Saving: 13

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [39, 51] cc => I
Apply:  Pos: [50, 60, 65] ccc => cc
Apply:  Pos: [59, 82] cc => I
Apply:  Pos: [70, 73, 78] ccc => cc
Apply:  Pos: [79, 102] cc => I
Apply:  Pos: [88, 96, 106] ccc => cc
Apply:  Pos: [131, 139, 151] ccc => cc
Apply:  Pos: [145, 154] cc => I
Apply:  Pos: [155, 162, 177] ccc => cc
Apply:  Pos: [161, 187] cc => I
Apply:  Pos: [164, 185] cc => I
Apply:  Pos: [168, 174, 175] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015623092651367188

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [12, 15], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [8, 3], [7, 19], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [1, 15], [5, 18], [13, 18], [17, 0], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [8, 3], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [9, 16], [6, 13], [12, 0], [19, 5], [9, 2], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [3, 10], [7, 14], [17, 0], [1, 15], [10, 1], [7, 11], [19, 5], [4, 17], [7, 19], [14, 11], [9, 2], [5, 13], [8, 3], [12, 17], [3, 1], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [10, 1], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  4.17177939414978

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 71]
[63, 79]
[86, 135]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[124, 130, 144]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[61, 66, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 71]
[63, 79]
[86, 135]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6870901584625244

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [61, 66, 74] ccc => cc, Pos: [63, 79] cc => I, Pos: [63, 79] cc => I, Pos: [69, 71] cc => I, Pos: [69, 71] cc => I, Pos: [86, 135] cc => I, Pos: [86, 135] cc => I, Pos: [124, 130, 144] ccc => cc]

--------End Timer [Generate Plans]:  0.015611886978149414

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [61, 66, 74] ccc => cc,
 Pos: [63, 79] cc => I,
 Pos: [69, 71] cc => I,
 Pos: [86, 135] cc => I,
 Pos: [124, 130, 144] ccc => cc]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [61, 66, 74] ccc => cc
Apply:  Pos: [63, 79] cc => I
Apply:  Pos: [69, 71] cc => I
Apply:  Pos: [86, 135] cc => I
Apply:  Pos: [124, 130, 144] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [12, 15], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [7, 19], [10, 1], [2, 12], [14, 19], [6, 5], [1, 15], [5, 18], [17, 0], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [9, 16], [6, 13], [12, 0], [19, 5], [9, 12], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [3, 10], [17, 0], [1, 15], [10, 1], [7, 11], [19, 5], [4, 17], [7, 19], [14, 11], [5, 13], [8, 3], [12, 17], [3, 1], [11, 19], [10, 2], [10, 1], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [10, 1], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.702702045440674

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.48433518409729

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [12, 15], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [7, 19], [10, 1], [2, 12], [14, 19], [6, 5], [1, 15], [5, 18], [17, 0], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [9, 16], [6, 13], [12, 0], [19, 5], [9, 12], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [3, 10], [17, 0], [1, 15], [10, 1], [7, 11], [19, 5], [4, 17], [7, 19], [14, 11], [5, 13], [8, 3], [12, 17], [3, 1], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [10, 1], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.48433518409729

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [194] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 388

Reduced: 
 - size: 166 (46.11%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499618530273438

[3, 10], [8, 9], [12, 17], [4, 16], [19, 5], [0, 13], [7, 14], [1, 6], [11, 15], [10, 1], [15, 17], [4, 16], [19, 5], [2, 12], [11, 6], [7, 14], [1, 15], [8, 9], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [8, 9], [12, 0], [3, 1], [13, 18], [10, 2], [4, 16], [1, 15], [6, 5], [3, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [4, 16], [14, 11], [9, 12], [1, 6], [3, 10], [7, 19], [1, 15], [8, 3], [14, 11], [5, 13], [9, 12], [10, 7], [2, 4], [17, 0], [6, 18], [1, 15], [3, 10], [5, 13], [9, 4], [7, 11], [17, 0], [2, 12], [6, 18], [14, 19], [15, 17], [13, 18], [3, 2], [4, 16], [10, 7], [14, 19], [11, 6], [12, 0], [8, 9], [15, 17], [2, 12], [11, 6], [8, 3], [7, 14], [10, 1], [5, 13], [4, 16], [15, 17], [14, 11], [8, 3], [5, 13], [2, 12], [6, 18], [4, 16], [7, 19], [10, 1], [12, 15], [2, 1], [9, 4], [11, 6], [0, 13], [7, 19], [3, 10], [15, 17], [7, 11], [2, 12], [5, 13], [8, 3], [14, 19], [9, 4], [10, 1], [1, 15], [11, 6], [9, 2], [7, 14], [16, 17], [3, 10], [1, 15], [12, 0], [3, 2], [6, 5], [9, 4], [13, 18], [14, 19], [1, 15], [5, 18], [16, 17], [11, 6], [12, 0], [3, 2], [7, 14], [9, 4], [1, 15], [3, 10], [8, 9], [14, 19], [13, 18], [17, 0], [11, 6], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [6, 18], [14, 19], [12, 17], [11, 15], [6, 18], [3, 1], [5, 13], [10, 7], [17, 0], [9, 2], [4, 12], [11, 15], [12, 0], [6, 5], [7, 14], [10, 1], [9, 2], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [10, 1], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [14, 19], [6, 13], [9, 4], [16, 17], [5, 18], [10, 2], [7, 11], [14, 19], [16, 17], [13, 18], [9, 4], [3, 2], [1, 15], [7, 11], [12, 0], [19, 5], [6, 18], [2, 4], [1, 15], [3, 10], [8, 9], [7, 19], [1, 11], [10, 2], [15, 0], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [11, 19], [6, 18], [5, 13], [4, 12], [16, 17], [15, 0], [7, 14], [3, 1], [10, 2], [11, 19], [10, 1], [4, 16], [6, 13], [12, 0], [5, 18], [9, 2], [8, 3], [19, 5], [1, 6], [9, 4], [15, 17], [2, 12], [7, 14], [8, 3], [5, 18], [4, 16], [8, 3], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [8, 9], [6, 18], [3, 10], [7, 14], [17, 0], [4, 16], [1, 15], [2, 12], [13, 18], [2, 12], [11, 15], [7, 19], [17, 0], [8, 9], [10, 1], [4, 16], [13, 18], [9, 4], [2, 12], [17, 0], [11, 15], [7, 14], [10, 1], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [5, 18], [4, 16], [12, 17], [3, 1], [7, 14], [15, 6], [8, 9], [11, 19], [10, 2], [5, 18], [10, 1], [7, 11], [14, 19], [17, 0], [15, 6], [9, 4], [8, 3], [2, 12], [19, 5], [17, 0], [6, 13], [3, 1], [11, 15], [9, 4], [2, 12], [14, 19], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [7, 19], [2, 12], [13, 18], [10, 1], [17, 0], [14, 11], [8, 9], [15, 6], [4, 16], [7, 14], [9, 4], [8, 3], [5, 18], [17, 0], [11, 6], [10, 1], [12, 15], [7, 14], [2, 12], [0, 13], [1, 11], [6, 18], [8, 3], [15, 17], [7, 19], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [12, 17], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 17], [4, 16], [15, 0], [10, 2], [12, 15], [6, 13], [19, 5], [4, 16], [1, 11], [7, 14], [3, 10], [15, 0], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[39, 47, 50]
[118, 127, 134]
[206, 212, 219]
[251, 263, 266]
[261, 267, 276]
[284, 290, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 108, 116]
[112, 118, 127]
[127, 134, 139]
[222, 225, 232]
[219, 227, 233]
[343, 345, 352]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[33, 43, 51]
[38, 42, 54]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.0761730670928955

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 17] cc => I, Pos: [1, 17] cc => I, Pos: [3, 11] cc => I, Pos: [3, 11] cc => I, Pos: [4, 12] cc => I, Pos: [4, 12] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 34] cc => I, Pos: [24, 34] cc => I, Pos: [33, 43, 51] ccc => cc, Pos: [34, 44] cc => I, Pos: [34, 44] cc => I, Pos: [38, 42, 54] ccc => cc, Pos: [39, 47, 50] ccc => cc, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [52, 60] cc => I, Pos: [52, 60] cc => I, Pos: [56, 65] cc => I, Pos: [56, 65] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [63, 70] cc => I, Pos: [63, 70] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [77, 90] cc => I, Pos: [77, 90] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [84, 95] cc => I, Pos: [84, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 99] cc => I, Pos: [88, 99] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [90, 97] cc => I, Pos: [90, 97] cc => I, Pos: [98, 105] cc => I, Pos: [98, 105] cc => I, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [103, 108, 116] ccc => cc, Pos: [112, 118, 127] ccc => cc, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [118, 127, 134] ccc => cc, Pos: [119, 130] cc => I, Pos: [119, 130] cc => I, Pos: [120, 137] cc => I, Pos: [120, 137] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [122, 132] cc => I, Pos: [122, 132] cc => I, Pos: [123, 133] cc => I, Pos: [123, 133] cc => I, Pos: [125, 135] cc => I, Pos: [125, 135] cc => I, Pos: [127, 134, 139] ccc => cc, Pos: [128, 136] cc => I, Pos: [128, 136] cc => I, Pos: [131, 142] cc => I, Pos: [131, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [139, 150] cc => I, Pos: [139, 150] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [152, 160] cc => I, Pos: [152, 160] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [181, 186] cc => I, Pos: [181, 186] cc => I, Pos: [184, 191] cc => I, Pos: [184, 191] cc => I, Pos: [190, 196] cc => I, Pos: [190, 196] cc => I, Pos: [201, 216] cc => I, Pos: [201, 216] cc => I, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [206, 212, 219] ccc => cc, Pos: [208, 217] cc => I, Pos: [208, 217] cc => I, Pos: [214, 230] cc => I, Pos: [214, 230] cc => I, Pos: [219, 227, 233] ccc => cc, Pos: [222, 225, 232] ccc => cc, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [229, 235] cc => I, Pos: [229, 235] cc => I, Pos: [230, 243] cc => I, Pos: [230, 243] cc => I, Pos: [231, 234] cc => I, Pos: [231, 234] cc => I, Pos: [233, 245] cc => I, Pos: [233, 245] cc => I, Pos: [235, 247] cc => I, Pos: [235, 247] cc => I, Pos: [236, 251] cc => I, Pos: [236, 251] cc => I, Pos: [240, 253] cc => I, Pos: [240, 253] cc => I, Pos: [243, 261] cc => I, Pos: [243, 261] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [247, 249] cc => I, Pos: [247, 249] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [249, 258] cc => I, Pos: [249, 258] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [251, 263, 266] ccc => cc, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [254, 262] cc => I, Pos: [254, 262] cc => I, Pos: [261, 267, 276] ccc => cc, Pos: [262, 268] cc => I, Pos: [262, 268] cc => I, Pos: [272, 281] cc => I, Pos: [272, 281] cc => I, Pos: [277, 286] cc => I, Pos: [277, 286] cc => I, Pos: [284, 290, 297] ccc => cc, Pos: [285, 291] cc => I, Pos: [285, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [303, 308] cc => I, Pos: [303, 308] cc => I, Pos: [305, 329] cc => I, Pos: [305, 329] cc => I, Pos: [308, 320] cc => I, Pos: [308, 320] cc => I, Pos: [309, 318] cc => I, Pos: [309, 318] cc => I, Pos: [314, 322] cc => I, Pos: [314, 322] cc => I, Pos: [316, 327] cc => I, Pos: [316, 327] cc => I, Pos: [335, 341] cc => I, Pos: [335, 341] cc => I, Pos: [342, 348] cc => I, Pos: [342, 348] cc => I, Pos: [343, 345, 352] ccc => cc]

--------End Timer [Generate Plans]:  0.18748784065246582

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 17] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [24, 34] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [90, 97] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [113, 125] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [112, 118, 127] ccc => cc,
 Pos: [121, 128] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [139, 150] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [206, 212, 219] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [230, 243] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [231, 234] cc => I,
 Pos: [229, 235] cc => I,
 Pos: [233, 245] cc => I,
 Pos: [236, 251] cc => I,
 Pos: [240, 253] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [247, 249] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [262, 268] cc => I,
 Pos: [261, 267, 276] ccc => cc,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [308, 320] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 73, Saving: 76

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 17] cc => I
Apply:  Pos: [3, 11] cc => I
Apply:  Pos: [4, 12] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [24, 34] cc => I
Apply:  Pos: [51, 58] cc => I
Apply:  Pos: [38, 42, 54] ccc => cc
Apply:  Pos: [39, 47, 50] ccc => cc
Apply:  Pos: [52, 60] cc => I
Apply:  Pos: [56, 65] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [63, 70] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [90, 97] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [84, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 99] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [98, 105] cc => I
Apply:  Pos: [113, 125] cc => I
Apply:  Pos: [103, 108, 116] ccc => cc
Apply:  Pos: [112, 118, 127] ccc => cc
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [119, 130] cc => I
Apply:  Pos: [120, 137] cc => I
Apply:  Pos: [122, 132] cc => I
Apply:  Pos: [123, 133] cc => I
Apply:  Pos: [131, 142] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [139, 150] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [152, 160] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [181, 186] cc => I
Apply:  Pos: [184, 191] cc => I
Apply:  Pos: [190, 196] cc => I
Apply:  Pos: [201, 216] cc => I
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [206, 212, 219] ccc => cc
Apply:  Pos: [208, 217] cc => I
Apply:  Pos: [230, 243] cc => I
Apply:  Pos: [222, 225, 232] ccc => cc
Apply:  Pos: [231, 234] cc => I
Apply:  Pos: [229, 235] cc => I
Apply:  Pos: [233, 245] cc => I
Apply:  Pos: [236, 251] cc => I
Apply:  Pos: [240, 253] cc => I
Apply:  Pos: [244, 252] cc => I
Apply:  Pos: [247, 249] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [262, 268] cc => I
Apply:  Pos: [261, 267, 276] ccc => cc
Apply:  Pos: [272, 281] cc => I
Apply:  Pos: [277, 286] cc => I
Apply:  Pos: [284, 290, 297] ccc => cc
Apply:  Pos: [285, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [308, 320] cc => I
Apply:  Pos: [305, 329] cc => I
Apply:  Pos: [309, 318] cc => I
Apply:  Pos: [314, 322] cc => I
Apply:  Pos: [316, 327] cc => I
Apply:  Pos: [335, 341] cc => I
Apply:  Pos: [342, 348] cc => I
Apply:  Pos: [343, 345, 352] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [3, 10], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [13, 18], [3, 2], [4, 16], [10, 7], [12, 0], [8, 9], [7, 14], [15, 17], [14, 11], [6, 18], [12, 15], [2, 1], [9, 4], [7, 11], [0, 13], [3, 10], [15, 17], [11, 6], [2, 12], [5, 13], [8, 3], [7, 14], [10, 1], [1, 15], [9, 2], [14, 19], [6, 5], [13, 18], [5, 18], [7, 14], [9, 4], [8, 9], [13, 18], [17, 0], [4, 16], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [3, 1], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [7, 14], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 2], [8, 3], [5, 18], [1, 6], [9, 4], [15, 17], [15, 0], [1, 11], [5, 13], [6, 18], [3, 10], [1, 15], [10, 1], [4, 16], [9, 4], [2, 12], [17, 0], [7, 11], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [9, 2], [5, 13], [8, 3], [4, 16], [12, 17], [3, 1], [8, 9], [11, 19], [10, 2], [10, 1], [7, 11], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [2, 12], [13, 18], [14, 11], [8, 9], [15, 6], [4, 16], [9, 4], [5, 18], [11, 6], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  7.263660907745361

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 28]
[39, 49]
[61, 79]
[77, 81]
[80, 103]
[103, 118]
[96, 130]
[145, 155]
[165, 186]
[162, 188]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 74, 78]
[140, 149, 150]
[169, 175, 176]
[156, 163, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 59, 65]
[89, 97, 107]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 28]
[39, 49]
[61, 79]
[77, 81]
[80, 103]
[103, 118]
[96, 130]
[145, 155]
[165, 186]
[162, 188]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.094065189361572

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 28] cc => I, Pos: [19, 28] cc => I, Pos: [39, 49] cc => I, Pos: [39, 49] cc => I, Pos: [56, 59, 65] ccc => cc, Pos: [61, 79] cc => I, Pos: [61, 79] cc => I, Pos: [70, 74, 78] ccc => cc, Pos: [77, 81] cc => I, Pos: [77, 81] cc => I, Pos: [80, 103] cc => I, Pos: [80, 103] cc => I, Pos: [89, 97, 107] ccc => cc, Pos: [96, 130] cc => I, Pos: [96, 130] cc => I, Pos: [103, 118] cc => I, Pos: [103, 118] cc => I, Pos: [140, 149, 150] ccc => cc, Pos: [145, 155] cc => I, Pos: [145, 155] cc => I, Pos: [156, 163, 178] ccc => cc, Pos: [162, 188] cc => I, Pos: [162, 188] cc => I, Pos: [165, 186] cc => I, Pos: [165, 186] cc => I, Pos: [169, 175, 176] ccc => cc]

--------End Timer [Generate Plans]:  0.03124833106994629

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 28] cc => I,
 Pos: [39, 49] cc => I,
 Pos: [56, 59, 65] ccc => cc,
 Pos: [61, 79] cc => I,
 Pos: [70, 74, 78] ccc => cc,
 Pos: [77, 81] cc => I,
 Pos: [80, 103] cc => I,
 Pos: [89, 97, 107] ccc => cc,
 Pos: [96, 130] cc => I,
 Pos: [140, 149, 150] ccc => cc,
 Pos: [145, 155] cc => I,
 Pos: [156, 163, 178] ccc => cc,
 Pos: [162, 188] cc => I,
 Pos: [165, 186] cc => I,
 Pos: [169, 175, 176] ccc => cc]
Change: 15, Saving: 15

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 28] cc => I
Apply:  Pos: [39, 49] cc => I
Apply:  Pos: [56, 59, 65] ccc => cc
Apply:  Pos: [61, 79] cc => I
Apply:  Pos: [70, 74, 78] ccc => cc
Apply:  Pos: [77, 81] cc => I
Apply:  Pos: [80, 103] cc => I
Apply:  Pos: [89, 97, 107] ccc => cc
Apply:  Pos: [96, 130] cc => I
Apply:  Pos: [140, 149, 150] ccc => cc
Apply:  Pos: [145, 155] cc => I
Apply:  Pos: [156, 163, 178] ccc => cc
Apply:  Pos: [162, 188] cc => I
Apply:  Pos: [165, 186] cc => I
Apply:  Pos: [169, 175, 176] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [4, 16], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [8, 3], [7, 19], [10, 1], [1, 15], [9, 2], [14, 19], [6, 5], [5, 18], [17, 0], [4, 16], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [8, 3], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 2], [8, 3], [5, 18], [1, 6], [9, 16], [15, 0], [15, 17], [1, 11], [5, 13], [3, 10], [1, 15], [10, 1], [4, 16], [2, 12], [17, 0], [7, 11], [19, 5], [4, 17], [7, 19], [14, 11], [9, 2], [5, 13], [8, 3], [12, 17], [3, 1], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [10, 1], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  4.1253135204315186

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[47, 72]
[63, 78]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[121, 134, 141]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[61, 67, 73]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[47, 72]
[63, 78]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5941402912139893

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [47, 72] cc => I, Pos: [47, 72] cc => I, Pos: [61, 67, 73] ccc => cc, Pos: [63, 78] cc => I, Pos: [63, 78] cc => I, Pos: [121, 134, 141] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [47, 72] cc => I,
 Pos: [61, 67, 73] ccc => cc,
 Pos: [63, 78] cc => I,
 Pos: [121, 134, 141] ccc => cc]
Change: 4, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [47, 72] cc => I
Apply:  Pos: [61, 67, 73] ccc => cc
Apply:  Pos: [63, 78] cc => I
Apply:  Pos: [121, 134, 141] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [7, 19], [10, 1], [1, 15], [2, 12], [14, 19], [6, 5], [5, 18], [17, 0], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 12], [8, 3], [5, 18], [1, 6], [9, 16], [15, 17], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [10, 1], [4, 16], [2, 12], [17, 0], [7, 11], [19, 5], [4, 17], [7, 19], [14, 11], [5, 13], [8, 3], [12, 17], [3, 1], [11, 19], [10, 2], [10, 1], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [10, 1], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.5941402912139893

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.437769651412964

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [7, 19], [10, 1], [1, 15], [2, 12], [14, 19], [6, 5], [5, 18], [17, 0], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 12], [8, 3], [5, 18], [1, 6], [9, 16], [15, 0], [15, 17], [1, 11], [5, 13], [3, 10], [1, 15], [10, 1], [4, 16], [2, 12], [17, 0], [7, 11], [19, 5], [4, 17], [7, 19], [14, 11], [5, 13], [8, 3], [12, 17], [3, 1], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [10, 1], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.437769651412964

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [193] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 386

Reduced: 
 - size: 167 (46.39%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061570167541504

[3, 10], [8, 9], [12, 17], [4, 16], [19, 5], [0, 13], [7, 14], [1, 6], [11, 15], [10, 1], [15, 17], [4, 16], [19, 5], [2, 12], [11, 6], [7, 14], [1, 15], [8, 9], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [8, 9], [12, 0], [3, 1], [13, 18], [10, 2], [4, 16], [1, 15], [6, 5], [3, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [4, 16], [14, 11], [9, 12], [1, 6], [3, 10], [7, 19], [1, 15], [8, 3], [14, 11], [5, 13], [9, 12], [10, 7], [2, 4], [17, 0], [6, 18], [1, 15], [3, 10], [5, 13], [9, 4], [7, 11], [17, 0], [2, 12], [6, 18], [14, 19], [15, 17], [13, 18], [3, 2], [4, 16], [10, 7], [14, 19], [11, 6], [12, 0], [8, 9], [15, 17], [2, 12], [11, 6], [8, 3], [7, 14], [10, 1], [5, 13], [4, 16], [15, 17], [14, 11], [8, 3], [5, 13], [2, 12], [6, 18], [4, 16], [7, 19], [10, 1], [12, 15], [2, 1], [9, 4], [11, 6], [0, 13], [7, 19], [3, 10], [15, 17], [7, 11], [2, 12], [5, 13], [8, 3], [14, 19], [9, 4], [10, 1], [1, 15], [11, 6], [9, 2], [7, 14], [16, 17], [3, 10], [1, 15], [12, 0], [3, 2], [6, 5], [9, 4], [13, 18], [14, 19], [1, 15], [5, 18], [16, 17], [11, 6], [12, 0], [3, 2], [7, 14], [9, 4], [1, 15], [3, 10], [8, 9], [14, 19], [13, 18], [17, 0], [11, 6], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [6, 18], [14, 19], [12, 17], [11, 15], [6, 18], [3, 1], [5, 13], [10, 7], [17, 0], [9, 2], [4, 12], [11, 15], [12, 0], [6, 5], [7, 14], [10, 1], [9, 2], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [10, 1], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [14, 19], [6, 13], [9, 4], [16, 17], [5, 18], [10, 2], [7, 11], [14, 19], [16, 17], [13, 18], [9, 4], [3, 2], [1, 15], [7, 11], [12, 0], [19, 5], [6, 18], [2, 4], [1, 15], [3, 10], [8, 9], [7, 19], [1, 11], [10, 2], [15, 0], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [11, 19], [6, 18], [5, 13], [4, 12], [16, 17], [15, 0], [7, 14], [3, 1], [10, 2], [11, 19], [10, 1], [4, 16], [6, 13], [12, 0], [5, 18], [9, 2], [8, 3], [19, 5], [1, 6], [9, 4], [15, 17], [2, 12], [7, 14], [8, 3], [5, 18], [4, 16], [8, 3], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [8, 9], [6, 18], [3, 10], [7, 14], [17, 0], [4, 16], [1, 15], [2, 12], [13, 18], [2, 12], [11, 15], [7, 19], [17, 0], [8, 9], [10, 1], [4, 16], [13, 18], [9, 4], [2, 12], [17, 0], [11, 15], [7, 14], [10, 1], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [5, 18], [4, 16], [12, 17], [3, 1], [7, 14], [15, 6], [8, 9], [11, 19], [10, 2], [5, 18], [10, 1], [7, 11], [14, 19], [17, 0], [15, 6], [9, 4], [8, 3], [2, 12], [19, 5], [17, 0], [6, 13], [3, 1], [11, 15], [9, 4], [2, 12], [14, 19], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [7, 19], [2, 12], [13, 18], [10, 1], [17, 0], [14, 11], [8, 9], [15, 6], [4, 16], [7, 14], [9, 4], [8, 3], [5, 18], [17, 0], [11, 6], [10, 1], [12, 15], [7, 14], [2, 12], [0, 13], [1, 11], [6, 18], [8, 3], [15, 17], [7, 19], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [12, 17], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 17], [4, 16], [15, 0], [10, 2], [12, 15], [6, 13], [19, 5], [4, 16], [1, 11], [7, 14], [3, 10], [15, 0], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[39, 47, 50]
[118, 127, 134]
[206, 212, 219]
[251, 263, 266]
[261, 267, 276]
[284, 290, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 108, 116]
[112, 118, 127]
[127, 134, 139]
[222, 225, 232]
[219, 227, 233]
[343, 345, 352]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[33, 43, 51]
[38, 42, 54]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.266313791275024

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 17] cc => I, Pos: [1, 17] cc => I, Pos: [3, 11] cc => I, Pos: [3, 11] cc => I, Pos: [4, 12] cc => I, Pos: [4, 12] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 34] cc => I, Pos: [24, 34] cc => I, Pos: [33, 43, 51] ccc => cc, Pos: [34, 44] cc => I, Pos: [34, 44] cc => I, Pos: [38, 42, 54] ccc => cc, Pos: [39, 47, 50] ccc => cc, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [52, 60] cc => I, Pos: [52, 60] cc => I, Pos: [56, 65] cc => I, Pos: [56, 65] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [63, 70] cc => I, Pos: [63, 70] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [77, 90] cc => I, Pos: [77, 90] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [84, 95] cc => I, Pos: [84, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 99] cc => I, Pos: [88, 99] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [90, 97] cc => I, Pos: [90, 97] cc => I, Pos: [98, 105] cc => I, Pos: [98, 105] cc => I, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [103, 108, 116] ccc => cc, Pos: [112, 118, 127] ccc => cc, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [118, 127, 134] ccc => cc, Pos: [119, 130] cc => I, Pos: [119, 130] cc => I, Pos: [120, 137] cc => I, Pos: [120, 137] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [122, 132] cc => I, Pos: [122, 132] cc => I, Pos: [123, 133] cc => I, Pos: [123, 133] cc => I, Pos: [125, 135] cc => I, Pos: [125, 135] cc => I, Pos: [127, 134, 139] ccc => cc, Pos: [128, 136] cc => I, Pos: [128, 136] cc => I, Pos: [131, 142] cc => I, Pos: [131, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [139, 150] cc => I, Pos: [139, 150] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [152, 160] cc => I, Pos: [152, 160] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [181, 186] cc => I, Pos: [181, 186] cc => I, Pos: [184, 191] cc => I, Pos: [184, 191] cc => I, Pos: [190, 196] cc => I, Pos: [190, 196] cc => I, Pos: [201, 216] cc => I, Pos: [201, 216] cc => I, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [206, 212, 219] ccc => cc, Pos: [208, 217] cc => I, Pos: [208, 217] cc => I, Pos: [214, 230] cc => I, Pos: [214, 230] cc => I, Pos: [219, 227, 233] ccc => cc, Pos: [222, 225, 232] ccc => cc, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [229, 235] cc => I, Pos: [229, 235] cc => I, Pos: [230, 243] cc => I, Pos: [230, 243] cc => I, Pos: [231, 234] cc => I, Pos: [231, 234] cc => I, Pos: [233, 245] cc => I, Pos: [233, 245] cc => I, Pos: [235, 247] cc => I, Pos: [235, 247] cc => I, Pos: [236, 251] cc => I, Pos: [236, 251] cc => I, Pos: [240, 253] cc => I, Pos: [240, 253] cc => I, Pos: [243, 261] cc => I, Pos: [243, 261] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [247, 249] cc => I, Pos: [247, 249] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [249, 258] cc => I, Pos: [249, 258] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [251, 263, 266] ccc => cc, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [254, 262] cc => I, Pos: [254, 262] cc => I, Pos: [261, 267, 276] ccc => cc, Pos: [262, 268] cc => I, Pos: [262, 268] cc => I, Pos: [272, 281] cc => I, Pos: [272, 281] cc => I, Pos: [277, 286] cc => I, Pos: [277, 286] cc => I, Pos: [284, 290, 297] ccc => cc, Pos: [285, 291] cc => I, Pos: [285, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [303, 308] cc => I, Pos: [303, 308] cc => I, Pos: [305, 329] cc => I, Pos: [305, 329] cc => I, Pos: [308, 320] cc => I, Pos: [308, 320] cc => I, Pos: [309, 318] cc => I, Pos: [309, 318] cc => I, Pos: [314, 322] cc => I, Pos: [314, 322] cc => I, Pos: [316, 327] cc => I, Pos: [316, 327] cc => I, Pos: [335, 341] cc => I, Pos: [335, 341] cc => I, Pos: [342, 348] cc => I, Pos: [342, 348] cc => I, Pos: [343, 345, 352] ccc => cc]

--------End Timer [Generate Plans]:  0.18748736381530762

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 17] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [24, 34] cc => I,
 Pos: [33, 43, 51] ccc => cc,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [77, 90] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [102, 113] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [127, 134, 139] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [125, 135] cc => I,
 Pos: [128, 136] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [206, 212, 219] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [214, 230] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [224, 231] cc => I,
 Pos: [229, 235] cc => I,
 Pos: [233, 245] cc => I,
 Pos: [251, 263, 266] ccc => cc,
 Pos: [240, 253] cc => I,
 Pos: [243, 261] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [249, 258] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [254, 262] cc => I,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [303, 308] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 73, Saving: 75

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 17] cc => I
Apply:  Pos: [3, 11] cc => I
Apply:  Pos: [4, 12] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [24, 34] cc => I
Apply:  Pos: [33, 43, 51] ccc => cc
Apply:  Pos: [38, 42, 54] ccc => cc
Apply:  Pos: [39, 47, 50] ccc => cc
Apply:  Pos: [52, 60] cc => I
Apply:  Pos: [56, 65] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [63, 70] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [77, 90] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [84, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 99] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [98, 105] cc => I
Apply:  Pos: [102, 113] cc => I
Apply:  Pos: [103, 108, 116] ccc => cc
Apply:  Pos: [127, 134, 139] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [119, 130] cc => I
Apply:  Pos: [120, 137] cc => I
Apply:  Pos: [122, 132] cc => I
Apply:  Pos: [123, 133] cc => I
Apply:  Pos: [125, 135] cc => I
Apply:  Pos: [128, 136] cc => I
Apply:  Pos: [131, 142] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [152, 160] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [181, 186] cc => I
Apply:  Pos: [184, 191] cc => I
Apply:  Pos: [190, 196] cc => I
Apply:  Pos: [201, 216] cc => I
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [206, 212, 219] ccc => cc
Apply:  Pos: [208, 217] cc => I
Apply:  Pos: [214, 230] cc => I
Apply:  Pos: [222, 225, 232] ccc => cc
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [229, 235] cc => I
Apply:  Pos: [233, 245] cc => I
Apply:  Pos: [251, 263, 266] ccc => cc
Apply:  Pos: [240, 253] cc => I
Apply:  Pos: [243, 261] cc => I
Apply:  Pos: [244, 252] cc => I
Apply:  Pos: [249, 258] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [254, 262] cc => I
Apply:  Pos: [272, 281] cc => I
Apply:  Pos: [277, 286] cc => I
Apply:  Pos: [284, 290, 297] ccc => cc
Apply:  Pos: [285, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [303, 308] cc => I
Apply:  Pos: [305, 329] cc => I
Apply:  Pos: [309, 318] cc => I
Apply:  Pos: [314, 322] cc => I
Apply:  Pos: [316, 327] cc => I
Apply:  Pos: [335, 341] cc => I
Apply:  Pos: [342, 348] cc => I
Apply:  Pos: [343, 345, 352] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [3, 10], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [13, 18], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [15, 17], [14, 11], [6, 18], [4, 16], [12, 15], [2, 1], [7, 11], [0, 13], [3, 10], [15, 17], [11, 6], [2, 12], [5, 13], [8, 3], [14, 19], [10, 1], [9, 2], [7, 14], [6, 5], [13, 18], [7, 14], [5, 18], [14, 19], [8, 9], [13, 18], [17, 0], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [14, 19], [12, 17], [3, 1], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 2], [5, 18], [1, 6], [9, 4], [15, 17], [8, 3], [7, 19], [15, 0], [1, 11], [5, 13], [6, 18], [3, 10], [1, 15], [2, 12], [7, 5], [4, 16], [9, 4], [17, 0], [19, 5], [6, 18], [4, 12], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [4, 16], [12, 17], [3, 1], [7, 14], [8, 9], [11, 19], [10, 2], [10, 1], [7, 11], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [8, 9], [15, 6], [4, 16], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  7.453801155090332

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 28]
[39, 50]
[73, 76]
[59, 82]
[78, 88]
[79, 104]
[104, 119]
[146, 155]
[166, 186]
[162, 188]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[139, 151, 152]
[170, 176, 177]
[156, 163, 179]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 60, 65]
[90, 98, 108]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 28]
[39, 50]
[73, 76]
[59, 82]
[78, 88]
[79, 104]
[104, 119]
[146, 155]
[166, 186]
[162, 188]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.211843013763428

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 28] cc => I, Pos: [19, 28] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [56, 60, 65] ccc => cc, Pos: [59, 82] cc => I, Pos: [59, 82] cc => I, Pos: [73, 76] cc => I, Pos: [73, 76] cc => I, Pos: [78, 88] cc => I, Pos: [78, 88] cc => I, Pos: [79, 104] cc => I, Pos: [79, 104] cc => I, Pos: [90, 98, 108] ccc => cc, Pos: [104, 119] cc => I, Pos: [104, 119] cc => I, Pos: [139, 151, 152] ccc => cc, Pos: [146, 155] cc => I, Pos: [146, 155] cc => I, Pos: [156, 163, 179] ccc => cc, Pos: [162, 188] cc => I, Pos: [162, 188] cc => I, Pos: [166, 186] cc => I, Pos: [166, 186] cc => I, Pos: [170, 176, 177] ccc => cc]

--------End Timer [Generate Plans]:  0.031243085861206055

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 28] cc => I,
 Pos: [39, 50] cc => I,
 Pos: [56, 60, 65] ccc => cc,
 Pos: [59, 82] cc => I,
 Pos: [73, 76] cc => I,
 Pos: [78, 88] cc => I,
 Pos: [104, 119] cc => I,
 Pos: [90, 98, 108] ccc => cc,
 Pos: [139, 151, 152] ccc => cc,
 Pos: [146, 155] cc => I,
 Pos: [156, 163, 179] ccc => cc,
 Pos: [162, 188] cc => I,
 Pos: [166, 186] cc => I,
 Pos: [170, 176, 177] ccc => cc]
Change: 14, Saving: 14

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 28] cc => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [56, 60, 65] ccc => cc
Apply:  Pos: [59, 82] cc => I
Apply:  Pos: [73, 76] cc => I
Apply:  Pos: [78, 88] cc => I
Apply:  Pos: [104, 119] cc => I
Apply:  Pos: [90, 98, 108] ccc => cc
Apply:  Pos: [139, 151, 152] ccc => cc
Apply:  Pos: [146, 155] cc => I
Apply:  Pos: [156, 163, 179] ccc => cc
Apply:  Pos: [162, 188] cc => I
Apply:  Pos: [166, 186] cc => I
Apply:  Pos: [170, 176, 177] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [8, 3], [14, 19], [10, 1], [9, 2], [6, 5], [13, 18], [5, 18], [8, 9], [13, 18], [17, 0], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [8, 3], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 2], [5, 18], [1, 6], [9, 16], [15, 17], [8, 3], [7, 19], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [2, 12], [7, 5], [4, 16], [17, 0], [19, 5], [4, 17], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  4.243086099624634

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 71]
[63, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[122, 134, 142]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[69, 71]
[63, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7034530639648438

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [63, 79] cc => I, Pos: [63, 79] cc => I, Pos: [69, 71] cc => I, Pos: [69, 71] cc => I, Pos: [122, 134, 142] ccc => cc]

--------End Timer [Generate Plans]:  0.01561117172241211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [63, 79] cc => I, Pos: [69, 71] cc => I, Pos: [122, 134, 142] ccc => cc]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [63, 79] cc => I
Apply:  Pos: [69, 71] cc => I
Apply:  Pos: [122, 134, 142] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [14, 19], [10, 1], [9, 2], [6, 5], [5, 18], [8, 9], [17, 0], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 12], [5, 18], [1, 6], [9, 16], [15, 17], [8, 3], [7, 19], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [2, 12], [7, 5], [4, 16], [17, 0], [19, 5], [4, 17], [14, 11], [10, 1], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 2], [10, 1], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.719064235687256

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5941944122314453

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [14, 19], [10, 1], [9, 2], [6, 5], [5, 18], [8, 9], [17, 0], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 12], [5, 18], [1, 6], [9, 16], [15, 17], [8, 3], [7, 19], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [2, 12], [7, 5], [4, 16], [17, 0], [19, 5], [4, 17], [14, 11], [10, 1], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.5941944122314453

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [196] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 392

Reduced: 
 - size: 164 (45.56%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14060187339782715

[3, 10], [8, 9], [12, 17], [4, 16], [19, 5], [0, 13], [7, 14], [1, 6], [11, 15], [10, 1], [15, 17], [4, 16], [19, 5], [2, 12], [11, 6], [7, 14], [1, 15], [8, 9], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [8, 9], [12, 0], [3, 1], [13, 18], [10, 2], [4, 16], [1, 15], [6, 5], [3, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [4, 16], [14, 11], [9, 12], [1, 6], [3, 10], [7, 19], [1, 15], [8, 3], [14, 11], [5, 13], [9, 12], [10, 7], [2, 4], [17, 0], [6, 18], [1, 15], [3, 10], [5, 13], [9, 4], [7, 11], [17, 0], [2, 12], [6, 18], [14, 19], [15, 17], [13, 18], [3, 2], [4, 16], [10, 7], [14, 19], [11, 6], [12, 0], [8, 9], [15, 17], [2, 12], [11, 6], [8, 3], [7, 14], [10, 1], [5, 13], [4, 16], [15, 17], [14, 11], [8, 3], [5, 13], [2, 12], [6, 18], [4, 16], [7, 19], [10, 1], [12, 15], [2, 1], [9, 4], [11, 6], [0, 13], [7, 19], [3, 10], [15, 17], [7, 11], [2, 12], [5, 13], [8, 3], [14, 19], [9, 4], [10, 1], [1, 15], [11, 6], [9, 2], [7, 14], [16, 17], [3, 10], [1, 15], [12, 0], [3, 2], [6, 5], [9, 4], [13, 18], [14, 19], [1, 15], [5, 18], [16, 17], [11, 6], [12, 0], [3, 2], [7, 14], [9, 4], [1, 15], [3, 10], [8, 9], [14, 19], [13, 18], [17, 0], [11, 6], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [6, 18], [14, 19], [12, 17], [11, 15], [6, 18], [3, 1], [5, 13], [10, 7], [17, 0], [9, 2], [4, 12], [11, 15], [12, 0], [6, 5], [7, 14], [10, 1], [9, 2], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [10, 1], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [14, 19], [6, 13], [9, 4], [16, 17], [5, 18], [10, 2], [7, 11], [14, 19], [16, 17], [13, 18], [9, 4], [3, 2], [1, 15], [7, 11], [12, 0], [19, 5], [6, 18], [2, 4], [1, 15], [3, 10], [8, 9], [7, 19], [1, 11], [10, 2], [15, 0], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [11, 19], [6, 18], [5, 13], [4, 12], [16, 17], [15, 0], [7, 14], [3, 1], [10, 2], [11, 19], [10, 1], [4, 16], [6, 13], [12, 0], [5, 18], [9, 2], [8, 3], [19, 5], [1, 6], [9, 4], [15, 17], [2, 12], [7, 14], [8, 3], [5, 18], [4, 16], [8, 3], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [8, 9], [6, 18], [3, 10], [7, 14], [17, 0], [4, 16], [1, 15], [2, 12], [13, 18], [2, 12], [11, 15], [7, 19], [17, 0], [8, 9], [10, 1], [4, 16], [13, 18], [9, 4], [2, 12], [17, 0], [11, 15], [7, 14], [10, 1], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [5, 18], [4, 16], [12, 17], [3, 1], [7, 14], [15, 6], [8, 9], [11, 19], [10, 2], [5, 18], [10, 1], [7, 11], [14, 19], [17, 0], [15, 6], [9, 4], [8, 3], [2, 12], [19, 5], [17, 0], [6, 13], [3, 1], [11, 15], [9, 4], [2, 12], [14, 19], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [7, 19], [2, 12], [13, 18], [10, 1], [17, 0], [14, 11], [8, 9], [15, 6], [4, 16], [7, 14], [9, 4], [8, 3], [5, 18], [17, 0], [11, 6], [10, 1], [12, 15], [7, 14], [2, 12], [0, 13], [1, 11], [6, 18], [8, 3], [15, 17], [7, 19], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [12, 17], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 17], [4, 16], [15, 0], [10, 2], [12, 15], [6, 13], [19, 5], [4, 16], [1, 11], [7, 14], [3, 10], [15, 0], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[39, 47, 50]
[118, 127, 134]
[206, 212, 219]
[251, 263, 266]
[261, 267, 276]
[284, 290, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 108, 116]
[112, 118, 127]
[127, 134, 139]
[222, 225, 232]
[219, 227, 233]
[343, 345, 352]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[33, 43, 51]
[38, 42, 54]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.218728303909302

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 17] cc => I, Pos: [1, 17] cc => I, Pos: [3, 11] cc => I, Pos: [3, 11] cc => I, Pos: [4, 12] cc => I, Pos: [4, 12] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 34] cc => I, Pos: [24, 34] cc => I, Pos: [33, 43, 51] ccc => cc, Pos: [34, 44] cc => I, Pos: [34, 44] cc => I, Pos: [38, 42, 54] ccc => cc, Pos: [39, 47, 50] ccc => cc, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [52, 60] cc => I, Pos: [52, 60] cc => I, Pos: [56, 65] cc => I, Pos: [56, 65] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [63, 70] cc => I, Pos: [63, 70] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [77, 90] cc => I, Pos: [77, 90] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [84, 95] cc => I, Pos: [84, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 99] cc => I, Pos: [88, 99] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [90, 97] cc => I, Pos: [90, 97] cc => I, Pos: [98, 105] cc => I, Pos: [98, 105] cc => I, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [103, 108, 116] ccc => cc, Pos: [112, 118, 127] ccc => cc, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [118, 127, 134] ccc => cc, Pos: [119, 130] cc => I, Pos: [119, 130] cc => I, Pos: [120, 137] cc => I, Pos: [120, 137] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [122, 132] cc => I, Pos: [122, 132] cc => I, Pos: [123, 133] cc => I, Pos: [123, 133] cc => I, Pos: [125, 135] cc => I, Pos: [125, 135] cc => I, Pos: [127, 134, 139] ccc => cc, Pos: [128, 136] cc => I, Pos: [128, 136] cc => I, Pos: [131, 142] cc => I, Pos: [131, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [139, 150] cc => I, Pos: [139, 150] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [152, 160] cc => I, Pos: [152, 160] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [181, 186] cc => I, Pos: [181, 186] cc => I, Pos: [184, 191] cc => I, Pos: [184, 191] cc => I, Pos: [190, 196] cc => I, Pos: [190, 196] cc => I, Pos: [201, 216] cc => I, Pos: [201, 216] cc => I, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [206, 212, 219] ccc => cc, Pos: [208, 217] cc => I, Pos: [208, 217] cc => I, Pos: [214, 230] cc => I, Pos: [214, 230] cc => I, Pos: [219, 227, 233] ccc => cc, Pos: [222, 225, 232] ccc => cc, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [229, 235] cc => I, Pos: [229, 235] cc => I, Pos: [230, 243] cc => I, Pos: [230, 243] cc => I, Pos: [231, 234] cc => I, Pos: [231, 234] cc => I, Pos: [233, 245] cc => I, Pos: [233, 245] cc => I, Pos: [235, 247] cc => I, Pos: [235, 247] cc => I, Pos: [236, 251] cc => I, Pos: [236, 251] cc => I, Pos: [240, 253] cc => I, Pos: [240, 253] cc => I, Pos: [243, 261] cc => I, Pos: [243, 261] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [247, 249] cc => I, Pos: [247, 249] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [249, 258] cc => I, Pos: [249, 258] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [251, 263, 266] ccc => cc, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [254, 262] cc => I, Pos: [254, 262] cc => I, Pos: [261, 267, 276] ccc => cc, Pos: [262, 268] cc => I, Pos: [262, 268] cc => I, Pos: [272, 281] cc => I, Pos: [272, 281] cc => I, Pos: [277, 286] cc => I, Pos: [277, 286] cc => I, Pos: [284, 290, 297] ccc => cc, Pos: [285, 291] cc => I, Pos: [285, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [303, 308] cc => I, Pos: [303, 308] cc => I, Pos: [305, 329] cc => I, Pos: [305, 329] cc => I, Pos: [308, 320] cc => I, Pos: [308, 320] cc => I, Pos: [309, 318] cc => I, Pos: [309, 318] cc => I, Pos: [314, 322] cc => I, Pos: [314, 322] cc => I, Pos: [316, 327] cc => I, Pos: [316, 327] cc => I, Pos: [335, 341] cc => I, Pos: [335, 341] cc => I, Pos: [342, 348] cc => I, Pos: [342, 348] cc => I, Pos: [343, 345, 352] ccc => cc]

--------End Timer [Generate Plans]:  0.1875009536743164

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 17] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [34, 44] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [83, 91] cc => I,
 Pos: [90, 97] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [113, 125] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [127, 134, 139] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [206, 212, 219] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [230, 243] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [224, 231] cc => I,
 Pos: [235, 247] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [236, 251] cc => I,
 Pos: [240, 253] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [249, 258] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [254, 262] cc => I,
 Pos: [261, 267, 276] ccc => cc,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [303, 308] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 72, Saving: 75

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 17] cc => I
Apply:  Pos: [3, 11] cc => I
Apply:  Pos: [4, 12] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [34, 44] cc => I
Apply:  Pos: [51, 58] cc => I
Apply:  Pos: [38, 42, 54] ccc => cc
Apply:  Pos: [39, 47, 50] ccc => cc
Apply:  Pos: [52, 60] cc => I
Apply:  Pos: [56, 65] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [63, 70] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [83, 91] cc => I
Apply:  Pos: [90, 97] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [84, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 99] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [98, 105] cc => I
Apply:  Pos: [113, 125] cc => I
Apply:  Pos: [103, 108, 116] ccc => cc
Apply:  Pos: [127, 134, 139] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [119, 130] cc => I
Apply:  Pos: [120, 137] cc => I
Apply:  Pos: [122, 132] cc => I
Apply:  Pos: [123, 133] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [131, 142] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [152, 160] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [181, 186] cc => I
Apply:  Pos: [184, 191] cc => I
Apply:  Pos: [190, 196] cc => I
Apply:  Pos: [201, 216] cc => I
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [206, 212, 219] ccc => cc
Apply:  Pos: [208, 217] cc => I
Apply:  Pos: [230, 243] cc => I
Apply:  Pos: [222, 225, 232] ccc => cc
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [235, 247] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [236, 251] cc => I
Apply:  Pos: [240, 253] cc => I
Apply:  Pos: [244, 252] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [249, 258] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [254, 262] cc => I
Apply:  Pos: [261, 267, 276] ccc => cc
Apply:  Pos: [272, 281] cc => I
Apply:  Pos: [277, 286] cc => I
Apply:  Pos: [284, 290, 297] ccc => cc
Apply:  Pos: [285, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [303, 308] cc => I
Apply:  Pos: [305, 329] cc => I
Apply:  Pos: [309, 318] cc => I
Apply:  Pos: [314, 322] cc => I
Apply:  Pos: [316, 327] cc => I
Apply:  Pos: [335, 341] cc => I
Apply:  Pos: [342, 348] cc => I
Apply:  Pos: [343, 345, 352] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [3, 10], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [15, 17], [13, 18], [3, 2], [4, 16], [10, 7], [12, 0], [8, 9], [7, 14], [14, 11], [6, 18], [12, 15], [2, 1], [9, 4], [7, 11], [0, 13], [3, 10], [15, 17], [11, 6], [2, 12], [5, 13], [8, 3], [14, 19], [10, 1], [9, 2], [7, 14], [6, 5], [13, 18], [7, 14], [1, 15], [5, 18], [14, 19], [9, 4], [8, 9], [13, 18], [17, 0], [4, 16], [2, 12], [0, 13], [10, 2], [7, 11], [14, 19], [12, 17], [3, 1], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [7, 14], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 2], [5, 18], [1, 6], [9, 4], [15, 17], [2, 12], [4, 16], [8, 3], [15, 0], [1, 11], [5, 13], [6, 18], [3, 10], [1, 15], [9, 4], [17, 0], [7, 11], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [4, 16], [12, 17], [3, 1], [8, 9], [11, 19], [10, 2], [10, 1], [7, 11], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [8, 9], [15, 6], [4, 16], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  7.406229257583618

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 29]
[39, 50]
[73, 76]
[61, 80]
[79, 89]
[81, 105]
[105, 120]
[98, 132]
[149, 156]
[167, 187]
[164, 189]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[141, 144, 152]
[171, 177, 178]
[157, 165, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[49, 59, 65]
[91, 99, 109]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 29]
[39, 50]
[73, 76]
[61, 80]
[79, 89]
[81, 105]
[105, 120]
[98, 132]
[149, 156]
[167, 187]
[164, 189]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.186896562576294

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [49, 59, 65] ccc => cc, Pos: [61, 80] cc => I, Pos: [61, 80] cc => I, Pos: [73, 76] cc => I, Pos: [73, 76] cc => I, Pos: [79, 89] cc => I, Pos: [79, 89] cc => I, Pos: [81, 105] cc => I, Pos: [81, 105] cc => I, Pos: [91, 99, 109] ccc => cc, Pos: [98, 132] cc => I, Pos: [98, 132] cc => I, Pos: [105, 120] cc => I, Pos: [105, 120] cc => I, Pos: [141, 144, 152] ccc => cc, Pos: [149, 156] cc => I, Pos: [149, 156] cc => I, Pos: [157, 165, 180] ccc => cc, Pos: [164, 189] cc => I, Pos: [164, 189] cc => I, Pos: [167, 187] cc => I, Pos: [167, 187] cc => I, Pos: [171, 177, 178] ccc => cc]

--------End Timer [Generate Plans]:  0.03124833106994629

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 29] cc => I,
 Pos: [39, 50] cc => I,
 Pos: [49, 59, 65] ccc => cc,
 Pos: [61, 80] cc => I,
 Pos: [73, 76] cc => I,
 Pos: [79, 89] cc => I,
 Pos: [81, 105] cc => I,
 Pos: [91, 99, 109] ccc => cc,
 Pos: [98, 132] cc => I,
 Pos: [141, 144, 152] ccc => cc,
 Pos: [149, 156] cc => I,
 Pos: [157, 165, 180] ccc => cc,
 Pos: [164, 189] cc => I,
 Pos: [167, 187] cc => I,
 Pos: [171, 177, 178] ccc => cc]
Change: 15, Saving: 15

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [49, 59, 65] ccc => cc
Apply:  Pos: [61, 80] cc => I
Apply:  Pos: [73, 76] cc => I
Apply:  Pos: [79, 89] cc => I
Apply:  Pos: [81, 105] cc => I
Apply:  Pos: [91, 99, 109] ccc => cc
Apply:  Pos: [98, 132] cc => I
Apply:  Pos: [141, 144, 152] ccc => cc
Apply:  Pos: [149, 156] cc => I
Apply:  Pos: [157, 165, 180] ccc => cc
Apply:  Pos: [164, 189] cc => I
Apply:  Pos: [167, 187] cc => I
Apply:  Pos: [171, 177, 178] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [12, 15], [3, 2], [4, 16], [10, 7], [12, 0], [8, 9], [7, 14], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [8, 3], [14, 19], [10, 1], [9, 2], [6, 5], [13, 18], [1, 15], [5, 18], [13, 18], [17, 0], [4, 16], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [8, 3], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 2], [5, 18], [1, 6], [9, 16], [15, 17], [2, 12], [4, 16], [8, 3], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [17, 0], [7, 11], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [12, 17], [3, 1], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  4.21814489364624

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]
[48, 73]
[63, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[122, 127, 142]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[61, 66, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[68, 70]
[48, 73]
[63, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6720311641693115

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 73] cc => I, Pos: [48, 73] cc => I, Pos: [61, 66, 74] ccc => cc, Pos: [63, 79] cc => I, Pos: [63, 79] cc => I, Pos: [68, 70] cc => I, Pos: [68, 70] cc => I, Pos: [122, 127, 142] ccc => cc]

--------End Timer [Generate Plans]:  0.015505790710449219

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 73] cc => I,
 Pos: [61, 66, 74] ccc => cc,
 Pos: [63, 79] cc => I,
 Pos: [68, 70] cc => I,
 Pos: [122, 127, 142] ccc => cc]
Change: 5, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 73] cc => I
Apply:  Pos: [61, 66, 74] ccc => cc
Apply:  Pos: [63, 79] cc => I
Apply:  Pos: [68, 70] cc => I
Apply:  Pos: [122, 127, 142] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [12, 15], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [14, 19], [10, 1], [2, 12], [6, 5], [1, 15], [5, 18], [17, 0], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 12], [5, 18], [1, 6], [9, 16], [15, 17], [2, 12], [4, 16], [8, 3], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [17, 0], [7, 11], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [5, 13], [8, 3], [12, 17], [3, 1], [11, 19], [10, 2], [10, 1], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.6875369548797607

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.469003915786743

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [12, 15], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [14, 19], [10, 1], [2, 12], [6, 5], [1, 15], [5, 18], [17, 0], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 12], [5, 18], [1, 6], [9, 16], [15, 17], [2, 12], [4, 16], [8, 3], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [17, 0], [7, 11], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [5, 13], [8, 3], [12, 17], [3, 1], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.469003915786743

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [192] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 384

Reduced: 
 - size: 168 (46.67%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14104866981506348

[3, 10], [8, 9], [12, 17], [4, 16], [19, 5], [0, 13], [7, 14], [1, 6], [11, 15], [10, 1], [15, 17], [4, 16], [19, 5], [2, 12], [11, 6], [7, 14], [1, 15], [8, 9], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [8, 9], [12, 0], [3, 1], [13, 18], [10, 2], [4, 16], [1, 15], [6, 5], [3, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [4, 16], [14, 11], [9, 12], [1, 6], [3, 10], [7, 19], [1, 15], [8, 3], [14, 11], [5, 13], [9, 12], [10, 7], [2, 4], [17, 0], [6, 18], [1, 15], [3, 10], [5, 13], [9, 4], [7, 11], [17, 0], [2, 12], [6, 18], [14, 19], [15, 17], [13, 18], [3, 2], [4, 16], [10, 7], [14, 19], [11, 6], [12, 0], [8, 9], [15, 17], [2, 12], [11, 6], [8, 3], [7, 14], [10, 1], [5, 13], [4, 16], [15, 17], [14, 11], [8, 3], [5, 13], [2, 12], [6, 18], [4, 16], [7, 19], [10, 1], [12, 15], [2, 1], [9, 4], [11, 6], [0, 13], [7, 19], [3, 10], [15, 17], [7, 11], [2, 12], [5, 13], [8, 3], [14, 19], [9, 4], [10, 1], [1, 15], [11, 6], [9, 2], [7, 14], [16, 17], [3, 10], [1, 15], [12, 0], [3, 2], [6, 5], [9, 4], [13, 18], [14, 19], [1, 15], [5, 18], [16, 17], [11, 6], [12, 0], [3, 2], [7, 14], [9, 4], [1, 15], [3, 10], [8, 9], [14, 19], [13, 18], [17, 0], [11, 6], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [6, 18], [14, 19], [12, 17], [11, 15], [6, 18], [3, 1], [5, 13], [10, 7], [17, 0], [9, 2], [4, 12], [11, 15], [12, 0], [6, 5], [7, 14], [10, 1], [9, 2], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [10, 1], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [14, 19], [6, 13], [9, 4], [16, 17], [5, 18], [10, 2], [7, 11], [14, 19], [16, 17], [13, 18], [9, 4], [3, 2], [1, 15], [7, 11], [12, 0], [19, 5], [6, 18], [2, 4], [1, 15], [3, 10], [8, 9], [7, 19], [1, 11], [10, 2], [15, 0], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [11, 19], [6, 18], [5, 13], [4, 12], [16, 17], [15, 0], [7, 14], [3, 1], [10, 2], [11, 19], [10, 1], [4, 16], [6, 13], [12, 0], [5, 18], [9, 2], [8, 3], [19, 5], [1, 6], [9, 4], [15, 17], [2, 12], [7, 14], [8, 3], [5, 18], [4, 16], [8, 3], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [8, 9], [6, 18], [3, 10], [7, 14], [17, 0], [4, 16], [1, 15], [2, 12], [13, 18], [2, 12], [11, 15], [7, 19], [17, 0], [8, 9], [10, 1], [4, 16], [13, 18], [9, 4], [2, 12], [17, 0], [11, 15], [7, 14], [10, 1], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [5, 18], [4, 16], [12, 17], [3, 1], [7, 14], [15, 6], [8, 9], [11, 19], [10, 2], [5, 18], [10, 1], [7, 11], [14, 19], [17, 0], [15, 6], [9, 4], [8, 3], [2, 12], [19, 5], [17, 0], [6, 13], [3, 1], [11, 15], [9, 4], [2, 12], [14, 19], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [7, 19], [2, 12], [13, 18], [10, 1], [17, 0], [14, 11], [8, 9], [15, 6], [4, 16], [7, 14], [9, 4], [8, 3], [5, 18], [17, 0], [11, 6], [10, 1], [12, 15], [7, 14], [2, 12], [0, 13], [1, 11], [6, 18], [8, 3], [15, 17], [7, 19], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [12, 17], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 17], [4, 16], [15, 0], [10, 2], [12, 15], [6, 13], [19, 5], [4, 16], [1, 11], [7, 14], [3, 10], [15, 0], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[39, 47, 50]
[118, 127, 134]
[206, 212, 219]
[251, 263, 266]
[261, 267, 276]
[284, 290, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 108, 116]
[112, 118, 127]
[127, 134, 139]
[222, 225, 232]
[219, 227, 233]
[343, 345, 352]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[33, 43, 51]
[38, 42, 54]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.18703293800354

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 17] cc => I, Pos: [1, 17] cc => I, Pos: [3, 11] cc => I, Pos: [3, 11] cc => I, Pos: [4, 12] cc => I, Pos: [4, 12] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 34] cc => I, Pos: [24, 34] cc => I, Pos: [33, 43, 51] ccc => cc, Pos: [34, 44] cc => I, Pos: [34, 44] cc => I, Pos: [38, 42, 54] ccc => cc, Pos: [39, 47, 50] ccc => cc, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [52, 60] cc => I, Pos: [52, 60] cc => I, Pos: [56, 65] cc => I, Pos: [56, 65] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [63, 70] cc => I, Pos: [63, 70] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [77, 90] cc => I, Pos: [77, 90] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [84, 95] cc => I, Pos: [84, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 99] cc => I, Pos: [88, 99] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [90, 97] cc => I, Pos: [90, 97] cc => I, Pos: [98, 105] cc => I, Pos: [98, 105] cc => I, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [103, 108, 116] ccc => cc, Pos: [112, 118, 127] ccc => cc, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [118, 127, 134] ccc => cc, Pos: [119, 130] cc => I, Pos: [119, 130] cc => I, Pos: [120, 137] cc => I, Pos: [120, 137] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [122, 132] cc => I, Pos: [122, 132] cc => I, Pos: [123, 133] cc => I, Pos: [123, 133] cc => I, Pos: [125, 135] cc => I, Pos: [125, 135] cc => I, Pos: [127, 134, 139] ccc => cc, Pos: [128, 136] cc => I, Pos: [128, 136] cc => I, Pos: [131, 142] cc => I, Pos: [131, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [139, 150] cc => I, Pos: [139, 150] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [152, 160] cc => I, Pos: [152, 160] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [181, 186] cc => I, Pos: [181, 186] cc => I, Pos: [184, 191] cc => I, Pos: [184, 191] cc => I, Pos: [190, 196] cc => I, Pos: [190, 196] cc => I, Pos: [201, 216] cc => I, Pos: [201, 216] cc => I, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [206, 212, 219] ccc => cc, Pos: [208, 217] cc => I, Pos: [208, 217] cc => I, Pos: [214, 230] cc => I, Pos: [214, 230] cc => I, Pos: [219, 227, 233] ccc => cc, Pos: [222, 225, 232] ccc => cc, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [229, 235] cc => I, Pos: [229, 235] cc => I, Pos: [230, 243] cc => I, Pos: [230, 243] cc => I, Pos: [231, 234] cc => I, Pos: [231, 234] cc => I, Pos: [233, 245] cc => I, Pos: [233, 245] cc => I, Pos: [235, 247] cc => I, Pos: [235, 247] cc => I, Pos: [236, 251] cc => I, Pos: [236, 251] cc => I, Pos: [240, 253] cc => I, Pos: [240, 253] cc => I, Pos: [243, 261] cc => I, Pos: [243, 261] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [247, 249] cc => I, Pos: [247, 249] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [249, 258] cc => I, Pos: [249, 258] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [251, 263, 266] ccc => cc, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [254, 262] cc => I, Pos: [254, 262] cc => I, Pos: [261, 267, 276] ccc => cc, Pos: [262, 268] cc => I, Pos: [262, 268] cc => I, Pos: [272, 281] cc => I, Pos: [272, 281] cc => I, Pos: [277, 286] cc => I, Pos: [277, 286] cc => I, Pos: [284, 290, 297] ccc => cc, Pos: [285, 291] cc => I, Pos: [285, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [303, 308] cc => I, Pos: [303, 308] cc => I, Pos: [305, 329] cc => I, Pos: [305, 329] cc => I, Pos: [308, 320] cc => I, Pos: [308, 320] cc => I, Pos: [309, 318] cc => I, Pos: [309, 318] cc => I, Pos: [314, 322] cc => I, Pos: [314, 322] cc => I, Pos: [316, 327] cc => I, Pos: [316, 327] cc => I, Pos: [335, 341] cc => I, Pos: [335, 341] cc => I, Pos: [342, 348] cc => I, Pos: [342, 348] cc => I, Pos: [343, 345, 352] ccc => cc]

--------End Timer [Generate Plans]:  0.1875004768371582

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 17] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [34, 44] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [77, 90] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [102, 113] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [112, 118, 127] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [125, 135] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [139, 150] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [206, 212, 219] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [214, 230] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [231, 234] cc => I,
 Pos: [235, 247] cc => I,
 Pos: [233, 245] cc => I,
 Pos: [251, 263, 266] ccc => cc,
 Pos: [240, 253] cc => I,
 Pos: [261, 267, 276] ccc => cc,
 Pos: [244, 252] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [249, 258] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [262, 268] cc => I,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [308, 320] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 74, Saving: 77

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 17] cc => I
Apply:  Pos: [3, 11] cc => I
Apply:  Pos: [4, 12] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [34, 44] cc => I
Apply:  Pos: [51, 58] cc => I
Apply:  Pos: [38, 42, 54] ccc => cc
Apply:  Pos: [39, 47, 50] ccc => cc
Apply:  Pos: [52, 60] cc => I
Apply:  Pos: [56, 65] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [63, 70] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [77, 90] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [84, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 99] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [98, 105] cc => I
Apply:  Pos: [102, 113] cc => I
Apply:  Pos: [103, 108, 116] ccc => cc
Apply:  Pos: [112, 118, 127] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [119, 130] cc => I
Apply:  Pos: [120, 137] cc => I
Apply:  Pos: [122, 132] cc => I
Apply:  Pos: [123, 133] cc => I
Apply:  Pos: [125, 135] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [131, 142] cc => I
Apply:  Pos: [139, 150] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [152, 160] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [181, 186] cc => I
Apply:  Pos: [184, 191] cc => I
Apply:  Pos: [190, 196] cc => I
Apply:  Pos: [201, 216] cc => I
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [206, 212, 219] ccc => cc
Apply:  Pos: [208, 217] cc => I
Apply:  Pos: [214, 230] cc => I
Apply:  Pos: [222, 225, 232] ccc => cc
Apply:  Pos: [231, 234] cc => I
Apply:  Pos: [235, 247] cc => I
Apply:  Pos: [233, 245] cc => I
Apply:  Pos: [251, 263, 266] ccc => cc
Apply:  Pos: [240, 253] cc => I
Apply:  Pos: [261, 267, 276] ccc => cc
Apply:  Pos: [244, 252] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [249, 258] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [262, 268] cc => I
Apply:  Pos: [272, 281] cc => I
Apply:  Pos: [277, 286] cc => I
Apply:  Pos: [284, 290, 297] ccc => cc
Apply:  Pos: [285, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [308, 320] cc => I
Apply:  Pos: [305, 329] cc => I
Apply:  Pos: [309, 318] cc => I
Apply:  Pos: [314, 322] cc => I
Apply:  Pos: [316, 327] cc => I
Apply:  Pos: [335, 341] cc => I
Apply:  Pos: [342, 348] cc => I
Apply:  Pos: [343, 345, 352] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [3, 10], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [13, 18], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [15, 17], [14, 11], [6, 18], [4, 16], [12, 15], [2, 1], [7, 11], [0, 13], [3, 10], [15, 17], [11, 6], [2, 12], [5, 13], [8, 3], [7, 14], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [1, 15], [5, 18], [7, 14], [8, 9], [13, 18], [17, 0], [4, 16], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [3, 1], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 2], [8, 3], [5, 18], [1, 6], [9, 4], [15, 17], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [6, 18], [3, 10], [7, 14], [1, 15], [7, 5], [10, 1], [4, 16], [9, 4], [17, 0], [7, 11], [19, 5], [6, 18], [4, 12], [14, 11], [9, 2], [5, 13], [8, 3], [4, 16], [12, 17], [3, 1], [8, 9], [11, 19], [10, 2], [10, 1], [7, 11], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [2, 12], [13, 18], [14, 11], [8, 9], [15, 6], [4, 16], [9, 4], [5, 18], [11, 6], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  7.374533414840698

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 29]
[39, 49]
[58, 81]
[78, 101]
[101, 116]
[144, 155]
[164, 185]
[161, 187]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[69, 72, 77]
[137, 150, 151]
[168, 174, 175]
[156, 162, 177]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[55, 59, 64]
[87, 95, 105]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 29]
[39, 49]
[58, 81]
[78, 101]
[101, 116]
[144, 155]
[164, 185]
[161, 187]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.140618801116943

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [39, 49] cc => I, Pos: [39, 49] cc => I, Pos: [55, 59, 64] ccc => cc, Pos: [58, 81] cc => I, Pos: [58, 81] cc => I, Pos: [69, 72, 77] ccc => cc, Pos: [78, 101] cc => I, Pos: [78, 101] cc => I, Pos: [87, 95, 105] ccc => cc, Pos: [101, 116] cc => I, Pos: [101, 116] cc => I, Pos: [137, 150, 151] ccc => cc, Pos: [144, 155] cc => I, Pos: [144, 155] cc => I, Pos: [156, 162, 177] ccc => cc, Pos: [161, 187] cc => I, Pos: [161, 187] cc => I, Pos: [164, 185] cc => I, Pos: [164, 185] cc => I, Pos: [168, 174, 175] ccc => cc]

--------End Timer [Generate Plans]:  0.03124690055847168

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 29] cc => I,
 Pos: [39, 49] cc => I,
 Pos: [55, 59, 64] ccc => cc,
 Pos: [58, 81] cc => I,
 Pos: [69, 72, 77] ccc => cc,
 Pos: [101, 116] cc => I,
 Pos: [87, 95, 105] ccc => cc,
 Pos: [137, 150, 151] ccc => cc,
 Pos: [144, 155] cc => I,
 Pos: [156, 162, 177] ccc => cc,
 Pos: [161, 187] cc => I,
 Pos: [164, 185] cc => I,
 Pos: [168, 174, 175] ccc => cc]
Change: 13, Saving: 13

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [39, 49] cc => I
Apply:  Pos: [55, 59, 64] ccc => cc
Apply:  Pos: [58, 81] cc => I
Apply:  Pos: [69, 72, 77] ccc => cc
Apply:  Pos: [101, 116] cc => I
Apply:  Pos: [87, 95, 105] ccc => cc
Apply:  Pos: [137, 150, 151] ccc => cc
Apply:  Pos: [144, 155] cc => I
Apply:  Pos: [156, 162, 177] ccc => cc
Apply:  Pos: [161, 187] cc => I
Apply:  Pos: [164, 185] cc => I
Apply:  Pos: [168, 174, 175] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [8, 3], [7, 19], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [1, 15], [5, 18], [8, 9], [13, 18], [17, 0], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [8, 3], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 2], [8, 3], [5, 18], [1, 6], [9, 16], [15, 17], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [3, 10], [7, 14], [1, 15], [7, 5], [10, 1], [4, 16], [17, 0], [7, 11], [19, 5], [4, 17], [14, 11], [9, 2], [5, 13], [8, 3], [12, 17], [3, 1], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [10, 1], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  4.171865701675415

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[62, 79]
[86, 134]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[122, 128, 144]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[62, 79]
[86, 134]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.718751907348633

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [62, 79] cc => I, Pos: [62, 79] cc => I, Pos: [86, 134] cc => I, Pos: [86, 134] cc => I, Pos: [122, 128, 144] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [62, 79] cc => I, Pos: [86, 134] cc => I, Pos: [122, 128, 144] ccc => cc]
Change: 3, Saving: 3

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [62, 79] cc => I
Apply:  Pos: [86, 134] cc => I
Apply:  Pos: [122, 128, 144] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [7, 19], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [1, 15], [5, 18], [8, 9], [13, 18], [17, 0], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 12], [8, 3], [5, 18], [1, 6], [9, 16], [15, 17], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [7, 5], [10, 1], [4, 16], [17, 0], [7, 11], [19, 5], [4, 17], [14, 11], [5, 13], [8, 3], [12, 17], [3, 1], [11, 19], [10, 2], [10, 1], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [10, 1], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.718751907348633

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5943074226379395

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [7, 19], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [1, 15], [5, 18], [8, 9], [13, 18], [17, 0], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 12], [8, 3], [5, 18], [1, 6], [9, 16], [15, 17], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [7, 5], [10, 1], [4, 16], [17, 0], [7, 11], [19, 5], [4, 17], [14, 11], [5, 13], [8, 3], [12, 17], [3, 1], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [10, 1], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.5943074226379395

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [197] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 42 - (small)
 - circuit cycle: 394

Reduced: 
 - size: 163 (45.28%)
 - depth: 3 (6.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14091801643371582

[3, 10], [8, 9], [12, 17], [4, 16], [19, 5], [0, 13], [7, 14], [1, 6], [11, 15], [10, 1], [15, 17], [4, 16], [19, 5], [2, 12], [11, 6], [7, 14], [1, 15], [8, 9], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [8, 9], [12, 0], [3, 1], [13, 18], [10, 2], [4, 16], [1, 15], [6, 5], [3, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [4, 16], [14, 11], [9, 12], [1, 6], [3, 10], [7, 19], [1, 15], [8, 3], [14, 11], [5, 13], [9, 12], [10, 7], [2, 4], [17, 0], [6, 18], [1, 15], [3, 10], [5, 13], [9, 4], [7, 11], [17, 0], [2, 12], [6, 18], [14, 19], [15, 17], [13, 18], [3, 2], [4, 16], [10, 7], [14, 19], [11, 6], [12, 0], [8, 9], [15, 17], [2, 12], [11, 6], [8, 3], [7, 14], [10, 1], [5, 13], [4, 16], [15, 17], [14, 11], [8, 3], [5, 13], [2, 12], [6, 18], [4, 16], [7, 19], [10, 1], [12, 15], [2, 1], [9, 4], [11, 6], [0, 13], [7, 19], [3, 10], [15, 17], [7, 11], [2, 12], [5, 13], [8, 3], [14, 19], [9, 4], [10, 1], [1, 15], [11, 6], [9, 2], [7, 14], [16, 17], [3, 10], [1, 15], [12, 0], [3, 2], [6, 5], [9, 4], [13, 18], [14, 19], [1, 15], [5, 18], [16, 17], [11, 6], [12, 0], [3, 2], [7, 14], [9, 4], [1, 15], [3, 10], [8, 9], [14, 19], [13, 18], [17, 0], [11, 6], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [6, 18], [14, 19], [12, 17], [11, 15], [6, 18], [3, 1], [5, 13], [10, 7], [17, 0], [9, 2], [4, 12], [11, 15], [12, 0], [6, 5], [7, 14], [10, 1], [9, 2], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [10, 1], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [14, 19], [6, 13], [9, 4], [16, 17], [5, 18], [10, 2], [7, 11], [14, 19], [16, 17], [13, 18], [9, 4], [3, 2], [1, 15], [7, 11], [12, 0], [19, 5], [6, 18], [2, 4], [1, 15], [3, 10], [8, 9], [7, 19], [1, 11], [10, 2], [15, 0], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [11, 19], [6, 18], [5, 13], [4, 12], [16, 17], [15, 0], [7, 14], [3, 1], [10, 2], [11, 19], [10, 1], [4, 16], [6, 13], [12, 0], [5, 18], [9, 2], [8, 3], [19, 5], [1, 6], [9, 4], [15, 17], [2, 12], [7, 14], [8, 3], [5, 18], [4, 16], [8, 3], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [8, 9], [6, 18], [3, 10], [7, 14], [17, 0], [4, 16], [1, 15], [2, 12], [13, 18], [2, 12], [11, 15], [7, 19], [17, 0], [8, 9], [10, 1], [4, 16], [13, 18], [9, 4], [2, 12], [17, 0], [11, 15], [7, 14], [10, 1], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [5, 18], [4, 16], [12, 17], [3, 1], [7, 14], [15, 6], [8, 9], [11, 19], [10, 2], [5, 18], [10, 1], [7, 11], [14, 19], [17, 0], [15, 6], [9, 4], [8, 3], [2, 12], [19, 5], [17, 0], [6, 13], [3, 1], [11, 15], [9, 4], [2, 12], [14, 19], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [7, 19], [2, 12], [13, 18], [10, 1], [17, 0], [14, 11], [8, 9], [15, 6], [4, 16], [7, 14], [9, 4], [8, 3], [5, 18], [17, 0], [11, 6], [10, 1], [12, 15], [7, 14], [2, 12], [0, 13], [1, 11], [6, 18], [8, 3], [15, 17], [7, 19], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [12, 17], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 17], [4, 16], [15, 0], [10, 2], [12, 15], [6, 13], [19, 5], [4, 16], [1, 11], [7, 14], [3, 10], [15, 0], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[39, 47, 50]
[118, 127, 134]
[206, 212, 219]
[251, 263, 266]
[261, 267, 276]
[284, 290, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 108, 116]
[112, 118, 127]
[127, 134, 139]
[222, 225, 232]
[219, 227, 233]
[343, 345, 352]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[33, 43, 51]
[38, 42, 54]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.21842622756958

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 17] cc => I, Pos: [1, 17] cc => I, Pos: [3, 11] cc => I, Pos: [3, 11] cc => I, Pos: [4, 12] cc => I, Pos: [4, 12] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 34] cc => I, Pos: [24, 34] cc => I, Pos: [33, 43, 51] ccc => cc, Pos: [34, 44] cc => I, Pos: [34, 44] cc => I, Pos: [38, 42, 54] ccc => cc, Pos: [39, 47, 50] ccc => cc, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [52, 60] cc => I, Pos: [52, 60] cc => I, Pos: [56, 65] cc => I, Pos: [56, 65] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [63, 70] cc => I, Pos: [63, 70] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [77, 90] cc => I, Pos: [77, 90] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [84, 95] cc => I, Pos: [84, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 99] cc => I, Pos: [88, 99] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [90, 97] cc => I, Pos: [90, 97] cc => I, Pos: [98, 105] cc => I, Pos: [98, 105] cc => I, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [103, 108, 116] ccc => cc, Pos: [112, 118, 127] ccc => cc, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [118, 127, 134] ccc => cc, Pos: [119, 130] cc => I, Pos: [119, 130] cc => I, Pos: [120, 137] cc => I, Pos: [120, 137] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [122, 132] cc => I, Pos: [122, 132] cc => I, Pos: [123, 133] cc => I, Pos: [123, 133] cc => I, Pos: [125, 135] cc => I, Pos: [125, 135] cc => I, Pos: [127, 134, 139] ccc => cc, Pos: [128, 136] cc => I, Pos: [128, 136] cc => I, Pos: [131, 142] cc => I, Pos: [131, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [139, 150] cc => I, Pos: [139, 150] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [152, 160] cc => I, Pos: [152, 160] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [181, 186] cc => I, Pos: [181, 186] cc => I, Pos: [184, 191] cc => I, Pos: [184, 191] cc => I, Pos: [190, 196] cc => I, Pos: [190, 196] cc => I, Pos: [201, 216] cc => I, Pos: [201, 216] cc => I, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [206, 212, 219] ccc => cc, Pos: [208, 217] cc => I, Pos: [208, 217] cc => I, Pos: [214, 230] cc => I, Pos: [214, 230] cc => I, Pos: [219, 227, 233] ccc => cc, Pos: [222, 225, 232] ccc => cc, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [229, 235] cc => I, Pos: [229, 235] cc => I, Pos: [230, 243] cc => I, Pos: [230, 243] cc => I, Pos: [231, 234] cc => I, Pos: [231, 234] cc => I, Pos: [233, 245] cc => I, Pos: [233, 245] cc => I, Pos: [235, 247] cc => I, Pos: [235, 247] cc => I, Pos: [236, 251] cc => I, Pos: [236, 251] cc => I, Pos: [240, 253] cc => I, Pos: [240, 253] cc => I, Pos: [243, 261] cc => I, Pos: [243, 261] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [247, 249] cc => I, Pos: [247, 249] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [249, 258] cc => I, Pos: [249, 258] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [251, 263, 266] ccc => cc, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [254, 262] cc => I, Pos: [254, 262] cc => I, Pos: [261, 267, 276] ccc => cc, Pos: [262, 268] cc => I, Pos: [262, 268] cc => I, Pos: [272, 281] cc => I, Pos: [272, 281] cc => I, Pos: [277, 286] cc => I, Pos: [277, 286] cc => I, Pos: [284, 290, 297] ccc => cc, Pos: [285, 291] cc => I, Pos: [285, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [303, 308] cc => I, Pos: [303, 308] cc => I, Pos: [305, 329] cc => I, Pos: [305, 329] cc => I, Pos: [308, 320] cc => I, Pos: [308, 320] cc => I, Pos: [309, 318] cc => I, Pos: [309, 318] cc => I, Pos: [314, 322] cc => I, Pos: [314, 322] cc => I, Pos: [316, 327] cc => I, Pos: [316, 327] cc => I, Pos: [335, 341] cc => I, Pos: [335, 341] cc => I, Pos: [342, 348] cc => I, Pos: [342, 348] cc => I, Pos: [343, 345, 352] ccc => cc]

--------End Timer [Generate Plans]:  0.187485933303833

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [17, 24] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [51, 58] cc => I,
 Pos: [34, 44] cc => I,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [90, 97] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [113, 125] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [127, 134, 139] ccc => cc,
 Pos: [121, 128] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [219, 227, 233] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [214, 230] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [231, 234] cc => I,
 Pos: [235, 247] cc => I,
 Pos: [236, 251] cc => I,
 Pos: [240, 253] cc => I,
 Pos: [243, 261] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [249, 258] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [254, 262] cc => I,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [303, 308] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 72, Saving: 75

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [17, 24] cc => I
Apply:  Pos: [3, 11] cc => I
Apply:  Pos: [4, 12] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [51, 58] cc => I
Apply:  Pos: [34, 44] cc => I
Apply:  Pos: [38, 42, 54] ccc => cc
Apply:  Pos: [39, 47, 50] ccc => cc
Apply:  Pos: [52, 60] cc => I
Apply:  Pos: [56, 65] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [63, 70] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [90, 97] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [84, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 99] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [98, 105] cc => I
Apply:  Pos: [113, 125] cc => I
Apply:  Pos: [103, 108, 116] ccc => cc
Apply:  Pos: [127, 134, 139] ccc => cc
Apply:  Pos: [121, 128] cc => I
Apply:  Pos: [119, 130] cc => I
Apply:  Pos: [120, 137] cc => I
Apply:  Pos: [122, 132] cc => I
Apply:  Pos: [123, 133] cc => I
Apply:  Pos: [131, 142] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [152, 160] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [181, 186] cc => I
Apply:  Pos: [184, 191] cc => I
Apply:  Pos: [190, 196] cc => I
Apply:  Pos: [201, 216] cc => I
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [219, 227, 233] ccc => cc
Apply:  Pos: [208, 217] cc => I
Apply:  Pos: [214, 230] cc => I
Apply:  Pos: [222, 225, 232] ccc => cc
Apply:  Pos: [231, 234] cc => I
Apply:  Pos: [235, 247] cc => I
Apply:  Pos: [236, 251] cc => I
Apply:  Pos: [240, 253] cc => I
Apply:  Pos: [243, 261] cc => I
Apply:  Pos: [244, 252] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [249, 258] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [254, 262] cc => I
Apply:  Pos: [272, 281] cc => I
Apply:  Pos: [277, 286] cc => I
Apply:  Pos: [284, 290, 297] ccc => cc
Apply:  Pos: [285, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [303, 308] cc => I
Apply:  Pos: [305, 329] cc => I
Apply:  Pos: [309, 318] cc => I
Apply:  Pos: [314, 322] cc => I
Apply:  Pos: [316, 327] cc => I
Apply:  Pos: [335, 341] cc => I
Apply:  Pos: [342, 348] cc => I
Apply:  Pos: [343, 345, 352] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [8, 9], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [3, 10], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [13, 18], [3, 2], [4, 16], [10, 7], [12, 0], [8, 9], [7, 14], [15, 17], [14, 11], [6, 18], [12, 15], [2, 1], [9, 4], [7, 11], [0, 13], [3, 10], [15, 17], [11, 6], [2, 12], [5, 13], [8, 3], [14, 19], [10, 1], [1, 15], [9, 2], [7, 14], [6, 5], [13, 18], [7, 14], [5, 18], [14, 19], [9, 4], [8, 9], [13, 18], [17, 0], [4, 16], [2, 12], [0, 13], [10, 2], [7, 11], [14, 19], [12, 17], [3, 1], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [9, 4], [6, 13], [12, 0], [19, 5], [9, 2], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [6, 18], [3, 10], [1, 15], [9, 4], [17, 0], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [4, 16], [12, 17], [3, 1], [7, 14], [8, 9], [11, 19], [10, 2], [10, 1], [7, 11], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [8, 9], [15, 6], [4, 16], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  7.405912160873413

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 29]
[39, 49]
[74, 77]
[61, 80]
[79, 89]
[81, 105]
[105, 120]
[148, 154]
[166, 186]
[162, 188]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[134, 142, 151]
[170, 176, 177]
[155, 163, 179]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 59, 65]
[91, 99, 109]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[20, 29]
[39, 49]
[74, 77]
[61, 80]
[79, 89]
[81, 105]
[105, 120]
[148, 154]
[166, 186]
[162, 188]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203481674194336

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [39, 49] cc => I, Pos: [39, 49] cc => I, Pos: [56, 59, 65] ccc => cc, Pos: [61, 80] cc => I, Pos: [61, 80] cc => I, Pos: [74, 77] cc => I, Pos: [74, 77] cc => I, Pos: [79, 89] cc => I, Pos: [79, 89] cc => I, Pos: [81, 105] cc => I, Pos: [81, 105] cc => I, Pos: [91, 99, 109] ccc => cc, Pos: [105, 120] cc => I, Pos: [105, 120] cc => I, Pos: [134, 142, 151] ccc => cc, Pos: [148, 154] cc => I, Pos: [148, 154] cc => I, Pos: [155, 163, 179] ccc => cc, Pos: [162, 188] cc => I, Pos: [162, 188] cc => I, Pos: [166, 186] cc => I, Pos: [166, 186] cc => I, Pos: [170, 176, 177] ccc => cc]

--------End Timer [Generate Plans]:  0.04677438735961914

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 29] cc => I,
 Pos: [39, 49] cc => I,
 Pos: [56, 59, 65] ccc => cc,
 Pos: [61, 80] cc => I,
 Pos: [74, 77] cc => I,
 Pos: [79, 89] cc => I,
 Pos: [105, 120] cc => I,
 Pos: [91, 99, 109] ccc => cc,
 Pos: [134, 142, 151] ccc => cc,
 Pos: [148, 154] cc => I,
 Pos: [155, 163, 179] ccc => cc,
 Pos: [162, 188] cc => I,
 Pos: [166, 186] cc => I,
 Pos: [170, 176, 177] ccc => cc]
Change: 14, Saving: 14

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [39, 49] cc => I
Apply:  Pos: [56, 59, 65] ccc => cc
Apply:  Pos: [61, 80] cc => I
Apply:  Pos: [74, 77] cc => I
Apply:  Pos: [79, 89] cc => I
Apply:  Pos: [105, 120] cc => I
Apply:  Pos: [91, 99, 109] ccc => cc
Apply:  Pos: [134, 142, 151] ccc => cc
Apply:  Pos: [148, 154] cc => I
Apply:  Pos: [155, 163, 179] ccc => cc
Apply:  Pos: [162, 188] cc => I
Apply:  Pos: [166, 186] cc => I
Apply:  Pos: [170, 176, 177] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [8, 9], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [4, 16], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [8, 3], [14, 19], [10, 1], [1, 15], [9, 2], [6, 5], [13, 18], [5, 18], [8, 9], [13, 18], [17, 0], [4, 16], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [8, 3], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [9, 16], [6, 13], [12, 0], [19, 5], [9, 2], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  4.250256061553955

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[70, 72]
[47, 74]
[63, 80]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[124, 130, 142]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[70, 72]
[47, 74]
[63, 80]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.687436580657959

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [47, 74] cc => I, Pos: [47, 74] cc => I, Pos: [63, 80] cc => I, Pos: [63, 80] cc => I, Pos: [70, 72] cc => I, Pos: [70, 72] cc => I, Pos: [124, 130, 142] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [47, 74] cc => I,
 Pos: [63, 80] cc => I,
 Pos: [70, 72] cc => I,
 Pos: [124, 130, 142] ccc => cc]
Change: 4, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [47, 74] cc => I
Apply:  Pos: [63, 80] cc => I
Apply:  Pos: [70, 72] cc => I
Apply:  Pos: [124, 130, 142] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [8, 9], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [14, 19], [10, 1], [1, 15], [9, 2], [6, 5], [5, 18], [8, 9], [17, 0], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [9, 16], [6, 13], [12, 0], [19, 5], [9, 12], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 2], [10, 1], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.687436580657959

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.531313896179199

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [8, 9], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [14, 19], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [14, 19], [10, 1], [1, 15], [9, 2], [6, 5], [5, 18], [8, 9], [17, 0], [2, 12], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [9, 16], [6, 13], [12, 0], [19, 5], [9, 12], [8, 3], [5, 18], [1, 6], [4, 16], [15, 17], [2, 12], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.531313896179199

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [194] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 388

Reduced: 
 - size: 166 (46.11%)
 - depth: 5 (11.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1404414176940918

[3, 10], [8, 9], [12, 17], [4, 16], [19, 5], [0, 13], [7, 14], [1, 6], [11, 15], [10, 1], [15, 17], [4, 16], [19, 5], [2, 12], [11, 6], [7, 14], [1, 15], [8, 9], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [8, 9], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [11, 19], [8, 9], [12, 0], [3, 1], [13, 18], [10, 2], [4, 16], [1, 15], [6, 5], [3, 2], [14, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [4, 16], [14, 11], [9, 12], [1, 6], [3, 10], [7, 19], [1, 15], [8, 3], [14, 11], [5, 13], [9, 12], [10, 7], [2, 4], [17, 0], [6, 18], [1, 15], [3, 10], [5, 13], [9, 4], [7, 11], [17, 0], [2, 12], [6, 18], [14, 19], [15, 17], [13, 18], [3, 2], [4, 16], [10, 7], [14, 19], [11, 6], [12, 0], [8, 9], [15, 17], [2, 12], [11, 6], [8, 3], [7, 14], [10, 1], [5, 13], [4, 16], [15, 17], [14, 11], [8, 3], [5, 13], [2, 12], [6, 18], [4, 16], [7, 19], [10, 1], [12, 15], [2, 1], [9, 4], [11, 6], [0, 13], [7, 19], [3, 10], [15, 17], [7, 11], [2, 12], [5, 13], [8, 3], [14, 19], [9, 4], [10, 1], [1, 15], [11, 6], [9, 2], [7, 14], [16, 17], [3, 10], [1, 15], [12, 0], [3, 2], [6, 5], [9, 4], [13, 18], [14, 19], [1, 15], [5, 18], [16, 17], [11, 6], [12, 0], [3, 2], [7, 14], [9, 4], [1, 15], [3, 10], [8, 9], [14, 19], [13, 18], [17, 0], [11, 6], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [6, 18], [14, 19], [12, 17], [11, 15], [6, 18], [3, 1], [5, 13], [10, 7], [17, 0], [9, 2], [4, 12], [11, 15], [12, 0], [6, 5], [7, 14], [10, 1], [9, 2], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [10, 1], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [14, 19], [6, 13], [9, 4], [16, 17], [5, 18], [10, 2], [7, 11], [14, 19], [16, 17], [13, 18], [9, 4], [3, 2], [1, 15], [7, 11], [12, 0], [19, 5], [6, 18], [2, 4], [1, 15], [3, 10], [8, 9], [7, 19], [1, 11], [10, 2], [15, 0], [13, 18], [6, 5], [9, 12], [4, 16], [8, 3], [11, 19], [6, 18], [5, 13], [4, 12], [16, 17], [15, 0], [7, 14], [3, 1], [10, 2], [11, 19], [10, 1], [4, 16], [6, 13], [12, 0], [5, 18], [9, 2], [8, 3], [19, 5], [1, 6], [9, 4], [15, 17], [2, 12], [7, 14], [8, 3], [5, 18], [4, 16], [8, 3], [2, 12], [7, 19], [15, 0], [1, 11], [5, 13], [8, 9], [6, 18], [3, 10], [7, 14], [17, 0], [4, 16], [1, 15], [2, 12], [13, 18], [2, 12], [11, 15], [7, 19], [17, 0], [8, 9], [10, 1], [4, 16], [13, 18], [9, 4], [2, 12], [17, 0], [11, 15], [7, 14], [10, 1], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [5, 18], [4, 16], [12, 17], [3, 1], [7, 14], [15, 6], [8, 9], [11, 19], [10, 2], [5, 18], [10, 1], [7, 11], [14, 19], [17, 0], [15, 6], [9, 4], [8, 3], [2, 12], [19, 5], [17, 0], [6, 13], [3, 1], [11, 15], [9, 4], [2, 12], [14, 19], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [10, 1], [0, 13], [7, 19], [2, 12], [13, 18], [10, 1], [17, 0], [14, 11], [8, 9], [15, 6], [4, 16], [7, 14], [9, 4], [8, 3], [5, 18], [17, 0], [11, 6], [10, 1], [12, 15], [7, 14], [2, 12], [0, 13], [1, 11], [6, 18], [8, 3], [15, 17], [7, 19], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [12, 17], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 17], [4, 16], [15, 0], [10, 2], [12, 15], [6, 13], [19, 5], [4, 16], [1, 11], [7, 14], [3, 10], [15, 0], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[39, 47, 50]
[118, 127, 134]
[206, 212, 219]
[251, 263, 266]
[261, 267, 276]
[284, 290, 297]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[103, 108, 116]
[112, 118, 127]
[127, 134, 139]
[222, 225, 232]
[219, 227, 233]
[343, 345, 352]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[33, 43, 51]
[38, 42, 54]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[3, 11]
[4, 12]
[6, 15]
[1, 17]
[17, 24]
[24, 34]
[34, 44]
[51, 58]
[52, 60]
[56, 65]
[59, 67]
[63, 70]
[64, 72]
[73, 79]
[74, 83]
[80, 85]
[77, 90]
[83, 91]
[86, 93]
[89, 94]
[84, 95]
[90, 97]
[88, 99]
[98, 105]
[102, 113]
[115, 121]
[113, 125]
[121, 128]
[119, 130]
[122, 132]
[123, 133]
[125, 135]
[128, 136]
[120, 137]
[131, 142]
[136, 145]
[139, 150]
[149, 153]
[152, 160]
[158, 165]
[164, 171]
[178, 185]
[181, 186]
[180, 188]
[184, 191]
[190, 196]
[202, 213]
[201, 216]
[208, 217]
[214, 230]
[224, 231]
[231, 234]
[229, 235]
[230, 243]
[233, 245]
[235, 247]
[247, 249]
[236, 251]
[244, 252]
[240, 253]
[245, 255]
[248, 256]
[249, 258]
[252, 259]
[250, 260]
[243, 261]
[254, 262]
[262, 268]
[272, 281]
[277, 286]
[285, 291]
[287, 295]
[289, 296]
[303, 308]
[309, 318]
[308, 320]
[314, 322]
[316, 327]
[305, 329]
[335, 341]
[342, 348]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.1406331062316895

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 17] cc => I, Pos: [1, 17] cc => I, Pos: [3, 11] cc => I, Pos: [3, 11] cc => I, Pos: [4, 12] cc => I, Pos: [4, 12] cc => I, Pos: [6, 15] cc => I, Pos: [6, 15] cc => I, Pos: [17, 24] cc => I, Pos: [17, 24] cc => I, Pos: [24, 34] cc => I, Pos: [24, 34] cc => I, Pos: [33, 43, 51] ccc => cc, Pos: [34, 44] cc => I, Pos: [34, 44] cc => I, Pos: [38, 42, 54] ccc => cc, Pos: [39, 47, 50] ccc => cc, Pos: [51, 58] cc => I, Pos: [51, 58] cc => I, Pos: [52, 60] cc => I, Pos: [52, 60] cc => I, Pos: [56, 65] cc => I, Pos: [56, 65] cc => I, Pos: [59, 67] cc => I, Pos: [59, 67] cc => I, Pos: [63, 70] cc => I, Pos: [63, 70] cc => I, Pos: [64, 72] cc => I, Pos: [64, 72] cc => I, Pos: [73, 79] cc => I, Pos: [73, 79] cc => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [77, 90] cc => I, Pos: [77, 90] cc => I, Pos: [80, 85] cc => I, Pos: [80, 85] cc => I, Pos: [83, 91] cc => I, Pos: [83, 91] cc => I, Pos: [84, 95] cc => I, Pos: [84, 95] cc => I, Pos: [86, 93] cc => I, Pos: [86, 93] cc => I, Pos: [88, 99] cc => I, Pos: [88, 99] cc => I, Pos: [89, 94] cc => I, Pos: [89, 94] cc => I, Pos: [90, 97] cc => I, Pos: [90, 97] cc => I, Pos: [98, 105] cc => I, Pos: [98, 105] cc => I, Pos: [102, 113] cc => I, Pos: [102, 113] cc => I, Pos: [103, 108, 116] ccc => cc, Pos: [112, 118, 127] ccc => cc, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [118, 127, 134] ccc => cc, Pos: [119, 130] cc => I, Pos: [119, 130] cc => I, Pos: [120, 137] cc => I, Pos: [120, 137] cc => I, Pos: [121, 128] cc => I, Pos: [121, 128] cc => I, Pos: [122, 132] cc => I, Pos: [122, 132] cc => I, Pos: [123, 133] cc => I, Pos: [123, 133] cc => I, Pos: [125, 135] cc => I, Pos: [125, 135] cc => I, Pos: [127, 134, 139] ccc => cc, Pos: [128, 136] cc => I, Pos: [128, 136] cc => I, Pos: [131, 142] cc => I, Pos: [131, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [139, 150] cc => I, Pos: [139, 150] cc => I, Pos: [149, 153] cc => I, Pos: [149, 153] cc => I, Pos: [152, 160] cc => I, Pos: [152, 160] cc => I, Pos: [158, 165] cc => I, Pos: [158, 165] cc => I, Pos: [164, 171] cc => I, Pos: [164, 171] cc => I, Pos: [178, 185] cc => I, Pos: [178, 185] cc => I, Pos: [180, 188] cc => I, Pos: [180, 188] cc => I, Pos: [181, 186] cc => I, Pos: [181, 186] cc => I, Pos: [184, 191] cc => I, Pos: [184, 191] cc => I, Pos: [190, 196] cc => I, Pos: [190, 196] cc => I, Pos: [201, 216] cc => I, Pos: [201, 216] cc => I, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [206, 212, 219] ccc => cc, Pos: [208, 217] cc => I, Pos: [208, 217] cc => I, Pos: [214, 230] cc => I, Pos: [214, 230] cc => I, Pos: [219, 227, 233] ccc => cc, Pos: [222, 225, 232] ccc => cc, Pos: [224, 231] cc => I, Pos: [224, 231] cc => I, Pos: [229, 235] cc => I, Pos: [229, 235] cc => I, Pos: [230, 243] cc => I, Pos: [230, 243] cc => I, Pos: [231, 234] cc => I, Pos: [231, 234] cc => I, Pos: [233, 245] cc => I, Pos: [233, 245] cc => I, Pos: [235, 247] cc => I, Pos: [235, 247] cc => I, Pos: [236, 251] cc => I, Pos: [236, 251] cc => I, Pos: [240, 253] cc => I, Pos: [240, 253] cc => I, Pos: [243, 261] cc => I, Pos: [243, 261] cc => I, Pos: [244, 252] cc => I, Pos: [244, 252] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [247, 249] cc => I, Pos: [247, 249] cc => I, Pos: [248, 256] cc => I, Pos: [248, 256] cc => I, Pos: [249, 258] cc => I, Pos: [249, 258] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [251, 263, 266] ccc => cc, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [254, 262] cc => I, Pos: [254, 262] cc => I, Pos: [261, 267, 276] ccc => cc, Pos: [262, 268] cc => I, Pos: [262, 268] cc => I, Pos: [272, 281] cc => I, Pos: [272, 281] cc => I, Pos: [277, 286] cc => I, Pos: [277, 286] cc => I, Pos: [284, 290, 297] ccc => cc, Pos: [285, 291] cc => I, Pos: [285, 291] cc => I, Pos: [287, 295] cc => I, Pos: [287, 295] cc => I, Pos: [289, 296] cc => I, Pos: [289, 296] cc => I, Pos: [303, 308] cc => I, Pos: [303, 308] cc => I, Pos: [305, 329] cc => I, Pos: [305, 329] cc => I, Pos: [308, 320] cc => I, Pos: [308, 320] cc => I, Pos: [309, 318] cc => I, Pos: [309, 318] cc => I, Pos: [314, 322] cc => I, Pos: [314, 322] cc => I, Pos: [316, 327] cc => I, Pos: [316, 327] cc => I, Pos: [335, 341] cc => I, Pos: [335, 341] cc => I, Pos: [342, 348] cc => I, Pos: [342, 348] cc => I, Pos: [343, 345, 352] ccc => cc]

Plan: 1
[Pos: [1, 17] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [24, 34] cc => I,
 Pos: [33, 43, 51] ccc => cc,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [77, 90] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [102, 113] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [112, 118, 127] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [125, 135] cc => I,
 Pos: [128, 136] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [139, 150] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [206, 212, 219] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [214, 230] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [224, 231] cc => I,
 Pos: [229, 235] cc => I,
 Pos: [233, 245] cc => I,
 Pos: [236, 251] cc => I,
 Pos: [240, 253] cc => I,
 Pos: [243, 261] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [247, 249] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [254, 262] cc => I,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [303, 308] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 74, Saving: 76

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.18781161308288574

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 17] cc => I,
 Pos: [3, 11] cc => I,
 Pos: [4, 12] cc => I,
 Pos: [6, 15] cc => I,
 Pos: [24, 34] cc => I,
 Pos: [33, 43, 51] ccc => cc,
 Pos: [38, 42, 54] ccc => cc,
 Pos: [39, 47, 50] ccc => cc,
 Pos: [52, 60] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [59, 67] cc => I,
 Pos: [63, 70] cc => I,
 Pos: [64, 72] cc => I,
 Pos: [73, 79] cc => I,
 Pos: [74, 83] cc => I,
 Pos: [77, 90] cc => I,
 Pos: [80, 85] cc => I,
 Pos: [84, 95] cc => I,
 Pos: [86, 93] cc => I,
 Pos: [88, 99] cc => I,
 Pos: [89, 94] cc => I,
 Pos: [98, 105] cc => I,
 Pos: [102, 113] cc => I,
 Pos: [103, 108, 116] ccc => cc,
 Pos: [112, 118, 127] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [119, 130] cc => I,
 Pos: [120, 137] cc => I,
 Pos: [122, 132] cc => I,
 Pos: [123, 133] cc => I,
 Pos: [125, 135] cc => I,
 Pos: [128, 136] cc => I,
 Pos: [131, 142] cc => I,
 Pos: [139, 150] cc => I,
 Pos: [149, 153] cc => I,
 Pos: [152, 160] cc => I,
 Pos: [158, 165] cc => I,
 Pos: [164, 171] cc => I,
 Pos: [178, 185] cc => I,
 Pos: [180, 188] cc => I,
 Pos: [181, 186] cc => I,
 Pos: [184, 191] cc => I,
 Pos: [190, 196] cc => I,
 Pos: [201, 216] cc => I,
 Pos: [202, 213] cc => I,
 Pos: [206, 212, 219] ccc => cc,
 Pos: [208, 217] cc => I,
 Pos: [214, 230] cc => I,
 Pos: [222, 225, 232] ccc => cc,
 Pos: [224, 231] cc => I,
 Pos: [229, 235] cc => I,
 Pos: [233, 245] cc => I,
 Pos: [236, 251] cc => I,
 Pos: [240, 253] cc => I,
 Pos: [243, 261] cc => I,
 Pos: [244, 252] cc => I,
 Pos: [247, 249] cc => I,
 Pos: [248, 256] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [254, 262] cc => I,
 Pos: [272, 281] cc => I,
 Pos: [277, 286] cc => I,
 Pos: [284, 290, 297] ccc => cc,
 Pos: [285, 291] cc => I,
 Pos: [287, 295] cc => I,
 Pos: [289, 296] cc => I,
 Pos: [303, 308] cc => I,
 Pos: [305, 329] cc => I,
 Pos: [309, 318] cc => I,
 Pos: [314, 322] cc => I,
 Pos: [316, 327] cc => I,
 Pos: [335, 341] cc => I,
 Pos: [342, 348] cc => I,
 Pos: [343, 345, 352] ccc => cc]
Change: 74, Saving: 76

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 17] cc => I
Apply:  Pos: [3, 11] cc => I
Apply:  Pos: [4, 12] cc => I
Apply:  Pos: [6, 15] cc => I
Apply:  Pos: [24, 34] cc => I
Apply:  Pos: [33, 43, 51] ccc => cc
Apply:  Pos: [38, 42, 54] ccc => cc
Apply:  Pos: [39, 47, 50] ccc => cc
Apply:  Pos: [52, 60] cc => I
Apply:  Pos: [56, 65] cc => I
Apply:  Pos: [59, 67] cc => I
Apply:  Pos: [63, 70] cc => I
Apply:  Pos: [64, 72] cc => I
Apply:  Pos: [73, 79] cc => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [77, 90] cc => I
Apply:  Pos: [80, 85] cc => I
Apply:  Pos: [84, 95] cc => I
Apply:  Pos: [86, 93] cc => I
Apply:  Pos: [88, 99] cc => I
Apply:  Pos: [89, 94] cc => I
Apply:  Pos: [98, 105] cc => I
Apply:  Pos: [102, 113] cc => I
Apply:  Pos: [103, 108, 116] ccc => cc
Apply:  Pos: [112, 118, 127] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [119, 130] cc => I
Apply:  Pos: [120, 137] cc => I
Apply:  Pos: [122, 132] cc => I
Apply:  Pos: [123, 133] cc => I
Apply:  Pos: [125, 135] cc => I
Apply:  Pos: [128, 136] cc => I
Apply:  Pos: [131, 142] cc => I
Apply:  Pos: [139, 150] cc => I
Apply:  Pos: [149, 153] cc => I
Apply:  Pos: [152, 160] cc => I
Apply:  Pos: [158, 165] cc => I
Apply:  Pos: [164, 171] cc => I
Apply:  Pos: [178, 185] cc => I
Apply:  Pos: [180, 188] cc => I
Apply:  Pos: [181, 186] cc => I
Apply:  Pos: [184, 191] cc => I
Apply:  Pos: [190, 196] cc => I
Apply:  Pos: [201, 216] cc => I
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [206, 212, 219] ccc => cc
Apply:  Pos: [208, 217] cc => I
Apply:  Pos: [214, 230] cc => I
Apply:  Pos: [222, 225, 232] ccc => cc
Apply:  Pos: [224, 231] cc => I
Apply:  Pos: [229, 235] cc => I
Apply:  Pos: [233, 245] cc => I
Apply:  Pos: [236, 251] cc => I
Apply:  Pos: [240, 253] cc => I
Apply:  Pos: [243, 261] cc => I
Apply:  Pos: [244, 252] cc => I
Apply:  Pos: [247, 249] cc => I
Apply:  Pos: [248, 256] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [254, 262] cc => I
Apply:  Pos: [272, 281] cc => I
Apply:  Pos: [277, 286] cc => I
Apply:  Pos: [284, 290, 297] ccc => cc
Apply:  Pos: [285, 291] cc => I
Apply:  Pos: [287, 295] cc => I
Apply:  Pos: [289, 296] cc => I
Apply:  Pos: [303, 308] cc => I
Apply:  Pos: [305, 329] cc => I
Apply:  Pos: [309, 318] cc => I
Apply:  Pos: [314, 322] cc => I
Apply:  Pos: [316, 327] cc => I
Apply:  Pos: [335, 341] cc => I
Apply:  Pos: [342, 348] cc => I
Apply:  Pos: [343, 345, 352] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [3, 10], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [3, 10], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [13, 18], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [13, 18], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [15, 17], [14, 11], [6, 18], [4, 16], [12, 15], [2, 1], [7, 11], [0, 13], [3, 10], [15, 17], [11, 6], [2, 12], [5, 13], [8, 3], [7, 14], [10, 1], [9, 2], [14, 19], [6, 5], [13, 18], [5, 18], [7, 14], [8, 9], [13, 18], [17, 0], [4, 16], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [3, 1], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [8, 3], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [8, 9], [15, 0], [7, 19], [11, 15], [3, 1], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 2], [5, 18], [1, 6], [9, 4], [15, 17], [8, 3], [15, 0], [1, 11], [5, 13], [6, 18], [3, 10], [1, 15], [4, 16], [9, 4], [2, 12], [17, 0], [19, 5], [6, 18], [4, 12], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [4, 16], [12, 17], [3, 1], [7, 14], [8, 9], [11, 19], [10, 2], [10, 1], [7, 11], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [7, 11], [6, 5], [4, 12], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [8, 9], [15, 6], [4, 16], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  7.328444719314575

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 28]
[39, 50]
[76, 79]
[59, 81]
[78, 102]
[102, 117]
[143, 151]
[163, 183]
[159, 185]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[70, 73, 77]
[137, 146, 147]
[167, 173, 174]
[152, 160, 176]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[56, 60, 65]
[88, 96, 106]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[19, 28]
[39, 50]
[76, 79]
[59, 81]
[78, 102]
[102, 117]
[143, 151]
[163, 183]
[159, 185]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.15906834602356

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 28] cc => I, Pos: [19, 28] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [56, 60, 65] ccc => cc, Pos: [59, 81] cc => I, Pos: [59, 81] cc => I, Pos: [70, 73, 77] ccc => cc, Pos: [76, 79] cc => I, Pos: [76, 79] cc => I, Pos: [78, 102] cc => I, Pos: [78, 102] cc => I, Pos: [88, 96, 106] ccc => cc, Pos: [102, 117] cc => I, Pos: [102, 117] cc => I, Pos: [137, 146, 147] ccc => cc, Pos: [143, 151] cc => I, Pos: [143, 151] cc => I, Pos: [152, 160, 176] ccc => cc, Pos: [159, 185] cc => I, Pos: [159, 185] cc => I, Pos: [163, 183] cc => I, Pos: [163, 183] cc => I, Pos: [167, 173, 174] ccc => cc]

Plan: 1
[Pos: [19, 28] cc => I,
 Pos: [39, 50] cc => I,
 Pos: [56, 60, 65] ccc => cc,
 Pos: [59, 81] cc => I,
 Pos: [70, 73, 77] ccc => cc,
 Pos: [76, 79] cc => I,
 Pos: [78, 102] cc => I,
 Pos: [88, 96, 106] ccc => cc,
 Pos: [137, 146, 147] ccc => cc,
 Pos: [143, 151] cc => I,
 Pos: [152, 160, 176] ccc => cc,
 Pos: [159, 185] cc => I,
 Pos: [163, 183] cc => I,
 Pos: [167, 173, 174] ccc => cc]
Change: 14, Saving: 14

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.028166532516479492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 28] cc => I,
 Pos: [39, 50] cc => I,
 Pos: [56, 60, 65] ccc => cc,
 Pos: [59, 81] cc => I,
 Pos: [70, 73, 77] ccc => cc,
 Pos: [76, 79] cc => I,
 Pos: [78, 102] cc => I,
 Pos: [88, 96, 106] ccc => cc,
 Pos: [137, 146, 147] ccc => cc,
 Pos: [143, 151] cc => I,
 Pos: [152, 160, 176] ccc => cc,
 Pos: [159, 185] cc => I,
 Pos: [163, 183] cc => I,
 Pos: [167, 173, 174] ccc => cc]
Change: 14, Saving: 14

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [19, 28] cc => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [56, 60, 65] ccc => cc
Apply:  Pos: [59, 81] cc => I
Apply:  Pos: [70, 73, 77] ccc => cc
Apply:  Pos: [76, 79] cc => I
Apply:  Pos: [78, 102] cc => I
Apply:  Pos: [88, 96, 106] ccc => cc
Apply:  Pos: [137, 146, 147] ccc => cc
Apply:  Pos: [143, 151] cc => I
Apply:  Pos: [152, 160, 176] ccc => cc
Apply:  Pos: [159, 185] cc => I
Apply:  Pos: [163, 183] cc => I
Apply:  Pos: [167, 173, 174] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [2, 12], [5, 13], [8, 3], [7, 19], [10, 1], [9, 2], [14, 19], [6, 5], [5, 18], [17, 0], [2, 12], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [8, 3], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 2], [5, 18], [1, 6], [9, 16], [15, 17], [8, 3], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [4, 16], [2, 12], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [9, 2], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  4.187234878540039

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[63, 77]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[121, 133, 140]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[61, 66, 71]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[63, 77]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.5937540531158447

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [61, 66, 71] ccc => cc, Pos: [63, 77] cc => I, Pos: [63, 77] cc => I, Pos: [121, 133, 140] ccc => cc]

Plan: 1
[Pos: [61, 66, 71] ccc => cc,
 Pos: [63, 77] cc => I,
 Pos: [121, 133, 140] ccc => cc]
Change: 3, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [61, 66, 71] ccc => cc,
 Pos: [63, 77] cc => I,
 Pos: [121, 133, 140] ccc => cc]
Change: 3, Saving: 3

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [61, 66, 71] ccc => cc
Apply:  Pos: [63, 77] cc => I
Apply:  Pos: [121, 133, 140] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [7, 19], [10, 1], [2, 12], [14, 19], [6, 5], [5, 18], [17, 0], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [3, 1], [10, 1], [6, 13], [12, 0], [19, 5], [9, 12], [5, 18], [1, 6], [9, 16], [15, 17], [8, 3], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [4, 16], [2, 12], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 2], [10, 1], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.6093788146972656

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.4842398166656494

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[3, 10], [12, 17], [0, 13], [1, 6], [11, 15], [10, 1], [15, 17], [2, 12], [11, 6], [1, 15], [5, 13], [10, 2], [4, 12], [14, 11], [17, 0], [1, 6], [14, 19], [12, 17], [2, 4], [5, 18], [15, 0], [7, 11], [15, 6], [14, 11], [12, 0], [3, 1], [13, 18], [4, 17], [1, 15], [6, 5], [10, 2], [11, 19], [8, 9], [0, 13], [4, 12], [16, 17], [15, 0], [1, 6], [7, 19], [8, 3], [14, 11], [10, 7], [2, 4], [3, 10], [9, 4], [7, 11], [2, 12], [3, 2], [10, 7], [12, 0], [8, 9], [7, 14], [12, 15], [14, 11], [6, 18], [15, 17], [2, 1], [7, 11], [0, 13], [3, 10], [11, 6], [9, 2], [5, 13], [7, 19], [10, 1], [2, 12], [14, 19], [6, 5], [5, 18], [17, 0], [1, 15], [0, 13], [10, 2], [7, 11], [12, 17], [5, 13], [10, 7], [17, 0], [4, 12], [12, 0], [6, 5], [7, 14], [3, 1], [16, 17], [11, 6], [5, 13], [4, 16], [2, 12], [15, 0], [7, 19], [11, 15], [6, 13], [5, 18], [10, 2], [13, 18], [3, 2], [12, 0], [19, 5], [6, 18], [2, 4], [3, 10], [8, 9], [7, 19], [1, 11], [13, 18], [6, 5], [9, 12], [4, 17], [8, 3], [6, 18], [5, 13], [4, 12], [16, 17], [10, 1], [3, 1], [6, 13], [12, 0], [19, 5], [9, 12], [5, 18], [1, 6], [9, 16], [15, 17], [8, 3], [15, 0], [1, 11], [5, 13], [3, 10], [1, 15], [4, 16], [2, 12], [17, 0], [19, 5], [4, 17], [7, 19], [14, 11], [10, 1], [5, 13], [8, 3], [12, 17], [3, 1], [7, 14], [11, 19], [10, 1], [10, 2], [7, 15], [14, 5], [8, 3], [19, 5], [6, 13], [3, 1], [11, 15], [6, 5], [15, 17], [3, 2], [0, 13], [2, 12], [13, 18], [14, 11], [15, 6], [9, 4], [5, 18], [11, 6], [10, 1], [12, 15], [2, 12], [0, 13], [1, 11], [6, 18], [15, 17], [14, 11], [10, 2], [15, 6], [8, 9], [5, 13], [10, 7], [9, 2], [3, 1], [6, 5], [11, 19], [12, 15], [10, 2], [15, 0], [6, 13], [19, 5], [1, 11], [7, 14], [3, 10], [13, 18], [16, 17], [14, 19], [4, 12], [6, 5], [2, 1], [8, 9], ----End Timer [Execute Mapping]:  3.4842398166656494

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [195] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 40 - (small)
 - circuit cycle: 390

Reduced: 
 - size: 165 (45.83%)
 - depth: 5 (11.11%)

