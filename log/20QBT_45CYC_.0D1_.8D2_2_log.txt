----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.156233549118042

[19, 9], [6, 17], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [18, 11], [19, 15], [6, 17], [8, 3], [9, 15], [7, 1], [0, 16], [12, 5], [2, 8], [10, 17], [6, 4], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [6, 4], [10, 17], [7, 12], [18, 11], [2, 8], [5, 15], [12, 1], [6, 13], [0, 16], [19, 9], [4, 7], [8, 17], [9, 15], [17, 19], [13, 5], [10, 6], [4, 7], [2, 8], [18, 11], [9, 15], [1, 18], [6, 13], [4, 12], [8, 19], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [13, 5], [4, 12], [6, 17], [8, 19], [13, 5], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [0, 18], [19, 9], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [3, 14], [19, 9], [4, 12], [6, 17], [8, 3], [5, 0], [7, 1], [2, 10], [9, 15], [10, 13], [3, 14], [0, 18], [6, 17], [2, 8], [12, 5], [7, 1], [15, 16], [10, 13], [4, 1], [2, 8], [3, 19], [7, 12], [18, 11], [14, 9], [5, 0], [16, 11], [4, 1], [10, 13], [6, 17], [7, 12], [2, 8], [5, 0], [14, 9], [3, 19], [16, 11], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [14, 9], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [7, 1], [12, 0], [16, 11], [10, 17], [14, 9], [13, 5], [6, 4], [4, 12], [18, 11], [9, 15], [13, 5], [3, 19], [2, 10], [7, 1], [8, 17], [12, 1], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [18, 11], [12, 0], [17, 13], [14, 9], [10, 6], [18, 11], [8, 3], [19, 5], [15, 16], [12, 1], [17, 3], [15, 16], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [19, 5], [10, 17], [4, 1], [18, 16], [14, 9], [8, 3], [0, 11], [13, 12], [3, 14], [5, 9], [10, 6], [0, 18], [4, 1], [8, 17], [19, 15], [16, 11], [7, 12], [18, 11], [3, 14], [2, 8], [5, 9], [13, 0], [6, 17], [4, 1], [7, 12], [6, 13], [18, 11], [5, 0], [4, 1], [8, 17], [19, 15], [14, 9], [7, 1], [10, 13], [14, 9], [18, 11], [8, 17], [12, 5], [3, 19], [0, 16], [7, 1], [15, 16], [14, 9], [6, 17], [5, 0], [3, 19], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [7, 1], [8, 17], [5, 15], [14, 9], [12, 0], [6, 13], [16, 11], [7, 1], [5, 0], [14, 9], [16, 11], [8, 19], [6, 4], [10, 17], [4, 7], [5, 9], [10, 17], [0, 16], [19, 15], [3, 14], [6, 13], [18, 11], [7, 1], [14, 9], [19, 15], [18, 16], [8, 17], [12, 5], [10, 13], [0, 11], [6, 4], [7, 1], [0, 16], [14, 9], [6, 17], [4, 12], [18, 11], [2, 8], [10, 13], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [10, 6], [5, 0], [8, 3], [1, 18], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [1, 18], [19, 9], [5, 0], [10, 6], [17, 3], [2, 8], [7, 12], [15, 16], [12, 1], [2, 8], [17, 3], [19, 15], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [15, 16], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [6, 4], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [2, 10], [19, 15], [6, 17], [18, 11], [14, 9], [8, 3], [7, 12], [13, 0], [17, 19], [14, 9], [8, 3], [2, 10], [1, 18], [15, 16], [6, 4], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [16, 11], [7, 12], [1, 18], [10, 13], [8, 19], [0, 11], [9, 15], [6, 4], [17, 3], [4, 7], [19, 9], [12, 5], [10, 13], [0, 16], [18, 11], [8, 17], [4, 7], [6, 17], [18, 11], [19, 5], [10, 13], [12, 1], [8, 3], [9, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 53, 61]
[156, 161, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 87]
[68, 82, 88]
[284, 288, 295]
[342, 346, 359]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[336, 341, 349]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.171895265579224

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 13] cc => I, Pos: [1, 13] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [10, 17] cc => I, Pos: [10, 17] cc => I, Pos: [11, 30] cc => I, Pos: [11, 30] cc => I, Pos: [17, 26] cc => I, Pos: [17, 26] cc => I, Pos: [19, 31] cc => I, Pos: [19, 31] cc => I, Pos: [20, 28] cc => I, Pos: [20, 28] cc => I, Pos: [21, 27] cc => I, Pos: [21, 27] cc => I, Pos: [26, 35] cc => I, Pos: [26, 35] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [35, 52] cc => I, Pos: [35, 52] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [49, 59] cc => I, Pos: [49, 59] cc => I, Pos: [50, 53, 61] ccc => cc, Pos: [58, 62] cc => I, Pos: [58, 62] cc => I, Pos: [68, 82, 88] ccc => cc, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [77, 81, 87] ccc => cc, Pos: [80, 89] cc => I, Pos: [80, 89] cc => I, Pos: [83, 92] cc => I, Pos: [83, 92] cc => I, Pos: [86, 94] cc => I, Pos: [86, 94] cc => I, Pos: [89, 105] cc => I, Pos: [89, 105] cc => I, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [95, 103] cc => I, Pos: [95, 103] cc => I, Pos: [96, 107] cc => I, Pos: [96, 107] cc => I, Pos: [97, 110] cc => I, Pos: [97, 110] cc => I, Pos: [98, 106] cc => I, Pos: [98, 106] cc => I, Pos: [100, 109] cc => I, Pos: [100, 109] cc => I, Pos: [101, 108] cc => I, Pos: [101, 108] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 116] cc => I, Pos: [106, 116] cc => I, Pos: [110, 137] cc => I, Pos: [110, 137] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [126, 139] cc => I, Pos: [126, 139] cc => I, Pos: [131, 136] cc => I, Pos: [131, 136] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [141, 158] cc => I, Pos: [141, 158] cc => I, Pos: [149, 154] cc => I, Pos: [149, 154] cc => I, Pos: [152, 170] cc => I, Pos: [152, 170] cc => I, Pos: [153, 176] cc => I, Pos: [153, 176] cc => I, Pos: [156, 161, 166] ccc => cc, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [182, 190] cc => I, Pos: [182, 190] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [189, 194] cc => I, Pos: [189, 194] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [201, 213] cc => I, Pos: [201, 213] cc => I, Pos: [204, 211] cc => I, Pos: [204, 211] cc => I, Pos: [206, 215] cc => I, Pos: [206, 215] cc => I, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I, Pos: [222, 229] cc => I, Pos: [222, 229] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [227, 242] cc => I, Pos: [227, 242] cc => I, Pos: [228, 232] cc => I, Pos: [228, 232] cc => I, Pos: [235, 238] cc => I, Pos: [235, 238] cc => I, Pos: [240, 246] cc => I, Pos: [240, 246] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [266, 280] cc => I, Pos: [266, 280] cc => I, Pos: [269, 277] cc => I, Pos: [269, 277] cc => I, Pos: [281, 287] cc => I, Pos: [281, 287] cc => I, Pos: [282, 286] cc => I, Pos: [282, 286] cc => I, Pos: [284, 288, 295] ccc => cc, Pos: [286, 297] cc => I, Pos: [286, 297] cc => I, Pos: [302, 326] cc => I, Pos: [302, 326] cc => I, Pos: [303, 312] cc => I, Pos: [303, 312] cc => I, Pos: [312, 323] cc => I, Pos: [312, 323] cc => I, Pos: [316, 321] cc => I, Pos: [316, 321] cc => I, Pos: [317, 322] cc => I, Pos: [317, 322] cc => I, Pos: [331, 339] cc => I, Pos: [331, 339] cc => I, Pos: [336, 341, 349] ccc => cc, Pos: [339, 348] cc => I, Pos: [339, 348] cc => I, Pos: [342, 346, 359] ccc => cc, Pos: [345, 352] cc => I, Pos: [345, 352] cc => I, Pos: [348, 356] cc => I, Pos: [348, 356] cc => I, Pos: [350, 354] cc => I, Pos: [350, 354] cc => I]

Plan: 1
[Pos: [1, 13] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [10, 17] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [26, 35] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [80, 89] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [86, 94] cc => I,
 Pos: [90, 96] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [98, 106] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 194] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [201, 213] cc => I,
 Pos: [204, 211] cc => I,
 Pos: [215, 222] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [303, 312] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [331, 339] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [348, 356] cc => I,
 Pos: [350, 354] cc => I]
Change: 71, Saving: 270

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015636920928955078

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 13] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [10, 17] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [26, 35] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [80, 89] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [86, 94] cc => I,
 Pos: [90, 96] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [98, 106] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 194] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [201, 213] cc => I,
 Pos: [204, 211] cc => I,
 Pos: [215, 222] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [303, 312] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [331, 339] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [348, 356] cc => I,
 Pos: [350, 354] cc => I]
Change: 71, Saving: 270

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 13] cc => I
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [10, 17] cc => I
Apply:  Pos: [19, 31] cc => I
Apply:  Pos: [20, 28] cc => I
Apply:  Pos: [21, 27] cc => I
Apply:  Pos: [26, 35] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [49, 59] cc => I
Apply:  Pos: [50, 53, 61] ccc => cc
Apply:  Pos: [58, 62] cc => I
Apply:  Pos: [68, 82, 88] ccc => cc
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [77, 81, 87] ccc => cc
Apply:  Pos: [80, 89] cc => I
Apply:  Pos: [83, 92] cc => I
Apply:  Pos: [86, 94] cc => I
Apply:  Pos: [90, 96] cc => I
Apply:  Pos: [95, 103] cc => I
Apply:  Pos: [97, 110] cc => I
Apply:  Pos: [98, 106] cc => I
Apply:  Pos: [100, 109] cc => I
Apply:  Pos: [101, 108] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [126, 139] cc => I
Apply:  Pos: [131, 136] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [141, 158] cc => I
Apply:  Pos: [152, 170] cc => I
Apply:  Pos: [153, 176] cc => I
Apply:  Pos: [156, 161, 166] ccc => cc
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [174, 184] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [182, 190] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 194] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [198, 206] cc => I
Apply:  Pos: [201, 213] cc => I
Apply:  Pos: [204, 211] cc => I
Apply:  Pos: [215, 222] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 242] cc => I
Apply:  Pos: [228, 232] cc => I
Apply:  Pos: [235, 238] cc => I
Apply:  Pos: [240, 246] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [266, 280] cc => I
Apply:  Pos: [269, 277] cc => I
Apply:  Pos: [281, 287] cc => I
Apply:  Pos: [282, 286] cc => I
Apply:  Pos: [284, 288, 295] ccc => cc
Apply:  Pos: [302, 326] cc => I
Apply:  Pos: [303, 312] cc => I
Apply:  Pos: [316, 321] cc => I
Apply:  Pos: [317, 322] cc => I
Apply:  Pos: [331, 339] cc => I
Apply:  Pos: [336, 341, 349] ccc => cc
Apply:  Pos: [342, 346, 359] ccc => cc
Apply:  Pos: [345, 352] cc => I
Apply:  Pos: [348, 356] cc => I
Apply:  Pos: [350, 354] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [3, 14], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [18, 11], [10, 13], [6, 17], [2, 8], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [12, 0], [16, 11], [10, 17], [6, 4], [4, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [2, 8], [13, 0], [6, 17], [6, 13], [5, 0], [10, 13], [12, 5], [0, 16], [15, 16], [14, 9], [6, 17], [5, 0], [2, 8], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [8, 17], [5, 15], [12, 0], [7, 1], [5, 0], [8, 19], [6, 4], [4, 7], [5, 9], [0, 16], [3, 14], [18, 11], [18, 16], [8, 17], [12, 5], [0, 11], [6, 4], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [3, 14], [12, 1], [6, 17], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [6, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  7.187532186508179

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 63]
[114, 121]
[111, 123]
[131, 144]
[160, 179]
[188, 206]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[79, 80, 88]
[137, 138, 147]
[208, 217, 220]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[59, 66, 75]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[130, 132, 139]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 63]
[114, 121]
[111, 123]
[131, 144]
[160, 179]
[188, 206]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203125

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [53, 63] cc => I, Pos: [53, 63] cc => I, Pos: [59, 66, 75] ccc => cc, Pos: [79, 80, 88] ccc => cc, Pos: [111, 123] cc => I, Pos: [111, 123] cc => I, Pos: [114, 121] cc => I, Pos: [114, 121] cc => I, Pos: [130, 132, 139] ccc => cc, Pos: [131, 144] cc => I, Pos: [131, 144] cc => I, Pos: [137, 138, 147] ccc => cc, Pos: [160, 179] cc => I, Pos: [160, 179] cc => I, Pos: [188, 206] cc => I, Pos: [188, 206] cc => I, Pos: [208, 217, 220] ccc => cc]

Plan: 1
[Pos: [53, 63] cc => I,
 Pos: [59, 66, 75] ccc => cc,
 Pos: [79, 80, 88] ccc => cc,
 Pos: [111, 123] cc => I,
 Pos: [114, 121] cc => I,
 Pos: [130, 132, 139] ccc => cc,
 Pos: [131, 144] cc => I,
 Pos: [137, 138, 147] ccc => cc,
 Pos: [160, 179] cc => I,
 Pos: [188, 206] cc => I,
 Pos: [208, 217, 220] ccc => cc]
Change: 11, Saving: 34

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015637874603271484

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [53, 63] cc => I,
 Pos: [59, 66, 75] ccc => cc,
 Pos: [79, 80, 88] ccc => cc,
 Pos: [111, 123] cc => I,
 Pos: [114, 121] cc => I,
 Pos: [130, 132, 139] ccc => cc,
 Pos: [131, 144] cc => I,
 Pos: [137, 138, 147] ccc => cc,
 Pos: [160, 179] cc => I,
 Pos: [188, 206] cc => I,
 Pos: [208, 217, 220] ccc => cc]
Change: 11, Saving: 34

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [53, 63] cc => I
Apply:  Pos: [59, 66, 75] ccc => cc
Apply:  Pos: [79, 80, 88] ccc => cc
Apply:  Pos: [111, 123] cc => I
Apply:  Pos: [114, 121] cc => I
Apply:  Pos: [130, 132, 139] ccc => cc
Apply:  Pos: [131, 144] cc => I
Apply:  Pos: [137, 138, 147] ccc => cc
Apply:  Pos: [160, 179] cc => I
Apply:  Pos: [188, 206] cc => I
Apply:  Pos: [208, 217, 220] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [1, 18], [10, 13], [6, 17], [2, 8], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [12, 0], [16, 11], [10, 17], [6, 12], [4, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [15, 16], [0, 16], [14, 9], [5, 0], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [9, 15], [12, 0], [7, 1], [5, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  4.2187628746032715

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[123, 151]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 51, 61]
[72, 73, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[123, 151]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.8124794960021973

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 51, 61] ccc => cc, Pos: [72, 73, 76] ccc => cc, Pos: [123, 151] cc => I, Pos: [123, 151] cc => I]

Plan: 1
[Pos: [48, 51, 61] ccc => cc,
 Pos: [72, 73, 76] ccc => cc,
 Pos: [123, 151] cc => I]
Change: 3, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 51, 61] ccc => cc,
 Pos: [72, 73, 76] ccc => cc,
 Pos: [123, 151] cc => I]
Change: 3, Saving: 8

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 51, 61] ccc => cc
Apply:  Pos: [72, 73, 76] ccc => cc
Apply:  Pos: [123, 151] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [1, 18], [10, 13], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [0, 16], [15, 16], [14, 9], [5, 0], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [7, 1], [5, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.8124794960021973

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.749953508377075

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [1, 18], [10, 13], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [12, 0], [4, 0], [16, 11], [10, 17], [6, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [15, 16], [0, 16], [14, 9], [5, 0], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [7, 1], [5, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.749953508377075

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [204] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 47 - (small)
 - circuit cycle: 408

Reduced: 
 - size: 156 (43.33%)
 - cycle: 312 (43.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1408231258392334

[19, 9], [6, 17], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [18, 11], [19, 15], [6, 17], [8, 3], [9, 15], [7, 1], [0, 16], [12, 5], [2, 8], [10, 17], [6, 4], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [6, 4], [10, 17], [7, 12], [18, 11], [2, 8], [5, 15], [12, 1], [6, 13], [0, 16], [19, 9], [4, 7], [8, 17], [9, 15], [17, 19], [13, 5], [10, 6], [4, 7], [2, 8], [18, 11], [9, 15], [1, 18], [6, 13], [4, 12], [8, 19], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [13, 5], [4, 12], [6, 17], [8, 19], [13, 5], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [0, 18], [19, 9], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [3, 14], [19, 9], [4, 12], [6, 17], [8, 3], [5, 0], [7, 1], [2, 10], [9, 15], [10, 13], [3, 14], [0, 18], [6, 17], [2, 8], [12, 5], [7, 1], [15, 16], [10, 13], [4, 1], [2, 8], [3, 19], [7, 12], [18, 11], [14, 9], [5, 0], [16, 11], [4, 1], [10, 13], [6, 17], [7, 12], [2, 8], [5, 0], [14, 9], [3, 19], [16, 11], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [14, 9], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [7, 1], [12, 0], [16, 11], [10, 17], [14, 9], [13, 5], [6, 4], [4, 12], [18, 11], [9, 15], [13, 5], [3, 19], [2, 10], [7, 1], [8, 17], [12, 1], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [18, 11], [12, 0], [17, 13], [14, 9], [10, 6], [18, 11], [8, 3], [19, 5], [15, 16], [12, 1], [17, 3], [15, 16], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [19, 5], [10, 17], [4, 1], [18, 16], [14, 9], [8, 3], [0, 11], [13, 12], [3, 14], [5, 9], [10, 6], [0, 18], [4, 1], [8, 17], [19, 15], [16, 11], [7, 12], [18, 11], [3, 14], [2, 8], [5, 9], [13, 0], [6, 17], [4, 1], [7, 12], [6, 13], [18, 11], [5, 0], [4, 1], [8, 17], [19, 15], [14, 9], [7, 1], [10, 13], [14, 9], [18, 11], [8, 17], [12, 5], [3, 19], [0, 16], [7, 1], [15, 16], [14, 9], [6, 17], [5, 0], [3, 19], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [7, 1], [8, 17], [5, 15], [14, 9], [12, 0], [6, 13], [16, 11], [7, 1], [5, 0], [14, 9], [16, 11], [8, 19], [6, 4], [10, 17], [4, 7], [5, 9], [10, 17], [0, 16], [19, 15], [3, 14], [6, 13], [18, 11], [7, 1], [14, 9], [19, 15], [18, 16], [8, 17], [12, 5], [10, 13], [0, 11], [6, 4], [7, 1], [0, 16], [14, 9], [6, 17], [4, 12], [18, 11], [2, 8], [10, 13], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [10, 6], [5, 0], [8, 3], [1, 18], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [1, 18], [19, 9], [5, 0], [10, 6], [17, 3], [2, 8], [7, 12], [15, 16], [12, 1], [2, 8], [17, 3], [19, 15], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [15, 16], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [6, 4], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [2, 10], [19, 15], [6, 17], [18, 11], [14, 9], [8, 3], [7, 12], [13, 0], [17, 19], [14, 9], [8, 3], [2, 10], [1, 18], [15, 16], [6, 4], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [16, 11], [7, 12], [1, 18], [10, 13], [8, 19], [0, 11], [9, 15], [6, 4], [17, 3], [4, 7], [19, 9], [12, 5], [10, 13], [0, 16], [18, 11], [8, 17], [4, 7], [6, 17], [18, 11], [19, 5], [10, 13], [12, 1], [8, 3], [9, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 53, 61]
[156, 161, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 87]
[68, 82, 88]
[284, 288, 295]
[342, 346, 359]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[336, 341, 349]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.077974319458008

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 13] cc => I, Pos: [1, 13] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [10, 17] cc => I, Pos: [10, 17] cc => I, Pos: [11, 30] cc => I, Pos: [11, 30] cc => I, Pos: [17, 26] cc => I, Pos: [17, 26] cc => I, Pos: [19, 31] cc => I, Pos: [19, 31] cc => I, Pos: [20, 28] cc => I, Pos: [20, 28] cc => I, Pos: [21, 27] cc => I, Pos: [21, 27] cc => I, Pos: [26, 35] cc => I, Pos: [26, 35] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [35, 52] cc => I, Pos: [35, 52] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [49, 59] cc => I, Pos: [49, 59] cc => I, Pos: [50, 53, 61] ccc => cc, Pos: [58, 62] cc => I, Pos: [58, 62] cc => I, Pos: [68, 82, 88] ccc => cc, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [77, 81, 87] ccc => cc, Pos: [80, 89] cc => I, Pos: [80, 89] cc => I, Pos: [83, 92] cc => I, Pos: [83, 92] cc => I, Pos: [86, 94] cc => I, Pos: [86, 94] cc => I, Pos: [89, 105] cc => I, Pos: [89, 105] cc => I, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [95, 103] cc => I, Pos: [95, 103] cc => I, Pos: [96, 107] cc => I, Pos: [96, 107] cc => I, Pos: [97, 110] cc => I, Pos: [97, 110] cc => I, Pos: [98, 106] cc => I, Pos: [98, 106] cc => I, Pos: [100, 109] cc => I, Pos: [100, 109] cc => I, Pos: [101, 108] cc => I, Pos: [101, 108] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 116] cc => I, Pos: [106, 116] cc => I, Pos: [110, 137] cc => I, Pos: [110, 137] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [126, 139] cc => I, Pos: [126, 139] cc => I, Pos: [131, 136] cc => I, Pos: [131, 136] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [141, 158] cc => I, Pos: [141, 158] cc => I, Pos: [149, 154] cc => I, Pos: [149, 154] cc => I, Pos: [152, 170] cc => I, Pos: [152, 170] cc => I, Pos: [153, 176] cc => I, Pos: [153, 176] cc => I, Pos: [156, 161, 166] ccc => cc, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [182, 190] cc => I, Pos: [182, 190] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [189, 194] cc => I, Pos: [189, 194] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [201, 213] cc => I, Pos: [201, 213] cc => I, Pos: [204, 211] cc => I, Pos: [204, 211] cc => I, Pos: [206, 215] cc => I, Pos: [206, 215] cc => I, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I, Pos: [222, 229] cc => I, Pos: [222, 229] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [227, 242] cc => I, Pos: [227, 242] cc => I, Pos: [228, 232] cc => I, Pos: [228, 232] cc => I, Pos: [235, 238] cc => I, Pos: [235, 238] cc => I, Pos: [240, 246] cc => I, Pos: [240, 246] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [266, 280] cc => I, Pos: [266, 280] cc => I, Pos: [269, 277] cc => I, Pos: [269, 277] cc => I, Pos: [281, 287] cc => I, Pos: [281, 287] cc => I, Pos: [282, 286] cc => I, Pos: [282, 286] cc => I, Pos: [284, 288, 295] ccc => cc, Pos: [286, 297] cc => I, Pos: [286, 297] cc => I, Pos: [302, 326] cc => I, Pos: [302, 326] cc => I, Pos: [303, 312] cc => I, Pos: [303, 312] cc => I, Pos: [312, 323] cc => I, Pos: [312, 323] cc => I, Pos: [316, 321] cc => I, Pos: [316, 321] cc => I, Pos: [317, 322] cc => I, Pos: [317, 322] cc => I, Pos: [331, 339] cc => I, Pos: [331, 339] cc => I, Pos: [336, 341, 349] ccc => cc, Pos: [339, 348] cc => I, Pos: [339, 348] cc => I, Pos: [342, 346, 359] ccc => cc, Pos: [345, 352] cc => I, Pos: [345, 352] cc => I, Pos: [348, 356] cc => I, Pos: [348, 356] cc => I, Pos: [350, 354] cc => I, Pos: [350, 354] cc => I]

Plan: 1
[Pos: [1, 13] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [10, 17] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [26, 35] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [80, 89] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [86, 94] cc => I,
 Pos: [90, 96] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [98, 106] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 194] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [201, 213] cc => I,
 Pos: [204, 211] cc => I,
 Pos: [215, 222] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [303, 312] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [331, 339] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [348, 356] cc => I,
 Pos: [350, 354] cc => I]
Change: 71, Saving: 74

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.187485933303833

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 13] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [10, 17] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [26, 35] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [80, 89] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [86, 94] cc => I,
 Pos: [90, 96] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [98, 106] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 194] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [201, 213] cc => I,
 Pos: [204, 211] cc => I,
 Pos: [215, 222] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [303, 312] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [331, 339] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [348, 356] cc => I,
 Pos: [350, 354] cc => I]
Change: 71, Saving: 74

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 13] cc => I
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [10, 17] cc => I
Apply:  Pos: [19, 31] cc => I
Apply:  Pos: [20, 28] cc => I
Apply:  Pos: [21, 27] cc => I
Apply:  Pos: [26, 35] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [49, 59] cc => I
Apply:  Pos: [50, 53, 61] ccc => cc
Apply:  Pos: [58, 62] cc => I
Apply:  Pos: [68, 82, 88] ccc => cc
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [77, 81, 87] ccc => cc
Apply:  Pos: [80, 89] cc => I
Apply:  Pos: [83, 92] cc => I
Apply:  Pos: [86, 94] cc => I
Apply:  Pos: [90, 96] cc => I
Apply:  Pos: [95, 103] cc => I
Apply:  Pos: [97, 110] cc => I
Apply:  Pos: [98, 106] cc => I
Apply:  Pos: [100, 109] cc => I
Apply:  Pos: [101, 108] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [126, 139] cc => I
Apply:  Pos: [131, 136] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [141, 158] cc => I
Apply:  Pos: [152, 170] cc => I
Apply:  Pos: [153, 176] cc => I
Apply:  Pos: [156, 161, 166] ccc => cc
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [174, 184] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [182, 190] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 194] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [198, 206] cc => I
Apply:  Pos: [201, 213] cc => I
Apply:  Pos: [204, 211] cc => I
Apply:  Pos: [215, 222] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 242] cc => I
Apply:  Pos: [228, 232] cc => I
Apply:  Pos: [235, 238] cc => I
Apply:  Pos: [240, 246] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [266, 280] cc => I
Apply:  Pos: [269, 277] cc => I
Apply:  Pos: [281, 287] cc => I
Apply:  Pos: [282, 286] cc => I
Apply:  Pos: [284, 288, 295] ccc => cc
Apply:  Pos: [302, 326] cc => I
Apply:  Pos: [303, 312] cc => I
Apply:  Pos: [316, 321] cc => I
Apply:  Pos: [317, 322] cc => I
Apply:  Pos: [331, 339] cc => I
Apply:  Pos: [336, 341, 349] ccc => cc
Apply:  Pos: [342, 346, 359] ccc => cc
Apply:  Pos: [345, 352] cc => I
Apply:  Pos: [348, 356] cc => I
Apply:  Pos: [350, 354] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [3, 14], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [18, 11], [10, 13], [6, 17], [2, 8], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [12, 0], [16, 11], [10, 17], [6, 4], [4, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [2, 8], [13, 0], [6, 17], [6, 13], [5, 0], [10, 13], [12, 5], [0, 16], [15, 16], [14, 9], [6, 17], [5, 0], [2, 8], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [8, 17], [5, 15], [12, 0], [7, 1], [5, 0], [8, 19], [6, 4], [4, 7], [5, 9], [0, 16], [3, 14], [18, 11], [18, 16], [8, 17], [12, 5], [0, 11], [6, 4], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [3, 14], [12, 1], [6, 17], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [6, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  7.265460252761841

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 63]
[114, 121]
[111, 123]
[131, 144]
[160, 179]
[188, 206]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[79, 80, 88]
[137, 138, 147]
[208, 217, 220]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[59, 66, 75]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[130, 132, 139]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 63]
[114, 121]
[111, 123]
[131, 144]
[160, 179]
[188, 206]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.171865701675415

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [53, 63] cc => I, Pos: [53, 63] cc => I, Pos: [59, 66, 75] ccc => cc, Pos: [79, 80, 88] ccc => cc, Pos: [111, 123] cc => I, Pos: [111, 123] cc => I, Pos: [114, 121] cc => I, Pos: [114, 121] cc => I, Pos: [130, 132, 139] ccc => cc, Pos: [131, 144] cc => I, Pos: [131, 144] cc => I, Pos: [137, 138, 147] ccc => cc, Pos: [160, 179] cc => I, Pos: [160, 179] cc => I, Pos: [188, 206] cc => I, Pos: [188, 206] cc => I, Pos: [208, 217, 220] ccc => cc]

Plan: 1
[Pos: [53, 63] cc => I,
 Pos: [59, 66, 75] ccc => cc,
 Pos: [79, 80, 88] ccc => cc,
 Pos: [111, 123] cc => I,
 Pos: [114, 121] cc => I,
 Pos: [130, 132, 139] ccc => cc,
 Pos: [131, 144] cc => I,
 Pos: [137, 138, 147] ccc => cc,
 Pos: [160, 179] cc => I,
 Pos: [188, 206] cc => I,
 Pos: [208, 217, 220] ccc => cc]
Change: 11, Saving: 11

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [53, 63] cc => I,
 Pos: [59, 66, 75] ccc => cc,
 Pos: [79, 80, 88] ccc => cc,
 Pos: [111, 123] cc => I,
 Pos: [114, 121] cc => I,
 Pos: [130, 132, 139] ccc => cc,
 Pos: [131, 144] cc => I,
 Pos: [137, 138, 147] ccc => cc,
 Pos: [160, 179] cc => I,
 Pos: [188, 206] cc => I,
 Pos: [208, 217, 220] ccc => cc]
Change: 11, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [53, 63] cc => I
Apply:  Pos: [59, 66, 75] ccc => cc
Apply:  Pos: [79, 80, 88] ccc => cc
Apply:  Pos: [111, 123] cc => I
Apply:  Pos: [114, 121] cc => I
Apply:  Pos: [130, 132, 139] ccc => cc
Apply:  Pos: [131, 144] cc => I
Apply:  Pos: [137, 138, 147] ccc => cc
Apply:  Pos: [160, 179] cc => I
Apply:  Pos: [188, 206] cc => I
Apply:  Pos: [208, 217, 220] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [1, 18], [10, 13], [6, 17], [2, 8], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [12, 0], [16, 11], [10, 17], [6, 12], [4, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [15, 16], [0, 16], [14, 9], [5, 0], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [9, 15], [12, 0], [7, 1], [5, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  4.187489748001099

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[123, 151]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 51, 61]
[72, 73, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[123, 151]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7812328338623047

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 51, 61] ccc => cc, Pos: [72, 73, 76] ccc => cc, Pos: [123, 151] cc => I, Pos: [123, 151] cc => I]

Plan: 1
[Pos: [48, 51, 61] ccc => cc,
 Pos: [72, 73, 76] ccc => cc,
 Pos: [123, 151] cc => I]
Change: 3, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 51, 61] ccc => cc,
 Pos: [72, 73, 76] ccc => cc,
 Pos: [123, 151] cc => I]
Change: 3, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 51, 61] ccc => cc
Apply:  Pos: [72, 73, 76] ccc => cc
Apply:  Pos: [123, 151] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [1, 18], [10, 13], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [0, 16], [15, 16], [14, 9], [5, 0], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [7, 1], [5, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.7812328338623047

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.703187942504883

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [1, 18], [10, 13], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [12, 0], [4, 0], [16, 11], [10, 17], [6, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [15, 16], [0, 16], [14, 9], [5, 0], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [7, 1], [5, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.703187942504883

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [204] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 47 - (small)
 - circuit cycle: 408

Reduced: 
 - size: 156 (43.33%)
 - depth: -2 (-4.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061427116394043

[19, 9], [6, 17], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [18, 11], [19, 15], [6, 17], [8, 3], [9, 15], [7, 1], [0, 16], [12, 5], [2, 8], [10, 17], [6, 4], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [6, 4], [10, 17], [7, 12], [18, 11], [2, 8], [5, 15], [12, 1], [6, 13], [0, 16], [19, 9], [4, 7], [8, 17], [9, 15], [17, 19], [13, 5], [10, 6], [4, 7], [2, 8], [18, 11], [9, 15], [1, 18], [6, 13], [4, 12], [8, 19], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [13, 5], [4, 12], [6, 17], [8, 19], [13, 5], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [0, 18], [19, 9], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [3, 14], [19, 9], [4, 12], [6, 17], [8, 3], [5, 0], [7, 1], [2, 10], [9, 15], [10, 13], [3, 14], [0, 18], [6, 17], [2, 8], [12, 5], [7, 1], [15, 16], [10, 13], [4, 1], [2, 8], [3, 19], [7, 12], [18, 11], [14, 9], [5, 0], [16, 11], [4, 1], [10, 13], [6, 17], [7, 12], [2, 8], [5, 0], [14, 9], [3, 19], [16, 11], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [14, 9], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [7, 1], [12, 0], [16, 11], [10, 17], [14, 9], [13, 5], [6, 4], [4, 12], [18, 11], [9, 15], [13, 5], [3, 19], [2, 10], [7, 1], [8, 17], [12, 1], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [18, 11], [12, 0], [17, 13], [14, 9], [10, 6], [18, 11], [8, 3], [19, 5], [15, 16], [12, 1], [17, 3], [15, 16], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [19, 5], [10, 17], [4, 1], [18, 16], [14, 9], [8, 3], [0, 11], [13, 12], [3, 14], [5, 9], [10, 6], [0, 18], [4, 1], [8, 17], [19, 15], [16, 11], [7, 12], [18, 11], [3, 14], [2, 8], [5, 9], [13, 0], [6, 17], [4, 1], [7, 12], [6, 13], [18, 11], [5, 0], [4, 1], [8, 17], [19, 15], [14, 9], [7, 1], [10, 13], [14, 9], [18, 11], [8, 17], [12, 5], [3, 19], [0, 16], [7, 1], [15, 16], [14, 9], [6, 17], [5, 0], [3, 19], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [7, 1], [8, 17], [5, 15], [14, 9], [12, 0], [6, 13], [16, 11], [7, 1], [5, 0], [14, 9], [16, 11], [8, 19], [6, 4], [10, 17], [4, 7], [5, 9], [10, 17], [0, 16], [19, 15], [3, 14], [6, 13], [18, 11], [7, 1], [14, 9], [19, 15], [18, 16], [8, 17], [12, 5], [10, 13], [0, 11], [6, 4], [7, 1], [0, 16], [14, 9], [6, 17], [4, 12], [18, 11], [2, 8], [10, 13], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [10, 6], [5, 0], [8, 3], [1, 18], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [1, 18], [19, 9], [5, 0], [10, 6], [17, 3], [2, 8], [7, 12], [15, 16], [12, 1], [2, 8], [17, 3], [19, 15], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [15, 16], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [6, 4], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [2, 10], [19, 15], [6, 17], [18, 11], [14, 9], [8, 3], [7, 12], [13, 0], [17, 19], [14, 9], [8, 3], [2, 10], [1, 18], [15, 16], [6, 4], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [16, 11], [7, 12], [1, 18], [10, 13], [8, 19], [0, 11], [9, 15], [6, 4], [17, 3], [4, 7], [19, 9], [12, 5], [10, 13], [0, 16], [18, 11], [8, 17], [4, 7], [6, 17], [18, 11], [19, 5], [10, 13], [12, 1], [8, 3], [9, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 53, 61]
[156, 161, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 87]
[68, 82, 88]
[284, 288, 295]
[342, 346, 359]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[336, 341, 349]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.122461557388306

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 13] cc => I, Pos: [1, 13] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [10, 17] cc => I, Pos: [10, 17] cc => I, Pos: [11, 30] cc => I, Pos: [11, 30] cc => I, Pos: [17, 26] cc => I, Pos: [17, 26] cc => I, Pos: [19, 31] cc => I, Pos: [19, 31] cc => I, Pos: [20, 28] cc => I, Pos: [20, 28] cc => I, Pos: [21, 27] cc => I, Pos: [21, 27] cc => I, Pos: [26, 35] cc => I, Pos: [26, 35] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [35, 52] cc => I, Pos: [35, 52] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [49, 59] cc => I, Pos: [49, 59] cc => I, Pos: [50, 53, 61] ccc => cc, Pos: [58, 62] cc => I, Pos: [58, 62] cc => I, Pos: [68, 82, 88] ccc => cc, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [77, 81, 87] ccc => cc, Pos: [80, 89] cc => I, Pos: [80, 89] cc => I, Pos: [83, 92] cc => I, Pos: [83, 92] cc => I, Pos: [86, 94] cc => I, Pos: [86, 94] cc => I, Pos: [89, 105] cc => I, Pos: [89, 105] cc => I, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [95, 103] cc => I, Pos: [95, 103] cc => I, Pos: [96, 107] cc => I, Pos: [96, 107] cc => I, Pos: [97, 110] cc => I, Pos: [97, 110] cc => I, Pos: [98, 106] cc => I, Pos: [98, 106] cc => I, Pos: [100, 109] cc => I, Pos: [100, 109] cc => I, Pos: [101, 108] cc => I, Pos: [101, 108] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 116] cc => I, Pos: [106, 116] cc => I, Pos: [110, 137] cc => I, Pos: [110, 137] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [126, 139] cc => I, Pos: [126, 139] cc => I, Pos: [131, 136] cc => I, Pos: [131, 136] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [141, 158] cc => I, Pos: [141, 158] cc => I, Pos: [149, 154] cc => I, Pos: [149, 154] cc => I, Pos: [152, 170] cc => I, Pos: [152, 170] cc => I, Pos: [153, 176] cc => I, Pos: [153, 176] cc => I, Pos: [156, 161, 166] ccc => cc, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [182, 190] cc => I, Pos: [182, 190] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [189, 194] cc => I, Pos: [189, 194] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [201, 213] cc => I, Pos: [201, 213] cc => I, Pos: [204, 211] cc => I, Pos: [204, 211] cc => I, Pos: [206, 215] cc => I, Pos: [206, 215] cc => I, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I, Pos: [222, 229] cc => I, Pos: [222, 229] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [227, 242] cc => I, Pos: [227, 242] cc => I, Pos: [228, 232] cc => I, Pos: [228, 232] cc => I, Pos: [235, 238] cc => I, Pos: [235, 238] cc => I, Pos: [240, 246] cc => I, Pos: [240, 246] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [266, 280] cc => I, Pos: [266, 280] cc => I, Pos: [269, 277] cc => I, Pos: [269, 277] cc => I, Pos: [281, 287] cc => I, Pos: [281, 287] cc => I, Pos: [282, 286] cc => I, Pos: [282, 286] cc => I, Pos: [284, 288, 295] ccc => cc, Pos: [286, 297] cc => I, Pos: [286, 297] cc => I, Pos: [302, 326] cc => I, Pos: [302, 326] cc => I, Pos: [303, 312] cc => I, Pos: [303, 312] cc => I, Pos: [312, 323] cc => I, Pos: [312, 323] cc => I, Pos: [316, 321] cc => I, Pos: [316, 321] cc => I, Pos: [317, 322] cc => I, Pos: [317, 322] cc => I, Pos: [331, 339] cc => I, Pos: [331, 339] cc => I, Pos: [336, 341, 349] ccc => cc, Pos: [339, 348] cc => I, Pos: [339, 348] cc => I, Pos: [342, 346, 359] ccc => cc, Pos: [345, 352] cc => I, Pos: [345, 352] cc => I, Pos: [348, 356] cc => I, Pos: [348, 356] cc => I, Pos: [350, 354] cc => I, Pos: [350, 354] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 13] cc => I,
 Pos: [11, 30] cc => I,
 Pos: [10, 17] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [26, 35] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [89, 105] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [94, 104] cc => I,
 Pos: [90, 96] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [98, 106] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [189, 194] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [206, 215] cc => I,
 Pos: [211, 218] cc => I,
 Pos: [222, 229] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [312, 323] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [331, 339] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [348, 356] cc => I,
 Pos: [350, 354] cc => I]
Change: 69, Saving: 262

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 13] cc => I
Apply:  Pos: [11, 30] cc => I
Apply:  Pos: [10, 17] cc => I
Apply:  Pos: [19, 31] cc => I
Apply:  Pos: [20, 28] cc => I
Apply:  Pos: [21, 27] cc => I
Apply:  Pos: [26, 35] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [49, 59] cc => I
Apply:  Pos: [50, 53, 61] ccc => cc
Apply:  Pos: [58, 62] cc => I
Apply:  Pos: [68, 82, 88] ccc => cc
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [77, 81, 87] ccc => cc
Apply:  Pos: [89, 105] cc => I
Apply:  Pos: [83, 92] cc => I
Apply:  Pos: [94, 104] cc => I
Apply:  Pos: [90, 96] cc => I
Apply:  Pos: [95, 103] cc => I
Apply:  Pos: [97, 110] cc => I
Apply:  Pos: [98, 106] cc => I
Apply:  Pos: [100, 109] cc => I
Apply:  Pos: [101, 108] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [126, 139] cc => I
Apply:  Pos: [131, 136] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [141, 158] cc => I
Apply:  Pos: [152, 170] cc => I
Apply:  Pos: [153, 176] cc => I
Apply:  Pos: [156, 161, 166] ccc => cc
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [174, 184] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [182, 190] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [189, 194] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [206, 215] cc => I
Apply:  Pos: [211, 218] cc => I
Apply:  Pos: [222, 229] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 242] cc => I
Apply:  Pos: [228, 232] cc => I
Apply:  Pos: [235, 238] cc => I
Apply:  Pos: [240, 246] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [266, 280] cc => I
Apply:  Pos: [269, 277] cc => I
Apply:  Pos: [281, 287] cc => I
Apply:  Pos: [282, 286] cc => I
Apply:  Pos: [284, 288, 295] ccc => cc
Apply:  Pos: [302, 326] cc => I
Apply:  Pos: [312, 323] cc => I
Apply:  Pos: [316, 321] cc => I
Apply:  Pos: [317, 322] cc => I
Apply:  Pos: [331, 339] cc => I
Apply:  Pos: [336, 341, 349] ccc => cc
Apply:  Pos: [342, 346, 359] ccc => cc
Apply:  Pos: [345, 352] cc => I
Apply:  Pos: [348, 356] cc => I
Apply:  Pos: [350, 354] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [18, 11], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [3, 14], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [18, 11], [2, 8], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [12, 0], [16, 11], [10, 17], [6, 4], [4, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [18, 11], [2, 8], [13, 0], [6, 17], [6, 13], [5, 0], [7, 1], [10, 13], [12, 5], [3, 19], [0, 16], [15, 16], [14, 9], [6, 17], [5, 0], [2, 8], [18, 11], [13, 12], [4, 12], [17, 13], [0, 18], [2, 10], [9, 15], [8, 17], [5, 15], [12, 0], [5, 0], [8, 19], [6, 4], [4, 7], [5, 9], [0, 16], [3, 14], [18, 11], [18, 16], [8, 17], [12, 5], [0, 11], [6, 4], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [3, 14], [12, 1], [6, 17], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [6, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  7.122461557388306

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 28]
[56, 65]
[117, 126]
[114, 128]
[136, 148]
[164, 183]
[193, 210]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[81, 82, 90]
[141, 142, 151]
[212, 221, 224]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 77]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 137, 143]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 28]
[56, 65]
[117, 126]
[114, 128]
[136, 148]
[164, 183]
[193, 210]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.2510905265808105

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 28] cc => I, Pos: [4, 28] cc => I, Pos: [56, 65] cc => I, Pos: [56, 65] cc => I, Pos: [63, 68, 77] ccc => cc, Pos: [81, 82, 90] ccc => cc, Pos: [114, 128] cc => I, Pos: [114, 128] cc => I, Pos: [117, 126] cc => I, Pos: [117, 126] cc => I, Pos: [135, 137, 143] ccc => cc, Pos: [136, 148] cc => I, Pos: [136, 148] cc => I, Pos: [141, 142, 151] ccc => cc, Pos: [164, 183] cc => I, Pos: [164, 183] cc => I, Pos: [193, 210] cc => I, Pos: [193, 210] cc => I, Pos: [212, 221, 224] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 28] cc => I,
 Pos: [56, 65] cc => I,
 Pos: [63, 68, 77] ccc => cc,
 Pos: [81, 82, 90] ccc => cc,
 Pos: [114, 128] cc => I,
 Pos: [117, 126] cc => I,
 Pos: [135, 137, 143] ccc => cc,
 Pos: [136, 148] cc => I,
 Pos: [141, 142, 151] ccc => cc,
 Pos: [164, 183] cc => I,
 Pos: [193, 210] cc => I,
 Pos: [212, 221, 224] ccc => cc]
Change: 12, Saving: 38

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 28] cc => I
Apply:  Pos: [56, 65] cc => I
Apply:  Pos: [63, 68, 77] ccc => cc
Apply:  Pos: [81, 82, 90] ccc => cc
Apply:  Pos: [114, 128] cc => I
Apply:  Pos: [117, 126] cc => I
Apply:  Pos: [135, 137, 143] ccc => cc
Apply:  Pos: [136, 148] cc => I
Apply:  Pos: [141, 142, 151] ccc => cc
Apply:  Pos: [164, 183] cc => I
Apply:  Pos: [193, 210] cc => I
Apply:  Pos: [212, 221, 224] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [1, 18], [2, 8], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [12, 0], [16, 11], [10, 17], [6, 12], [4, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [18, 11], [16, 11], [13, 0], [6, 13], [5, 0], [7, 1], [10, 13], [12, 5], [3, 19], [15, 16], [0, 16], [14, 9], [5, 0], [18, 11], [4, 12], [13, 12], [17, 13], [0, 18], [2, 10], [5, 9], [9, 15], [5, 0], [12, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [2, 10], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  4.2510905265808105

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[107, 119]
[126, 153]
[124, 173]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 51, 61]
[72, 73, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[107, 119]
[126, 153]
[124, 173]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.828613519668579

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 51, 61] ccc => cc, Pos: [72, 73, 76] ccc => cc, Pos: [107, 119] cc => I, Pos: [107, 119] cc => I, Pos: [124, 173] cc => I, Pos: [124, 173] cc => I, Pos: [126, 153] cc => I, Pos: [126, 153] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 51, 61] ccc => cc,
 Pos: [72, 73, 76] ccc => cc,
 Pos: [107, 119] cc => I,
 Pos: [124, 173] cc => I,
 Pos: [126, 153] cc => I]
Change: 5, Saving: 16

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 51, 61] ccc => cc
Apply:  Pos: [72, 73, 76] ccc => cc
Apply:  Pos: [107, 119] cc => I
Apply:  Pos: [124, 173] cc => I
Apply:  Pos: [126, 153] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [1, 18], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [7, 1], [10, 13], [12, 5], [3, 19], [0, 16], [15, 16], [14, 9], [5, 0], [13, 12], [4, 12], [17, 13], [0, 18], [5, 9], [12, 0], [5, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.828613519668579

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[115, 119, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.657803773880005

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [115, 119, 121] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [115, 119, 121] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [115, 119, 121] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [1, 18], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [12, 0], [4, 0], [16, 11], [10, 17], [6, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [7, 1], [10, 13], [12, 5], [3, 19], [15, 16], [0, 16], [14, 9], [5, 18], [4, 12], [13, 12], [17, 13], [0, 18], [5, 9], [12, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.657803773880005

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6414639949798584

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [1, 18], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [7, 1], [10, 13], [12, 5], [3, 19], [0, 16], [15, 16], [14, 9], [5, 18], [13, 12], [4, 12], [17, 13], [0, 18], [5, 9], [12, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.6414639949798584

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [201] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 402

Reduced: 
 - size: 159 (44.17%)
 - cycle: 318 (44.17%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061570167541504

[19, 9], [6, 17], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [18, 11], [19, 15], [6, 17], [8, 3], [9, 15], [7, 1], [0, 16], [12, 5], [2, 8], [10, 17], [6, 4], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [6, 4], [10, 17], [7, 12], [18, 11], [2, 8], [5, 15], [12, 1], [6, 13], [0, 16], [19, 9], [4, 7], [8, 17], [9, 15], [17, 19], [13, 5], [10, 6], [4, 7], [2, 8], [18, 11], [9, 15], [1, 18], [6, 13], [4, 12], [8, 19], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [13, 5], [4, 12], [6, 17], [8, 19], [13, 5], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [0, 18], [19, 9], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [3, 14], [19, 9], [4, 12], [6, 17], [8, 3], [5, 0], [7, 1], [2, 10], [9, 15], [10, 13], [3, 14], [0, 18], [6, 17], [2, 8], [12, 5], [7, 1], [15, 16], [10, 13], [4, 1], [2, 8], [3, 19], [7, 12], [18, 11], [14, 9], [5, 0], [16, 11], [4, 1], [10, 13], [6, 17], [7, 12], [2, 8], [5, 0], [14, 9], [3, 19], [16, 11], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [14, 9], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [7, 1], [12, 0], [16, 11], [10, 17], [14, 9], [13, 5], [6, 4], [4, 12], [18, 11], [9, 15], [13, 5], [3, 19], [2, 10], [7, 1], [8, 17], [12, 1], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [18, 11], [12, 0], [17, 13], [14, 9], [10, 6], [18, 11], [8, 3], [19, 5], [15, 16], [12, 1], [17, 3], [15, 16], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [19, 5], [10, 17], [4, 1], [18, 16], [14, 9], [8, 3], [0, 11], [13, 12], [3, 14], [5, 9], [10, 6], [0, 18], [4, 1], [8, 17], [19, 15], [16, 11], [7, 12], [18, 11], [3, 14], [2, 8], [5, 9], [13, 0], [6, 17], [4, 1], [7, 12], [6, 13], [18, 11], [5, 0], [4, 1], [8, 17], [19, 15], [14, 9], [7, 1], [10, 13], [14, 9], [18, 11], [8, 17], [12, 5], [3, 19], [0, 16], [7, 1], [15, 16], [14, 9], [6, 17], [5, 0], [3, 19], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [7, 1], [8, 17], [5, 15], [14, 9], [12, 0], [6, 13], [16, 11], [7, 1], [5, 0], [14, 9], [16, 11], [8, 19], [6, 4], [10, 17], [4, 7], [5, 9], [10, 17], [0, 16], [19, 15], [3, 14], [6, 13], [18, 11], [7, 1], [14, 9], [19, 15], [18, 16], [8, 17], [12, 5], [10, 13], [0, 11], [6, 4], [7, 1], [0, 16], [14, 9], [6, 17], [4, 12], [18, 11], [2, 8], [10, 13], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [10, 6], [5, 0], [8, 3], [1, 18], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [1, 18], [19, 9], [5, 0], [10, 6], [17, 3], [2, 8], [7, 12], [15, 16], [12, 1], [2, 8], [17, 3], [19, 15], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [15, 16], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [6, 4], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [2, 10], [19, 15], [6, 17], [18, 11], [14, 9], [8, 3], [7, 12], [13, 0], [17, 19], [14, 9], [8, 3], [2, 10], [1, 18], [15, 16], [6, 4], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [16, 11], [7, 12], [1, 18], [10, 13], [8, 19], [0, 11], [9, 15], [6, 4], [17, 3], [4, 7], [19, 9], [12, 5], [10, 13], [0, 16], [18, 11], [8, 17], [4, 7], [6, 17], [18, 11], [19, 5], [10, 13], [12, 1], [8, 3], [9, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 53, 61]
[156, 161, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 87]
[68, 82, 88]
[284, 288, 295]
[342, 346, 359]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[336, 341, 349]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.219181776046753

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 13] cc => I, Pos: [1, 13] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [10, 17] cc => I, Pos: [10, 17] cc => I, Pos: [11, 30] cc => I, Pos: [11, 30] cc => I, Pos: [17, 26] cc => I, Pos: [17, 26] cc => I, Pos: [19, 31] cc => I, Pos: [19, 31] cc => I, Pos: [20, 28] cc => I, Pos: [20, 28] cc => I, Pos: [21, 27] cc => I, Pos: [21, 27] cc => I, Pos: [26, 35] cc => I, Pos: [26, 35] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [35, 52] cc => I, Pos: [35, 52] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [49, 59] cc => I, Pos: [49, 59] cc => I, Pos: [50, 53, 61] ccc => cc, Pos: [58, 62] cc => I, Pos: [58, 62] cc => I, Pos: [68, 82, 88] ccc => cc, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [77, 81, 87] ccc => cc, Pos: [80, 89] cc => I, Pos: [80, 89] cc => I, Pos: [83, 92] cc => I, Pos: [83, 92] cc => I, Pos: [86, 94] cc => I, Pos: [86, 94] cc => I, Pos: [89, 105] cc => I, Pos: [89, 105] cc => I, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [95, 103] cc => I, Pos: [95, 103] cc => I, Pos: [96, 107] cc => I, Pos: [96, 107] cc => I, Pos: [97, 110] cc => I, Pos: [97, 110] cc => I, Pos: [98, 106] cc => I, Pos: [98, 106] cc => I, Pos: [100, 109] cc => I, Pos: [100, 109] cc => I, Pos: [101, 108] cc => I, Pos: [101, 108] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 116] cc => I, Pos: [106, 116] cc => I, Pos: [110, 137] cc => I, Pos: [110, 137] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [126, 139] cc => I, Pos: [126, 139] cc => I, Pos: [131, 136] cc => I, Pos: [131, 136] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [141, 158] cc => I, Pos: [141, 158] cc => I, Pos: [149, 154] cc => I, Pos: [149, 154] cc => I, Pos: [152, 170] cc => I, Pos: [152, 170] cc => I, Pos: [153, 176] cc => I, Pos: [153, 176] cc => I, Pos: [156, 161, 166] ccc => cc, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [182, 190] cc => I, Pos: [182, 190] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [189, 194] cc => I, Pos: [189, 194] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [201, 213] cc => I, Pos: [201, 213] cc => I, Pos: [204, 211] cc => I, Pos: [204, 211] cc => I, Pos: [206, 215] cc => I, Pos: [206, 215] cc => I, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I, Pos: [222, 229] cc => I, Pos: [222, 229] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [227, 242] cc => I, Pos: [227, 242] cc => I, Pos: [228, 232] cc => I, Pos: [228, 232] cc => I, Pos: [235, 238] cc => I, Pos: [235, 238] cc => I, Pos: [240, 246] cc => I, Pos: [240, 246] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [266, 280] cc => I, Pos: [266, 280] cc => I, Pos: [269, 277] cc => I, Pos: [269, 277] cc => I, Pos: [281, 287] cc => I, Pos: [281, 287] cc => I, Pos: [282, 286] cc => I, Pos: [282, 286] cc => I, Pos: [284, 288, 295] ccc => cc, Pos: [286, 297] cc => I, Pos: [286, 297] cc => I, Pos: [302, 326] cc => I, Pos: [302, 326] cc => I, Pos: [303, 312] cc => I, Pos: [303, 312] cc => I, Pos: [312, 323] cc => I, Pos: [312, 323] cc => I, Pos: [316, 321] cc => I, Pos: [316, 321] cc => I, Pos: [317, 322] cc => I, Pos: [317, 322] cc => I, Pos: [331, 339] cc => I, Pos: [331, 339] cc => I, Pos: [336, 341, 349] ccc => cc, Pos: [339, 348] cc => I, Pos: [339, 348] cc => I, Pos: [342, 346, 359] ccc => cc, Pos: [345, 352] cc => I, Pos: [345, 352] cc => I, Pos: [348, 356] cc => I, Pos: [348, 356] cc => I, Pos: [350, 354] cc => I, Pos: [350, 354] cc => I]

--------End Timer [Generate Plans]:  0.18748807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 13] cc => I,
 Pos: [11, 30] cc => I,
 Pos: [17, 26] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [35, 52] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [89, 105] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [94, 104] cc => I,
 Pos: [96, 107] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [110, 137] cc => I,
 Pos: [106, 116] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [200, 208] cc => I,
 Pos: [206, 215] cc => I,
 Pos: [204, 211] cc => I,
 Pos: [222, 229] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [312, 323] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [331, 339] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [348, 356] cc => I,
 Pos: [350, 354] cc => I]
Change: 68, Saving: 71

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 13] cc => I
Apply:  Pos: [11, 30] cc => I
Apply:  Pos: [17, 26] cc => I
Apply:  Pos: [19, 31] cc => I
Apply:  Pos: [20, 28] cc => I
Apply:  Pos: [21, 27] cc => I
Apply:  Pos: [35, 52] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [49, 59] cc => I
Apply:  Pos: [50, 53, 61] ccc => cc
Apply:  Pos: [58, 62] cc => I
Apply:  Pos: [68, 82, 88] ccc => cc
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [77, 81, 87] ccc => cc
Apply:  Pos: [89, 105] cc => I
Apply:  Pos: [83, 92] cc => I
Apply:  Pos: [94, 104] cc => I
Apply:  Pos: [96, 107] cc => I
Apply:  Pos: [95, 103] cc => I
Apply:  Pos: [110, 137] cc => I
Apply:  Pos: [106, 116] cc => I
Apply:  Pos: [100, 109] cc => I
Apply:  Pos: [101, 108] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [126, 139] cc => I
Apply:  Pos: [131, 136] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [141, 158] cc => I
Apply:  Pos: [152, 170] cc => I
Apply:  Pos: [153, 176] cc => I
Apply:  Pos: [156, 161, 166] ccc => cc
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [174, 184] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [182, 190] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [200, 208] cc => I
Apply:  Pos: [206, 215] cc => I
Apply:  Pos: [204, 211] cc => I
Apply:  Pos: [222, 229] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 242] cc => I
Apply:  Pos: [228, 232] cc => I
Apply:  Pos: [235, 238] cc => I
Apply:  Pos: [240, 246] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [266, 280] cc => I
Apply:  Pos: [269, 277] cc => I
Apply:  Pos: [281, 287] cc => I
Apply:  Pos: [282, 286] cc => I
Apply:  Pos: [284, 288, 295] ccc => cc
Apply:  Pos: [302, 326] cc => I
Apply:  Pos: [312, 323] cc => I
Apply:  Pos: [316, 321] cc => I
Apply:  Pos: [317, 322] cc => I
Apply:  Pos: [331, 339] cc => I
Apply:  Pos: [336, 341, 349] ccc => cc
Apply:  Pos: [342, 346, 359] ccc => cc
Apply:  Pos: [345, 352] cc => I
Apply:  Pos: [348, 356] cc => I
Apply:  Pos: [350, 354] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [18, 11], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [3, 14], [0, 18], [2, 10], [9, 15], [10, 13], [2, 8], [12, 5], [15, 16], [3, 19], [7, 12], [18, 11], [3, 14], [5, 9], [6, 4], [1, 18], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [12, 0], [16, 11], [10, 17], [6, 4], [4, 12], [9, 15], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [4, 1], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [18, 11], [2, 8], [13, 0], [6, 17], [6, 13], [5, 0], [4, 1], [14, 9], [7, 1], [10, 13], [12, 5], [0, 16], [15, 16], [6, 17], [5, 0], [2, 8], [18, 11], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [8, 17], [5, 15], [12, 0], [5, 0], [8, 19], [6, 4], [4, 7], [5, 9], [0, 16], [3, 14], [18, 11], [18, 16], [8, 17], [12, 5], [0, 11], [6, 4], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [3, 14], [12, 1], [6, 17], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [6, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  7.406669855117798

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 29]
[56, 67]
[106, 120]
[118, 127]
[115, 129]
[138, 150]
[166, 185]
[195, 212]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[82, 83, 90]
[143, 144, 153]
[214, 223, 226]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[66, 70, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[137, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 29]
[56, 67]
[106, 120]
[118, 127]
[115, 129]
[138, 150]
[166, 185]
[195, 212]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.406351804733276

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 29] cc => I, Pos: [4, 29] cc => I, Pos: [56, 67] cc => I, Pos: [56, 67] cc => I, Pos: [66, 70, 78] ccc => cc, Pos: [82, 83, 90] ccc => cc, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [115, 129] cc => I, Pos: [115, 129] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [137, 139, 145] ccc => cc, Pos: [138, 150] cc => I, Pos: [138, 150] cc => I, Pos: [143, 144, 153] ccc => cc, Pos: [166, 185] cc => I, Pos: [166, 185] cc => I, Pos: [195, 212] cc => I, Pos: [195, 212] cc => I, Pos: [214, 223, 226] ccc => cc]

--------End Timer [Generate Plans]:  0.031252384185791016

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 29] cc => I,
 Pos: [56, 67] cc => I,
 Pos: [66, 70, 78] ccc => cc,
 Pos: [82, 83, 90] ccc => cc,
 Pos: [106, 120] cc => I,
 Pos: [115, 129] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [137, 139, 145] ccc => cc,
 Pos: [138, 150] cc => I,
 Pos: [143, 144, 153] ccc => cc,
 Pos: [166, 185] cc => I,
 Pos: [195, 212] cc => I,
 Pos: [214, 223, 226] ccc => cc]
Change: 13, Saving: 13

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 29] cc => I
Apply:  Pos: [56, 67] cc => I
Apply:  Pos: [66, 70, 78] ccc => cc
Apply:  Pos: [82, 83, 90] ccc => cc
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [115, 129] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [137, 139, 145] ccc => cc
Apply:  Pos: [138, 150] cc => I
Apply:  Pos: [143, 144, 153] ccc => cc
Apply:  Pos: [166, 185] cc => I
Apply:  Pos: [195, 212] cc => I
Apply:  Pos: [214, 223, 226] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [10, 13], [2, 8], [12, 5], [15, 16], [3, 19], [7, 12], [1, 18], [5, 9], [6, 4], [18, 11], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [12, 0], [16, 11], [10, 17], [6, 12], [4, 12], [9, 15], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [18, 11], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [7, 1], [10, 13], [12, 5], [15, 16], [0, 16], [5, 0], [18, 11], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [9, 15], [5, 0], [12, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [2, 10], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  4.437604188919067

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[107, 118]
[126, 153]
[124, 173]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 51, 58]
[73, 74, 77]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[107, 118]
[126, 153]
[124, 173]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.890779733657837

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 51, 58] ccc => cc, Pos: [73, 74, 77] ccc => cc, Pos: [107, 118] cc => I, Pos: [107, 118] cc => I, Pos: [124, 173] cc => I, Pos: [124, 173] cc => I, Pos: [126, 153] cc => I, Pos: [126, 153] cc => I]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 51, 58] ccc => cc,
 Pos: [73, 74, 77] ccc => cc,
 Pos: [107, 118] cc => I,
 Pos: [124, 173] cc => I,
 Pos: [126, 153] cc => I]
Change: 5, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 51, 58] ccc => cc
Apply:  Pos: [73, 74, 77] ccc => cc
Apply:  Pos: [107, 118] cc => I
Apply:  Pos: [124, 173] cc => I
Apply:  Pos: [126, 153] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [3, 19], [7, 12], [1, 18], [5, 9], [6, 4], [18, 11], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [9, 15], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [7, 1], [10, 13], [12, 5], [0, 16], [15, 16], [5, 0], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [5, 9], [12, 0], [5, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.9064037799835205

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[114, 119, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7349298000335693

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [114, 119, 121] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [114, 119, 121] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [114, 119, 121] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [3, 19], [7, 12], [1, 18], [5, 9], [6, 4], [18, 11], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [12, 0], [4, 0], [16, 11], [10, 17], [6, 12], [9, 15], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [7, 1], [10, 13], [12, 5], [15, 16], [0, 16], [5, 18], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [5, 9], [12, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.7505528926849365

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6878981590270996

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [3, 19], [7, 12], [1, 18], [5, 9], [6, 4], [18, 11], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [9, 15], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [7, 1], [10, 13], [12, 5], [0, 16], [15, 16], [5, 18], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [5, 9], [12, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.6878981590270996

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [201] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 402

Reduced: 
 - size: 159 (44.17%)
 - depth: 0 (0.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.15623879432678223

[19, 9], [6, 17], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [18, 11], [19, 15], [6, 17], [8, 3], [9, 15], [7, 1], [0, 16], [12, 5], [2, 8], [10, 17], [6, 4], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [6, 4], [10, 17], [7, 12], [18, 11], [2, 8], [5, 15], [12, 1], [6, 13], [0, 16], [19, 9], [4, 7], [8, 17], [9, 15], [17, 19], [13, 5], [10, 6], [4, 7], [2, 8], [18, 11], [9, 15], [1, 18], [6, 13], [4, 12], [8, 19], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [13, 5], [4, 12], [6, 17], [8, 19], [13, 5], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [0, 18], [19, 9], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [3, 14], [19, 9], [4, 12], [6, 17], [8, 3], [5, 0], [7, 1], [2, 10], [9, 15], [10, 13], [3, 14], [0, 18], [6, 17], [2, 8], [12, 5], [7, 1], [15, 16], [10, 13], [4, 1], [2, 8], [3, 19], [7, 12], [18, 11], [14, 9], [5, 0], [16, 11], [4, 1], [10, 13], [6, 17], [7, 12], [2, 8], [5, 0], [14, 9], [3, 19], [16, 11], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [14, 9], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [7, 1], [12, 0], [16, 11], [10, 17], [14, 9], [13, 5], [6, 4], [4, 12], [18, 11], [9, 15], [13, 5], [3, 19], [2, 10], [7, 1], [8, 17], [12, 1], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [18, 11], [12, 0], [17, 13], [14, 9], [10, 6], [18, 11], [8, 3], [19, 5], [15, 16], [12, 1], [17, 3], [15, 16], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [19, 5], [10, 17], [4, 1], [18, 16], [14, 9], [8, 3], [0, 11], [13, 12], [3, 14], [5, 9], [10, 6], [0, 18], [4, 1], [8, 17], [19, 15], [16, 11], [7, 12], [18, 11], [3, 14], [2, 8], [5, 9], [13, 0], [6, 17], [4, 1], [7, 12], [6, 13], [18, 11], [5, 0], [4, 1], [8, 17], [19, 15], [14, 9], [7, 1], [10, 13], [14, 9], [18, 11], [8, 17], [12, 5], [3, 19], [0, 16], [7, 1], [15, 16], [14, 9], [6, 17], [5, 0], [3, 19], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [7, 1], [8, 17], [5, 15], [14, 9], [12, 0], [6, 13], [16, 11], [7, 1], [5, 0], [14, 9], [16, 11], [8, 19], [6, 4], [10, 17], [4, 7], [5, 9], [10, 17], [0, 16], [19, 15], [3, 14], [6, 13], [18, 11], [7, 1], [14, 9], [19, 15], [18, 16], [8, 17], [12, 5], [10, 13], [0, 11], [6, 4], [7, 1], [0, 16], [14, 9], [6, 17], [4, 12], [18, 11], [2, 8], [10, 13], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [10, 6], [5, 0], [8, 3], [1, 18], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [1, 18], [19, 9], [5, 0], [10, 6], [17, 3], [2, 8], [7, 12], [15, 16], [12, 1], [2, 8], [17, 3], [19, 15], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [15, 16], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [6, 4], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [2, 10], [19, 15], [6, 17], [18, 11], [14, 9], [8, 3], [7, 12], [13, 0], [17, 19], [14, 9], [8, 3], [2, 10], [1, 18], [15, 16], [6, 4], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [16, 11], [7, 12], [1, 18], [10, 13], [8, 19], [0, 11], [9, 15], [6, 4], [17, 3], [4, 7], [19, 9], [12, 5], [10, 13], [0, 16], [18, 11], [8, 17], [4, 7], [6, 17], [18, 11], [19, 5], [10, 13], [12, 1], [8, 3], [9, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 53, 61]
[156, 161, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 87]
[68, 82, 88]
[284, 288, 295]
[342, 346, 359]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[336, 341, 349]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.234407901763916

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 13] cc => I, Pos: [1, 13] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [10, 17] cc => I, Pos: [10, 17] cc => I, Pos: [11, 30] cc => I, Pos: [11, 30] cc => I, Pos: [17, 26] cc => I, Pos: [17, 26] cc => I, Pos: [19, 31] cc => I, Pos: [19, 31] cc => I, Pos: [20, 28] cc => I, Pos: [20, 28] cc => I, Pos: [21, 27] cc => I, Pos: [21, 27] cc => I, Pos: [26, 35] cc => I, Pos: [26, 35] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [35, 52] cc => I, Pos: [35, 52] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [49, 59] cc => I, Pos: [49, 59] cc => I, Pos: [50, 53, 61] ccc => cc, Pos: [58, 62] cc => I, Pos: [58, 62] cc => I, Pos: [68, 82, 88] ccc => cc, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [77, 81, 87] ccc => cc, Pos: [80, 89] cc => I, Pos: [80, 89] cc => I, Pos: [83, 92] cc => I, Pos: [83, 92] cc => I, Pos: [86, 94] cc => I, Pos: [86, 94] cc => I, Pos: [89, 105] cc => I, Pos: [89, 105] cc => I, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [95, 103] cc => I, Pos: [95, 103] cc => I, Pos: [96, 107] cc => I, Pos: [96, 107] cc => I, Pos: [97, 110] cc => I, Pos: [97, 110] cc => I, Pos: [98, 106] cc => I, Pos: [98, 106] cc => I, Pos: [100, 109] cc => I, Pos: [100, 109] cc => I, Pos: [101, 108] cc => I, Pos: [101, 108] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 116] cc => I, Pos: [106, 116] cc => I, Pos: [110, 137] cc => I, Pos: [110, 137] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [126, 139] cc => I, Pos: [126, 139] cc => I, Pos: [131, 136] cc => I, Pos: [131, 136] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [141, 158] cc => I, Pos: [141, 158] cc => I, Pos: [149, 154] cc => I, Pos: [149, 154] cc => I, Pos: [152, 170] cc => I, Pos: [152, 170] cc => I, Pos: [153, 176] cc => I, Pos: [153, 176] cc => I, Pos: [156, 161, 166] ccc => cc, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [182, 190] cc => I, Pos: [182, 190] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [189, 194] cc => I, Pos: [189, 194] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [201, 213] cc => I, Pos: [201, 213] cc => I, Pos: [204, 211] cc => I, Pos: [204, 211] cc => I, Pos: [206, 215] cc => I, Pos: [206, 215] cc => I, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I, Pos: [222, 229] cc => I, Pos: [222, 229] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [227, 242] cc => I, Pos: [227, 242] cc => I, Pos: [228, 232] cc => I, Pos: [228, 232] cc => I, Pos: [235, 238] cc => I, Pos: [235, 238] cc => I, Pos: [240, 246] cc => I, Pos: [240, 246] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [266, 280] cc => I, Pos: [266, 280] cc => I, Pos: [269, 277] cc => I, Pos: [269, 277] cc => I, Pos: [281, 287] cc => I, Pos: [281, 287] cc => I, Pos: [282, 286] cc => I, Pos: [282, 286] cc => I, Pos: [284, 288, 295] ccc => cc, Pos: [286, 297] cc => I, Pos: [286, 297] cc => I, Pos: [302, 326] cc => I, Pos: [302, 326] cc => I, Pos: [303, 312] cc => I, Pos: [303, 312] cc => I, Pos: [312, 323] cc => I, Pos: [312, 323] cc => I, Pos: [316, 321] cc => I, Pos: [316, 321] cc => I, Pos: [317, 322] cc => I, Pos: [317, 322] cc => I, Pos: [331, 339] cc => I, Pos: [331, 339] cc => I, Pos: [336, 341, 349] ccc => cc, Pos: [339, 348] cc => I, Pos: [339, 348] cc => I, Pos: [342, 346, 359] ccc => cc, Pos: [345, 352] cc => I, Pos: [345, 352] cc => I, Pos: [348, 356] cc => I, Pos: [348, 356] cc => I, Pos: [350, 354] cc => I, Pos: [350, 354] cc => I]

--------End Timer [Generate Plans]:  0.17186284065246582

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 13] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [10, 17] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [35, 52] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [89, 105] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [86, 94] cc => I,
 Pos: [96, 107] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [110, 137] cc => I,
 Pos: [106, 116] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [200, 208] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [204, 211] cc => I,
 Pos: [222, 229] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [303, 312] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [339, 348] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [350, 354] cc => I]
Change: 68, Saving: 71

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 13] cc => I
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [10, 17] cc => I
Apply:  Pos: [19, 31] cc => I
Apply:  Pos: [20, 28] cc => I
Apply:  Pos: [21, 27] cc => I
Apply:  Pos: [35, 52] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [49, 59] cc => I
Apply:  Pos: [50, 53, 61] ccc => cc
Apply:  Pos: [58, 62] cc => I
Apply:  Pos: [68, 82, 88] ccc => cc
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [77, 81, 87] ccc => cc
Apply:  Pos: [89, 105] cc => I
Apply:  Pos: [83, 92] cc => I
Apply:  Pos: [86, 94] cc => I
Apply:  Pos: [96, 107] cc => I
Apply:  Pos: [95, 103] cc => I
Apply:  Pos: [110, 137] cc => I
Apply:  Pos: [106, 116] cc => I
Apply:  Pos: [100, 109] cc => I
Apply:  Pos: [101, 108] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [126, 139] cc => I
Apply:  Pos: [131, 136] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [141, 158] cc => I
Apply:  Pos: [152, 170] cc => I
Apply:  Pos: [153, 176] cc => I
Apply:  Pos: [156, 161, 166] ccc => cc
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [174, 184] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [182, 190] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [200, 208] cc => I
Apply:  Pos: [198, 206] cc => I
Apply:  Pos: [204, 211] cc => I
Apply:  Pos: [222, 229] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 242] cc => I
Apply:  Pos: [228, 232] cc => I
Apply:  Pos: [235, 238] cc => I
Apply:  Pos: [240, 246] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [266, 280] cc => I
Apply:  Pos: [269, 277] cc => I
Apply:  Pos: [281, 287] cc => I
Apply:  Pos: [282, 286] cc => I
Apply:  Pos: [284, 288, 295] ccc => cc
Apply:  Pos: [302, 326] cc => I
Apply:  Pos: [303, 312] cc => I
Apply:  Pos: [316, 321] cc => I
Apply:  Pos: [317, 322] cc => I
Apply:  Pos: [339, 348] cc => I
Apply:  Pos: [336, 341, 349] ccc => cc
Apply:  Pos: [342, 346, 359] ccc => cc
Apply:  Pos: [345, 352] cc => I
Apply:  Pos: [350, 354] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [3, 14], [0, 18], [2, 10], [9, 15], [2, 8], [12, 5], [15, 16], [3, 19], [7, 12], [18, 11], [10, 13], [3, 14], [5, 9], [6, 4], [1, 18], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [12, 0], [16, 11], [10, 17], [6, 4], [4, 12], [9, 15], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [4, 1], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [18, 11], [2, 8], [13, 0], [6, 17], [6, 13], [5, 0], [4, 1], [14, 9], [10, 13], [12, 5], [0, 16], [15, 16], [6, 17], [5, 0], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [8, 17], [5, 15], [12, 0], [5, 0], [8, 19], [6, 4], [4, 7], [5, 9], [0, 16], [3, 14], [18, 11], [18, 16], [8, 17], [12, 5], [0, 11], [6, 4], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [6, 17], [19, 5], [10, 13], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  7.406270742416382

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[54, 65]
[104, 118]
[116, 124]
[113, 126]
[136, 148]
[164, 183]
[192, 211]
[210, 228]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[80, 81, 88]
[141, 142, 151]
[213, 222, 225]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 76]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 137, 143]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[54, 65]
[104, 118]
[116, 124]
[113, 126]
[136, 148]
[164, 183]
[192, 211]
[210, 228]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.3282153606414795

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [54, 65] cc => I, Pos: [54, 65] cc => I, Pos: [63, 68, 76] ccc => cc, Pos: [80, 81, 88] ccc => cc, Pos: [104, 118] cc => I, Pos: [104, 118] cc => I, Pos: [113, 126] cc => I, Pos: [113, 126] cc => I, Pos: [116, 124] cc => I, Pos: [116, 124] cc => I, Pos: [135, 137, 143] ccc => cc, Pos: [136, 148] cc => I, Pos: [136, 148] cc => I, Pos: [141, 142, 151] ccc => cc, Pos: [164, 183] cc => I, Pos: [164, 183] cc => I, Pos: [192, 211] cc => I, Pos: [192, 211] cc => I, Pos: [210, 228] cc => I, Pos: [210, 228] cc => I, Pos: [213, 222, 225] ccc => cc]

--------End Timer [Generate Plans]:  0.031161069869995117

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [54, 65] cc => I,
 Pos: [63, 68, 76] ccc => cc,
 Pos: [80, 81, 88] ccc => cc,
 Pos: [104, 118] cc => I,
 Pos: [113, 126] cc => I,
 Pos: [116, 124] cc => I,
 Pos: [135, 137, 143] ccc => cc,
 Pos: [136, 148] cc => I,
 Pos: [141, 142, 151] ccc => cc,
 Pos: [164, 183] cc => I,
 Pos: [192, 211] cc => I,
 Pos: [210, 228] cc => I,
 Pos: [213, 222, 225] ccc => cc]
Change: 13, Saving: 13

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [54, 65] cc => I
Apply:  Pos: [63, 68, 76] ccc => cc
Apply:  Pos: [80, 81, 88] ccc => cc
Apply:  Pos: [104, 118] cc => I
Apply:  Pos: [113, 126] cc => I
Apply:  Pos: [116, 124] cc => I
Apply:  Pos: [135, 137, 143] ccc => cc
Apply:  Pos: [136, 148] cc => I
Apply:  Pos: [141, 142, 151] ccc => cc
Apply:  Pos: [164, 183] cc => I
Apply:  Pos: [192, 211] cc => I
Apply:  Pos: [210, 228] cc => I
Apply:  Pos: [213, 222, 225] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [2, 8], [12, 5], [15, 16], [3, 19], [7, 12], [1, 18], [10, 13], [5, 9], [6, 4], [18, 11], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [12, 0], [16, 11], [10, 17], [6, 12], [4, 12], [9, 15], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [18, 11], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [10, 13], [12, 5], [15, 16], [0, 16], [5, 0], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [9, 15], [5, 0], [12, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  4.359376430511475

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[107, 117]
[126, 153]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 51, 57]
[73, 74, 77]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[107, 117]
[126, 153]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.859344720840454

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 51, 57] ccc => cc, Pos: [73, 74, 77] ccc => cc, Pos: [107, 117] cc => I, Pos: [107, 117] cc => I, Pos: [126, 153] cc => I, Pos: [126, 153] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 51, 57] ccc => cc,
 Pos: [73, 74, 77] ccc => cc,
 Pos: [107, 117] cc => I,
 Pos: [126, 153] cc => I]
Change: 4, Saving: 5

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 51, 57] ccc => cc
Apply:  Pos: [73, 74, 77] ccc => cc
Apply:  Pos: [107, 117] cc => I
Apply:  Pos: [126, 153] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [3, 19], [7, 12], [1, 18], [10, 13], [5, 9], [6, 4], [18, 11], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [9, 15], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [10, 13], [12, 5], [0, 16], [15, 16], [5, 0], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [5, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.859344720840454

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[113, 119, 122]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7343642711639404

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [113, 119, 122] ccc => cc]

--------End Timer [Generate Plans]:  0.015609025955200195

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [113, 119, 122] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [113, 119, 122] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [3, 19], [7, 12], [1, 18], [10, 13], [5, 9], [6, 4], [18, 11], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [12, 0], [4, 0], [16, 11], [10, 17], [6, 12], [9, 15], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [10, 13], [12, 5], [15, 16], [0, 16], [5, 18], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.7499732971191406

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.687547445297241

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [3, 19], [7, 12], [1, 18], [10, 13], [5, 9], [6, 4], [18, 11], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [9, 15], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [10, 13], [12, 5], [0, 16], [15, 16], [5, 18], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.687547445297241

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [203] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 406

Reduced: 
 - size: 157 (43.61%)
 - depth: 0 (0.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061474800109863

[19, 9], [6, 17], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [18, 11], [19, 15], [6, 17], [8, 3], [9, 15], [7, 1], [0, 16], [12, 5], [2, 8], [10, 17], [6, 4], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [6, 4], [10, 17], [7, 12], [18, 11], [2, 8], [5, 15], [12, 1], [6, 13], [0, 16], [19, 9], [4, 7], [8, 17], [9, 15], [17, 19], [13, 5], [10, 6], [4, 7], [2, 8], [18, 11], [9, 15], [1, 18], [6, 13], [4, 12], [8, 19], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [13, 5], [4, 12], [6, 17], [8, 19], [13, 5], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [0, 18], [19, 9], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [3, 14], [19, 9], [4, 12], [6, 17], [8, 3], [5, 0], [7, 1], [2, 10], [9, 15], [10, 13], [3, 14], [0, 18], [6, 17], [2, 8], [12, 5], [7, 1], [15, 16], [10, 13], [4, 1], [2, 8], [3, 19], [7, 12], [18, 11], [14, 9], [5, 0], [16, 11], [4, 1], [10, 13], [6, 17], [7, 12], [2, 8], [5, 0], [14, 9], [3, 19], [16, 11], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [14, 9], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [7, 1], [12, 0], [16, 11], [10, 17], [14, 9], [13, 5], [6, 4], [4, 12], [18, 11], [9, 15], [13, 5], [3, 19], [2, 10], [7, 1], [8, 17], [12, 1], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [18, 11], [12, 0], [17, 13], [14, 9], [10, 6], [18, 11], [8, 3], [19, 5], [15, 16], [12, 1], [17, 3], [15, 16], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [19, 5], [10, 17], [4, 1], [18, 16], [14, 9], [8, 3], [0, 11], [13, 12], [3, 14], [5, 9], [10, 6], [0, 18], [4, 1], [8, 17], [19, 15], [16, 11], [7, 12], [18, 11], [3, 14], [2, 8], [5, 9], [13, 0], [6, 17], [4, 1], [7, 12], [6, 13], [18, 11], [5, 0], [4, 1], [8, 17], [19, 15], [14, 9], [7, 1], [10, 13], [14, 9], [18, 11], [8, 17], [12, 5], [3, 19], [0, 16], [7, 1], [15, 16], [14, 9], [6, 17], [5, 0], [3, 19], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [7, 1], [8, 17], [5, 15], [14, 9], [12, 0], [6, 13], [16, 11], [7, 1], [5, 0], [14, 9], [16, 11], [8, 19], [6, 4], [10, 17], [4, 7], [5, 9], [10, 17], [0, 16], [19, 15], [3, 14], [6, 13], [18, 11], [7, 1], [14, 9], [19, 15], [18, 16], [8, 17], [12, 5], [10, 13], [0, 11], [6, 4], [7, 1], [0, 16], [14, 9], [6, 17], [4, 12], [18, 11], [2, 8], [10, 13], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [10, 6], [5, 0], [8, 3], [1, 18], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [1, 18], [19, 9], [5, 0], [10, 6], [17, 3], [2, 8], [7, 12], [15, 16], [12, 1], [2, 8], [17, 3], [19, 15], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [15, 16], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [6, 4], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [2, 10], [19, 15], [6, 17], [18, 11], [14, 9], [8, 3], [7, 12], [13, 0], [17, 19], [14, 9], [8, 3], [2, 10], [1, 18], [15, 16], [6, 4], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [16, 11], [7, 12], [1, 18], [10, 13], [8, 19], [0, 11], [9, 15], [6, 4], [17, 3], [4, 7], [19, 9], [12, 5], [10, 13], [0, 16], [18, 11], [8, 17], [4, 7], [6, 17], [18, 11], [19, 5], [10, 13], [12, 1], [8, 3], [9, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 53, 61]
[156, 161, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 87]
[68, 82, 88]
[284, 288, 295]
[342, 346, 359]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[336, 341, 349]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.063024044036865

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 13] cc => I, Pos: [1, 13] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [10, 17] cc => I, Pos: [10, 17] cc => I, Pos: [11, 30] cc => I, Pos: [11, 30] cc => I, Pos: [17, 26] cc => I, Pos: [17, 26] cc => I, Pos: [19, 31] cc => I, Pos: [19, 31] cc => I, Pos: [20, 28] cc => I, Pos: [20, 28] cc => I, Pos: [21, 27] cc => I, Pos: [21, 27] cc => I, Pos: [26, 35] cc => I, Pos: [26, 35] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [35, 52] cc => I, Pos: [35, 52] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [49, 59] cc => I, Pos: [49, 59] cc => I, Pos: [50, 53, 61] ccc => cc, Pos: [58, 62] cc => I, Pos: [58, 62] cc => I, Pos: [68, 82, 88] ccc => cc, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [77, 81, 87] ccc => cc, Pos: [80, 89] cc => I, Pos: [80, 89] cc => I, Pos: [83, 92] cc => I, Pos: [83, 92] cc => I, Pos: [86, 94] cc => I, Pos: [86, 94] cc => I, Pos: [89, 105] cc => I, Pos: [89, 105] cc => I, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [95, 103] cc => I, Pos: [95, 103] cc => I, Pos: [96, 107] cc => I, Pos: [96, 107] cc => I, Pos: [97, 110] cc => I, Pos: [97, 110] cc => I, Pos: [98, 106] cc => I, Pos: [98, 106] cc => I, Pos: [100, 109] cc => I, Pos: [100, 109] cc => I, Pos: [101, 108] cc => I, Pos: [101, 108] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 116] cc => I, Pos: [106, 116] cc => I, Pos: [110, 137] cc => I, Pos: [110, 137] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [126, 139] cc => I, Pos: [126, 139] cc => I, Pos: [131, 136] cc => I, Pos: [131, 136] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [141, 158] cc => I, Pos: [141, 158] cc => I, Pos: [149, 154] cc => I, Pos: [149, 154] cc => I, Pos: [152, 170] cc => I, Pos: [152, 170] cc => I, Pos: [153, 176] cc => I, Pos: [153, 176] cc => I, Pos: [156, 161, 166] ccc => cc, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [182, 190] cc => I, Pos: [182, 190] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [189, 194] cc => I, Pos: [189, 194] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [201, 213] cc => I, Pos: [201, 213] cc => I, Pos: [204, 211] cc => I, Pos: [204, 211] cc => I, Pos: [206, 215] cc => I, Pos: [206, 215] cc => I, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I, Pos: [222, 229] cc => I, Pos: [222, 229] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [227, 242] cc => I, Pos: [227, 242] cc => I, Pos: [228, 232] cc => I, Pos: [228, 232] cc => I, Pos: [235, 238] cc => I, Pos: [235, 238] cc => I, Pos: [240, 246] cc => I, Pos: [240, 246] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [266, 280] cc => I, Pos: [266, 280] cc => I, Pos: [269, 277] cc => I, Pos: [269, 277] cc => I, Pos: [281, 287] cc => I, Pos: [281, 287] cc => I, Pos: [282, 286] cc => I, Pos: [282, 286] cc => I, Pos: [284, 288, 295] ccc => cc, Pos: [286, 297] cc => I, Pos: [286, 297] cc => I, Pos: [302, 326] cc => I, Pos: [302, 326] cc => I, Pos: [303, 312] cc => I, Pos: [303, 312] cc => I, Pos: [312, 323] cc => I, Pos: [312, 323] cc => I, Pos: [316, 321] cc => I, Pos: [316, 321] cc => I, Pos: [317, 322] cc => I, Pos: [317, 322] cc => I, Pos: [331, 339] cc => I, Pos: [331, 339] cc => I, Pos: [336, 341, 349] ccc => cc, Pos: [339, 348] cc => I, Pos: [339, 348] cc => I, Pos: [342, 346, 359] ccc => cc, Pos: [345, 352] cc => I, Pos: [345, 352] cc => I, Pos: [348, 356] cc => I, Pos: [348, 356] cc => I, Pos: [350, 354] cc => I, Pos: [350, 354] cc => I]

--------End Timer [Generate Plans]:  0.17186808586120605

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 13] cc => I,
 Pos: [11, 30] cc => I,
 Pos: [17, 26] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [35, 52] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [80, 89] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [94, 104] cc => I,
 Pos: [96, 107] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [98, 106] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [149, 154] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [192, 201] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [211, 218] cc => I,
 Pos: [222, 229] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [312, 323] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [339, 348] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [350, 354] cc => I]
Change: 67, Saving: 70

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 13] cc => I
Apply:  Pos: [11, 30] cc => I
Apply:  Pos: [17, 26] cc => I
Apply:  Pos: [19, 31] cc => I
Apply:  Pos: [20, 28] cc => I
Apply:  Pos: [21, 27] cc => I
Apply:  Pos: [35, 52] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [49, 59] cc => I
Apply:  Pos: [50, 53, 61] ccc => cc
Apply:  Pos: [58, 62] cc => I
Apply:  Pos: [68, 82, 88] ccc => cc
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [77, 81, 87] ccc => cc
Apply:  Pos: [80, 89] cc => I
Apply:  Pos: [83, 92] cc => I
Apply:  Pos: [94, 104] cc => I
Apply:  Pos: [96, 107] cc => I
Apply:  Pos: [95, 103] cc => I
Apply:  Pos: [97, 110] cc => I
Apply:  Pos: [98, 106] cc => I
Apply:  Pos: [100, 109] cc => I
Apply:  Pos: [101, 108] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [126, 139] cc => I
Apply:  Pos: [131, 136] cc => I
Apply:  Pos: [149, 154] cc => I
Apply:  Pos: [141, 158] cc => I
Apply:  Pos: [152, 170] cc => I
Apply:  Pos: [153, 176] cc => I
Apply:  Pos: [156, 161, 166] ccc => cc
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [174, 184] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [182, 190] cc => I
Apply:  Pos: [192, 201] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [198, 206] cc => I
Apply:  Pos: [211, 218] cc => I
Apply:  Pos: [222, 229] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 242] cc => I
Apply:  Pos: [228, 232] cc => I
Apply:  Pos: [235, 238] cc => I
Apply:  Pos: [240, 246] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [266, 280] cc => I
Apply:  Pos: [269, 277] cc => I
Apply:  Pos: [281, 287] cc => I
Apply:  Pos: [282, 286] cc => I
Apply:  Pos: [284, 288, 295] ccc => cc
Apply:  Pos: [302, 326] cc => I
Apply:  Pos: [312, 323] cc => I
Apply:  Pos: [316, 321] cc => I
Apply:  Pos: [317, 322] cc => I
Apply:  Pos: [339, 348] cc => I
Apply:  Pos: [336, 341, 349] ccc => cc
Apply:  Pos: [342, 346, 359] ccc => cc
Apply:  Pos: [345, 352] cc => I
Apply:  Pos: [350, 354] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [18, 11], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [3, 14], [0, 18], [2, 10], [9, 15], [10, 13], [2, 8], [12, 5], [15, 16], [18, 11], [6, 17], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [12, 0], [16, 11], [10, 17], [6, 4], [4, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [4, 1], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [18, 11], [2, 8], [13, 0], [6, 17], [6, 13], [5, 0], [4, 1], [10, 13], [12, 5], [3, 19], [0, 16], [15, 16], [14, 9], [6, 17], [5, 0], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [0, 18], [2, 10], [9, 15], [8, 17], [5, 15], [12, 0], [5, 0], [8, 19], [6, 4], [4, 7], [5, 9], [0, 16], [3, 14], [18, 11], [18, 16], [8, 17], [12, 5], [0, 11], [6, 4], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [6, 17], [19, 5], [10, 13], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  7.234892129898071

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 29]
[55, 65]
[106, 120]
[118, 127]
[115, 129]
[138, 150]
[166, 185]
[195, 213]
[212, 230]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[81, 82, 91]
[143, 144, 153]
[215, 224, 227]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 77]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[137, 139, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 29]
[55, 65]
[106, 120]
[118, 127]
[115, 129]
[138, 150]
[166, 185]
[195, 213]
[212, 230]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.3127782344818115

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 29] cc => I, Pos: [4, 29] cc => I, Pos: [55, 65] cc => I, Pos: [55, 65] cc => I, Pos: [63, 68, 77] ccc => cc, Pos: [81, 82, 91] ccc => cc, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [115, 129] cc => I, Pos: [115, 129] cc => I, Pos: [118, 127] cc => I, Pos: [118, 127] cc => I, Pos: [137, 139, 145] ccc => cc, Pos: [138, 150] cc => I, Pos: [138, 150] cc => I, Pos: [143, 144, 153] ccc => cc, Pos: [166, 185] cc => I, Pos: [166, 185] cc => I, Pos: [195, 213] cc => I, Pos: [195, 213] cc => I, Pos: [212, 230] cc => I, Pos: [212, 230] cc => I, Pos: [215, 224, 227] ccc => cc]

--------End Timer [Generate Plans]:  0.046866416931152344

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 29] cc => I,
 Pos: [55, 65] cc => I,
 Pos: [63, 68, 77] ccc => cc,
 Pos: [81, 82, 91] ccc => cc,
 Pos: [106, 120] cc => I,
 Pos: [115, 129] cc => I,
 Pos: [118, 127] cc => I,
 Pos: [137, 139, 145] ccc => cc,
 Pos: [138, 150] cc => I,
 Pos: [143, 144, 153] ccc => cc,
 Pos: [166, 185] cc => I,
 Pos: [195, 213] cc => I,
 Pos: [212, 230] cc => I,
 Pos: [215, 224, 227] ccc => cc]
Change: 14, Saving: 14

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 29] cc => I
Apply:  Pos: [55, 65] cc => I
Apply:  Pos: [63, 68, 77] ccc => cc
Apply:  Pos: [81, 82, 91] ccc => cc
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [115, 129] cc => I
Apply:  Pos: [118, 127] cc => I
Apply:  Pos: [137, 139, 145] ccc => cc
Apply:  Pos: [138, 150] cc => I
Apply:  Pos: [143, 144, 153] ccc => cc
Apply:  Pos: [166, 185] cc => I
Apply:  Pos: [195, 213] cc => I
Apply:  Pos: [212, 230] cc => I
Apply:  Pos: [215, 224, 227] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [10, 13], [2, 8], [12, 5], [15, 16], [1, 18], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [12, 0], [16, 11], [10, 17], [6, 12], [4, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [18, 11], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [3, 19], [15, 16], [0, 16], [14, 9], [5, 0], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [0, 18], [2, 10], [5, 9], [9, 15], [5, 0], [12, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [2, 10], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  4.359644651412964

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[107, 118]
[126, 153]
[124, 173]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 51, 57]
[72, 73, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[107, 118]
[126, 153]
[124, 173]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.797273635864258

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 51, 57] ccc => cc, Pos: [72, 73, 76] ccc => cc, Pos: [107, 118] cc => I, Pos: [107, 118] cc => I, Pos: [124, 173] cc => I, Pos: [124, 173] cc => I, Pos: [126, 153] cc => I, Pos: [126, 153] cc => I]

--------End Timer [Generate Plans]:  0.01562643051147461

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 51, 57] ccc => cc,
 Pos: [72, 73, 76] ccc => cc,
 Pos: [107, 118] cc => I,
 Pos: [124, 173] cc => I,
 Pos: [126, 153] cc => I]
Change: 5, Saving: 6

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 51, 57] ccc => cc
Apply:  Pos: [72, 73, 76] ccc => cc
Apply:  Pos: [107, 118] cc => I
Apply:  Pos: [124, 173] cc => I
Apply:  Pos: [126, 153] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [1, 18], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [3, 19], [0, 16], [15, 16], [14, 9], [5, 0], [13, 12], [7, 1], [4, 12], [17, 13], [0, 18], [5, 9], [12, 0], [5, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.8129000663757324

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[114, 119, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.625349998474121

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [114, 119, 121] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [114, 119, 121] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [114, 119, 121] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [1, 18], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [12, 0], [4, 0], [16, 11], [10, 17], [6, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [3, 19], [15, 16], [0, 16], [14, 9], [5, 18], [13, 12], [7, 1], [4, 12], [17, 13], [0, 18], [5, 9], [12, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.625349998474121

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.609708547592163

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [1, 18], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [3, 19], [0, 16], [15, 16], [14, 9], [5, 18], [13, 12], [7, 1], [4, 12], [17, 13], [0, 18], [5, 9], [12, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.609708547592163

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [201] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 402

Reduced: 
 - size: 159 (44.17%)
 - depth: 0 (0.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061474800109863

[19, 9], [6, 17], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [18, 11], [19, 15], [6, 17], [8, 3], [9, 15], [7, 1], [0, 16], [12, 5], [2, 8], [10, 17], [6, 4], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [6, 4], [10, 17], [7, 12], [18, 11], [2, 8], [5, 15], [12, 1], [6, 13], [0, 16], [19, 9], [4, 7], [8, 17], [9, 15], [17, 19], [13, 5], [10, 6], [4, 7], [2, 8], [18, 11], [9, 15], [1, 18], [6, 13], [4, 12], [8, 19], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [13, 5], [4, 12], [6, 17], [8, 19], [13, 5], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [0, 18], [19, 9], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [3, 14], [19, 9], [4, 12], [6, 17], [8, 3], [5, 0], [7, 1], [2, 10], [9, 15], [10, 13], [3, 14], [0, 18], [6, 17], [2, 8], [12, 5], [7, 1], [15, 16], [10, 13], [4, 1], [2, 8], [3, 19], [7, 12], [18, 11], [14, 9], [5, 0], [16, 11], [4, 1], [10, 13], [6, 17], [7, 12], [2, 8], [5, 0], [14, 9], [3, 19], [16, 11], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [14, 9], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [7, 1], [12, 0], [16, 11], [10, 17], [14, 9], [13, 5], [6, 4], [4, 12], [18, 11], [9, 15], [13, 5], [3, 19], [2, 10], [7, 1], [8, 17], [12, 1], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [18, 11], [12, 0], [17, 13], [14, 9], [10, 6], [18, 11], [8, 3], [19, 5], [15, 16], [12, 1], [17, 3], [15, 16], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [19, 5], [10, 17], [4, 1], [18, 16], [14, 9], [8, 3], [0, 11], [13, 12], [3, 14], [5, 9], [10, 6], [0, 18], [4, 1], [8, 17], [19, 15], [16, 11], [7, 12], [18, 11], [3, 14], [2, 8], [5, 9], [13, 0], [6, 17], [4, 1], [7, 12], [6, 13], [18, 11], [5, 0], [4, 1], [8, 17], [19, 15], [14, 9], [7, 1], [10, 13], [14, 9], [18, 11], [8, 17], [12, 5], [3, 19], [0, 16], [7, 1], [15, 16], [14, 9], [6, 17], [5, 0], [3, 19], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [7, 1], [8, 17], [5, 15], [14, 9], [12, 0], [6, 13], [16, 11], [7, 1], [5, 0], [14, 9], [16, 11], [8, 19], [6, 4], [10, 17], [4, 7], [5, 9], [10, 17], [0, 16], [19, 15], [3, 14], [6, 13], [18, 11], [7, 1], [14, 9], [19, 15], [18, 16], [8, 17], [12, 5], [10, 13], [0, 11], [6, 4], [7, 1], [0, 16], [14, 9], [6, 17], [4, 12], [18, 11], [2, 8], [10, 13], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [10, 6], [5, 0], [8, 3], [1, 18], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [1, 18], [19, 9], [5, 0], [10, 6], [17, 3], [2, 8], [7, 12], [15, 16], [12, 1], [2, 8], [17, 3], [19, 15], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [15, 16], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [6, 4], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [2, 10], [19, 15], [6, 17], [18, 11], [14, 9], [8, 3], [7, 12], [13, 0], [17, 19], [14, 9], [8, 3], [2, 10], [1, 18], [15, 16], [6, 4], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [16, 11], [7, 12], [1, 18], [10, 13], [8, 19], [0, 11], [9, 15], [6, 4], [17, 3], [4, 7], [19, 9], [12, 5], [10, 13], [0, 16], [18, 11], [8, 17], [4, 7], [6, 17], [18, 11], [19, 5], [10, 13], [12, 1], [8, 3], [9, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 53, 61]
[156, 161, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 87]
[68, 82, 88]
[284, 288, 295]
[342, 346, 359]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[336, 341, 349]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.255274772644043

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 13] cc => I, Pos: [1, 13] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [10, 17] cc => I, Pos: [10, 17] cc => I, Pos: [11, 30] cc => I, Pos: [11, 30] cc => I, Pos: [17, 26] cc => I, Pos: [17, 26] cc => I, Pos: [19, 31] cc => I, Pos: [19, 31] cc => I, Pos: [20, 28] cc => I, Pos: [20, 28] cc => I, Pos: [21, 27] cc => I, Pos: [21, 27] cc => I, Pos: [26, 35] cc => I, Pos: [26, 35] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [35, 52] cc => I, Pos: [35, 52] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [49, 59] cc => I, Pos: [49, 59] cc => I, Pos: [50, 53, 61] ccc => cc, Pos: [58, 62] cc => I, Pos: [58, 62] cc => I, Pos: [68, 82, 88] ccc => cc, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [77, 81, 87] ccc => cc, Pos: [80, 89] cc => I, Pos: [80, 89] cc => I, Pos: [83, 92] cc => I, Pos: [83, 92] cc => I, Pos: [86, 94] cc => I, Pos: [86, 94] cc => I, Pos: [89, 105] cc => I, Pos: [89, 105] cc => I, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [95, 103] cc => I, Pos: [95, 103] cc => I, Pos: [96, 107] cc => I, Pos: [96, 107] cc => I, Pos: [97, 110] cc => I, Pos: [97, 110] cc => I, Pos: [98, 106] cc => I, Pos: [98, 106] cc => I, Pos: [100, 109] cc => I, Pos: [100, 109] cc => I, Pos: [101, 108] cc => I, Pos: [101, 108] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 116] cc => I, Pos: [106, 116] cc => I, Pos: [110, 137] cc => I, Pos: [110, 137] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [126, 139] cc => I, Pos: [126, 139] cc => I, Pos: [131, 136] cc => I, Pos: [131, 136] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [141, 158] cc => I, Pos: [141, 158] cc => I, Pos: [149, 154] cc => I, Pos: [149, 154] cc => I, Pos: [152, 170] cc => I, Pos: [152, 170] cc => I, Pos: [153, 176] cc => I, Pos: [153, 176] cc => I, Pos: [156, 161, 166] ccc => cc, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [182, 190] cc => I, Pos: [182, 190] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [189, 194] cc => I, Pos: [189, 194] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [201, 213] cc => I, Pos: [201, 213] cc => I, Pos: [204, 211] cc => I, Pos: [204, 211] cc => I, Pos: [206, 215] cc => I, Pos: [206, 215] cc => I, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I, Pos: [222, 229] cc => I, Pos: [222, 229] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [227, 242] cc => I, Pos: [227, 242] cc => I, Pos: [228, 232] cc => I, Pos: [228, 232] cc => I, Pos: [235, 238] cc => I, Pos: [235, 238] cc => I, Pos: [240, 246] cc => I, Pos: [240, 246] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [266, 280] cc => I, Pos: [266, 280] cc => I, Pos: [269, 277] cc => I, Pos: [269, 277] cc => I, Pos: [281, 287] cc => I, Pos: [281, 287] cc => I, Pos: [282, 286] cc => I, Pos: [282, 286] cc => I, Pos: [284, 288, 295] ccc => cc, Pos: [286, 297] cc => I, Pos: [286, 297] cc => I, Pos: [302, 326] cc => I, Pos: [302, 326] cc => I, Pos: [303, 312] cc => I, Pos: [303, 312] cc => I, Pos: [312, 323] cc => I, Pos: [312, 323] cc => I, Pos: [316, 321] cc => I, Pos: [316, 321] cc => I, Pos: [317, 322] cc => I, Pos: [317, 322] cc => I, Pos: [331, 339] cc => I, Pos: [331, 339] cc => I, Pos: [336, 341, 349] ccc => cc, Pos: [339, 348] cc => I, Pos: [339, 348] cc => I, Pos: [342, 346, 359] ccc => cc, Pos: [345, 352] cc => I, Pos: [345, 352] cc => I, Pos: [348, 356] cc => I, Pos: [348, 356] cc => I, Pos: [350, 354] cc => I, Pos: [350, 354] cc => I]

--------End Timer [Generate Plans]:  0.17185068130493164

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 13] cc => I,
 Pos: [11, 30] cc => I,
 Pos: [17, 26] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [35, 52] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [80, 89] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [94, 104] cc => I,
 Pos: [90, 96] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [98, 106] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [200, 208] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [201, 213] cc => I,
 Pos: [204, 211] cc => I,
 Pos: [215, 222] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [286, 297] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [303, 312] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [331, 339] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [348, 356] cc => I,
 Pos: [350, 354] cc => I]
Change: 69, Saving: 72

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 13] cc => I
Apply:  Pos: [11, 30] cc => I
Apply:  Pos: [17, 26] cc => I
Apply:  Pos: [19, 31] cc => I
Apply:  Pos: [20, 28] cc => I
Apply:  Pos: [21, 27] cc => I
Apply:  Pos: [35, 52] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [49, 59] cc => I
Apply:  Pos: [50, 53, 61] ccc => cc
Apply:  Pos: [58, 62] cc => I
Apply:  Pos: [68, 82, 88] ccc => cc
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [77, 81, 87] ccc => cc
Apply:  Pos: [80, 89] cc => I
Apply:  Pos: [83, 92] cc => I
Apply:  Pos: [94, 104] cc => I
Apply:  Pos: [90, 96] cc => I
Apply:  Pos: [95, 103] cc => I
Apply:  Pos: [97, 110] cc => I
Apply:  Pos: [98, 106] cc => I
Apply:  Pos: [100, 109] cc => I
Apply:  Pos: [101, 108] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [126, 139] cc => I
Apply:  Pos: [131, 136] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [141, 158] cc => I
Apply:  Pos: [152, 170] cc => I
Apply:  Pos: [153, 176] cc => I
Apply:  Pos: [156, 161, 166] ccc => cc
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [174, 184] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [182, 190] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [200, 208] cc => I
Apply:  Pos: [198, 206] cc => I
Apply:  Pos: [201, 213] cc => I
Apply:  Pos: [204, 211] cc => I
Apply:  Pos: [215, 222] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 242] cc => I
Apply:  Pos: [228, 232] cc => I
Apply:  Pos: [235, 238] cc => I
Apply:  Pos: [240, 246] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [266, 280] cc => I
Apply:  Pos: [269, 277] cc => I
Apply:  Pos: [281, 287] cc => I
Apply:  Pos: [286, 297] cc => I
Apply:  Pos: [284, 288, 295] ccc => cc
Apply:  Pos: [302, 326] cc => I
Apply:  Pos: [303, 312] cc => I
Apply:  Pos: [316, 321] cc => I
Apply:  Pos: [317, 322] cc => I
Apply:  Pos: [331, 339] cc => I
Apply:  Pos: [336, 341, 349] ccc => cc
Apply:  Pos: [342, 346, 359] ccc => cc
Apply:  Pos: [345, 352] cc => I
Apply:  Pos: [348, 356] cc => I
Apply:  Pos: [350, 354] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [18, 11], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [3, 14], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [18, 11], [6, 17], [2, 8], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [12, 0], [16, 11], [10, 17], [6, 4], [4, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [4, 1], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [2, 8], [13, 0], [6, 17], [6, 13], [5, 0], [4, 1], [14, 9], [10, 13], [12, 5], [0, 16], [15, 16], [6, 17], [5, 0], [2, 8], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [8, 17], [5, 15], [12, 0], [7, 1], [5, 0], [8, 19], [6, 4], [4, 7], [5, 9], [0, 16], [3, 14], [18, 11], [18, 16], [8, 17], [12, 5], [0, 11], [6, 4], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [2, 8], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [10, 17], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [3, 14], [12, 1], [6, 17], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [6, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  7.442749738693237

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 29]
[55, 65]
[106, 119]
[117, 125]
[114, 127]
[135, 148]
[164, 184]
[192, 210]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[81, 82, 90]
[141, 142, 151]
[212, 221, 224]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[62, 68, 77]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[134, 136, 143]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 29]
[55, 65]
[106, 119]
[117, 125]
[114, 127]
[135, 148]
[164, 184]
[192, 210]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.344397306442261

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 29] cc => I, Pos: [4, 29] cc => I, Pos: [55, 65] cc => I, Pos: [55, 65] cc => I, Pos: [62, 68, 77] ccc => cc, Pos: [81, 82, 90] ccc => cc, Pos: [106, 119] cc => I, Pos: [106, 119] cc => I, Pos: [114, 127] cc => I, Pos: [114, 127] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [134, 136, 143] ccc => cc, Pos: [135, 148] cc => I, Pos: [135, 148] cc => I, Pos: [141, 142, 151] ccc => cc, Pos: [164, 184] cc => I, Pos: [164, 184] cc => I, Pos: [192, 210] cc => I, Pos: [192, 210] cc => I, Pos: [212, 221, 224] ccc => cc]

--------End Timer [Generate Plans]:  0.03124856948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 29] cc => I,
 Pos: [55, 65] cc => I,
 Pos: [62, 68, 77] ccc => cc,
 Pos: [81, 82, 90] ccc => cc,
 Pos: [106, 119] cc => I,
 Pos: [114, 127] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [134, 136, 143] ccc => cc,
 Pos: [135, 148] cc => I,
 Pos: [141, 142, 151] ccc => cc,
 Pos: [164, 184] cc => I,
 Pos: [192, 210] cc => I,
 Pos: [212, 221, 224] ccc => cc]
Change: 13, Saving: 13

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 29] cc => I
Apply:  Pos: [55, 65] cc => I
Apply:  Pos: [62, 68, 77] ccc => cc
Apply:  Pos: [81, 82, 90] ccc => cc
Apply:  Pos: [106, 119] cc => I
Apply:  Pos: [114, 127] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [134, 136, 143] ccc => cc
Apply:  Pos: [135, 148] cc => I
Apply:  Pos: [141, 142, 151] ccc => cc
Apply:  Pos: [164, 184] cc => I
Apply:  Pos: [192, 210] cc => I
Apply:  Pos: [212, 221, 224] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [1, 18], [6, 17], [2, 8], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [12, 0], [16, 11], [10, 17], [6, 12], [4, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [10, 13], [12, 5], [15, 16], [0, 16], [5, 0], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [9, 15], [12, 0], [7, 1], [5, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [2, 8], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  4.375645875930786

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[123, 151]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 51, 61]
[72, 73, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[123, 151]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.8753302097320557

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 51, 61] ccc => cc, Pos: [72, 73, 76] ccc => cc, Pos: [123, 151] cc => I, Pos: [123, 151] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 51, 61] ccc => cc,
 Pos: [72, 73, 76] ccc => cc,
 Pos: [123, 151] cc => I]
Change: 3, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 51, 61] ccc => cc
Apply:  Pos: [72, 73, 76] ccc => cc
Apply:  Pos: [123, 151] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [1, 18], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [10, 13], [12, 5], [0, 16], [15, 16], [5, 0], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [7, 1], [5, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [2, 8], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.8753302097320557

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7972731590270996

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [1, 18], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [12, 0], [4, 0], [16, 11], [10, 17], [6, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [10, 13], [12, 5], [15, 16], [0, 16], [5, 0], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [7, 1], [5, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [2, 8], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.7972731590270996

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [204] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 47 - (small)
 - circuit cycle: 408

Reduced: 
 - size: 156 (43.33%)
 - depth: -2 (-4.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.15611052513122559

[19, 9], [6, 17], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [18, 11], [19, 15], [6, 17], [8, 3], [9, 15], [7, 1], [0, 16], [12, 5], [2, 8], [10, 17], [6, 4], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [6, 4], [10, 17], [7, 12], [18, 11], [2, 8], [5, 15], [12, 1], [6, 13], [0, 16], [19, 9], [4, 7], [8, 17], [9, 15], [17, 19], [13, 5], [10, 6], [4, 7], [2, 8], [18, 11], [9, 15], [1, 18], [6, 13], [4, 12], [8, 19], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [13, 5], [4, 12], [6, 17], [8, 19], [13, 5], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [0, 18], [19, 9], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [3, 14], [19, 9], [4, 12], [6, 17], [8, 3], [5, 0], [7, 1], [2, 10], [9, 15], [10, 13], [3, 14], [0, 18], [6, 17], [2, 8], [12, 5], [7, 1], [15, 16], [10, 13], [4, 1], [2, 8], [3, 19], [7, 12], [18, 11], [14, 9], [5, 0], [16, 11], [4, 1], [10, 13], [6, 17], [7, 12], [2, 8], [5, 0], [14, 9], [3, 19], [16, 11], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [14, 9], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [7, 1], [12, 0], [16, 11], [10, 17], [14, 9], [13, 5], [6, 4], [4, 12], [18, 11], [9, 15], [13, 5], [3, 19], [2, 10], [7, 1], [8, 17], [12, 1], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [18, 11], [12, 0], [17, 13], [14, 9], [10, 6], [18, 11], [8, 3], [19, 5], [15, 16], [12, 1], [17, 3], [15, 16], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [19, 5], [10, 17], [4, 1], [18, 16], [14, 9], [8, 3], [0, 11], [13, 12], [3, 14], [5, 9], [10, 6], [0, 18], [4, 1], [8, 17], [19, 15], [16, 11], [7, 12], [18, 11], [3, 14], [2, 8], [5, 9], [13, 0], [6, 17], [4, 1], [7, 12], [6, 13], [18, 11], [5, 0], [4, 1], [8, 17], [19, 15], [14, 9], [7, 1], [10, 13], [14, 9], [18, 11], [8, 17], [12, 5], [3, 19], [0, 16], [7, 1], [15, 16], [14, 9], [6, 17], [5, 0], [3, 19], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [7, 1], [8, 17], [5, 15], [14, 9], [12, 0], [6, 13], [16, 11], [7, 1], [5, 0], [14, 9], [16, 11], [8, 19], [6, 4], [10, 17], [4, 7], [5, 9], [10, 17], [0, 16], [19, 15], [3, 14], [6, 13], [18, 11], [7, 1], [14, 9], [19, 15], [18, 16], [8, 17], [12, 5], [10, 13], [0, 11], [6, 4], [7, 1], [0, 16], [14, 9], [6, 17], [4, 12], [18, 11], [2, 8], [10, 13], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [10, 6], [5, 0], [8, 3], [1, 18], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [1, 18], [19, 9], [5, 0], [10, 6], [17, 3], [2, 8], [7, 12], [15, 16], [12, 1], [2, 8], [17, 3], [19, 15], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [15, 16], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [6, 4], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [2, 10], [19, 15], [6, 17], [18, 11], [14, 9], [8, 3], [7, 12], [13, 0], [17, 19], [14, 9], [8, 3], [2, 10], [1, 18], [15, 16], [6, 4], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [16, 11], [7, 12], [1, 18], [10, 13], [8, 19], [0, 11], [9, 15], [6, 4], [17, 3], [4, 7], [19, 9], [12, 5], [10, 13], [0, 16], [18, 11], [8, 17], [4, 7], [6, 17], [18, 11], [19, 5], [10, 13], [12, 1], [8, 3], [9, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 53, 61]
[156, 161, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 87]
[68, 82, 88]
[284, 288, 295]
[342, 346, 359]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[336, 341, 349]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.203042268753052

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 13] cc => I, Pos: [1, 13] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [10, 17] cc => I, Pos: [10, 17] cc => I, Pos: [11, 30] cc => I, Pos: [11, 30] cc => I, Pos: [17, 26] cc => I, Pos: [17, 26] cc => I, Pos: [19, 31] cc => I, Pos: [19, 31] cc => I, Pos: [20, 28] cc => I, Pos: [20, 28] cc => I, Pos: [21, 27] cc => I, Pos: [21, 27] cc => I, Pos: [26, 35] cc => I, Pos: [26, 35] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [35, 52] cc => I, Pos: [35, 52] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [49, 59] cc => I, Pos: [49, 59] cc => I, Pos: [50, 53, 61] ccc => cc, Pos: [58, 62] cc => I, Pos: [58, 62] cc => I, Pos: [68, 82, 88] ccc => cc, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [77, 81, 87] ccc => cc, Pos: [80, 89] cc => I, Pos: [80, 89] cc => I, Pos: [83, 92] cc => I, Pos: [83, 92] cc => I, Pos: [86, 94] cc => I, Pos: [86, 94] cc => I, Pos: [89, 105] cc => I, Pos: [89, 105] cc => I, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [95, 103] cc => I, Pos: [95, 103] cc => I, Pos: [96, 107] cc => I, Pos: [96, 107] cc => I, Pos: [97, 110] cc => I, Pos: [97, 110] cc => I, Pos: [98, 106] cc => I, Pos: [98, 106] cc => I, Pos: [100, 109] cc => I, Pos: [100, 109] cc => I, Pos: [101, 108] cc => I, Pos: [101, 108] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 116] cc => I, Pos: [106, 116] cc => I, Pos: [110, 137] cc => I, Pos: [110, 137] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [126, 139] cc => I, Pos: [126, 139] cc => I, Pos: [131, 136] cc => I, Pos: [131, 136] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [141, 158] cc => I, Pos: [141, 158] cc => I, Pos: [149, 154] cc => I, Pos: [149, 154] cc => I, Pos: [152, 170] cc => I, Pos: [152, 170] cc => I, Pos: [153, 176] cc => I, Pos: [153, 176] cc => I, Pos: [156, 161, 166] ccc => cc, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [182, 190] cc => I, Pos: [182, 190] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [189, 194] cc => I, Pos: [189, 194] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [201, 213] cc => I, Pos: [201, 213] cc => I, Pos: [204, 211] cc => I, Pos: [204, 211] cc => I, Pos: [206, 215] cc => I, Pos: [206, 215] cc => I, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I, Pos: [222, 229] cc => I, Pos: [222, 229] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [227, 242] cc => I, Pos: [227, 242] cc => I, Pos: [228, 232] cc => I, Pos: [228, 232] cc => I, Pos: [235, 238] cc => I, Pos: [235, 238] cc => I, Pos: [240, 246] cc => I, Pos: [240, 246] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [266, 280] cc => I, Pos: [266, 280] cc => I, Pos: [269, 277] cc => I, Pos: [269, 277] cc => I, Pos: [281, 287] cc => I, Pos: [281, 287] cc => I, Pos: [282, 286] cc => I, Pos: [282, 286] cc => I, Pos: [284, 288, 295] ccc => cc, Pos: [286, 297] cc => I, Pos: [286, 297] cc => I, Pos: [302, 326] cc => I, Pos: [302, 326] cc => I, Pos: [303, 312] cc => I, Pos: [303, 312] cc => I, Pos: [312, 323] cc => I, Pos: [312, 323] cc => I, Pos: [316, 321] cc => I, Pos: [316, 321] cc => I, Pos: [317, 322] cc => I, Pos: [317, 322] cc => I, Pos: [331, 339] cc => I, Pos: [331, 339] cc => I, Pos: [336, 341, 349] ccc => cc, Pos: [339, 348] cc => I, Pos: [339, 348] cc => I, Pos: [342, 346, 359] ccc => cc, Pos: [345, 352] cc => I, Pos: [345, 352] cc => I, Pos: [348, 356] cc => I, Pos: [348, 356] cc => I, Pos: [350, 354] cc => I, Pos: [350, 354] cc => I]

--------End Timer [Generate Plans]:  0.1874701976776123

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 13] cc => I,
 Pos: [11, 30] cc => I,
 Pos: [17, 26] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [35, 52] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [80, 89] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [94, 104] cc => I,
 Pos: [96, 107] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [106, 116] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [149, 154] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 194] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [201, 213] cc => I,
 Pos: [204, 211] cc => I,
 Pos: [215, 222] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [303, 312] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [331, 339] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [348, 356] cc => I,
 Pos: [350, 354] cc => I]
Change: 70, Saving: 73

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 13] cc => I
Apply:  Pos: [11, 30] cc => I
Apply:  Pos: [17, 26] cc => I
Apply:  Pos: [19, 31] cc => I
Apply:  Pos: [20, 28] cc => I
Apply:  Pos: [21, 27] cc => I
Apply:  Pos: [35, 52] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [49, 59] cc => I
Apply:  Pos: [50, 53, 61] ccc => cc
Apply:  Pos: [58, 62] cc => I
Apply:  Pos: [68, 82, 88] ccc => cc
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [77, 81, 87] ccc => cc
Apply:  Pos: [80, 89] cc => I
Apply:  Pos: [83, 92] cc => I
Apply:  Pos: [94, 104] cc => I
Apply:  Pos: [96, 107] cc => I
Apply:  Pos: [95, 103] cc => I
Apply:  Pos: [97, 110] cc => I
Apply:  Pos: [106, 116] cc => I
Apply:  Pos: [100, 109] cc => I
Apply:  Pos: [101, 108] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [126, 139] cc => I
Apply:  Pos: [131, 136] cc => I
Apply:  Pos: [149, 154] cc => I
Apply:  Pos: [141, 158] cc => I
Apply:  Pos: [152, 170] cc => I
Apply:  Pos: [153, 176] cc => I
Apply:  Pos: [156, 161, 166] ccc => cc
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [174, 184] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [182, 190] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 194] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [198, 206] cc => I
Apply:  Pos: [201, 213] cc => I
Apply:  Pos: [204, 211] cc => I
Apply:  Pos: [215, 222] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 242] cc => I
Apply:  Pos: [228, 232] cc => I
Apply:  Pos: [235, 238] cc => I
Apply:  Pos: [240, 246] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [266, 280] cc => I
Apply:  Pos: [269, 277] cc => I
Apply:  Pos: [281, 287] cc => I
Apply:  Pos: [282, 286] cc => I
Apply:  Pos: [284, 288, 295] ccc => cc
Apply:  Pos: [302, 326] cc => I
Apply:  Pos: [303, 312] cc => I
Apply:  Pos: [316, 321] cc => I
Apply:  Pos: [317, 322] cc => I
Apply:  Pos: [331, 339] cc => I
Apply:  Pos: [336, 341, 349] ccc => cc
Apply:  Pos: [342, 346, 359] ccc => cc
Apply:  Pos: [345, 352] cc => I
Apply:  Pos: [348, 356] cc => I
Apply:  Pos: [350, 354] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [18, 11], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [3, 14], [0, 18], [2, 10], [9, 15], [10, 13], [2, 8], [12, 5], [15, 16], [7, 12], [18, 11], [6, 17], [3, 14], [5, 9], [6, 4], [1, 18], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [12, 0], [16, 11], [10, 17], [6, 4], [4, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [2, 8], [13, 0], [6, 17], [6, 13], [5, 0], [10, 13], [12, 5], [0, 16], [15, 16], [14, 9], [6, 17], [5, 0], [2, 8], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [8, 17], [5, 15], [12, 0], [7, 1], [5, 0], [8, 19], [6, 4], [4, 7], [5, 9], [0, 16], [3, 14], [18, 11], [18, 16], [8, 17], [12, 5], [0, 11], [6, 4], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [3, 14], [12, 1], [6, 17], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [6, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  7.390512466430664

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 29]
[55, 66]
[116, 123]
[113, 125]
[133, 146]
[162, 181]
[190, 208]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[81, 82, 91]
[139, 140, 149]
[210, 219, 222]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[64, 69, 77]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[132, 134, 141]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 29]
[55, 66]
[116, 123]
[113, 125]
[133, 146]
[162, 181]
[190, 208]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.265478610992432

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 29] cc => I, Pos: [4, 29] cc => I, Pos: [55, 66] cc => I, Pos: [55, 66] cc => I, Pos: [64, 69, 77] ccc => cc, Pos: [81, 82, 91] ccc => cc, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [116, 123] cc => I, Pos: [116, 123] cc => I, Pos: [132, 134, 141] ccc => cc, Pos: [133, 146] cc => I, Pos: [133, 146] cc => I, Pos: [139, 140, 149] ccc => cc, Pos: [162, 181] cc => I, Pos: [162, 181] cc => I, Pos: [190, 208] cc => I, Pos: [190, 208] cc => I, Pos: [210, 219, 222] ccc => cc]

--------End Timer [Generate Plans]:  0.031159639358520508

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 29] cc => I,
 Pos: [55, 66] cc => I,
 Pos: [64, 69, 77] ccc => cc,
 Pos: [81, 82, 91] ccc => cc,
 Pos: [113, 125] cc => I,
 Pos: [116, 123] cc => I,
 Pos: [132, 134, 141] ccc => cc,
 Pos: [133, 146] cc => I,
 Pos: [139, 140, 149] ccc => cc,
 Pos: [162, 181] cc => I,
 Pos: [190, 208] cc => I,
 Pos: [210, 219, 222] ccc => cc]
Change: 12, Saving: 12

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 29] cc => I
Apply:  Pos: [55, 66] cc => I
Apply:  Pos: [64, 69, 77] ccc => cc
Apply:  Pos: [81, 82, 91] ccc => cc
Apply:  Pos: [113, 125] cc => I
Apply:  Pos: [116, 123] cc => I
Apply:  Pos: [132, 134, 141] ccc => cc
Apply:  Pos: [133, 146] cc => I
Apply:  Pos: [139, 140, 149] ccc => cc
Apply:  Pos: [162, 181] cc => I
Apply:  Pos: [190, 208] cc => I
Apply:  Pos: [210, 219, 222] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [10, 13], [2, 8], [12, 5], [15, 16], [7, 12], [1, 18], [6, 17], [5, 9], [6, 4], [18, 11], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [12, 0], [16, 11], [10, 17], [6, 12], [4, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [15, 16], [0, 16], [14, 9], [5, 0], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [9, 15], [12, 0], [7, 1], [5, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  4.296638250350952

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[123, 151]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 51, 57]
[72, 73, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[123, 151]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.8436686992645264

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 51, 57] ccc => cc, Pos: [72, 73, 76] ccc => cc, Pos: [123, 151] cc => I, Pos: [123, 151] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 51, 57] ccc => cc,
 Pos: [72, 73, 76] ccc => cc,
 Pos: [123, 151] cc => I]
Change: 3, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 51, 57] ccc => cc
Apply:  Pos: [72, 73, 76] ccc => cc
Apply:  Pos: [123, 151] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [7, 12], [1, 18], [6, 17], [5, 9], [6, 4], [18, 11], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [0, 16], [15, 16], [14, 9], [5, 0], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [7, 1], [5, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.8436686992645264

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.718899726867676

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [7, 12], [1, 18], [6, 17], [5, 9], [6, 4], [18, 11], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [12, 0], [4, 0], [16, 11], [10, 17], [6, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [15, 16], [0, 16], [14, 9], [5, 0], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [7, 1], [5, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.734541654586792

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [204] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 47 - (small)
 - circuit cycle: 408

Reduced: 
 - size: 156 (43.33%)
 - depth: -2 (-4.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1401681900024414

[19, 9], [6, 17], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [18, 11], [19, 15], [6, 17], [8, 3], [9, 15], [7, 1], [0, 16], [12, 5], [2, 8], [10, 17], [6, 4], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [6, 4], [10, 17], [7, 12], [18, 11], [2, 8], [5, 15], [12, 1], [6, 13], [0, 16], [19, 9], [4, 7], [8, 17], [9, 15], [17, 19], [13, 5], [10, 6], [4, 7], [2, 8], [18, 11], [9, 15], [1, 18], [6, 13], [4, 12], [8, 19], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [13, 5], [4, 12], [6, 17], [8, 19], [13, 5], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [0, 18], [19, 9], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [3, 14], [19, 9], [4, 12], [6, 17], [8, 3], [5, 0], [7, 1], [2, 10], [9, 15], [10, 13], [3, 14], [0, 18], [6, 17], [2, 8], [12, 5], [7, 1], [15, 16], [10, 13], [4, 1], [2, 8], [3, 19], [7, 12], [18, 11], [14, 9], [5, 0], [16, 11], [4, 1], [10, 13], [6, 17], [7, 12], [2, 8], [5, 0], [14, 9], [3, 19], [16, 11], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [14, 9], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [7, 1], [12, 0], [16, 11], [10, 17], [14, 9], [13, 5], [6, 4], [4, 12], [18, 11], [9, 15], [13, 5], [3, 19], [2, 10], [7, 1], [8, 17], [12, 1], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [18, 11], [12, 0], [17, 13], [14, 9], [10, 6], [18, 11], [8, 3], [19, 5], [15, 16], [12, 1], [17, 3], [15, 16], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [19, 5], [10, 17], [4, 1], [18, 16], [14, 9], [8, 3], [0, 11], [13, 12], [3, 14], [5, 9], [10, 6], [0, 18], [4, 1], [8, 17], [19, 15], [16, 11], [7, 12], [18, 11], [3, 14], [2, 8], [5, 9], [13, 0], [6, 17], [4, 1], [7, 12], [6, 13], [18, 11], [5, 0], [4, 1], [8, 17], [19, 15], [14, 9], [7, 1], [10, 13], [14, 9], [18, 11], [8, 17], [12, 5], [3, 19], [0, 16], [7, 1], [15, 16], [14, 9], [6, 17], [5, 0], [3, 19], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [7, 1], [8, 17], [5, 15], [14, 9], [12, 0], [6, 13], [16, 11], [7, 1], [5, 0], [14, 9], [16, 11], [8, 19], [6, 4], [10, 17], [4, 7], [5, 9], [10, 17], [0, 16], [19, 15], [3, 14], [6, 13], [18, 11], [7, 1], [14, 9], [19, 15], [18, 16], [8, 17], [12, 5], [10, 13], [0, 11], [6, 4], [7, 1], [0, 16], [14, 9], [6, 17], [4, 12], [18, 11], [2, 8], [10, 13], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [10, 6], [5, 0], [8, 3], [1, 18], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [1, 18], [19, 9], [5, 0], [10, 6], [17, 3], [2, 8], [7, 12], [15, 16], [12, 1], [2, 8], [17, 3], [19, 15], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [15, 16], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [6, 4], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [2, 10], [19, 15], [6, 17], [18, 11], [14, 9], [8, 3], [7, 12], [13, 0], [17, 19], [14, 9], [8, 3], [2, 10], [1, 18], [15, 16], [6, 4], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [16, 11], [7, 12], [1, 18], [10, 13], [8, 19], [0, 11], [9, 15], [6, 4], [17, 3], [4, 7], [19, 9], [12, 5], [10, 13], [0, 16], [18, 11], [8, 17], [4, 7], [6, 17], [18, 11], [19, 5], [10, 13], [12, 1], [8, 3], [9, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 53, 61]
[156, 161, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 87]
[68, 82, 88]
[284, 288, 295]
[342, 346, 359]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[336, 341, 349]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.171825170516968

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 13] cc => I, Pos: [1, 13] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [10, 17] cc => I, Pos: [10, 17] cc => I, Pos: [11, 30] cc => I, Pos: [11, 30] cc => I, Pos: [17, 26] cc => I, Pos: [17, 26] cc => I, Pos: [19, 31] cc => I, Pos: [19, 31] cc => I, Pos: [20, 28] cc => I, Pos: [20, 28] cc => I, Pos: [21, 27] cc => I, Pos: [21, 27] cc => I, Pos: [26, 35] cc => I, Pos: [26, 35] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [35, 52] cc => I, Pos: [35, 52] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [49, 59] cc => I, Pos: [49, 59] cc => I, Pos: [50, 53, 61] ccc => cc, Pos: [58, 62] cc => I, Pos: [58, 62] cc => I, Pos: [68, 82, 88] ccc => cc, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [77, 81, 87] ccc => cc, Pos: [80, 89] cc => I, Pos: [80, 89] cc => I, Pos: [83, 92] cc => I, Pos: [83, 92] cc => I, Pos: [86, 94] cc => I, Pos: [86, 94] cc => I, Pos: [89, 105] cc => I, Pos: [89, 105] cc => I, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [95, 103] cc => I, Pos: [95, 103] cc => I, Pos: [96, 107] cc => I, Pos: [96, 107] cc => I, Pos: [97, 110] cc => I, Pos: [97, 110] cc => I, Pos: [98, 106] cc => I, Pos: [98, 106] cc => I, Pos: [100, 109] cc => I, Pos: [100, 109] cc => I, Pos: [101, 108] cc => I, Pos: [101, 108] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 116] cc => I, Pos: [106, 116] cc => I, Pos: [110, 137] cc => I, Pos: [110, 137] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [126, 139] cc => I, Pos: [126, 139] cc => I, Pos: [131, 136] cc => I, Pos: [131, 136] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [141, 158] cc => I, Pos: [141, 158] cc => I, Pos: [149, 154] cc => I, Pos: [149, 154] cc => I, Pos: [152, 170] cc => I, Pos: [152, 170] cc => I, Pos: [153, 176] cc => I, Pos: [153, 176] cc => I, Pos: [156, 161, 166] ccc => cc, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [182, 190] cc => I, Pos: [182, 190] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [189, 194] cc => I, Pos: [189, 194] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [201, 213] cc => I, Pos: [201, 213] cc => I, Pos: [204, 211] cc => I, Pos: [204, 211] cc => I, Pos: [206, 215] cc => I, Pos: [206, 215] cc => I, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I, Pos: [222, 229] cc => I, Pos: [222, 229] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [227, 242] cc => I, Pos: [227, 242] cc => I, Pos: [228, 232] cc => I, Pos: [228, 232] cc => I, Pos: [235, 238] cc => I, Pos: [235, 238] cc => I, Pos: [240, 246] cc => I, Pos: [240, 246] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [266, 280] cc => I, Pos: [266, 280] cc => I, Pos: [269, 277] cc => I, Pos: [269, 277] cc => I, Pos: [281, 287] cc => I, Pos: [281, 287] cc => I, Pos: [282, 286] cc => I, Pos: [282, 286] cc => I, Pos: [284, 288, 295] ccc => cc, Pos: [286, 297] cc => I, Pos: [286, 297] cc => I, Pos: [302, 326] cc => I, Pos: [302, 326] cc => I, Pos: [303, 312] cc => I, Pos: [303, 312] cc => I, Pos: [312, 323] cc => I, Pos: [312, 323] cc => I, Pos: [316, 321] cc => I, Pos: [316, 321] cc => I, Pos: [317, 322] cc => I, Pos: [317, 322] cc => I, Pos: [331, 339] cc => I, Pos: [331, 339] cc => I, Pos: [336, 341, 349] ccc => cc, Pos: [339, 348] cc => I, Pos: [339, 348] cc => I, Pos: [342, 346, 359] ccc => cc, Pos: [345, 352] cc => I, Pos: [345, 352] cc => I, Pos: [348, 356] cc => I, Pos: [348, 356] cc => I, Pos: [350, 354] cc => I, Pos: [350, 354] cc => I]

--------End Timer [Generate Plans]:  0.17184972763061523

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 13] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [10, 17] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [35, 52] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [89, 105] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [94, 104] cc => I,
 Pos: [96, 107] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [98, 106] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [149, 154] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [178, 189] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [206, 215] cc => I,
 Pos: [201, 213] cc => I,
 Pos: [211, 218] cc => I,
 Pos: [222, 229] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [303, 312] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [339, 348] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [350, 354] cc => I]
Change: 69, Saving: 72

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 13] cc => I
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [10, 17] cc => I
Apply:  Pos: [19, 31] cc => I
Apply:  Pos: [20, 28] cc => I
Apply:  Pos: [21, 27] cc => I
Apply:  Pos: [35, 52] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [49, 59] cc => I
Apply:  Pos: [50, 53, 61] ccc => cc
Apply:  Pos: [58, 62] cc => I
Apply:  Pos: [68, 82, 88] ccc => cc
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [77, 81, 87] ccc => cc
Apply:  Pos: [89, 105] cc => I
Apply:  Pos: [83, 92] cc => I
Apply:  Pos: [94, 104] cc => I
Apply:  Pos: [96, 107] cc => I
Apply:  Pos: [95, 103] cc => I
Apply:  Pos: [97, 110] cc => I
Apply:  Pos: [98, 106] cc => I
Apply:  Pos: [100, 109] cc => I
Apply:  Pos: [101, 108] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [126, 139] cc => I
Apply:  Pos: [131, 136] cc => I
Apply:  Pos: [149, 154] cc => I
Apply:  Pos: [141, 158] cc => I
Apply:  Pos: [152, 170] cc => I
Apply:  Pos: [153, 176] cc => I
Apply:  Pos: [156, 161, 166] ccc => cc
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [178, 189] cc => I
Apply:  Pos: [174, 184] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [182, 190] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [206, 215] cc => I
Apply:  Pos: [201, 213] cc => I
Apply:  Pos: [211, 218] cc => I
Apply:  Pos: [222, 229] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 242] cc => I
Apply:  Pos: [228, 232] cc => I
Apply:  Pos: [235, 238] cc => I
Apply:  Pos: [240, 246] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [266, 280] cc => I
Apply:  Pos: [269, 277] cc => I
Apply:  Pos: [281, 287] cc => I
Apply:  Pos: [282, 286] cc => I
Apply:  Pos: [284, 288, 295] ccc => cc
Apply:  Pos: [302, 326] cc => I
Apply:  Pos: [303, 312] cc => I
Apply:  Pos: [316, 321] cc => I
Apply:  Pos: [317, 322] cc => I
Apply:  Pos: [339, 348] cc => I
Apply:  Pos: [336, 341, 349] ccc => cc
Apply:  Pos: [342, 346, 359] ccc => cc
Apply:  Pos: [345, 352] cc => I
Apply:  Pos: [350, 354] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [3, 14], [0, 18], [2, 10], [9, 15], [10, 13], [2, 8], [12, 5], [15, 16], [18, 11], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [12, 0], [16, 11], [10, 17], [6, 4], [4, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [4, 1], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [2, 8], [13, 0], [6, 17], [6, 13], [5, 0], [4, 1], [7, 1], [10, 13], [12, 5], [3, 19], [0, 16], [15, 16], [14, 9], [6, 17], [5, 0], [2, 8], [13, 12], [4, 12], [17, 13], [0, 18], [2, 10], [9, 15], [8, 17], [5, 15], [12, 0], [5, 0], [8, 19], [6, 4], [4, 7], [5, 9], [0, 16], [3, 14], [18, 11], [18, 16], [8, 17], [12, 5], [0, 11], [6, 4], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [6, 17], [19, 5], [10, 13], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  7.343674898147583

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[54, 63]
[115, 125]
[112, 127]
[134, 146]
[162, 181]
[190, 209]
[208, 226]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[79, 80, 89]
[126, 131, 136]
[139, 140, 149]
[211, 220, 223]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[62, 66, 75]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[133, 135, 141]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[54, 63]
[115, 125]
[112, 127]
[134, 146]
[162, 181]
[190, 209]
[208, 226]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.29669451713562

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [54, 63] cc => I, Pos: [54, 63] cc => I, Pos: [62, 66, 75] ccc => cc, Pos: [79, 80, 89] ccc => cc, Pos: [112, 127] cc => I, Pos: [112, 127] cc => I, Pos: [115, 125] cc => I, Pos: [115, 125] cc => I, Pos: [126, 131, 136] ccc => cc, Pos: [133, 135, 141] ccc => cc, Pos: [134, 146] cc => I, Pos: [134, 146] cc => I, Pos: [139, 140, 149] ccc => cc, Pos: [162, 181] cc => I, Pos: [162, 181] cc => I, Pos: [190, 209] cc => I, Pos: [190, 209] cc => I, Pos: [208, 226] cc => I, Pos: [208, 226] cc => I, Pos: [211, 220, 223] ccc => cc]

--------End Timer [Generate Plans]:  0.031247377395629883

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [54, 63] cc => I,
 Pos: [62, 66, 75] ccc => cc,
 Pos: [79, 80, 89] ccc => cc,
 Pos: [112, 127] cc => I,
 Pos: [115, 125] cc => I,
 Pos: [126, 131, 136] ccc => cc,
 Pos: [133, 135, 141] ccc => cc,
 Pos: [134, 146] cc => I,
 Pos: [139, 140, 149] ccc => cc,
 Pos: [162, 181] cc => I,
 Pos: [190, 209] cc => I,
 Pos: [208, 226] cc => I,
 Pos: [211, 220, 223] ccc => cc]
Change: 13, Saving: 13

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [54, 63] cc => I
Apply:  Pos: [62, 66, 75] ccc => cc
Apply:  Pos: [79, 80, 89] ccc => cc
Apply:  Pos: [112, 127] cc => I
Apply:  Pos: [115, 125] cc => I
Apply:  Pos: [126, 131, 136] ccc => cc
Apply:  Pos: [133, 135, 141] ccc => cc
Apply:  Pos: [134, 146] cc => I
Apply:  Pos: [139, 140, 149] ccc => cc
Apply:  Pos: [162, 181] cc => I
Apply:  Pos: [190, 209] cc => I
Apply:  Pos: [208, 226] cc => I
Apply:  Pos: [211, 220, 223] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [10, 13], [2, 8], [12, 5], [15, 16], [1, 18], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [12, 0], [16, 11], [10, 17], [6, 12], [4, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [4, 1], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [7, 1], [4, 1], [10, 13], [12, 5], [3, 19], [15, 16], [0, 16], [14, 9], [5, 18], [4, 12], [13, 12], [17, 13], [0, 18], [2, 10], [5, 9], [9, 15], [12, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  4.32794189453125

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[100, 111]
[126, 152]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 51, 58]
[72, 73, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[100, 111]
[126, 152]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.8593826293945312

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 51, 58] ccc => cc, Pos: [72, 73, 76] ccc => cc, Pos: [100, 111] cc => I, Pos: [100, 111] cc => I, Pos: [126, 152] cc => I, Pos: [126, 152] cc => I]

--------End Timer [Generate Plans]:  0.015637636184692383

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 51, 58] ccc => cc,
 Pos: [72, 73, 76] ccc => cc,
 Pos: [100, 111] cc => I,
 Pos: [126, 152] cc => I]
Change: 4, Saving: 5

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 51, 58] ccc => cc
Apply:  Pos: [72, 73, 76] ccc => cc
Apply:  Pos: [100, 111] cc => I
Apply:  Pos: [126, 152] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [1, 18], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [7, 1], [10, 13], [12, 5], [3, 19], [0, 16], [15, 16], [14, 9], [5, 18], [13, 12], [4, 12], [17, 13], [0, 18], [2, 10], [5, 9], [12, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.8750202655792236

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7033629417419434

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [6, 17], [0, 18], [2, 10], [9, 15], [10, 13], [12, 5], [15, 16], [1, 18], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [12, 0], [4, 0], [16, 11], [10, 17], [6, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [7, 1], [10, 13], [12, 5], [3, 19], [15, 16], [0, 16], [14, 9], [5, 18], [4, 12], [13, 12], [17, 13], [0, 18], [2, 10], [5, 9], [12, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.7033629417419434

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [203] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 46 - (small)
 - circuit cycle: 406

Reduced: 
 - size: 157 (43.61%)
 - depth: -1 (-2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12497806549072266

[19, 9], [6, 17], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [18, 11], [19, 15], [6, 17], [8, 3], [9, 15], [7, 1], [0, 16], [12, 5], [2, 8], [10, 17], [6, 4], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [6, 4], [10, 17], [7, 12], [18, 11], [2, 8], [5, 15], [12, 1], [6, 13], [0, 16], [19, 9], [4, 7], [8, 17], [9, 15], [17, 19], [13, 5], [10, 6], [4, 7], [2, 8], [18, 11], [9, 15], [1, 18], [6, 13], [4, 12], [8, 19], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [13, 5], [4, 12], [6, 17], [8, 19], [13, 5], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [0, 18], [19, 9], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [3, 14], [19, 9], [4, 12], [6, 17], [8, 3], [5, 0], [7, 1], [2, 10], [9, 15], [10, 13], [3, 14], [0, 18], [6, 17], [2, 8], [12, 5], [7, 1], [15, 16], [10, 13], [4, 1], [2, 8], [3, 19], [7, 12], [18, 11], [14, 9], [5, 0], [16, 11], [4, 1], [10, 13], [6, 17], [7, 12], [2, 8], [5, 0], [14, 9], [3, 19], [16, 11], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [14, 9], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [7, 1], [12, 0], [16, 11], [10, 17], [14, 9], [13, 5], [6, 4], [4, 12], [18, 11], [9, 15], [13, 5], [3, 19], [2, 10], [7, 1], [8, 17], [12, 1], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [18, 11], [12, 0], [17, 13], [14, 9], [10, 6], [18, 11], [8, 3], [19, 5], [15, 16], [12, 1], [17, 3], [15, 16], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [19, 5], [10, 17], [4, 1], [18, 16], [14, 9], [8, 3], [0, 11], [13, 12], [3, 14], [5, 9], [10, 6], [0, 18], [4, 1], [8, 17], [19, 15], [16, 11], [7, 12], [18, 11], [3, 14], [2, 8], [5, 9], [13, 0], [6, 17], [4, 1], [7, 12], [6, 13], [18, 11], [5, 0], [4, 1], [8, 17], [19, 15], [14, 9], [7, 1], [10, 13], [14, 9], [18, 11], [8, 17], [12, 5], [3, 19], [0, 16], [7, 1], [15, 16], [14, 9], [6, 17], [5, 0], [3, 19], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [7, 1], [8, 17], [5, 15], [14, 9], [12, 0], [6, 13], [16, 11], [7, 1], [5, 0], [14, 9], [16, 11], [8, 19], [6, 4], [10, 17], [4, 7], [5, 9], [10, 17], [0, 16], [19, 15], [3, 14], [6, 13], [18, 11], [7, 1], [14, 9], [19, 15], [18, 16], [8, 17], [12, 5], [10, 13], [0, 11], [6, 4], [7, 1], [0, 16], [14, 9], [6, 17], [4, 12], [18, 11], [2, 8], [10, 13], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [10, 6], [5, 0], [8, 3], [1, 18], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [1, 18], [19, 9], [5, 0], [10, 6], [17, 3], [2, 8], [7, 12], [15, 16], [12, 1], [2, 8], [17, 3], [19, 15], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [15, 16], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [6, 4], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [2, 10], [19, 15], [6, 17], [18, 11], [14, 9], [8, 3], [7, 12], [13, 0], [17, 19], [14, 9], [8, 3], [2, 10], [1, 18], [15, 16], [6, 4], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [16, 11], [7, 12], [1, 18], [10, 13], [8, 19], [0, 11], [9, 15], [6, 4], [17, 3], [4, 7], [19, 9], [12, 5], [10, 13], [0, 16], [18, 11], [8, 17], [4, 7], [6, 17], [18, 11], [19, 5], [10, 13], [12, 1], [8, 3], [9, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 53, 61]
[156, 161, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 87]
[68, 82, 88]
[284, 288, 295]
[342, 346, 359]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[336, 341, 349]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.218748092651367

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 13] cc => I, Pos: [1, 13] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [10, 17] cc => I, Pos: [10, 17] cc => I, Pos: [11, 30] cc => I, Pos: [11, 30] cc => I, Pos: [17, 26] cc => I, Pos: [17, 26] cc => I, Pos: [19, 31] cc => I, Pos: [19, 31] cc => I, Pos: [20, 28] cc => I, Pos: [20, 28] cc => I, Pos: [21, 27] cc => I, Pos: [21, 27] cc => I, Pos: [26, 35] cc => I, Pos: [26, 35] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [35, 52] cc => I, Pos: [35, 52] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [49, 59] cc => I, Pos: [49, 59] cc => I, Pos: [50, 53, 61] ccc => cc, Pos: [58, 62] cc => I, Pos: [58, 62] cc => I, Pos: [68, 82, 88] ccc => cc, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [77, 81, 87] ccc => cc, Pos: [80, 89] cc => I, Pos: [80, 89] cc => I, Pos: [83, 92] cc => I, Pos: [83, 92] cc => I, Pos: [86, 94] cc => I, Pos: [86, 94] cc => I, Pos: [89, 105] cc => I, Pos: [89, 105] cc => I, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [95, 103] cc => I, Pos: [95, 103] cc => I, Pos: [96, 107] cc => I, Pos: [96, 107] cc => I, Pos: [97, 110] cc => I, Pos: [97, 110] cc => I, Pos: [98, 106] cc => I, Pos: [98, 106] cc => I, Pos: [100, 109] cc => I, Pos: [100, 109] cc => I, Pos: [101, 108] cc => I, Pos: [101, 108] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 116] cc => I, Pos: [106, 116] cc => I, Pos: [110, 137] cc => I, Pos: [110, 137] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [126, 139] cc => I, Pos: [126, 139] cc => I, Pos: [131, 136] cc => I, Pos: [131, 136] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [141, 158] cc => I, Pos: [141, 158] cc => I, Pos: [149, 154] cc => I, Pos: [149, 154] cc => I, Pos: [152, 170] cc => I, Pos: [152, 170] cc => I, Pos: [153, 176] cc => I, Pos: [153, 176] cc => I, Pos: [156, 161, 166] ccc => cc, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [182, 190] cc => I, Pos: [182, 190] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [189, 194] cc => I, Pos: [189, 194] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [201, 213] cc => I, Pos: [201, 213] cc => I, Pos: [204, 211] cc => I, Pos: [204, 211] cc => I, Pos: [206, 215] cc => I, Pos: [206, 215] cc => I, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I, Pos: [222, 229] cc => I, Pos: [222, 229] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [227, 242] cc => I, Pos: [227, 242] cc => I, Pos: [228, 232] cc => I, Pos: [228, 232] cc => I, Pos: [235, 238] cc => I, Pos: [235, 238] cc => I, Pos: [240, 246] cc => I, Pos: [240, 246] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [266, 280] cc => I, Pos: [266, 280] cc => I, Pos: [269, 277] cc => I, Pos: [269, 277] cc => I, Pos: [281, 287] cc => I, Pos: [281, 287] cc => I, Pos: [282, 286] cc => I, Pos: [282, 286] cc => I, Pos: [284, 288, 295] ccc => cc, Pos: [286, 297] cc => I, Pos: [286, 297] cc => I, Pos: [302, 326] cc => I, Pos: [302, 326] cc => I, Pos: [303, 312] cc => I, Pos: [303, 312] cc => I, Pos: [312, 323] cc => I, Pos: [312, 323] cc => I, Pos: [316, 321] cc => I, Pos: [316, 321] cc => I, Pos: [317, 322] cc => I, Pos: [317, 322] cc => I, Pos: [331, 339] cc => I, Pos: [331, 339] cc => I, Pos: [336, 341, 349] ccc => cc, Pos: [339, 348] cc => I, Pos: [339, 348] cc => I, Pos: [342, 346, 359] ccc => cc, Pos: [345, 352] cc => I, Pos: [345, 352] cc => I, Pos: [348, 356] cc => I, Pos: [348, 356] cc => I, Pos: [350, 354] cc => I, Pos: [350, 354] cc => I]

--------End Timer [Generate Plans]:  0.1874833106994629

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 13] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [10, 17] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [26, 35] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [80, 89] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [86, 94] cc => I,
 Pos: [90, 96] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [98, 106] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [149, 154] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 194] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [200, 208] cc => I,
 Pos: [206, 215] cc => I,
 Pos: [201, 213] cc => I,
 Pos: [204, 211] cc => I,
 Pos: [222, 229] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [303, 312] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [339, 348] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [350, 354] cc => I]
Change: 70, Saving: 73

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 13] cc => I
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [10, 17] cc => I
Apply:  Pos: [19, 31] cc => I
Apply:  Pos: [20, 28] cc => I
Apply:  Pos: [21, 27] cc => I
Apply:  Pos: [26, 35] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [49, 59] cc => I
Apply:  Pos: [50, 53, 61] ccc => cc
Apply:  Pos: [58, 62] cc => I
Apply:  Pos: [68, 82, 88] ccc => cc
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [77, 81, 87] ccc => cc
Apply:  Pos: [80, 89] cc => I
Apply:  Pos: [83, 92] cc => I
Apply:  Pos: [86, 94] cc => I
Apply:  Pos: [90, 96] cc => I
Apply:  Pos: [95, 103] cc => I
Apply:  Pos: [97, 110] cc => I
Apply:  Pos: [98, 106] cc => I
Apply:  Pos: [100, 109] cc => I
Apply:  Pos: [101, 108] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [126, 139] cc => I
Apply:  Pos: [131, 136] cc => I
Apply:  Pos: [149, 154] cc => I
Apply:  Pos: [141, 158] cc => I
Apply:  Pos: [152, 170] cc => I
Apply:  Pos: [153, 176] cc => I
Apply:  Pos: [156, 161, 166] ccc => cc
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [174, 184] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [182, 190] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 194] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [200, 208] cc => I
Apply:  Pos: [206, 215] cc => I
Apply:  Pos: [201, 213] cc => I
Apply:  Pos: [204, 211] cc => I
Apply:  Pos: [222, 229] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 242] cc => I
Apply:  Pos: [228, 232] cc => I
Apply:  Pos: [235, 238] cc => I
Apply:  Pos: [240, 246] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [266, 280] cc => I
Apply:  Pos: [269, 277] cc => I
Apply:  Pos: [281, 287] cc => I
Apply:  Pos: [282, 286] cc => I
Apply:  Pos: [284, 288, 295] ccc => cc
Apply:  Pos: [302, 326] cc => I
Apply:  Pos: [303, 312] cc => I
Apply:  Pos: [316, 321] cc => I
Apply:  Pos: [317, 322] cc => I
Apply:  Pos: [339, 348] cc => I
Apply:  Pos: [336, 341, 349] ccc => cc
Apply:  Pos: [342, 346, 359] ccc => cc
Apply:  Pos: [345, 352] cc => I
Apply:  Pos: [350, 354] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [3, 14], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [18, 11], [10, 13], [6, 17], [2, 8], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [12, 0], [16, 11], [10, 17], [6, 4], [4, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [2, 8], [13, 0], [6, 17], [6, 13], [5, 0], [14, 9], [7, 1], [10, 13], [12, 5], [0, 16], [15, 16], [6, 17], [5, 0], [2, 8], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [8, 17], [5, 15], [12, 0], [5, 0], [8, 19], [6, 4], [4, 7], [5, 9], [0, 16], [3, 14], [18, 11], [18, 16], [8, 17], [12, 5], [0, 11], [6, 4], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [6, 17], [19, 5], [10, 13], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  7.40623140335083

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 63]
[114, 122]
[111, 124]
[132, 144]
[160, 179]
[188, 207]
[206, 224]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[79, 80, 89]
[123, 129, 134]
[137, 138, 147]
[209, 218, 221]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[59, 66, 75]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[131, 133, 139]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 63]
[114, 122]
[111, 124]
[132, 144]
[160, 179]
[188, 207]
[206, 224]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.23438024520874

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [53, 63] cc => I, Pos: [53, 63] cc => I, Pos: [59, 66, 75] ccc => cc, Pos: [79, 80, 89] ccc => cc, Pos: [111, 124] cc => I, Pos: [111, 124] cc => I, Pos: [114, 122] cc => I, Pos: [114, 122] cc => I, Pos: [123, 129, 134] ccc => cc, Pos: [131, 133, 139] ccc => cc, Pos: [132, 144] cc => I, Pos: [132, 144] cc => I, Pos: [137, 138, 147] ccc => cc, Pos: [160, 179] cc => I, Pos: [160, 179] cc => I, Pos: [188, 207] cc => I, Pos: [188, 207] cc => I, Pos: [206, 224] cc => I, Pos: [206, 224] cc => I, Pos: [209, 218, 221] ccc => cc]

--------End Timer [Generate Plans]:  0.03126168251037598

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [53, 63] cc => I,
 Pos: [59, 66, 75] ccc => cc,
 Pos: [79, 80, 89] ccc => cc,
 Pos: [111, 124] cc => I,
 Pos: [114, 122] cc => I,
 Pos: [123, 129, 134] ccc => cc,
 Pos: [131, 133, 139] ccc => cc,
 Pos: [132, 144] cc => I,
 Pos: [137, 138, 147] ccc => cc,
 Pos: [160, 179] cc => I,
 Pos: [188, 207] cc => I,
 Pos: [206, 224] cc => I,
 Pos: [209, 218, 221] ccc => cc]
Change: 13, Saving: 13

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [53, 63] cc => I
Apply:  Pos: [59, 66, 75] ccc => cc
Apply:  Pos: [79, 80, 89] ccc => cc
Apply:  Pos: [111, 124] cc => I
Apply:  Pos: [114, 122] cc => I
Apply:  Pos: [123, 129, 134] ccc => cc
Apply:  Pos: [131, 133, 139] ccc => cc
Apply:  Pos: [132, 144] cc => I
Apply:  Pos: [137, 138, 147] ccc => cc
Apply:  Pos: [160, 179] cc => I
Apply:  Pos: [188, 207] cc => I
Apply:  Pos: [206, 224] cc => I
Apply:  Pos: [209, 218, 221] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [1, 18], [10, 13], [6, 17], [2, 8], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [12, 0], [16, 11], [10, 17], [6, 12], [4, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [7, 1], [10, 13], [12, 5], [15, 16], [0, 16], [5, 18], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [9, 15], [12, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  4.281265735626221

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[124, 150]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 51, 61]
[72, 73, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[124, 150]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.8281443119049072

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 51, 61] ccc => cc, Pos: [72, 73, 76] ccc => cc, Pos: [124, 150] cc => I, Pos: [124, 150] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 51, 61] ccc => cc,
 Pos: [72, 73, 76] ccc => cc,
 Pos: [124, 150] cc => I]
Change: 3, Saving: 4

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 51, 61] ccc => cc
Apply:  Pos: [72, 73, 76] ccc => cc
Apply:  Pos: [124, 150] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [1, 18], [10, 13], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [7, 1], [10, 13], [12, 5], [0, 16], [15, 16], [5, 18], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.8281443119049072

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7499899864196777

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [1, 18], [10, 13], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [12, 0], [4, 0], [16, 11], [10, 17], [6, 12], [18, 11], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [14, 9], [7, 1], [10, 13], [12, 5], [15, 16], [0, 16], [5, 18], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.7499899864196777

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [203] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 46 - (small)
 - circuit cycle: 406

Reduced: 
 - size: 157 (43.61%)
 - depth: -1 (-2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14058852195739746

[19, 9], [6, 17], [13, 0], [15, 16], [12, 1], [18, 11], [2, 10], [5, 9], [4, 7], [13, 12], [0, 16], [18, 11], [19, 15], [6, 17], [8, 3], [9, 15], [7, 1], [0, 16], [12, 5], [2, 8], [10, 17], [6, 4], [3, 14], [19, 15], [13, 5], [14, 9], [0, 16], [6, 4], [10, 17], [7, 12], [18, 11], [2, 8], [5, 15], [12, 1], [6, 13], [0, 16], [19, 9], [4, 7], [8, 17], [9, 15], [17, 19], [13, 5], [10, 6], [4, 7], [2, 8], [18, 11], [9, 15], [1, 18], [6, 13], [4, 12], [8, 19], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [13, 5], [4, 12], [6, 17], [8, 19], [13, 5], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [0, 18], [19, 9], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [3, 14], [19, 9], [4, 12], [6, 17], [8, 3], [5, 0], [7, 1], [2, 10], [9, 15], [10, 13], [3, 14], [0, 18], [6, 17], [2, 8], [12, 5], [7, 1], [15, 16], [10, 13], [4, 1], [2, 8], [3, 19], [7, 12], [18, 11], [14, 9], [5, 0], [16, 11], [4, 1], [10, 13], [6, 17], [7, 12], [2, 8], [5, 0], [14, 9], [3, 19], [16, 11], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [14, 9], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [7, 1], [12, 0], [16, 11], [10, 17], [14, 9], [13, 5], [6, 4], [4, 12], [18, 11], [9, 15], [13, 5], [3, 19], [2, 10], [7, 1], [8, 17], [12, 1], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [18, 11], [12, 0], [17, 13], [14, 9], [10, 6], [18, 11], [8, 3], [19, 5], [15, 16], [12, 1], [17, 3], [15, 16], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [19, 5], [10, 17], [4, 1], [18, 16], [14, 9], [8, 3], [0, 11], [13, 12], [3, 14], [5, 9], [10, 6], [0, 18], [4, 1], [8, 17], [19, 15], [16, 11], [7, 12], [18, 11], [3, 14], [2, 8], [5, 9], [13, 0], [6, 17], [4, 1], [7, 12], [6, 13], [18, 11], [5, 0], [4, 1], [8, 17], [19, 15], [14, 9], [7, 1], [10, 13], [14, 9], [18, 11], [8, 17], [12, 5], [3, 19], [0, 16], [7, 1], [15, 16], [14, 9], [6, 17], [5, 0], [3, 19], [2, 8], [18, 11], [13, 12], [7, 1], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [7, 1], [8, 17], [5, 15], [14, 9], [12, 0], [6, 13], [16, 11], [7, 1], [5, 0], [14, 9], [16, 11], [8, 19], [6, 4], [10, 17], [4, 7], [5, 9], [10, 17], [0, 16], [19, 15], [3, 14], [6, 13], [18, 11], [7, 1], [14, 9], [19, 15], [18, 16], [8, 17], [12, 5], [10, 13], [0, 11], [6, 4], [7, 1], [0, 16], [14, 9], [6, 17], [4, 12], [18, 11], [2, 8], [10, 13], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [10, 6], [5, 0], [8, 3], [1, 18], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [1, 18], [19, 9], [5, 0], [10, 6], [17, 3], [2, 8], [7, 12], [15, 16], [12, 1], [2, 8], [17, 3], [19, 15], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [15, 16], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [6, 4], [2, 10], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [2, 10], [19, 15], [6, 17], [18, 11], [14, 9], [8, 3], [7, 12], [13, 0], [17, 19], [14, 9], [8, 3], [2, 10], [1, 18], [15, 16], [6, 4], [4, 7], [19, 15], [2, 8], [0, 18], [10, 13], [3, 14], [12, 1], [6, 17], [5, 9], [16, 11], [7, 12], [1, 18], [10, 13], [8, 19], [0, 11], [9, 15], [6, 4], [17, 3], [4, 7], [19, 9], [12, 5], [10, 13], [0, 16], [18, 11], [8, 17], [4, 7], [6, 17], [18, 11], [19, 5], [10, 13], [12, 1], [8, 3], [9, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[50, 53, 61]
[156, 161, 166]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[77, 81, 87]
[68, 82, 88]
[284, 288, 295]
[342, 346, 359]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[336, 341, 349]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 11]
[1, 13]
[10, 17]
[17, 26]
[21, 27]
[20, 28]
[11, 30]
[19, 31]
[26, 35]
[37, 43]
[30, 45]
[39, 46]
[35, 52]
[49, 59]
[58, 62]
[69, 78]
[80, 89]
[83, 92]
[86, 94]
[90, 96]
[95, 103]
[94, 104]
[89, 105]
[98, 106]
[96, 107]
[101, 108]
[100, 109]
[97, 110]
[102, 111]
[106, 116]
[120, 130]
[131, 136]
[110, 137]
[126, 139]
[134, 149]
[149, 154]
[141, 158]
[157, 160]
[152, 170]
[153, 176]
[168, 178]
[174, 184]
[175, 186]
[178, 189]
[182, 190]
[183, 192]
[189, 194]
[180, 196]
[197, 200]
[192, 201]
[195, 202]
[198, 206]
[200, 208]
[204, 211]
[201, 213]
[206, 215]
[211, 218]
[215, 222]
[222, 229]
[225, 231]
[228, 232]
[235, 238]
[227, 242]
[240, 246]
[244, 253]
[245, 255]
[250, 260]
[269, 277]
[266, 280]
[282, 286]
[281, 287]
[286, 297]
[303, 312]
[316, 321]
[317, 322]
[312, 323]
[302, 326]
[331, 339]
[339, 348]
[345, 352]
[350, 354]
[348, 356]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.109299182891846

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 13] cc => I, Pos: [1, 13] cc => I, Pos: [5, 11] cc => I, Pos: [5, 11] cc => I, Pos: [10, 17] cc => I, Pos: [10, 17] cc => I, Pos: [11, 30] cc => I, Pos: [11, 30] cc => I, Pos: [17, 26] cc => I, Pos: [17, 26] cc => I, Pos: [19, 31] cc => I, Pos: [19, 31] cc => I, Pos: [20, 28] cc => I, Pos: [20, 28] cc => I, Pos: [21, 27] cc => I, Pos: [21, 27] cc => I, Pos: [26, 35] cc => I, Pos: [26, 35] cc => I, Pos: [30, 45] cc => I, Pos: [30, 45] cc => I, Pos: [35, 52] cc => I, Pos: [35, 52] cc => I, Pos: [37, 43] cc => I, Pos: [37, 43] cc => I, Pos: [39, 46] cc => I, Pos: [39, 46] cc => I, Pos: [49, 59] cc => I, Pos: [49, 59] cc => I, Pos: [50, 53, 61] ccc => cc, Pos: [58, 62] cc => I, Pos: [58, 62] cc => I, Pos: [68, 82, 88] ccc => cc, Pos: [69, 78] cc => I, Pos: [69, 78] cc => I, Pos: [77, 81, 87] ccc => cc, Pos: [80, 89] cc => I, Pos: [80, 89] cc => I, Pos: [83, 92] cc => I, Pos: [83, 92] cc => I, Pos: [86, 94] cc => I, Pos: [86, 94] cc => I, Pos: [89, 105] cc => I, Pos: [89, 105] cc => I, Pos: [90, 96] cc => I, Pos: [90, 96] cc => I, Pos: [94, 104] cc => I, Pos: [94, 104] cc => I, Pos: [95, 103] cc => I, Pos: [95, 103] cc => I, Pos: [96, 107] cc => I, Pos: [96, 107] cc => I, Pos: [97, 110] cc => I, Pos: [97, 110] cc => I, Pos: [98, 106] cc => I, Pos: [98, 106] cc => I, Pos: [100, 109] cc => I, Pos: [100, 109] cc => I, Pos: [101, 108] cc => I, Pos: [101, 108] cc => I, Pos: [102, 111] cc => I, Pos: [102, 111] cc => I, Pos: [106, 116] cc => I, Pos: [106, 116] cc => I, Pos: [110, 137] cc => I, Pos: [110, 137] cc => I, Pos: [120, 130] cc => I, Pos: [120, 130] cc => I, Pos: [126, 139] cc => I, Pos: [126, 139] cc => I, Pos: [131, 136] cc => I, Pos: [131, 136] cc => I, Pos: [134, 149] cc => I, Pos: [134, 149] cc => I, Pos: [141, 158] cc => I, Pos: [141, 158] cc => I, Pos: [149, 154] cc => I, Pos: [149, 154] cc => I, Pos: [152, 170] cc => I, Pos: [152, 170] cc => I, Pos: [153, 176] cc => I, Pos: [153, 176] cc => I, Pos: [156, 161, 166] ccc => cc, Pos: [157, 160] cc => I, Pos: [157, 160] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [174, 184] cc => I, Pos: [174, 184] cc => I, Pos: [175, 186] cc => I, Pos: [175, 186] cc => I, Pos: [178, 189] cc => I, Pos: [178, 189] cc => I, Pos: [180, 196] cc => I, Pos: [180, 196] cc => I, Pos: [182, 190] cc => I, Pos: [182, 190] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [189, 194] cc => I, Pos: [189, 194] cc => I, Pos: [192, 201] cc => I, Pos: [192, 201] cc => I, Pos: [195, 202] cc => I, Pos: [195, 202] cc => I, Pos: [197, 200] cc => I, Pos: [197, 200] cc => I, Pos: [198, 206] cc => I, Pos: [198, 206] cc => I, Pos: [200, 208] cc => I, Pos: [200, 208] cc => I, Pos: [201, 213] cc => I, Pos: [201, 213] cc => I, Pos: [204, 211] cc => I, Pos: [204, 211] cc => I, Pos: [206, 215] cc => I, Pos: [206, 215] cc => I, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I, Pos: [215, 222] cc => I, Pos: [215, 222] cc => I, Pos: [222, 229] cc => I, Pos: [222, 229] cc => I, Pos: [225, 231] cc => I, Pos: [225, 231] cc => I, Pos: [227, 242] cc => I, Pos: [227, 242] cc => I, Pos: [228, 232] cc => I, Pos: [228, 232] cc => I, Pos: [235, 238] cc => I, Pos: [235, 238] cc => I, Pos: [240, 246] cc => I, Pos: [240, 246] cc => I, Pos: [244, 253] cc => I, Pos: [244, 253] cc => I, Pos: [245, 255] cc => I, Pos: [245, 255] cc => I, Pos: [250, 260] cc => I, Pos: [250, 260] cc => I, Pos: [266, 280] cc => I, Pos: [266, 280] cc => I, Pos: [269, 277] cc => I, Pos: [269, 277] cc => I, Pos: [281, 287] cc => I, Pos: [281, 287] cc => I, Pos: [282, 286] cc => I, Pos: [282, 286] cc => I, Pos: [284, 288, 295] ccc => cc, Pos: [286, 297] cc => I, Pos: [286, 297] cc => I, Pos: [302, 326] cc => I, Pos: [302, 326] cc => I, Pos: [303, 312] cc => I, Pos: [303, 312] cc => I, Pos: [312, 323] cc => I, Pos: [312, 323] cc => I, Pos: [316, 321] cc => I, Pos: [316, 321] cc => I, Pos: [317, 322] cc => I, Pos: [317, 322] cc => I, Pos: [331, 339] cc => I, Pos: [331, 339] cc => I, Pos: [336, 341, 349] ccc => cc, Pos: [339, 348] cc => I, Pos: [339, 348] cc => I, Pos: [342, 346, 359] ccc => cc, Pos: [345, 352] cc => I, Pos: [345, 352] cc => I, Pos: [348, 356] cc => I, Pos: [348, 356] cc => I, Pos: [350, 354] cc => I, Pos: [350, 354] cc => I]

Plan: 1
[Pos: [1, 13] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [10, 17] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [26, 35] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [80, 89] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [86, 94] cc => I,
 Pos: [90, 96] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [98, 106] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 194] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [201, 213] cc => I,
 Pos: [204, 211] cc => I,
 Pos: [215, 222] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [303, 312] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [331, 339] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [348, 356] cc => I,
 Pos: [350, 354] cc => I]
Change: 71, Saving: 74

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.17186331748962402

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 13] cc => I,
 Pos: [5, 11] cc => I,
 Pos: [10, 17] cc => I,
 Pos: [19, 31] cc => I,
 Pos: [20, 28] cc => I,
 Pos: [21, 27] cc => I,
 Pos: [26, 35] cc => I,
 Pos: [30, 45] cc => I,
 Pos: [37, 43] cc => I,
 Pos: [39, 46] cc => I,
 Pos: [49, 59] cc => I,
 Pos: [50, 53, 61] ccc => cc,
 Pos: [58, 62] cc => I,
 Pos: [68, 82, 88] ccc => cc,
 Pos: [69, 78] cc => I,
 Pos: [77, 81, 87] ccc => cc,
 Pos: [80, 89] cc => I,
 Pos: [83, 92] cc => I,
 Pos: [86, 94] cc => I,
 Pos: [90, 96] cc => I,
 Pos: [95, 103] cc => I,
 Pos: [97, 110] cc => I,
 Pos: [98, 106] cc => I,
 Pos: [100, 109] cc => I,
 Pos: [101, 108] cc => I,
 Pos: [102, 111] cc => I,
 Pos: [120, 130] cc => I,
 Pos: [126, 139] cc => I,
 Pos: [131, 136] cc => I,
 Pos: [134, 149] cc => I,
 Pos: [141, 158] cc => I,
 Pos: [152, 170] cc => I,
 Pos: [153, 176] cc => I,
 Pos: [156, 161, 166] ccc => cc,
 Pos: [157, 160] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [174, 184] cc => I,
 Pos: [175, 186] cc => I,
 Pos: [180, 196] cc => I,
 Pos: [182, 190] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 194] cc => I,
 Pos: [195, 202] cc => I,
 Pos: [197, 200] cc => I,
 Pos: [198, 206] cc => I,
 Pos: [201, 213] cc => I,
 Pos: [204, 211] cc => I,
 Pos: [215, 222] cc => I,
 Pos: [225, 231] cc => I,
 Pos: [227, 242] cc => I,
 Pos: [228, 232] cc => I,
 Pos: [235, 238] cc => I,
 Pos: [240, 246] cc => I,
 Pos: [244, 253] cc => I,
 Pos: [245, 255] cc => I,
 Pos: [250, 260] cc => I,
 Pos: [266, 280] cc => I,
 Pos: [269, 277] cc => I,
 Pos: [281, 287] cc => I,
 Pos: [282, 286] cc => I,
 Pos: [284, 288, 295] ccc => cc,
 Pos: [302, 326] cc => I,
 Pos: [303, 312] cc => I,
 Pos: [316, 321] cc => I,
 Pos: [317, 322] cc => I,
 Pos: [331, 339] cc => I,
 Pos: [336, 341, 349] ccc => cc,
 Pos: [342, 346, 359] ccc => cc,
 Pos: [345, 352] cc => I,
 Pos: [348, 356] cc => I,
 Pos: [350, 354] cc => I]
Change: 71, Saving: 74

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [1, 13] cc => I
Apply:  Pos: [5, 11] cc => I
Apply:  Pos: [10, 17] cc => I
Apply:  Pos: [19, 31] cc => I
Apply:  Pos: [20, 28] cc => I
Apply:  Pos: [21, 27] cc => I
Apply:  Pos: [26, 35] cc => I
Apply:  Pos: [30, 45] cc => I
Apply:  Pos: [37, 43] cc => I
Apply:  Pos: [39, 46] cc => I
Apply:  Pos: [49, 59] cc => I
Apply:  Pos: [50, 53, 61] ccc => cc
Apply:  Pos: [58, 62] cc => I
Apply:  Pos: [68, 82, 88] ccc => cc
Apply:  Pos: [69, 78] cc => I
Apply:  Pos: [77, 81, 87] ccc => cc
Apply:  Pos: [80, 89] cc => I
Apply:  Pos: [83, 92] cc => I
Apply:  Pos: [86, 94] cc => I
Apply:  Pos: [90, 96] cc => I
Apply:  Pos: [95, 103] cc => I
Apply:  Pos: [97, 110] cc => I
Apply:  Pos: [98, 106] cc => I
Apply:  Pos: [100, 109] cc => I
Apply:  Pos: [101, 108] cc => I
Apply:  Pos: [102, 111] cc => I
Apply:  Pos: [120, 130] cc => I
Apply:  Pos: [126, 139] cc => I
Apply:  Pos: [131, 136] cc => I
Apply:  Pos: [134, 149] cc => I
Apply:  Pos: [141, 158] cc => I
Apply:  Pos: [152, 170] cc => I
Apply:  Pos: [153, 176] cc => I
Apply:  Pos: [156, 161, 166] ccc => cc
Apply:  Pos: [157, 160] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [174, 184] cc => I
Apply:  Pos: [175, 186] cc => I
Apply:  Pos: [180, 196] cc => I
Apply:  Pos: [182, 190] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 194] cc => I
Apply:  Pos: [195, 202] cc => I
Apply:  Pos: [197, 200] cc => I
Apply:  Pos: [198, 206] cc => I
Apply:  Pos: [201, 213] cc => I
Apply:  Pos: [204, 211] cc => I
Apply:  Pos: [215, 222] cc => I
Apply:  Pos: [225, 231] cc => I
Apply:  Pos: [227, 242] cc => I
Apply:  Pos: [228, 232] cc => I
Apply:  Pos: [235, 238] cc => I
Apply:  Pos: [240, 246] cc => I
Apply:  Pos: [244, 253] cc => I
Apply:  Pos: [245, 255] cc => I
Apply:  Pos: [250, 260] cc => I
Apply:  Pos: [266, 280] cc => I
Apply:  Pos: [269, 277] cc => I
Apply:  Pos: [281, 287] cc => I
Apply:  Pos: [282, 286] cc => I
Apply:  Pos: [284, 288, 295] ccc => cc
Apply:  Pos: [302, 326] cc => I
Apply:  Pos: [303, 312] cc => I
Apply:  Pos: [316, 321] cc => I
Apply:  Pos: [317, 322] cc => I
Apply:  Pos: [331, 339] cc => I
Apply:  Pos: [336, 341, 349] ccc => cc
Apply:  Pos: [342, 346, 359] ccc => cc
Apply:  Pos: [345, 352] cc => I
Apply:  Pos: [348, 356] cc => I
Apply:  Pos: [350, 354] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [3, 14], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [18, 11], [10, 13], [6, 17], [2, 8], [3, 14], [5, 9], [6, 4], [1, 18], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [18, 11], [12, 0], [16, 11], [10, 17], [6, 4], [4, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [6, 4], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [2, 8], [13, 0], [6, 17], [6, 13], [5, 0], [10, 13], [12, 5], [0, 16], [15, 16], [14, 9], [6, 17], [5, 0], [2, 8], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [9, 15], [8, 17], [5, 15], [12, 0], [7, 1], [5, 0], [8, 19], [6, 4], [4, 7], [5, 9], [0, 16], [3, 14], [18, 11], [18, 16], [8, 17], [12, 5], [0, 11], [6, 4], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [10, 17], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [10, 17], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [3, 14], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [3, 14], [12, 1], [6, 17], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [6, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  7.28116250038147

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 63]
[114, 121]
[111, 123]
[131, 144]
[160, 179]
[188, 206]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[79, 80, 88]
[137, 138, 147]
[208, 217, 220]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[59, 66, 75]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[130, 132, 139]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 63]
[114, 121]
[111, 123]
[131, 144]
[160, 179]
[188, 206]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.171871185302734

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [53, 63] cc => I, Pos: [53, 63] cc => I, Pos: [59, 66, 75] ccc => cc, Pos: [79, 80, 88] ccc => cc, Pos: [111, 123] cc => I, Pos: [111, 123] cc => I, Pos: [114, 121] cc => I, Pos: [114, 121] cc => I, Pos: [130, 132, 139] ccc => cc, Pos: [131, 144] cc => I, Pos: [131, 144] cc => I, Pos: [137, 138, 147] ccc => cc, Pos: [160, 179] cc => I, Pos: [160, 179] cc => I, Pos: [188, 206] cc => I, Pos: [188, 206] cc => I, Pos: [208, 217, 220] ccc => cc]

Plan: 1
[Pos: [53, 63] cc => I,
 Pos: [59, 66, 75] ccc => cc,
 Pos: [79, 80, 88] ccc => cc,
 Pos: [111, 123] cc => I,
 Pos: [114, 121] cc => I,
 Pos: [130, 132, 139] ccc => cc,
 Pos: [131, 144] cc => I,
 Pos: [137, 138, 147] ccc => cc,
 Pos: [160, 179] cc => I,
 Pos: [188, 206] cc => I,
 Pos: [208, 217, 220] ccc => cc]
Change: 11, Saving: 11

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.03126120567321777

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [53, 63] cc => I,
 Pos: [59, 66, 75] ccc => cc,
 Pos: [79, 80, 88] ccc => cc,
 Pos: [111, 123] cc => I,
 Pos: [114, 121] cc => I,
 Pos: [130, 132, 139] ccc => cc,
 Pos: [131, 144] cc => I,
 Pos: [137, 138, 147] ccc => cc,
 Pos: [160, 179] cc => I,
 Pos: [188, 206] cc => I,
 Pos: [208, 217, 220] ccc => cc]
Change: 11, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [53, 63] cc => I
Apply:  Pos: [59, 66, 75] ccc => cc
Apply:  Pos: [79, 80, 88] ccc => cc
Apply:  Pos: [111, 123] cc => I
Apply:  Pos: [114, 121] cc => I
Apply:  Pos: [130, 132, 139] ccc => cc
Apply:  Pos: [131, 144] cc => I
Apply:  Pos: [137, 138, 147] ccc => cc
Apply:  Pos: [160, 179] cc => I
Apply:  Pos: [188, 206] cc => I
Apply:  Pos: [208, 217, 220] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 8], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [1, 18], [10, 13], [6, 17], [2, 8], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 12], [12, 0], [16, 11], [10, 17], [6, 12], [4, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [15, 16], [0, 16], [14, 9], [5, 0], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [9, 15], [12, 0], [7, 1], [5, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [9, 15], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  4.203132390975952

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[123, 151]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[48, 51, 61]
[72, 73, 76]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[123, 151]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7656447887420654

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 51, 61] ccc => cc, Pos: [72, 73, 76] ccc => cc, Pos: [123, 151] cc => I, Pos: [123, 151] cc => I]

Plan: 1
[Pos: [48, 51, 61] ccc => cc,
 Pos: [72, 73, 76] ccc => cc,
 Pos: [123, 151] cc => I]
Change: 3, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015623331069946289

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 51, 61] ccc => cc,
 Pos: [72, 73, 76] ccc => cc,
 Pos: [123, 151] cc => I]
Change: 3, Saving: 4

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [48, 51, 61] ccc => cc
Apply:  Pos: [72, 73, 76] ccc => cc
Apply:  Pos: [123, 151] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [1, 18], [10, 13], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [4, 0], [12, 0], [16, 11], [10, 17], [6, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [0, 16], [15, 16], [14, 9], [5, 0], [13, 12], [4, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [7, 1], [5, 0], [8, 19], [4, 7], [6, 7], [0, 16], [3, 14], [18, 11], [18, 16], [12, 5], [0, 16], [0, 11], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 7], [4, 12], [13, 5], [2, 8], [18, 11], [3, 19], [7, 1], [7, 12], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.7812681198120117

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6875290870666504

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[19, 9], [13, 0], [15, 16], [12, 1], [2, 10], [5, 9], [4, 7], [13, 12], [19, 15], [8, 3], [9, 15], [7, 1], [12, 5], [3, 14], [19, 15], [13, 5], [14, 9], [7, 12], [5, 15], [12, 1], [6, 13], [19, 9], [8, 17], [17, 19], [13, 5], [10, 6], [2, 8], [1, 18], [6, 13], [8, 9], [3, 14], [0, 16], [19, 9], [16, 11], [2, 10], [7, 1], [8, 3], [6, 17], [10, 6], [7, 12], [14, 9], [17, 3], [15, 16], [5, 0], [10, 17], [5, 15], [16, 11], [6, 13], [2, 3], [12, 1], [4, 7], [8, 3], [4, 12], [0, 18], [2, 10], [9, 15], [12, 5], [15, 16], [1, 18], [10, 13], [6, 17], [5, 9], [6, 4], [18, 11], [7, 12], [10, 17], [13, 0], [0, 16], [5, 15], [8, 17], [10, 6], [12, 0], [4, 0], [16, 11], [10, 17], [6, 12], [9, 15], [3, 19], [2, 10], [8, 17], [2, 8], [0, 16], [5, 15], [10, 13], [19, 9], [17, 3], [12, 0], [17, 13], [18, 11], [8, 3], [19, 0], [17, 3], [5, 0], [4, 7], [10, 13], [2, 8], [7, 12], [10, 17], [18, 16], [8, 3], [0, 11], [13, 12], [0, 18], [8, 17], [16, 11], [13, 0], [6, 13], [5, 0], [10, 13], [12, 5], [15, 16], [0, 16], [14, 9], [5, 0], [4, 12], [13, 12], [17, 13], [3, 19], [0, 18], [2, 10], [5, 9], [12, 0], [7, 1], [5, 0], [8, 19], [6, 7], [4, 7], [0, 16], [3, 14], [18, 16], [18, 11], [12, 5], [0, 11], [0, 16], [6, 17], [4, 12], [18, 11], [2, 8], [3, 19], [4, 1], [17, 19], [18, 16], [7, 12], [5, 0], [8, 3], [0, 16], [4, 7], [3, 14], [12, 5], [8, 19], [19, 9], [5, 0], [7, 12], [19, 15], [12, 1], [15, 16], [6, 13], [14, 9], [0, 18], [4, 12], [4, 7], [13, 5], [2, 8], [18, 11], [3, 19], [7, 12], [7, 1], [16, 11], [5, 15], [19, 9], [8, 17], [0, 18], [12, 5], [0, 16], [19, 15], [6, 17], [18, 11], [7, 12], [13, 0], [17, 19], [2, 10], [1, 18], [15, 16], [4, 7], [19, 15], [2, 8], [0, 18], [12, 1], [6, 3], [5, 9], [0, 16], [7, 12], [1, 18], [8, 19], [16, 11], [19, 9], [6, 4], [17, 3], [9, 15], [12, 5], [8, 17], [19, 5], [12, 1], [8, 3], ----End Timer [Execute Mapping]:  3.6875290870666504

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [204] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 47 - (small)
 - circuit cycle: 408

Reduced: 
 - size: 156 (43.33%)
 - depth: -2 (-4.44%)

