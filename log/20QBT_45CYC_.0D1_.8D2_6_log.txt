----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14062023162841797

[2, 13], [1, 9], [18, 10], [15, 19], [7, 0], [11, 4], [8, 17], [12, 5], [8, 13], [7, 0], [1, 2], [19, 3], [9, 14], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [3, 10], [6, 0], [12, 5], [9, 17], [11, 16], [1, 2], [18, 13], [9, 14], [8, 13], [1, 2], [7, 0], [12, 5], [3, 10], [11, 16], [14, 17], [5, 18], [6, 0], [1, 12], [11, 4], [15, 19], [2, 13], [17, 7], [19, 3], [5, 10], [9, 14], [8, 13], [16, 12], [6, 0], [2, 18], [11, 4], [17, 7], [16, 12], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [1, 9], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [9, 14], [8, 13], [2, 18], [14, 17], [4, 5], [12, 15], [7, 6], [16, 1], [19, 3], [8, 13], [9, 17], [12, 5], [11, 4], [19, 3], [18, 10], [7, 6], [2, 13], [14, 8], [10, 6], [17, 7], [15, 19], [4, 5], [1, 12], [2, 13], [9, 8], [17, 7], [18, 10], [5, 3], [16, 12], [11, 4], [1, 2], [18, 13], [19, 3], [4, 15], [14, 17], [11, 16], [7, 0], [10, 6], [9, 8], [12, 5], [1, 2], [5, 10], [13, 7], [4, 12], [14, 17], [11, 16], [9, 8], [6, 0], [16, 1], [4, 15], [7, 6], [3, 10], [14, 8], [5, 18], [12, 2], [16, 1], [19, 3], [6, 0], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [11, 16], [18, 13], [1, 2], [7, 6], [12, 15], [5, 10], [19, 3], [8, 17], [11, 4], [3, 10], [14, 17], [15, 5], [7, 6], [18, 13], [1, 2], [9, 8], [11, 4], [13, 7], [1, 9], [14, 17], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [9, 8], [12, 5], [17, 7], [2, 18], [13, 0], [11, 16], [10, 6], [15, 5], [7, 0], [1, 2], [18, 10], [16, 12], [14, 17], [9, 8], [19, 3], [5, 18], [9, 17], [14, 8], [1, 2], [15, 19], [7, 6], [4, 12], [13, 0], [11, 16], [3, 10], [18, 13], [12, 2], [14, 8], [7, 6], [4, 15], [16, 1], [2, 13], [19, 3], [14, 17], [7, 6], [4, 15], [12, 5], [11, 16], [18, 10], [1, 9], [2, 13], [19, 3], [1, 9], [16, 12], [4, 15], [18, 10], [7, 0], [14, 8], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [19, 3], [17, 7], [5, 10], [2, 13], [8, 17], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [11, 4], [2, 18], [12, 15], [13, 6], [9, 14], [3, 10], [16, 1], [17, 7], [11, 4], [2, 13], [16, 1], [9, 8], [12, 15], [11, 4], [5, 3], [7, 6], [14, 17], [16, 2], [8, 13], [4, 12], [18, 10], [5, 3], [15, 19], [17, 7], [1, 9], [16, 2], [6, 0], [4, 5], [9, 17], [8, 13], [18, 10], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [9, 14], [6, 0], [5, 10], [11, 4], [16, 12], [9, 14], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [16, 12], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [6, 0], [12, 15], [4, 5], [6, 0], [16, 1], [14, 8], [18, 3], [2, 13], [17, 7], [15, 19], [5, 10], [7, 0], [1, 9], [11, 4], [13, 6], [14, 17], [16, 12], [18, 3], [15, 19], [12, 2], [3, 10], [17, 7], [11, 4], [6, 0], [16, 1], [5, 18], [14, 8], [19, 3], [8, 17], [7, 6], [4, 15], [12, 2], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [7, 6], [16, 2], [15, 5], [9, 8], [13, 0], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [16, 2], [1, 9], [17, 7], [5, 10], [4, 12], [13, 0], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [15, 19], [5, 3], [17, 7], [10, 6], [1, 2], [8, 18], [16, 12], [11, 4], [15, 19], [9, 14], [19, 3], [10, 6], [2, 13], [16, 12], [9, 8], [17, 7], [5, 18], [19, 3], [16, 12], [13, 6], [9, 17], [5, 18], [11, 4], [1, 2], [7, 0], [18, 3], [16, 12], [15, 19], [1, 2], [13, 0], [9, 8], [7, 6], [4, 5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 17, 25]
[5, 13, 36]
[174, 181, 188]
[273, 281, 293]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[42, 55, 62]
[54, 60, 64]
[80, 88, 99]
[109, 112, 119]
[193, 203, 212]
[205, 208, 221]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.187517166137695

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 9] cc => I, Pos: [4, 9] cc => I, Pos: [5, 13, 36] ccc => cc, Pos: [10, 23] cc => I, Pos: [10, 23] cc => I, Pos: [12, 17, 25] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [23, 27] cc => I, Pos: [23, 27] cc => I, Pos: [34, 45] cc => I, Pos: [34, 45] cc => I, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 55, 62] ccc => cc, Pos: [44, 49] cc => I, Pos: [44, 49] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [54, 60, 64] ccc => cc, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 88, 99] ccc => cc, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [86, 100] cc => I, Pos: [86, 100] cc => I, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [96, 106] cc => I, Pos: [96, 106] cc => I, Pos: [97, 107] cc => I, Pos: [97, 107] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [109, 112, 119] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [118, 132] cc => I, Pos: [118, 132] cc => I, Pos: [121, 127] cc => I, Pos: [121, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [126, 156] cc => I, Pos: [126, 156] cc => I, Pos: [127, 139] cc => I, Pos: [127, 139] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [134, 142] cc => I, Pos: [134, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [151, 164] cc => I, Pos: [151, 164] cc => I, Pos: [160, 169] cc => I, Pos: [160, 169] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [174, 181, 188] ccc => cc, Pos: [178, 198] cc => I, Pos: [178, 198] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 186] cc => I, Pos: [180, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [186, 195] cc => I, Pos: [186, 195] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [190, 193] cc => I, Pos: [190, 193] cc => I, Pos: [192, 204] cc => I, Pos: [192, 204] cc => I, Pos: [193, 203, 212] ccc => cc, Pos: [198, 200] cc => I, Pos: [198, 200] cc => I, Pos: [205, 208, 221] ccc => cc, Pos: [214, 222] cc => I, Pos: [214, 222] cc => I, Pos: [216, 226] cc => I, Pos: [216, 226] cc => I, Pos: [220, 224] cc => I, Pos: [220, 224] cc => I, Pos: [222, 227] cc => I, Pos: [222, 227] cc => I, Pos: [228, 235] cc => I, Pos: [228, 235] cc => I, Pos: [231, 239] cc => I, Pos: [231, 239] cc => I, Pos: [232, 243] cc => I, Pos: [232, 243] cc => I, Pos: [234, 244] cc => I, Pos: [234, 244] cc => I, Pos: [240, 252] cc => I, Pos: [240, 252] cc => I, Pos: [251, 256] cc => I, Pos: [251, 256] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [269, 272] cc => I, Pos: [269, 272] cc => I, Pos: [273, 281, 293] ccc => cc, Pos: [274, 295] cc => I, Pos: [274, 295] cc => I, Pos: [275, 286] cc => I, Pos: [275, 286] cc => I, Pos: [278, 287] cc => I, Pos: [278, 287] cc => I, Pos: [282, 291] cc => I, Pos: [282, 291] cc => I, Pos: [288, 300] cc => I, Pos: [288, 300] cc => I, Pos: [298, 306] cc => I, Pos: [298, 306] cc => I, Pos: [307, 316] cc => I, Pos: [307, 316] cc => I, Pos: [310, 321] cc => I, Pos: [310, 321] cc => I, Pos: [327, 335] cc => I, Pos: [327, 335] cc => I, Pos: [329, 342] cc => I, Pos: [329, 342] cc => I, Pos: [330, 338] cc => I, Pos: [330, 338] cc => I, Pos: [333, 340] cc => I, Pos: [333, 340] cc => I, Pos: [334, 349] cc => I, Pos: [334, 349] cc => I, Pos: [337, 344] cc => I, Pos: [337, 344] cc => I, Pos: [340, 345] cc => I, Pos: [340, 345] cc => I, Pos: [341, 357] cc => I, Pos: [341, 357] cc => I, Pos: [343, 348] cc => I, Pos: [343, 348] cc => I, Pos: [345, 353] cc => I, Pos: [345, 353] cc => I, Pos: [350, 355] cc => I, Pos: [350, 355] cc => I]

Plan: 1
[Pos: [4, 9] cc => I,
 Pos: [5, 13, 36] ccc => cc,
 Pos: [10, 23] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [86, 100] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [121, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [180, 186] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [190, 193] cc => I,
 Pos: [198, 200] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [214, 222] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [333, 340] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [345, 353] cc => I,
 Pos: [350, 355] cc => I]
Change: 74, Saving: 280

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 9] cc => I,
 Pos: [5, 13, 36] ccc => cc,
 Pos: [10, 23] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [86, 100] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [121, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [180, 186] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [190, 193] cc => I,
 Pos: [198, 200] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [214, 222] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [333, 340] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [345, 353] cc => I,
 Pos: [350, 355] cc => I]
Change: 74, Saving: 280

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 9] cc => I
Apply:  Pos: [5, 13, 36] ccc => cc
Apply:  Pos: [10, 23] cc => I
Apply:  Pos: [12, 17, 25] ccc => cc
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [34, 45] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 55, 62] ccc => cc
Apply:  Pos: [44, 49] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 88, 99] ccc => cc
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [86, 100] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [96, 106] cc => I
Apply:  Pos: [97, 107] cc => I
Apply:  Pos: [109, 112, 119] ccc => cc
Apply:  Pos: [110, 117] cc => I
Apply:  Pos: [118, 132] cc => I
Apply:  Pos: [121, 127] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [126, 156] cc => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [151, 164] cc => I
Apply:  Pos: [160, 169] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [174, 181, 188] ccc => cc
Apply:  Pos: [180, 186] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [190, 193] cc => I
Apply:  Pos: [198, 200] cc => I
Apply:  Pos: [205, 208, 221] ccc => cc
Apply:  Pos: [214, 222] cc => I
Apply:  Pos: [216, 226] cc => I
Apply:  Pos: [220, 224] cc => I
Apply:  Pos: [228, 235] cc => I
Apply:  Pos: [231, 239] cc => I
Apply:  Pos: [232, 243] cc => I
Apply:  Pos: [234, 244] cc => I
Apply:  Pos: [240, 252] cc => I
Apply:  Pos: [251, 256] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [269, 272] cc => I
Apply:  Pos: [273, 281, 293] ccc => cc
Apply:  Pos: [275, 286] cc => I
Apply:  Pos: [278, 287] cc => I
Apply:  Pos: [282, 291] cc => I
Apply:  Pos: [288, 300] cc => I
Apply:  Pos: [298, 306] cc => I
Apply:  Pos: [307, 316] cc => I
Apply:  Pos: [310, 321] cc => I
Apply:  Pos: [327, 335] cc => I
Apply:  Pos: [329, 342] cc => I
Apply:  Pos: [330, 338] cc => I
Apply:  Pos: [333, 340] cc => I
Apply:  Pos: [334, 349] cc => I
Apply:  Pos: [337, 344] cc => I
Apply:  Pos: [341, 357] cc => I
Apply:  Pos: [343, 348] cc => I
Apply:  Pos: [345, 353] cc => I
Apply:  Pos: [350, 355] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [12, 15], [16, 1], [9, 17], [12, 5], [11, 4], [18, 10], [14, 8], [18, 10], [15, 19], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [18, 13], [12, 2], [16, 1], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [18, 13], [6, 0], [4, 12], [16, 1], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [2, 18], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [15, 19], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [1, 9], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [15, 5], [9, 8], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [5, 10], [4, 12], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [5, 3], [1, 2], [8, 18], [9, 14], [2, 13], [13, 6], [9, 17], [7, 0], [18, 3], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  7.187517166137695

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[50, 52]
[111, 120]
[113, 123]
[129, 144]
[134, 154]
[174, 189]
[202, 213]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[39, 45, 53]
[207, 209, 215]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[194, 200, 206]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[50, 52]
[111, 120]
[113, 123]
[129, 144]
[134, 154]
[174, 189]
[202, 213]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.109327554702759

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [39, 45, 53] ccc => cc, Pos: [50, 52] cc => I, Pos: [50, 52] cc => I, Pos: [111, 120] cc => I, Pos: [111, 120] cc => I, Pos: [113, 123] cc => I, Pos: [113, 123] cc => I, Pos: [129, 144] cc => I, Pos: [129, 144] cc => I, Pos: [134, 154] cc => I, Pos: [134, 154] cc => I, Pos: [174, 189] cc => I, Pos: [174, 189] cc => I, Pos: [194, 200, 206] ccc => cc, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [207, 209, 215] ccc => cc]

Plan: 1
[Pos: [39, 45, 53] ccc => cc,
 Pos: [50, 52] cc => I,
 Pos: [111, 120] cc => I,
 Pos: [113, 123] cc => I,
 Pos: [129, 144] cc => I,
 Pos: [134, 154] cc => I,
 Pos: [174, 189] cc => I,
 Pos: [194, 200, 206] ccc => cc,
 Pos: [202, 213] cc => I,
 Pos: [207, 209, 215] ccc => cc]
Change: 10, Saving: 34

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [39, 45, 53] ccc => cc,
 Pos: [50, 52] cc => I,
 Pos: [111, 120] cc => I,
 Pos: [113, 123] cc => I,
 Pos: [129, 144] cc => I,
 Pos: [134, 154] cc => I,
 Pos: [174, 189] cc => I,
 Pos: [194, 200, 206] ccc => cc,
 Pos: [202, 213] cc => I,
 Pos: [207, 209, 215] ccc => cc]
Change: 10, Saving: 34

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [39, 45, 53] ccc => cc
Apply:  Pos: [50, 52] cc => I
Apply:  Pos: [111, 120] cc => I
Apply:  Pos: [113, 123] cc => I
Apply:  Pos: [129, 144] cc => I
Apply:  Pos: [134, 154] cc => I
Apply:  Pos: [174, 189] cc => I
Apply:  Pos: [194, 200, 206] ccc => cc
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [207, 209, 215] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [3, 10], [4, 12], [2, 8], [7, 6], [16, 1], [8, 18], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  4.109327554702759

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[184, 189, 192]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.734435796737671

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [184, 189, 192] ccc => cc]

Plan: 1
[Pos: [184, 189, 192] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [184, 189, 192] ccc => cc]
Change: 1, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [184, 189, 192] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 2], [12, 15], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [6, 0], [7, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.734435796737671

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7499728202819824

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.7499728202819824

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [202] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 404

Reduced: 
 - size: 158 (43.89%)
 - cycle: 316 (43.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1407489776611328

[2, 13], [1, 9], [18, 10], [15, 19], [7, 0], [11, 4], [8, 17], [12, 5], [8, 13], [7, 0], [1, 2], [19, 3], [9, 14], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [3, 10], [6, 0], [12, 5], [9, 17], [11, 16], [1, 2], [18, 13], [9, 14], [8, 13], [1, 2], [7, 0], [12, 5], [3, 10], [11, 16], [14, 17], [5, 18], [6, 0], [1, 12], [11, 4], [15, 19], [2, 13], [17, 7], [19, 3], [5, 10], [9, 14], [8, 13], [16, 12], [6, 0], [2, 18], [11, 4], [17, 7], [16, 12], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [1, 9], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [9, 14], [8, 13], [2, 18], [14, 17], [4, 5], [12, 15], [7, 6], [16, 1], [19, 3], [8, 13], [9, 17], [12, 5], [11, 4], [19, 3], [18, 10], [7, 6], [2, 13], [14, 8], [10, 6], [17, 7], [15, 19], [4, 5], [1, 12], [2, 13], [9, 8], [17, 7], [18, 10], [5, 3], [16, 12], [11, 4], [1, 2], [18, 13], [19, 3], [4, 15], [14, 17], [11, 16], [7, 0], [10, 6], [9, 8], [12, 5], [1, 2], [5, 10], [13, 7], [4, 12], [14, 17], [11, 16], [9, 8], [6, 0], [16, 1], [4, 15], [7, 6], [3, 10], [14, 8], [5, 18], [12, 2], [16, 1], [19, 3], [6, 0], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [11, 16], [18, 13], [1, 2], [7, 6], [12, 15], [5, 10], [19, 3], [8, 17], [11, 4], [3, 10], [14, 17], [15, 5], [7, 6], [18, 13], [1, 2], [9, 8], [11, 4], [13, 7], [1, 9], [14, 17], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [9, 8], [12, 5], [17, 7], [2, 18], [13, 0], [11, 16], [10, 6], [15, 5], [7, 0], [1, 2], [18, 10], [16, 12], [14, 17], [9, 8], [19, 3], [5, 18], [9, 17], [14, 8], [1, 2], [15, 19], [7, 6], [4, 12], [13, 0], [11, 16], [3, 10], [18, 13], [12, 2], [14, 8], [7, 6], [4, 15], [16, 1], [2, 13], [19, 3], [14, 17], [7, 6], [4, 15], [12, 5], [11, 16], [18, 10], [1, 9], [2, 13], [19, 3], [1, 9], [16, 12], [4, 15], [18, 10], [7, 0], [14, 8], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [19, 3], [17, 7], [5, 10], [2, 13], [8, 17], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [11, 4], [2, 18], [12, 15], [13, 6], [9, 14], [3, 10], [16, 1], [17, 7], [11, 4], [2, 13], [16, 1], [9, 8], [12, 15], [11, 4], [5, 3], [7, 6], [14, 17], [16, 2], [8, 13], [4, 12], [18, 10], [5, 3], [15, 19], [17, 7], [1, 9], [16, 2], [6, 0], [4, 5], [9, 17], [8, 13], [18, 10], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [9, 14], [6, 0], [5, 10], [11, 4], [16, 12], [9, 14], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [16, 12], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [6, 0], [12, 15], [4, 5], [6, 0], [16, 1], [14, 8], [18, 3], [2, 13], [17, 7], [15, 19], [5, 10], [7, 0], [1, 9], [11, 4], [13, 6], [14, 17], [16, 12], [18, 3], [15, 19], [12, 2], [3, 10], [17, 7], [11, 4], [6, 0], [16, 1], [5, 18], [14, 8], [19, 3], [8, 17], [7, 6], [4, 15], [12, 2], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [7, 6], [16, 2], [15, 5], [9, 8], [13, 0], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [16, 2], [1, 9], [17, 7], [5, 10], [4, 12], [13, 0], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [15, 19], [5, 3], [17, 7], [10, 6], [1, 2], [8, 18], [16, 12], [11, 4], [15, 19], [9, 14], [19, 3], [10, 6], [2, 13], [16, 12], [9, 8], [17, 7], [5, 18], [19, 3], [16, 12], [13, 6], [9, 17], [5, 18], [11, 4], [1, 2], [7, 0], [18, 3], [16, 12], [15, 19], [1, 2], [13, 0], [9, 8], [7, 6], [4, 5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 17, 25]
[5, 13, 36]
[174, 181, 188]
[273, 281, 293]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[42, 55, 62]
[54, 60, 64]
[80, 88, 99]
[109, 112, 119]
[193, 203, 212]
[205, 208, 221]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.14051628112793

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 9] cc => I, Pos: [4, 9] cc => I, Pos: [5, 13, 36] ccc => cc, Pos: [10, 23] cc => I, Pos: [10, 23] cc => I, Pos: [12, 17, 25] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [23, 27] cc => I, Pos: [23, 27] cc => I, Pos: [34, 45] cc => I, Pos: [34, 45] cc => I, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 55, 62] ccc => cc, Pos: [44, 49] cc => I, Pos: [44, 49] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [54, 60, 64] ccc => cc, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 88, 99] ccc => cc, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [86, 100] cc => I, Pos: [86, 100] cc => I, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [96, 106] cc => I, Pos: [96, 106] cc => I, Pos: [97, 107] cc => I, Pos: [97, 107] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [109, 112, 119] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [118, 132] cc => I, Pos: [118, 132] cc => I, Pos: [121, 127] cc => I, Pos: [121, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [126, 156] cc => I, Pos: [126, 156] cc => I, Pos: [127, 139] cc => I, Pos: [127, 139] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [134, 142] cc => I, Pos: [134, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [151, 164] cc => I, Pos: [151, 164] cc => I, Pos: [160, 169] cc => I, Pos: [160, 169] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [174, 181, 188] ccc => cc, Pos: [178, 198] cc => I, Pos: [178, 198] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 186] cc => I, Pos: [180, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [186, 195] cc => I, Pos: [186, 195] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [190, 193] cc => I, Pos: [190, 193] cc => I, Pos: [192, 204] cc => I, Pos: [192, 204] cc => I, Pos: [193, 203, 212] ccc => cc, Pos: [198, 200] cc => I, Pos: [198, 200] cc => I, Pos: [205, 208, 221] ccc => cc, Pos: [214, 222] cc => I, Pos: [214, 222] cc => I, Pos: [216, 226] cc => I, Pos: [216, 226] cc => I, Pos: [220, 224] cc => I, Pos: [220, 224] cc => I, Pos: [222, 227] cc => I, Pos: [222, 227] cc => I, Pos: [228, 235] cc => I, Pos: [228, 235] cc => I, Pos: [231, 239] cc => I, Pos: [231, 239] cc => I, Pos: [232, 243] cc => I, Pos: [232, 243] cc => I, Pos: [234, 244] cc => I, Pos: [234, 244] cc => I, Pos: [240, 252] cc => I, Pos: [240, 252] cc => I, Pos: [251, 256] cc => I, Pos: [251, 256] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [269, 272] cc => I, Pos: [269, 272] cc => I, Pos: [273, 281, 293] ccc => cc, Pos: [274, 295] cc => I, Pos: [274, 295] cc => I, Pos: [275, 286] cc => I, Pos: [275, 286] cc => I, Pos: [278, 287] cc => I, Pos: [278, 287] cc => I, Pos: [282, 291] cc => I, Pos: [282, 291] cc => I, Pos: [288, 300] cc => I, Pos: [288, 300] cc => I, Pos: [298, 306] cc => I, Pos: [298, 306] cc => I, Pos: [307, 316] cc => I, Pos: [307, 316] cc => I, Pos: [310, 321] cc => I, Pos: [310, 321] cc => I, Pos: [327, 335] cc => I, Pos: [327, 335] cc => I, Pos: [329, 342] cc => I, Pos: [329, 342] cc => I, Pos: [330, 338] cc => I, Pos: [330, 338] cc => I, Pos: [333, 340] cc => I, Pos: [333, 340] cc => I, Pos: [334, 349] cc => I, Pos: [334, 349] cc => I, Pos: [337, 344] cc => I, Pos: [337, 344] cc => I, Pos: [340, 345] cc => I, Pos: [340, 345] cc => I, Pos: [341, 357] cc => I, Pos: [341, 357] cc => I, Pos: [343, 348] cc => I, Pos: [343, 348] cc => I, Pos: [345, 353] cc => I, Pos: [345, 353] cc => I, Pos: [350, 355] cc => I, Pos: [350, 355] cc => I]

Plan: 1
[Pos: [4, 9] cc => I,
 Pos: [5, 13, 36] ccc => cc,
 Pos: [10, 23] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [86, 100] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [121, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [180, 186] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [190, 193] cc => I,
 Pos: [198, 200] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [214, 222] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [333, 340] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [345, 353] cc => I,
 Pos: [350, 355] cc => I]
Change: 74, Saving: 75

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.18748688697814941

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 9] cc => I,
 Pos: [5, 13, 36] ccc => cc,
 Pos: [10, 23] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [86, 100] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [121, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [180, 186] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [190, 193] cc => I,
 Pos: [198, 200] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [214, 222] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [333, 340] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [345, 353] cc => I,
 Pos: [350, 355] cc => I]
Change: 74, Saving: 75

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 9] cc => I
Apply:  Pos: [5, 13, 36] ccc => cc
Apply:  Pos: [10, 23] cc => I
Apply:  Pos: [12, 17, 25] ccc => cc
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [34, 45] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 55, 62] ccc => cc
Apply:  Pos: [44, 49] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 88, 99] ccc => cc
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [86, 100] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [96, 106] cc => I
Apply:  Pos: [97, 107] cc => I
Apply:  Pos: [109, 112, 119] ccc => cc
Apply:  Pos: [110, 117] cc => I
Apply:  Pos: [118, 132] cc => I
Apply:  Pos: [121, 127] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [126, 156] cc => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [151, 164] cc => I
Apply:  Pos: [160, 169] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [174, 181, 188] ccc => cc
Apply:  Pos: [180, 186] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [190, 193] cc => I
Apply:  Pos: [198, 200] cc => I
Apply:  Pos: [205, 208, 221] ccc => cc
Apply:  Pos: [214, 222] cc => I
Apply:  Pos: [216, 226] cc => I
Apply:  Pos: [220, 224] cc => I
Apply:  Pos: [228, 235] cc => I
Apply:  Pos: [231, 239] cc => I
Apply:  Pos: [232, 243] cc => I
Apply:  Pos: [234, 244] cc => I
Apply:  Pos: [240, 252] cc => I
Apply:  Pos: [251, 256] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [269, 272] cc => I
Apply:  Pos: [273, 281, 293] ccc => cc
Apply:  Pos: [275, 286] cc => I
Apply:  Pos: [278, 287] cc => I
Apply:  Pos: [282, 291] cc => I
Apply:  Pos: [288, 300] cc => I
Apply:  Pos: [298, 306] cc => I
Apply:  Pos: [307, 316] cc => I
Apply:  Pos: [310, 321] cc => I
Apply:  Pos: [327, 335] cc => I
Apply:  Pos: [329, 342] cc => I
Apply:  Pos: [330, 338] cc => I
Apply:  Pos: [333, 340] cc => I
Apply:  Pos: [334, 349] cc => I
Apply:  Pos: [337, 344] cc => I
Apply:  Pos: [341, 357] cc => I
Apply:  Pos: [343, 348] cc => I
Apply:  Pos: [345, 353] cc => I
Apply:  Pos: [350, 355] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [12, 15], [16, 1], [9, 17], [12, 5], [11, 4], [18, 10], [14, 8], [18, 10], [15, 19], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [18, 13], [12, 2], [16, 1], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [18, 13], [6, 0], [4, 12], [16, 1], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [2, 18], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [15, 19], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [1, 9], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [15, 5], [9, 8], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [5, 10], [4, 12], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [5, 3], [1, 2], [8, 18], [9, 14], [2, 13], [13, 6], [9, 17], [7, 0], [18, 3], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  7.328003168106079

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[50, 52]
[111, 120]
[113, 123]
[129, 144]
[134, 154]
[174, 189]
[202, 213]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[39, 45, 53]
[207, 209, 215]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[194, 200, 206]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[50, 52]
[111, 120]
[113, 123]
[129, 144]
[134, 154]
[174, 189]
[202, 213]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.046933650970459

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [39, 45, 53] ccc => cc, Pos: [50, 52] cc => I, Pos: [50, 52] cc => I, Pos: [111, 120] cc => I, Pos: [111, 120] cc => I, Pos: [113, 123] cc => I, Pos: [113, 123] cc => I, Pos: [129, 144] cc => I, Pos: [129, 144] cc => I, Pos: [134, 154] cc => I, Pos: [134, 154] cc => I, Pos: [174, 189] cc => I, Pos: [174, 189] cc => I, Pos: [194, 200, 206] ccc => cc, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [207, 209, 215] ccc => cc]

Plan: 1
[Pos: [39, 45, 53] ccc => cc,
 Pos: [50, 52] cc => I,
 Pos: [111, 120] cc => I,
 Pos: [113, 123] cc => I,
 Pos: [129, 144] cc => I,
 Pos: [134, 154] cc => I,
 Pos: [174, 189] cc => I,
 Pos: [194, 200, 206] ccc => cc,
 Pos: [202, 213] cc => I,
 Pos: [207, 209, 215] ccc => cc]
Change: 10, Saving: 11

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031248807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [39, 45, 53] ccc => cc,
 Pos: [50, 52] cc => I,
 Pos: [111, 120] cc => I,
 Pos: [113, 123] cc => I,
 Pos: [129, 144] cc => I,
 Pos: [134, 154] cc => I,
 Pos: [174, 189] cc => I,
 Pos: [194, 200, 206] ccc => cc,
 Pos: [202, 213] cc => I,
 Pos: [207, 209, 215] ccc => cc]
Change: 10, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [39, 45, 53] ccc => cc
Apply:  Pos: [50, 52] cc => I
Apply:  Pos: [111, 120] cc => I
Apply:  Pos: [113, 123] cc => I
Apply:  Pos: [129, 144] cc => I
Apply:  Pos: [134, 154] cc => I
Apply:  Pos: [174, 189] cc => I
Apply:  Pos: [194, 200, 206] ccc => cc
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [207, 209, 215] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [3, 10], [4, 12], [2, 8], [7, 6], [16, 1], [8, 18], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  4.0781824588775635

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[184, 189, 192]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.656329870223999

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [184, 189, 192] ccc => cc]

Plan: 1
[Pos: [184, 189, 192] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015641212463378906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [184, 189, 192] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [184, 189, 192] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 2], [12, 15], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [6, 0], [7, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.671971082687378

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6406121253967285

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.6406121253967285

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [202] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 404

Reduced: 
 - size: 158 (43.89%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500452995300293

[2, 13], [1, 9], [18, 10], [15, 19], [7, 0], [11, 4], [8, 17], [12, 5], [8, 13], [7, 0], [1, 2], [19, 3], [9, 14], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [3, 10], [6, 0], [12, 5], [9, 17], [11, 16], [1, 2], [18, 13], [9, 14], [8, 13], [1, 2], [7, 0], [12, 5], [3, 10], [11, 16], [14, 17], [5, 18], [6, 0], [1, 12], [11, 4], [15, 19], [2, 13], [17, 7], [19, 3], [5, 10], [9, 14], [8, 13], [16, 12], [6, 0], [2, 18], [11, 4], [17, 7], [16, 12], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [1, 9], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [9, 14], [8, 13], [2, 18], [14, 17], [4, 5], [12, 15], [7, 6], [16, 1], [19, 3], [8, 13], [9, 17], [12, 5], [11, 4], [19, 3], [18, 10], [7, 6], [2, 13], [14, 8], [10, 6], [17, 7], [15, 19], [4, 5], [1, 12], [2, 13], [9, 8], [17, 7], [18, 10], [5, 3], [16, 12], [11, 4], [1, 2], [18, 13], [19, 3], [4, 15], [14, 17], [11, 16], [7, 0], [10, 6], [9, 8], [12, 5], [1, 2], [5, 10], [13, 7], [4, 12], [14, 17], [11, 16], [9, 8], [6, 0], [16, 1], [4, 15], [7, 6], [3, 10], [14, 8], [5, 18], [12, 2], [16, 1], [19, 3], [6, 0], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [11, 16], [18, 13], [1, 2], [7, 6], [12, 15], [5, 10], [19, 3], [8, 17], [11, 4], [3, 10], [14, 17], [15, 5], [7, 6], [18, 13], [1, 2], [9, 8], [11, 4], [13, 7], [1, 9], [14, 17], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [9, 8], [12, 5], [17, 7], [2, 18], [13, 0], [11, 16], [10, 6], [15, 5], [7, 0], [1, 2], [18, 10], [16, 12], [14, 17], [9, 8], [19, 3], [5, 18], [9, 17], [14, 8], [1, 2], [15, 19], [7, 6], [4, 12], [13, 0], [11, 16], [3, 10], [18, 13], [12, 2], [14, 8], [7, 6], [4, 15], [16, 1], [2, 13], [19, 3], [14, 17], [7, 6], [4, 15], [12, 5], [11, 16], [18, 10], [1, 9], [2, 13], [19, 3], [1, 9], [16, 12], [4, 15], [18, 10], [7, 0], [14, 8], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [19, 3], [17, 7], [5, 10], [2, 13], [8, 17], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [11, 4], [2, 18], [12, 15], [13, 6], [9, 14], [3, 10], [16, 1], [17, 7], [11, 4], [2, 13], [16, 1], [9, 8], [12, 15], [11, 4], [5, 3], [7, 6], [14, 17], [16, 2], [8, 13], [4, 12], [18, 10], [5, 3], [15, 19], [17, 7], [1, 9], [16, 2], [6, 0], [4, 5], [9, 17], [8, 13], [18, 10], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [9, 14], [6, 0], [5, 10], [11, 4], [16, 12], [9, 14], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [16, 12], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [6, 0], [12, 15], [4, 5], [6, 0], [16, 1], [14, 8], [18, 3], [2, 13], [17, 7], [15, 19], [5, 10], [7, 0], [1, 9], [11, 4], [13, 6], [14, 17], [16, 12], [18, 3], [15, 19], [12, 2], [3, 10], [17, 7], [11, 4], [6, 0], [16, 1], [5, 18], [14, 8], [19, 3], [8, 17], [7, 6], [4, 15], [12, 2], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [7, 6], [16, 2], [15, 5], [9, 8], [13, 0], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [16, 2], [1, 9], [17, 7], [5, 10], [4, 12], [13, 0], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [15, 19], [5, 3], [17, 7], [10, 6], [1, 2], [8, 18], [16, 12], [11, 4], [15, 19], [9, 14], [19, 3], [10, 6], [2, 13], [16, 12], [9, 8], [17, 7], [5, 18], [19, 3], [16, 12], [13, 6], [9, 17], [5, 18], [11, 4], [1, 2], [7, 0], [18, 3], [16, 12], [15, 19], [1, 2], [13, 0], [9, 8], [7, 6], [4, 5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 17, 25]
[5, 13, 36]
[174, 181, 188]
[273, 281, 293]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[42, 55, 62]
[54, 60, 64]
[80, 88, 99]
[109, 112, 119]
[193, 203, 212]
[205, 208, 221]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.143220901489258

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 9] cc => I, Pos: [4, 9] cc => I, Pos: [5, 13, 36] ccc => cc, Pos: [10, 23] cc => I, Pos: [10, 23] cc => I, Pos: [12, 17, 25] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [23, 27] cc => I, Pos: [23, 27] cc => I, Pos: [34, 45] cc => I, Pos: [34, 45] cc => I, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 55, 62] ccc => cc, Pos: [44, 49] cc => I, Pos: [44, 49] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [54, 60, 64] ccc => cc, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 88, 99] ccc => cc, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [86, 100] cc => I, Pos: [86, 100] cc => I, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [96, 106] cc => I, Pos: [96, 106] cc => I, Pos: [97, 107] cc => I, Pos: [97, 107] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [109, 112, 119] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [118, 132] cc => I, Pos: [118, 132] cc => I, Pos: [121, 127] cc => I, Pos: [121, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [126, 156] cc => I, Pos: [126, 156] cc => I, Pos: [127, 139] cc => I, Pos: [127, 139] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [134, 142] cc => I, Pos: [134, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [151, 164] cc => I, Pos: [151, 164] cc => I, Pos: [160, 169] cc => I, Pos: [160, 169] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [174, 181, 188] ccc => cc, Pos: [178, 198] cc => I, Pos: [178, 198] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 186] cc => I, Pos: [180, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [186, 195] cc => I, Pos: [186, 195] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [190, 193] cc => I, Pos: [190, 193] cc => I, Pos: [192, 204] cc => I, Pos: [192, 204] cc => I, Pos: [193, 203, 212] ccc => cc, Pos: [198, 200] cc => I, Pos: [198, 200] cc => I, Pos: [205, 208, 221] ccc => cc, Pos: [214, 222] cc => I, Pos: [214, 222] cc => I, Pos: [216, 226] cc => I, Pos: [216, 226] cc => I, Pos: [220, 224] cc => I, Pos: [220, 224] cc => I, Pos: [222, 227] cc => I, Pos: [222, 227] cc => I, Pos: [228, 235] cc => I, Pos: [228, 235] cc => I, Pos: [231, 239] cc => I, Pos: [231, 239] cc => I, Pos: [232, 243] cc => I, Pos: [232, 243] cc => I, Pos: [234, 244] cc => I, Pos: [234, 244] cc => I, Pos: [240, 252] cc => I, Pos: [240, 252] cc => I, Pos: [251, 256] cc => I, Pos: [251, 256] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [269, 272] cc => I, Pos: [269, 272] cc => I, Pos: [273, 281, 293] ccc => cc, Pos: [274, 295] cc => I, Pos: [274, 295] cc => I, Pos: [275, 286] cc => I, Pos: [275, 286] cc => I, Pos: [278, 287] cc => I, Pos: [278, 287] cc => I, Pos: [282, 291] cc => I, Pos: [282, 291] cc => I, Pos: [288, 300] cc => I, Pos: [288, 300] cc => I, Pos: [298, 306] cc => I, Pos: [298, 306] cc => I, Pos: [307, 316] cc => I, Pos: [307, 316] cc => I, Pos: [310, 321] cc => I, Pos: [310, 321] cc => I, Pos: [327, 335] cc => I, Pos: [327, 335] cc => I, Pos: [329, 342] cc => I, Pos: [329, 342] cc => I, Pos: [330, 338] cc => I, Pos: [330, 338] cc => I, Pos: [333, 340] cc => I, Pos: [333, 340] cc => I, Pos: [334, 349] cc => I, Pos: [334, 349] cc => I, Pos: [337, 344] cc => I, Pos: [337, 344] cc => I, Pos: [340, 345] cc => I, Pos: [340, 345] cc => I, Pos: [341, 357] cc => I, Pos: [341, 357] cc => I, Pos: [343, 348] cc => I, Pos: [343, 348] cc => I, Pos: [345, 353] cc => I, Pos: [345, 353] cc => I, Pos: [350, 355] cc => I, Pos: [350, 355] cc => I]

--------End Timer [Generate Plans]:  0.01563715934753418

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 9] cc => I,
 Pos: [36, 47] cc => I,
 Pos: [23, 27] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [100, 108] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [127, 139] cc => I,
 Pos: [134, 142] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [178, 198] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [180, 186] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [192, 204] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [190, 193] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [214, 222] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [340, 345] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [350, 355] cc => I]
Change: 72, Saving: 274

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 9] cc => I
Apply:  Pos: [36, 47] cc => I
Apply:  Pos: [23, 27] cc => I
Apply:  Pos: [12, 17, 25] ccc => cc
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [34, 45] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 55, 62] ccc => cc
Apply:  Pos: [44, 49] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 88, 99] ccc => cc
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [100, 108] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [96, 106] cc => I
Apply:  Pos: [97, 107] cc => I
Apply:  Pos: [109, 112, 119] ccc => cc
Apply:  Pos: [110, 117] cc => I
Apply:  Pos: [118, 132] cc => I
Apply:  Pos: [127, 139] cc => I
Apply:  Pos: [134, 142] cc => I
Apply:  Pos: [126, 156] cc => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [151, 164] cc => I
Apply:  Pos: [160, 169] cc => I
Apply:  Pos: [178, 198] cc => I
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [174, 181, 188] ccc => cc
Apply:  Pos: [180, 186] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [192, 204] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [190, 193] cc => I
Apply:  Pos: [205, 208, 221] ccc => cc
Apply:  Pos: [214, 222] cc => I
Apply:  Pos: [216, 226] cc => I
Apply:  Pos: [220, 224] cc => I
Apply:  Pos: [228, 235] cc => I
Apply:  Pos: [231, 239] cc => I
Apply:  Pos: [232, 243] cc => I
Apply:  Pos: [234, 244] cc => I
Apply:  Pos: [240, 252] cc => I
Apply:  Pos: [251, 256] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [269, 272] cc => I
Apply:  Pos: [273, 281, 293] ccc => cc
Apply:  Pos: [275, 286] cc => I
Apply:  Pos: [278, 287] cc => I
Apply:  Pos: [282, 291] cc => I
Apply:  Pos: [288, 300] cc => I
Apply:  Pos: [298, 306] cc => I
Apply:  Pos: [307, 316] cc => I
Apply:  Pos: [310, 321] cc => I
Apply:  Pos: [327, 335] cc => I
Apply:  Pos: [329, 342] cc => I
Apply:  Pos: [330, 338] cc => I
Apply:  Pos: [340, 345] cc => I
Apply:  Pos: [334, 349] cc => I
Apply:  Pos: [337, 344] cc => I
Apply:  Pos: [341, 357] cc => I
Apply:  Pos: [343, 348] cc => I
Apply:  Pos: [350, 355] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [12, 15], [16, 1], [9, 17], [12, 5], [11, 4], [18, 10], [14, 8], [18, 10], [15, 19], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [14, 8], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [18, 13], [12, 2], [16, 1], [19, 3], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [8, 17], [5, 10], [2, 13], [17, 7], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [2, 18], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [15, 19], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [1, 9], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [15, 5], [9, 8], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [5, 10], [4, 12], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [5, 3], [1, 2], [8, 18], [16, 12], [9, 14], [2, 13], [13, 6], [9, 17], [7, 0], [18, 3], [16, 12], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  7.158858060836792

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 51]
[111, 121]
[105, 122]
[113, 125]
[130, 145]
[135, 155]
[175, 190]
[203, 215]
[211, 218]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[38, 44, 52]
[208, 210, 217]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[195, 201, 207]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 51]
[111, 121]
[105, 122]
[113, 125]
[130, 145]
[135, 155]
[175, 190]
[203, 215]
[211, 218]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.172391891479492

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 44, 52] ccc => cc, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [105, 122] cc => I, Pos: [105, 122] cc => I, Pos: [111, 121] cc => I, Pos: [111, 121] cc => I, Pos: [113, 125] cc => I, Pos: [113, 125] cc => I, Pos: [130, 145] cc => I, Pos: [130, 145] cc => I, Pos: [135, 155] cc => I, Pos: [135, 155] cc => I, Pos: [175, 190] cc => I, Pos: [175, 190] cc => I, Pos: [195, 201, 207] ccc => cc, Pos: [203, 215] cc => I, Pos: [203, 215] cc => I, Pos: [208, 210, 217] ccc => cc, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 44, 52] ccc => cc,
 Pos: [49, 51] cc => I,
 Pos: [105, 122] cc => I,
 Pos: [111, 121] cc => I,
 Pos: [113, 125] cc => I,
 Pos: [130, 145] cc => I,
 Pos: [135, 155] cc => I,
 Pos: [175, 190] cc => I,
 Pos: [195, 201, 207] ccc => cc,
 Pos: [203, 215] cc => I,
 Pos: [208, 210, 217] ccc => cc,
 Pos: [211, 218] cc => I]
Change: 12, Saving: 42

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 44, 52] ccc => cc
Apply:  Pos: [49, 51] cc => I
Apply:  Pos: [105, 122] cc => I
Apply:  Pos: [111, 121] cc => I
Apply:  Pos: [113, 125] cc => I
Apply:  Pos: [130, 145] cc => I
Apply:  Pos: [135, 155] cc => I
Apply:  Pos: [175, 190] cc => I
Apply:  Pos: [195, 201, 207] ccc => cc
Apply:  Pos: [203, 215] cc => I
Apply:  Pos: [208, 210, 217] ccc => cc
Apply:  Pos: [211, 218] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [19, 3], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [3, 10], [4, 12], [2, 8], [7, 6], [16, 1], [8, 18], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  4.172391891479492

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[183, 188, 191]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6413304805755615

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [183, 188, 191] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [183, 188, 191] ccc => cc]
Change: 1, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [183, 188, 191] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 2], [12, 15], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [19, 3], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [6, 0], [7, 0], [4, 12], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.6413304805755615

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.638845920562744

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [19, 3], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.638845920562744

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [201] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 402

Reduced: 
 - size: 159 (44.17%)
 - cycle: 318 (44.17%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061474800109863

[2, 13], [1, 9], [18, 10], [15, 19], [7, 0], [11, 4], [8, 17], [12, 5], [8, 13], [7, 0], [1, 2], [19, 3], [9, 14], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [3, 10], [6, 0], [12, 5], [9, 17], [11, 16], [1, 2], [18, 13], [9, 14], [8, 13], [1, 2], [7, 0], [12, 5], [3, 10], [11, 16], [14, 17], [5, 18], [6, 0], [1, 12], [11, 4], [15, 19], [2, 13], [17, 7], [19, 3], [5, 10], [9, 14], [8, 13], [16, 12], [6, 0], [2, 18], [11, 4], [17, 7], [16, 12], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [1, 9], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [9, 14], [8, 13], [2, 18], [14, 17], [4, 5], [12, 15], [7, 6], [16, 1], [19, 3], [8, 13], [9, 17], [12, 5], [11, 4], [19, 3], [18, 10], [7, 6], [2, 13], [14, 8], [10, 6], [17, 7], [15, 19], [4, 5], [1, 12], [2, 13], [9, 8], [17, 7], [18, 10], [5, 3], [16, 12], [11, 4], [1, 2], [18, 13], [19, 3], [4, 15], [14, 17], [11, 16], [7, 0], [10, 6], [9, 8], [12, 5], [1, 2], [5, 10], [13, 7], [4, 12], [14, 17], [11, 16], [9, 8], [6, 0], [16, 1], [4, 15], [7, 6], [3, 10], [14, 8], [5, 18], [12, 2], [16, 1], [19, 3], [6, 0], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [11, 16], [18, 13], [1, 2], [7, 6], [12, 15], [5, 10], [19, 3], [8, 17], [11, 4], [3, 10], [14, 17], [15, 5], [7, 6], [18, 13], [1, 2], [9, 8], [11, 4], [13, 7], [1, 9], [14, 17], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [9, 8], [12, 5], [17, 7], [2, 18], [13, 0], [11, 16], [10, 6], [15, 5], [7, 0], [1, 2], [18, 10], [16, 12], [14, 17], [9, 8], [19, 3], [5, 18], [9, 17], [14, 8], [1, 2], [15, 19], [7, 6], [4, 12], [13, 0], [11, 16], [3, 10], [18, 13], [12, 2], [14, 8], [7, 6], [4, 15], [16, 1], [2, 13], [19, 3], [14, 17], [7, 6], [4, 15], [12, 5], [11, 16], [18, 10], [1, 9], [2, 13], [19, 3], [1, 9], [16, 12], [4, 15], [18, 10], [7, 0], [14, 8], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [19, 3], [17, 7], [5, 10], [2, 13], [8, 17], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [11, 4], [2, 18], [12, 15], [13, 6], [9, 14], [3, 10], [16, 1], [17, 7], [11, 4], [2, 13], [16, 1], [9, 8], [12, 15], [11, 4], [5, 3], [7, 6], [14, 17], [16, 2], [8, 13], [4, 12], [18, 10], [5, 3], [15, 19], [17, 7], [1, 9], [16, 2], [6, 0], [4, 5], [9, 17], [8, 13], [18, 10], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [9, 14], [6, 0], [5, 10], [11, 4], [16, 12], [9, 14], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [16, 12], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [6, 0], [12, 15], [4, 5], [6, 0], [16, 1], [14, 8], [18, 3], [2, 13], [17, 7], [15, 19], [5, 10], [7, 0], [1, 9], [11, 4], [13, 6], [14, 17], [16, 12], [18, 3], [15, 19], [12, 2], [3, 10], [17, 7], [11, 4], [6, 0], [16, 1], [5, 18], [14, 8], [19, 3], [8, 17], [7, 6], [4, 15], [12, 2], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [7, 6], [16, 2], [15, 5], [9, 8], [13, 0], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [16, 2], [1, 9], [17, 7], [5, 10], [4, 12], [13, 0], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [15, 19], [5, 3], [17, 7], [10, 6], [1, 2], [8, 18], [16, 12], [11, 4], [15, 19], [9, 14], [19, 3], [10, 6], [2, 13], [16, 12], [9, 8], [17, 7], [5, 18], [19, 3], [16, 12], [13, 6], [9, 17], [5, 18], [11, 4], [1, 2], [7, 0], [18, 3], [16, 12], [15, 19], [1, 2], [13, 0], [9, 8], [7, 6], [4, 5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 17, 25]
[5, 13, 36]
[174, 181, 188]
[273, 281, 293]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[42, 55, 62]
[54, 60, 64]
[80, 88, 99]
[109, 112, 119]
[193, 203, 212]
[205, 208, 221]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.202663421630859

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 9] cc => I, Pos: [4, 9] cc => I, Pos: [5, 13, 36] ccc => cc, Pos: [10, 23] cc => I, Pos: [10, 23] cc => I, Pos: [12, 17, 25] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [23, 27] cc => I, Pos: [23, 27] cc => I, Pos: [34, 45] cc => I, Pos: [34, 45] cc => I, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 55, 62] ccc => cc, Pos: [44, 49] cc => I, Pos: [44, 49] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [54, 60, 64] ccc => cc, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 88, 99] ccc => cc, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [86, 100] cc => I, Pos: [86, 100] cc => I, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [96, 106] cc => I, Pos: [96, 106] cc => I, Pos: [97, 107] cc => I, Pos: [97, 107] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [109, 112, 119] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [118, 132] cc => I, Pos: [118, 132] cc => I, Pos: [121, 127] cc => I, Pos: [121, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [126, 156] cc => I, Pos: [126, 156] cc => I, Pos: [127, 139] cc => I, Pos: [127, 139] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [134, 142] cc => I, Pos: [134, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [151, 164] cc => I, Pos: [151, 164] cc => I, Pos: [160, 169] cc => I, Pos: [160, 169] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [174, 181, 188] ccc => cc, Pos: [178, 198] cc => I, Pos: [178, 198] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 186] cc => I, Pos: [180, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [186, 195] cc => I, Pos: [186, 195] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [190, 193] cc => I, Pos: [190, 193] cc => I, Pos: [192, 204] cc => I, Pos: [192, 204] cc => I, Pos: [193, 203, 212] ccc => cc, Pos: [198, 200] cc => I, Pos: [198, 200] cc => I, Pos: [205, 208, 221] ccc => cc, Pos: [214, 222] cc => I, Pos: [214, 222] cc => I, Pos: [216, 226] cc => I, Pos: [216, 226] cc => I, Pos: [220, 224] cc => I, Pos: [220, 224] cc => I, Pos: [222, 227] cc => I, Pos: [222, 227] cc => I, Pos: [228, 235] cc => I, Pos: [228, 235] cc => I, Pos: [231, 239] cc => I, Pos: [231, 239] cc => I, Pos: [232, 243] cc => I, Pos: [232, 243] cc => I, Pos: [234, 244] cc => I, Pos: [234, 244] cc => I, Pos: [240, 252] cc => I, Pos: [240, 252] cc => I, Pos: [251, 256] cc => I, Pos: [251, 256] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [269, 272] cc => I, Pos: [269, 272] cc => I, Pos: [273, 281, 293] ccc => cc, Pos: [274, 295] cc => I, Pos: [274, 295] cc => I, Pos: [275, 286] cc => I, Pos: [275, 286] cc => I, Pos: [278, 287] cc => I, Pos: [278, 287] cc => I, Pos: [282, 291] cc => I, Pos: [282, 291] cc => I, Pos: [288, 300] cc => I, Pos: [288, 300] cc => I, Pos: [298, 306] cc => I, Pos: [298, 306] cc => I, Pos: [307, 316] cc => I, Pos: [307, 316] cc => I, Pos: [310, 321] cc => I, Pos: [310, 321] cc => I, Pos: [327, 335] cc => I, Pos: [327, 335] cc => I, Pos: [329, 342] cc => I, Pos: [329, 342] cc => I, Pos: [330, 338] cc => I, Pos: [330, 338] cc => I, Pos: [333, 340] cc => I, Pos: [333, 340] cc => I, Pos: [334, 349] cc => I, Pos: [334, 349] cc => I, Pos: [337, 344] cc => I, Pos: [337, 344] cc => I, Pos: [340, 345] cc => I, Pos: [340, 345] cc => I, Pos: [341, 357] cc => I, Pos: [341, 357] cc => I, Pos: [343, 348] cc => I, Pos: [343, 348] cc => I, Pos: [345, 353] cc => I, Pos: [345, 353] cc => I, Pos: [350, 355] cc => I, Pos: [350, 355] cc => I]

--------End Timer [Generate Plans]:  0.18747520446777344

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 9] cc => I,
 Pos: [5, 13, 36] ccc => cc,
 Pos: [23, 27] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [100, 108] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [121, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [180, 186] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [193, 203, 212] ccc => cc,
 Pos: [198, 200] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [222, 227] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [274, 295] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [333, 340] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [345, 353] cc => I,
 Pos: [350, 355] cc => I]
Change: 74, Saving: 76

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 9] cc => I
Apply:  Pos: [5, 13, 36] ccc => cc
Apply:  Pos: [23, 27] cc => I
Apply:  Pos: [12, 17, 25] ccc => cc
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [34, 45] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 55, 62] ccc => cc
Apply:  Pos: [44, 49] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 88, 99] ccc => cc
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [100, 108] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [96, 106] cc => I
Apply:  Pos: [97, 107] cc => I
Apply:  Pos: [109, 112, 119] ccc => cc
Apply:  Pos: [110, 117] cc => I
Apply:  Pos: [118, 132] cc => I
Apply:  Pos: [121, 127] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [126, 156] cc => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [151, 164] cc => I
Apply:  Pos: [160, 169] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [174, 181, 188] ccc => cc
Apply:  Pos: [180, 186] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [193, 203, 212] ccc => cc
Apply:  Pos: [198, 200] cc => I
Apply:  Pos: [205, 208, 221] ccc => cc
Apply:  Pos: [222, 227] cc => I
Apply:  Pos: [216, 226] cc => I
Apply:  Pos: [220, 224] cc => I
Apply:  Pos: [228, 235] cc => I
Apply:  Pos: [231, 239] cc => I
Apply:  Pos: [232, 243] cc => I
Apply:  Pos: [234, 244] cc => I
Apply:  Pos: [240, 252] cc => I
Apply:  Pos: [251, 256] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [274, 295] cc => I
Apply:  Pos: [269, 272] cc => I
Apply:  Pos: [273, 281, 293] ccc => cc
Apply:  Pos: [275, 286] cc => I
Apply:  Pos: [278, 287] cc => I
Apply:  Pos: [282, 291] cc => I
Apply:  Pos: [288, 300] cc => I
Apply:  Pos: [298, 306] cc => I
Apply:  Pos: [307, 316] cc => I
Apply:  Pos: [310, 321] cc => I
Apply:  Pos: [327, 335] cc => I
Apply:  Pos: [329, 342] cc => I
Apply:  Pos: [330, 338] cc => I
Apply:  Pos: [333, 340] cc => I
Apply:  Pos: [334, 349] cc => I
Apply:  Pos: [337, 344] cc => I
Apply:  Pos: [341, 357] cc => I
Apply:  Pos: [343, 348] cc => I
Apply:  Pos: [345, 353] cc => I
Apply:  Pos: [350, 355] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [12, 15], [16, 1], [9, 17], [12, 5], [11, 4], [18, 10], [14, 8], [18, 10], [15, 19], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [18, 13], [12, 2], [16, 1], [14, 17], [12, 5], [1, 9], [16, 1], [16, 12], [4, 15], [7, 0], [18, 13], [6, 0], [4, 12], [1, 9], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [15, 19], [5, 18], [10, 6], [16, 12], [11, 4], [2, 18], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [7, 6], [14, 17], [4, 12], [15, 19], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [1, 9], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [15, 5], [9, 8], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [5, 10], [4, 12], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [5, 3], [1, 2], [8, 18], [9, 14], [2, 13], [13, 6], [9, 17], [7, 0], [18, 3], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  7.390138626098633

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[50, 52]
[112, 122]
[131, 145]
[136, 155]
[176, 190]
[203, 214]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[114, 117, 119]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[39, 45, 53]
[117, 119, 125]
[208, 210, 216]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[195, 201, 207]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[50, 52]
[112, 122]
[131, 145]
[136, 155]
[176, 190]
[203, 214]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.1641340255737305

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [39, 45, 53] ccc => cc, Pos: [50, 52] cc => I, Pos: [50, 52] cc => I, Pos: [112, 122] cc => I, Pos: [112, 122] cc => I, Pos: [114, 117, 119] ccc => cc, Pos: [117, 119, 125] ccc => cc, Pos: [131, 145] cc => I, Pos: [131, 145] cc => I, Pos: [136, 155] cc => I, Pos: [136, 155] cc => I, Pos: [176, 190] cc => I, Pos: [176, 190] cc => I, Pos: [195, 201, 207] ccc => cc, Pos: [203, 214] cc => I, Pos: [203, 214] cc => I, Pos: [208, 210, 216] ccc => cc]

--------End Timer [Generate Plans]:  0.015625476837158203

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [39, 45, 53] ccc => cc,
 Pos: [50, 52] cc => I,
 Pos: [112, 122] cc => I,
 Pos: [114, 117, 119] ccc => cc,
 Pos: [131, 145] cc => I,
 Pos: [136, 155] cc => I,
 Pos: [176, 190] cc => I,
 Pos: [195, 201, 207] ccc => cc,
 Pos: [203, 214] cc => I,
 Pos: [208, 210, 216] ccc => cc]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [39, 45, 53] ccc => cc
Apply:  Pos: [50, 52] cc => I
Apply:  Pos: [112, 122] cc => I
Apply:  Pos: [114, 117, 119] ccc => cc
Apply:  Pos: [131, 145] cc => I
Apply:  Pos: [136, 155] cc => I
Apply:  Pos: [176, 190] cc => I
Apply:  Pos: [195, 201, 207] ccc => cc
Apply:  Pos: [203, 214] cc => I
Apply:  Pos: [208, 210, 216] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [16, 9], [14, 17], [12, 5], [1, 9], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [1, 9], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [16, 12], [11, 4], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [3, 10], [4, 12], [2, 8], [7, 6], [16, 1], [8, 18], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  4.179759502410889

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[113, 119]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[186, 191, 194]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[113, 119]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.764669895172119

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [113, 119] cc => I, Pos: [113, 119] cc => I, Pos: [186, 191, 194] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [113, 119] cc => I, Pos: [186, 191, 194] ccc => cc]
Change: 2, Saving: 2

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [113, 119] cc => I
Apply:  Pos: [186, 191, 194] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 2], [12, 15], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [16, 9], [14, 17], [12, 5], [16, 12], [4, 15], [6, 0], [7, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [16, 12], [11, 4], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.764669895172119

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7347333431243896

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [16, 9], [14, 17], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [16, 12], [11, 4], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.7347333431243896

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [202] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 404

Reduced: 
 - size: 158 (43.89%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14062833786010742

[2, 13], [1, 9], [18, 10], [15, 19], [7, 0], [11, 4], [8, 17], [12, 5], [8, 13], [7, 0], [1, 2], [19, 3], [9, 14], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [3, 10], [6, 0], [12, 5], [9, 17], [11, 16], [1, 2], [18, 13], [9, 14], [8, 13], [1, 2], [7, 0], [12, 5], [3, 10], [11, 16], [14, 17], [5, 18], [6, 0], [1, 12], [11, 4], [15, 19], [2, 13], [17, 7], [19, 3], [5, 10], [9, 14], [8, 13], [16, 12], [6, 0], [2, 18], [11, 4], [17, 7], [16, 12], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [1, 9], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [9, 14], [8, 13], [2, 18], [14, 17], [4, 5], [12, 15], [7, 6], [16, 1], [19, 3], [8, 13], [9, 17], [12, 5], [11, 4], [19, 3], [18, 10], [7, 6], [2, 13], [14, 8], [10, 6], [17, 7], [15, 19], [4, 5], [1, 12], [2, 13], [9, 8], [17, 7], [18, 10], [5, 3], [16, 12], [11, 4], [1, 2], [18, 13], [19, 3], [4, 15], [14, 17], [11, 16], [7, 0], [10, 6], [9, 8], [12, 5], [1, 2], [5, 10], [13, 7], [4, 12], [14, 17], [11, 16], [9, 8], [6, 0], [16, 1], [4, 15], [7, 6], [3, 10], [14, 8], [5, 18], [12, 2], [16, 1], [19, 3], [6, 0], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [11, 16], [18, 13], [1, 2], [7, 6], [12, 15], [5, 10], [19, 3], [8, 17], [11, 4], [3, 10], [14, 17], [15, 5], [7, 6], [18, 13], [1, 2], [9, 8], [11, 4], [13, 7], [1, 9], [14, 17], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [9, 8], [12, 5], [17, 7], [2, 18], [13, 0], [11, 16], [10, 6], [15, 5], [7, 0], [1, 2], [18, 10], [16, 12], [14, 17], [9, 8], [19, 3], [5, 18], [9, 17], [14, 8], [1, 2], [15, 19], [7, 6], [4, 12], [13, 0], [11, 16], [3, 10], [18, 13], [12, 2], [14, 8], [7, 6], [4, 15], [16, 1], [2, 13], [19, 3], [14, 17], [7, 6], [4, 15], [12, 5], [11, 16], [18, 10], [1, 9], [2, 13], [19, 3], [1, 9], [16, 12], [4, 15], [18, 10], [7, 0], [14, 8], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [19, 3], [17, 7], [5, 10], [2, 13], [8, 17], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [11, 4], [2, 18], [12, 15], [13, 6], [9, 14], [3, 10], [16, 1], [17, 7], [11, 4], [2, 13], [16, 1], [9, 8], [12, 15], [11, 4], [5, 3], [7, 6], [14, 17], [16, 2], [8, 13], [4, 12], [18, 10], [5, 3], [15, 19], [17, 7], [1, 9], [16, 2], [6, 0], [4, 5], [9, 17], [8, 13], [18, 10], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [9, 14], [6, 0], [5, 10], [11, 4], [16, 12], [9, 14], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [16, 12], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [6, 0], [12, 15], [4, 5], [6, 0], [16, 1], [14, 8], [18, 3], [2, 13], [17, 7], [15, 19], [5, 10], [7, 0], [1, 9], [11, 4], [13, 6], [14, 17], [16, 12], [18, 3], [15, 19], [12, 2], [3, 10], [17, 7], [11, 4], [6, 0], [16, 1], [5, 18], [14, 8], [19, 3], [8, 17], [7, 6], [4, 15], [12, 2], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [7, 6], [16, 2], [15, 5], [9, 8], [13, 0], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [16, 2], [1, 9], [17, 7], [5, 10], [4, 12], [13, 0], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [15, 19], [5, 3], [17, 7], [10, 6], [1, 2], [8, 18], [16, 12], [11, 4], [15, 19], [9, 14], [19, 3], [10, 6], [2, 13], [16, 12], [9, 8], [17, 7], [5, 18], [19, 3], [16, 12], [13, 6], [9, 17], [5, 18], [11, 4], [1, 2], [7, 0], [18, 3], [16, 12], [15, 19], [1, 2], [13, 0], [9, 8], [7, 6], [4, 5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 17, 25]
[5, 13, 36]
[174, 181, 188]
[273, 281, 293]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[42, 55, 62]
[54, 60, 64]
[80, 88, 99]
[109, 112, 119]
[193, 203, 212]
[205, 208, 221]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.2031450271606445

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 9] cc => I, Pos: [4, 9] cc => I, Pos: [5, 13, 36] ccc => cc, Pos: [10, 23] cc => I, Pos: [10, 23] cc => I, Pos: [12, 17, 25] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [23, 27] cc => I, Pos: [23, 27] cc => I, Pos: [34, 45] cc => I, Pos: [34, 45] cc => I, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 55, 62] ccc => cc, Pos: [44, 49] cc => I, Pos: [44, 49] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [54, 60, 64] ccc => cc, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 88, 99] ccc => cc, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [86, 100] cc => I, Pos: [86, 100] cc => I, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [96, 106] cc => I, Pos: [96, 106] cc => I, Pos: [97, 107] cc => I, Pos: [97, 107] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [109, 112, 119] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [118, 132] cc => I, Pos: [118, 132] cc => I, Pos: [121, 127] cc => I, Pos: [121, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [126, 156] cc => I, Pos: [126, 156] cc => I, Pos: [127, 139] cc => I, Pos: [127, 139] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [134, 142] cc => I, Pos: [134, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [151, 164] cc => I, Pos: [151, 164] cc => I, Pos: [160, 169] cc => I, Pos: [160, 169] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [174, 181, 188] ccc => cc, Pos: [178, 198] cc => I, Pos: [178, 198] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 186] cc => I, Pos: [180, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [186, 195] cc => I, Pos: [186, 195] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [190, 193] cc => I, Pos: [190, 193] cc => I, Pos: [192, 204] cc => I, Pos: [192, 204] cc => I, Pos: [193, 203, 212] ccc => cc, Pos: [198, 200] cc => I, Pos: [198, 200] cc => I, Pos: [205, 208, 221] ccc => cc, Pos: [214, 222] cc => I, Pos: [214, 222] cc => I, Pos: [216, 226] cc => I, Pos: [216, 226] cc => I, Pos: [220, 224] cc => I, Pos: [220, 224] cc => I, Pos: [222, 227] cc => I, Pos: [222, 227] cc => I, Pos: [228, 235] cc => I, Pos: [228, 235] cc => I, Pos: [231, 239] cc => I, Pos: [231, 239] cc => I, Pos: [232, 243] cc => I, Pos: [232, 243] cc => I, Pos: [234, 244] cc => I, Pos: [234, 244] cc => I, Pos: [240, 252] cc => I, Pos: [240, 252] cc => I, Pos: [251, 256] cc => I, Pos: [251, 256] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [269, 272] cc => I, Pos: [269, 272] cc => I, Pos: [273, 281, 293] ccc => cc, Pos: [274, 295] cc => I, Pos: [274, 295] cc => I, Pos: [275, 286] cc => I, Pos: [275, 286] cc => I, Pos: [278, 287] cc => I, Pos: [278, 287] cc => I, Pos: [282, 291] cc => I, Pos: [282, 291] cc => I, Pos: [288, 300] cc => I, Pos: [288, 300] cc => I, Pos: [298, 306] cc => I, Pos: [298, 306] cc => I, Pos: [307, 316] cc => I, Pos: [307, 316] cc => I, Pos: [310, 321] cc => I, Pos: [310, 321] cc => I, Pos: [327, 335] cc => I, Pos: [327, 335] cc => I, Pos: [329, 342] cc => I, Pos: [329, 342] cc => I, Pos: [330, 338] cc => I, Pos: [330, 338] cc => I, Pos: [333, 340] cc => I, Pos: [333, 340] cc => I, Pos: [334, 349] cc => I, Pos: [334, 349] cc => I, Pos: [337, 344] cc => I, Pos: [337, 344] cc => I, Pos: [340, 345] cc => I, Pos: [340, 345] cc => I, Pos: [341, 357] cc => I, Pos: [341, 357] cc => I, Pos: [343, 348] cc => I, Pos: [343, 348] cc => I, Pos: [345, 353] cc => I, Pos: [345, 353] cc => I, Pos: [350, 355] cc => I, Pos: [350, 355] cc => I]

--------End Timer [Generate Plans]:  0.18748927116394043

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 9] cc => I,
 Pos: [36, 47] cc => I,
 Pos: [10, 23] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [100, 108] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [121, 127] cc => I,
 Pos: [134, 142] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [186, 195] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [190, 193] cc => I,
 Pos: [198, 200] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [214, 222] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [333, 340] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [345, 353] cc => I,
 Pos: [350, 355] cc => I]
Change: 74, Saving: 75

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 9] cc => I
Apply:  Pos: [36, 47] cc => I
Apply:  Pos: [10, 23] cc => I
Apply:  Pos: [12, 17, 25] ccc => cc
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [34, 45] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 55, 62] ccc => cc
Apply:  Pos: [44, 49] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 88, 99] ccc => cc
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [100, 108] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [96, 106] cc => I
Apply:  Pos: [97, 107] cc => I
Apply:  Pos: [109, 112, 119] ccc => cc
Apply:  Pos: [110, 117] cc => I
Apply:  Pos: [118, 132] cc => I
Apply:  Pos: [121, 127] cc => I
Apply:  Pos: [134, 142] cc => I
Apply:  Pos: [126, 156] cc => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [151, 164] cc => I
Apply:  Pos: [160, 169] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [174, 181, 188] ccc => cc
Apply:  Pos: [186, 195] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [190, 193] cc => I
Apply:  Pos: [198, 200] cc => I
Apply:  Pos: [205, 208, 221] ccc => cc
Apply:  Pos: [214, 222] cc => I
Apply:  Pos: [216, 226] cc => I
Apply:  Pos: [220, 224] cc => I
Apply:  Pos: [228, 235] cc => I
Apply:  Pos: [231, 239] cc => I
Apply:  Pos: [232, 243] cc => I
Apply:  Pos: [234, 244] cc => I
Apply:  Pos: [240, 252] cc => I
Apply:  Pos: [251, 256] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [269, 272] cc => I
Apply:  Pos: [273, 281, 293] ccc => cc
Apply:  Pos: [275, 286] cc => I
Apply:  Pos: [278, 287] cc => I
Apply:  Pos: [282, 291] cc => I
Apply:  Pos: [288, 300] cc => I
Apply:  Pos: [298, 306] cc => I
Apply:  Pos: [307, 316] cc => I
Apply:  Pos: [310, 321] cc => I
Apply:  Pos: [327, 335] cc => I
Apply:  Pos: [329, 342] cc => I
Apply:  Pos: [330, 338] cc => I
Apply:  Pos: [333, 340] cc => I
Apply:  Pos: [334, 349] cc => I
Apply:  Pos: [337, 344] cc => I
Apply:  Pos: [341, 357] cc => I
Apply:  Pos: [343, 348] cc => I
Apply:  Pos: [345, 353] cc => I
Apply:  Pos: [350, 355] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [12, 15], [16, 1], [9, 17], [12, 5], [11, 4], [18, 10], [14, 8], [18, 10], [15, 19], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [18, 13], [12, 2], [4, 15], [16, 1], [14, 17], [7, 6], [12, 5], [16, 12], [7, 0], [18, 13], [6, 0], [4, 12], [16, 1], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [2, 18], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [15, 19], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [1, 9], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [15, 5], [9, 8], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [5, 10], [4, 12], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [5, 3], [1, 2], [8, 18], [9, 14], [2, 13], [13, 6], [9, 17], [7, 0], [18, 3], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  7.390634298324585

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 51]
[110, 119]
[113, 122]
[128, 143]
[133, 153]
[173, 188]
[201, 212]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[38, 44, 52]
[206, 208, 214]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[193, 199, 205]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 51]
[110, 119]
[113, 122]
[128, 143]
[133, 153]
[173, 188]
[201, 212]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.187273979187012

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 44, 52] ccc => cc, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [110, 119] cc => I, Pos: [110, 119] cc => I, Pos: [113, 122] cc => I, Pos: [113, 122] cc => I, Pos: [128, 143] cc => I, Pos: [128, 143] cc => I, Pos: [133, 153] cc => I, Pos: [133, 153] cc => I, Pos: [173, 188] cc => I, Pos: [173, 188] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [201, 212] cc => I, Pos: [201, 212] cc => I, Pos: [206, 208, 214] ccc => cc]

--------End Timer [Generate Plans]:  0.015628337860107422

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 44, 52] ccc => cc,
 Pos: [49, 51] cc => I,
 Pos: [110, 119] cc => I,
 Pos: [113, 122] cc => I,
 Pos: [128, 143] cc => I,
 Pos: [133, 153] cc => I,
 Pos: [173, 188] cc => I,
 Pos: [193, 199, 205] ccc => cc,
 Pos: [201, 212] cc => I,
 Pos: [206, 208, 214] ccc => cc]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 44, 52] ccc => cc
Apply:  Pos: [49, 51] cc => I
Apply:  Pos: [110, 119] cc => I
Apply:  Pos: [113, 122] cc => I
Apply:  Pos: [128, 143] cc => I
Apply:  Pos: [133, 153] cc => I
Apply:  Pos: [173, 188] cc => I
Apply:  Pos: [193, 199, 205] ccc => cc
Apply:  Pos: [201, 212] cc => I
Apply:  Pos: [206, 208, 214] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [4, 15], [14, 17], [7, 6], [12, 5], [16, 12], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [3, 10], [4, 12], [2, 8], [7, 6], [16, 1], [8, 18], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  4.202902317047119

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[183, 188, 191]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7187912464141846

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [183, 188, 191] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [183, 188, 191] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [183, 188, 191] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 2], [12, 15], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [4, 15], [14, 17], [7, 6], [12, 5], [16, 12], [6, 0], [7, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.7187912464141846

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6729557514190674

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [4, 15], [14, 17], [7, 6], [12, 5], [16, 12], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.6729557514190674

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [201] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 402

Reduced: 
 - size: 159 (44.17%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500429153442383

[2, 13], [1, 9], [18, 10], [15, 19], [7, 0], [11, 4], [8, 17], [12, 5], [8, 13], [7, 0], [1, 2], [19, 3], [9, 14], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [3, 10], [6, 0], [12, 5], [9, 17], [11, 16], [1, 2], [18, 13], [9, 14], [8, 13], [1, 2], [7, 0], [12, 5], [3, 10], [11, 16], [14, 17], [5, 18], [6, 0], [1, 12], [11, 4], [15, 19], [2, 13], [17, 7], [19, 3], [5, 10], [9, 14], [8, 13], [16, 12], [6, 0], [2, 18], [11, 4], [17, 7], [16, 12], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [1, 9], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [9, 14], [8, 13], [2, 18], [14, 17], [4, 5], [12, 15], [7, 6], [16, 1], [19, 3], [8, 13], [9, 17], [12, 5], [11, 4], [19, 3], [18, 10], [7, 6], [2, 13], [14, 8], [10, 6], [17, 7], [15, 19], [4, 5], [1, 12], [2, 13], [9, 8], [17, 7], [18, 10], [5, 3], [16, 12], [11, 4], [1, 2], [18, 13], [19, 3], [4, 15], [14, 17], [11, 16], [7, 0], [10, 6], [9, 8], [12, 5], [1, 2], [5, 10], [13, 7], [4, 12], [14, 17], [11, 16], [9, 8], [6, 0], [16, 1], [4, 15], [7, 6], [3, 10], [14, 8], [5, 18], [12, 2], [16, 1], [19, 3], [6, 0], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [11, 16], [18, 13], [1, 2], [7, 6], [12, 15], [5, 10], [19, 3], [8, 17], [11, 4], [3, 10], [14, 17], [15, 5], [7, 6], [18, 13], [1, 2], [9, 8], [11, 4], [13, 7], [1, 9], [14, 17], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [9, 8], [12, 5], [17, 7], [2, 18], [13, 0], [11, 16], [10, 6], [15, 5], [7, 0], [1, 2], [18, 10], [16, 12], [14, 17], [9, 8], [19, 3], [5, 18], [9, 17], [14, 8], [1, 2], [15, 19], [7, 6], [4, 12], [13, 0], [11, 16], [3, 10], [18, 13], [12, 2], [14, 8], [7, 6], [4, 15], [16, 1], [2, 13], [19, 3], [14, 17], [7, 6], [4, 15], [12, 5], [11, 16], [18, 10], [1, 9], [2, 13], [19, 3], [1, 9], [16, 12], [4, 15], [18, 10], [7, 0], [14, 8], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [19, 3], [17, 7], [5, 10], [2, 13], [8, 17], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [11, 4], [2, 18], [12, 15], [13, 6], [9, 14], [3, 10], [16, 1], [17, 7], [11, 4], [2, 13], [16, 1], [9, 8], [12, 15], [11, 4], [5, 3], [7, 6], [14, 17], [16, 2], [8, 13], [4, 12], [18, 10], [5, 3], [15, 19], [17, 7], [1, 9], [16, 2], [6, 0], [4, 5], [9, 17], [8, 13], [18, 10], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [9, 14], [6, 0], [5, 10], [11, 4], [16, 12], [9, 14], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [16, 12], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [6, 0], [12, 15], [4, 5], [6, 0], [16, 1], [14, 8], [18, 3], [2, 13], [17, 7], [15, 19], [5, 10], [7, 0], [1, 9], [11, 4], [13, 6], [14, 17], [16, 12], [18, 3], [15, 19], [12, 2], [3, 10], [17, 7], [11, 4], [6, 0], [16, 1], [5, 18], [14, 8], [19, 3], [8, 17], [7, 6], [4, 15], [12, 2], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [7, 6], [16, 2], [15, 5], [9, 8], [13, 0], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [16, 2], [1, 9], [17, 7], [5, 10], [4, 12], [13, 0], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [15, 19], [5, 3], [17, 7], [10, 6], [1, 2], [8, 18], [16, 12], [11, 4], [15, 19], [9, 14], [19, 3], [10, 6], [2, 13], [16, 12], [9, 8], [17, 7], [5, 18], [19, 3], [16, 12], [13, 6], [9, 17], [5, 18], [11, 4], [1, 2], [7, 0], [18, 3], [16, 12], [15, 19], [1, 2], [13, 0], [9, 8], [7, 6], [4, 5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 17, 25]
[5, 13, 36]
[174, 181, 188]
[273, 281, 293]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[42, 55, 62]
[54, 60, 64]
[80, 88, 99]
[109, 112, 119]
[193, 203, 212]
[205, 208, 221]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.078807353973389

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 9] cc => I, Pos: [4, 9] cc => I, Pos: [5, 13, 36] ccc => cc, Pos: [10, 23] cc => I, Pos: [10, 23] cc => I, Pos: [12, 17, 25] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [23, 27] cc => I, Pos: [23, 27] cc => I, Pos: [34, 45] cc => I, Pos: [34, 45] cc => I, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 55, 62] ccc => cc, Pos: [44, 49] cc => I, Pos: [44, 49] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [54, 60, 64] ccc => cc, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 88, 99] ccc => cc, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [86, 100] cc => I, Pos: [86, 100] cc => I, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [96, 106] cc => I, Pos: [96, 106] cc => I, Pos: [97, 107] cc => I, Pos: [97, 107] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [109, 112, 119] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [118, 132] cc => I, Pos: [118, 132] cc => I, Pos: [121, 127] cc => I, Pos: [121, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [126, 156] cc => I, Pos: [126, 156] cc => I, Pos: [127, 139] cc => I, Pos: [127, 139] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [134, 142] cc => I, Pos: [134, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [151, 164] cc => I, Pos: [151, 164] cc => I, Pos: [160, 169] cc => I, Pos: [160, 169] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [174, 181, 188] ccc => cc, Pos: [178, 198] cc => I, Pos: [178, 198] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 186] cc => I, Pos: [180, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [186, 195] cc => I, Pos: [186, 195] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [190, 193] cc => I, Pos: [190, 193] cc => I, Pos: [192, 204] cc => I, Pos: [192, 204] cc => I, Pos: [193, 203, 212] ccc => cc, Pos: [198, 200] cc => I, Pos: [198, 200] cc => I, Pos: [205, 208, 221] ccc => cc, Pos: [214, 222] cc => I, Pos: [214, 222] cc => I, Pos: [216, 226] cc => I, Pos: [216, 226] cc => I, Pos: [220, 224] cc => I, Pos: [220, 224] cc => I, Pos: [222, 227] cc => I, Pos: [222, 227] cc => I, Pos: [228, 235] cc => I, Pos: [228, 235] cc => I, Pos: [231, 239] cc => I, Pos: [231, 239] cc => I, Pos: [232, 243] cc => I, Pos: [232, 243] cc => I, Pos: [234, 244] cc => I, Pos: [234, 244] cc => I, Pos: [240, 252] cc => I, Pos: [240, 252] cc => I, Pos: [251, 256] cc => I, Pos: [251, 256] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [269, 272] cc => I, Pos: [269, 272] cc => I, Pos: [273, 281, 293] ccc => cc, Pos: [274, 295] cc => I, Pos: [274, 295] cc => I, Pos: [275, 286] cc => I, Pos: [275, 286] cc => I, Pos: [278, 287] cc => I, Pos: [278, 287] cc => I, Pos: [282, 291] cc => I, Pos: [282, 291] cc => I, Pos: [288, 300] cc => I, Pos: [288, 300] cc => I, Pos: [298, 306] cc => I, Pos: [298, 306] cc => I, Pos: [307, 316] cc => I, Pos: [307, 316] cc => I, Pos: [310, 321] cc => I, Pos: [310, 321] cc => I, Pos: [327, 335] cc => I, Pos: [327, 335] cc => I, Pos: [329, 342] cc => I, Pos: [329, 342] cc => I, Pos: [330, 338] cc => I, Pos: [330, 338] cc => I, Pos: [333, 340] cc => I, Pos: [333, 340] cc => I, Pos: [334, 349] cc => I, Pos: [334, 349] cc => I, Pos: [337, 344] cc => I, Pos: [337, 344] cc => I, Pos: [340, 345] cc => I, Pos: [340, 345] cc => I, Pos: [341, 357] cc => I, Pos: [341, 357] cc => I, Pos: [343, 348] cc => I, Pos: [343, 348] cc => I, Pos: [345, 353] cc => I, Pos: [345, 353] cc => I, Pos: [350, 355] cc => I, Pos: [350, 355] cc => I]

--------End Timer [Generate Plans]:  0.1874852180480957

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 9] cc => I,
 Pos: [36, 47] cc => I,
 Pos: [10, 23] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [100, 108] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [127, 139] cc => I,
 Pos: [134, 142] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [178, 198] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [186, 195] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [190, 193] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [214, 222] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [340, 345] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [350, 355] cc => I]
Change: 72, Saving: 73

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 9] cc => I
Apply:  Pos: [36, 47] cc => I
Apply:  Pos: [10, 23] cc => I
Apply:  Pos: [12, 17, 25] ccc => cc
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [34, 45] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 55, 62] ccc => cc
Apply:  Pos: [44, 49] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 88, 99] ccc => cc
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [100, 108] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [96, 106] cc => I
Apply:  Pos: [97, 107] cc => I
Apply:  Pos: [109, 112, 119] ccc => cc
Apply:  Pos: [110, 117] cc => I
Apply:  Pos: [118, 132] cc => I
Apply:  Pos: [127, 139] cc => I
Apply:  Pos: [134, 142] cc => I
Apply:  Pos: [126, 156] cc => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [151, 164] cc => I
Apply:  Pos: [160, 169] cc => I
Apply:  Pos: [178, 198] cc => I
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [174, 181, 188] ccc => cc
Apply:  Pos: [186, 195] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [190, 193] cc => I
Apply:  Pos: [205, 208, 221] ccc => cc
Apply:  Pos: [214, 222] cc => I
Apply:  Pos: [216, 226] cc => I
Apply:  Pos: [220, 224] cc => I
Apply:  Pos: [228, 235] cc => I
Apply:  Pos: [231, 239] cc => I
Apply:  Pos: [232, 243] cc => I
Apply:  Pos: [234, 244] cc => I
Apply:  Pos: [240, 252] cc => I
Apply:  Pos: [251, 256] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [269, 272] cc => I
Apply:  Pos: [273, 281, 293] ccc => cc
Apply:  Pos: [275, 286] cc => I
Apply:  Pos: [278, 287] cc => I
Apply:  Pos: [282, 291] cc => I
Apply:  Pos: [288, 300] cc => I
Apply:  Pos: [298, 306] cc => I
Apply:  Pos: [307, 316] cc => I
Apply:  Pos: [310, 321] cc => I
Apply:  Pos: [327, 335] cc => I
Apply:  Pos: [329, 342] cc => I
Apply:  Pos: [330, 338] cc => I
Apply:  Pos: [340, 345] cc => I
Apply:  Pos: [334, 349] cc => I
Apply:  Pos: [337, 344] cc => I
Apply:  Pos: [341, 357] cc => I
Apply:  Pos: [343, 348] cc => I
Apply:  Pos: [350, 355] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [12, 15], [16, 1], [9, 17], [12, 5], [11, 4], [18, 10], [14, 8], [18, 10], [15, 19], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [14, 8], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [18, 13], [12, 2], [4, 15], [16, 1], [14, 17], [7, 6], [12, 5], [16, 12], [7, 0], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [2, 18], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [15, 19], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [1, 9], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [15, 5], [9, 8], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [5, 10], [4, 12], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [5, 3], [1, 2], [8, 18], [16, 12], [9, 14], [2, 13], [13, 6], [9, 17], [7, 0], [18, 3], [16, 12], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  7.281921625137329

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 51]
[111, 120]
[105, 121]
[114, 124]
[130, 145]
[135, 155]
[175, 190]
[203, 215]
[211, 218]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[38, 44, 52]
[208, 210, 217]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[195, 201, 207]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 51]
[111, 120]
[105, 121]
[114, 124]
[130, 145]
[135, 155]
[175, 190]
[203, 215]
[211, 218]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.078423500061035

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 44, 52] ccc => cc, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [105, 121] cc => I, Pos: [105, 121] cc => I, Pos: [111, 120] cc => I, Pos: [111, 120] cc => I, Pos: [114, 124] cc => I, Pos: [114, 124] cc => I, Pos: [130, 145] cc => I, Pos: [130, 145] cc => I, Pos: [135, 155] cc => I, Pos: [135, 155] cc => I, Pos: [175, 190] cc => I, Pos: [175, 190] cc => I, Pos: [195, 201, 207] ccc => cc, Pos: [203, 215] cc => I, Pos: [203, 215] cc => I, Pos: [208, 210, 217] ccc => cc, Pos: [211, 218] cc => I, Pos: [211, 218] cc => I]

--------End Timer [Generate Plans]:  0.031247615814208984

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 44, 52] ccc => cc,
 Pos: [49, 51] cc => I,
 Pos: [105, 121] cc => I,
 Pos: [111, 120] cc => I,
 Pos: [114, 124] cc => I,
 Pos: [130, 145] cc => I,
 Pos: [135, 155] cc => I,
 Pos: [175, 190] cc => I,
 Pos: [195, 201, 207] ccc => cc,
 Pos: [203, 215] cc => I,
 Pos: [208, 210, 217] ccc => cc,
 Pos: [211, 218] cc => I]
Change: 12, Saving: 12

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 44, 52] ccc => cc
Apply:  Pos: [49, 51] cc => I
Apply:  Pos: [105, 121] cc => I
Apply:  Pos: [111, 120] cc => I
Apply:  Pos: [114, 124] cc => I
Apply:  Pos: [130, 145] cc => I
Apply:  Pos: [135, 155] cc => I
Apply:  Pos: [175, 190] cc => I
Apply:  Pos: [195, 201, 207] ccc => cc
Apply:  Pos: [203, 215] cc => I
Apply:  Pos: [208, 210, 217] ccc => cc
Apply:  Pos: [211, 218] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [4, 15], [14, 17], [7, 6], [12, 5], [16, 12], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [3, 10], [4, 12], [2, 8], [7, 6], [16, 1], [8, 18], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  4.109671115875244

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[183, 188, 191]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.625159740447998

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [183, 188, 191] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [183, 188, 191] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [183, 188, 191] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 2], [12, 15], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [4, 15], [14, 17], [7, 6], [12, 5], [16, 12], [6, 0], [7, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.625159740447998

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6253914833068848

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [4, 15], [14, 17], [7, 6], [12, 5], [16, 12], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.6253914833068848

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [201] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 402

Reduced: 
 - size: 159 (44.17%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14078807830810547

[2, 13], [1, 9], [18, 10], [15, 19], [7, 0], [11, 4], [8, 17], [12, 5], [8, 13], [7, 0], [1, 2], [19, 3], [9, 14], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [3, 10], [6, 0], [12, 5], [9, 17], [11, 16], [1, 2], [18, 13], [9, 14], [8, 13], [1, 2], [7, 0], [12, 5], [3, 10], [11, 16], [14, 17], [5, 18], [6, 0], [1, 12], [11, 4], [15, 19], [2, 13], [17, 7], [19, 3], [5, 10], [9, 14], [8, 13], [16, 12], [6, 0], [2, 18], [11, 4], [17, 7], [16, 12], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [1, 9], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [9, 14], [8, 13], [2, 18], [14, 17], [4, 5], [12, 15], [7, 6], [16, 1], [19, 3], [8, 13], [9, 17], [12, 5], [11, 4], [19, 3], [18, 10], [7, 6], [2, 13], [14, 8], [10, 6], [17, 7], [15, 19], [4, 5], [1, 12], [2, 13], [9, 8], [17, 7], [18, 10], [5, 3], [16, 12], [11, 4], [1, 2], [18, 13], [19, 3], [4, 15], [14, 17], [11, 16], [7, 0], [10, 6], [9, 8], [12, 5], [1, 2], [5, 10], [13, 7], [4, 12], [14, 17], [11, 16], [9, 8], [6, 0], [16, 1], [4, 15], [7, 6], [3, 10], [14, 8], [5, 18], [12, 2], [16, 1], [19, 3], [6, 0], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [11, 16], [18, 13], [1, 2], [7, 6], [12, 15], [5, 10], [19, 3], [8, 17], [11, 4], [3, 10], [14, 17], [15, 5], [7, 6], [18, 13], [1, 2], [9, 8], [11, 4], [13, 7], [1, 9], [14, 17], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [9, 8], [12, 5], [17, 7], [2, 18], [13, 0], [11, 16], [10, 6], [15, 5], [7, 0], [1, 2], [18, 10], [16, 12], [14, 17], [9, 8], [19, 3], [5, 18], [9, 17], [14, 8], [1, 2], [15, 19], [7, 6], [4, 12], [13, 0], [11, 16], [3, 10], [18, 13], [12, 2], [14, 8], [7, 6], [4, 15], [16, 1], [2, 13], [19, 3], [14, 17], [7, 6], [4, 15], [12, 5], [11, 16], [18, 10], [1, 9], [2, 13], [19, 3], [1, 9], [16, 12], [4, 15], [18, 10], [7, 0], [14, 8], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [19, 3], [17, 7], [5, 10], [2, 13], [8, 17], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [11, 4], [2, 18], [12, 15], [13, 6], [9, 14], [3, 10], [16, 1], [17, 7], [11, 4], [2, 13], [16, 1], [9, 8], [12, 15], [11, 4], [5, 3], [7, 6], [14, 17], [16, 2], [8, 13], [4, 12], [18, 10], [5, 3], [15, 19], [17, 7], [1, 9], [16, 2], [6, 0], [4, 5], [9, 17], [8, 13], [18, 10], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [9, 14], [6, 0], [5, 10], [11, 4], [16, 12], [9, 14], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [16, 12], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [6, 0], [12, 15], [4, 5], [6, 0], [16, 1], [14, 8], [18, 3], [2, 13], [17, 7], [15, 19], [5, 10], [7, 0], [1, 9], [11, 4], [13, 6], [14, 17], [16, 12], [18, 3], [15, 19], [12, 2], [3, 10], [17, 7], [11, 4], [6, 0], [16, 1], [5, 18], [14, 8], [19, 3], [8, 17], [7, 6], [4, 15], [12, 2], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [7, 6], [16, 2], [15, 5], [9, 8], [13, 0], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [16, 2], [1, 9], [17, 7], [5, 10], [4, 12], [13, 0], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [15, 19], [5, 3], [17, 7], [10, 6], [1, 2], [8, 18], [16, 12], [11, 4], [15, 19], [9, 14], [19, 3], [10, 6], [2, 13], [16, 12], [9, 8], [17, 7], [5, 18], [19, 3], [16, 12], [13, 6], [9, 17], [5, 18], [11, 4], [1, 2], [7, 0], [18, 3], [16, 12], [15, 19], [1, 2], [13, 0], [9, 8], [7, 6], [4, 5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 17, 25]
[5, 13, 36]
[174, 181, 188]
[273, 281, 293]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[42, 55, 62]
[54, 60, 64]
[80, 88, 99]
[109, 112, 119]
[193, 203, 212]
[205, 208, 221]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.280108451843262

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 9] cc => I, Pos: [4, 9] cc => I, Pos: [5, 13, 36] ccc => cc, Pos: [10, 23] cc => I, Pos: [10, 23] cc => I, Pos: [12, 17, 25] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [23, 27] cc => I, Pos: [23, 27] cc => I, Pos: [34, 45] cc => I, Pos: [34, 45] cc => I, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 55, 62] ccc => cc, Pos: [44, 49] cc => I, Pos: [44, 49] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [54, 60, 64] ccc => cc, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 88, 99] ccc => cc, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [86, 100] cc => I, Pos: [86, 100] cc => I, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [96, 106] cc => I, Pos: [96, 106] cc => I, Pos: [97, 107] cc => I, Pos: [97, 107] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [109, 112, 119] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [118, 132] cc => I, Pos: [118, 132] cc => I, Pos: [121, 127] cc => I, Pos: [121, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [126, 156] cc => I, Pos: [126, 156] cc => I, Pos: [127, 139] cc => I, Pos: [127, 139] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [134, 142] cc => I, Pos: [134, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [151, 164] cc => I, Pos: [151, 164] cc => I, Pos: [160, 169] cc => I, Pos: [160, 169] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [174, 181, 188] ccc => cc, Pos: [178, 198] cc => I, Pos: [178, 198] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 186] cc => I, Pos: [180, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [186, 195] cc => I, Pos: [186, 195] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [190, 193] cc => I, Pos: [190, 193] cc => I, Pos: [192, 204] cc => I, Pos: [192, 204] cc => I, Pos: [193, 203, 212] ccc => cc, Pos: [198, 200] cc => I, Pos: [198, 200] cc => I, Pos: [205, 208, 221] ccc => cc, Pos: [214, 222] cc => I, Pos: [214, 222] cc => I, Pos: [216, 226] cc => I, Pos: [216, 226] cc => I, Pos: [220, 224] cc => I, Pos: [220, 224] cc => I, Pos: [222, 227] cc => I, Pos: [222, 227] cc => I, Pos: [228, 235] cc => I, Pos: [228, 235] cc => I, Pos: [231, 239] cc => I, Pos: [231, 239] cc => I, Pos: [232, 243] cc => I, Pos: [232, 243] cc => I, Pos: [234, 244] cc => I, Pos: [234, 244] cc => I, Pos: [240, 252] cc => I, Pos: [240, 252] cc => I, Pos: [251, 256] cc => I, Pos: [251, 256] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [269, 272] cc => I, Pos: [269, 272] cc => I, Pos: [273, 281, 293] ccc => cc, Pos: [274, 295] cc => I, Pos: [274, 295] cc => I, Pos: [275, 286] cc => I, Pos: [275, 286] cc => I, Pos: [278, 287] cc => I, Pos: [278, 287] cc => I, Pos: [282, 291] cc => I, Pos: [282, 291] cc => I, Pos: [288, 300] cc => I, Pos: [288, 300] cc => I, Pos: [298, 306] cc => I, Pos: [298, 306] cc => I, Pos: [307, 316] cc => I, Pos: [307, 316] cc => I, Pos: [310, 321] cc => I, Pos: [310, 321] cc => I, Pos: [327, 335] cc => I, Pos: [327, 335] cc => I, Pos: [329, 342] cc => I, Pos: [329, 342] cc => I, Pos: [330, 338] cc => I, Pos: [330, 338] cc => I, Pos: [333, 340] cc => I, Pos: [333, 340] cc => I, Pos: [334, 349] cc => I, Pos: [334, 349] cc => I, Pos: [337, 344] cc => I, Pos: [337, 344] cc => I, Pos: [340, 345] cc => I, Pos: [340, 345] cc => I, Pos: [341, 357] cc => I, Pos: [341, 357] cc => I, Pos: [343, 348] cc => I, Pos: [343, 348] cc => I, Pos: [345, 353] cc => I, Pos: [345, 353] cc => I, Pos: [350, 355] cc => I, Pos: [350, 355] cc => I]

--------End Timer [Generate Plans]:  0.1718764305114746

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 9] cc => I,
 Pos: [36, 47] cc => I,
 Pos: [23, 27] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [86, 100] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [127, 139] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [178, 198] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [186, 195] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [192, 204] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [193, 203, 212] ccc => cc,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [222, 227] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [340, 345] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [350, 355] cc => I]
Change: 72, Saving: 74

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 9] cc => I
Apply:  Pos: [36, 47] cc => I
Apply:  Pos: [23, 27] cc => I
Apply:  Pos: [12, 17, 25] ccc => cc
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [34, 45] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 55, 62] ccc => cc
Apply:  Pos: [44, 49] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 88, 99] ccc => cc
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [86, 100] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [96, 106] cc => I
Apply:  Pos: [97, 107] cc => I
Apply:  Pos: [109, 112, 119] ccc => cc
Apply:  Pos: [110, 117] cc => I
Apply:  Pos: [118, 132] cc => I
Apply:  Pos: [127, 139] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [126, 156] cc => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [151, 164] cc => I
Apply:  Pos: [160, 169] cc => I
Apply:  Pos: [178, 198] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [174, 181, 188] ccc => cc
Apply:  Pos: [186, 195] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [192, 204] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [193, 203, 212] ccc => cc
Apply:  Pos: [205, 208, 221] ccc => cc
Apply:  Pos: [222, 227] cc => I
Apply:  Pos: [216, 226] cc => I
Apply:  Pos: [220, 224] cc => I
Apply:  Pos: [228, 235] cc => I
Apply:  Pos: [231, 239] cc => I
Apply:  Pos: [232, 243] cc => I
Apply:  Pos: [234, 244] cc => I
Apply:  Pos: [240, 252] cc => I
Apply:  Pos: [251, 256] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [269, 272] cc => I
Apply:  Pos: [273, 281, 293] ccc => cc
Apply:  Pos: [275, 286] cc => I
Apply:  Pos: [278, 287] cc => I
Apply:  Pos: [282, 291] cc => I
Apply:  Pos: [288, 300] cc => I
Apply:  Pos: [298, 306] cc => I
Apply:  Pos: [307, 316] cc => I
Apply:  Pos: [310, 321] cc => I
Apply:  Pos: [327, 335] cc => I
Apply:  Pos: [329, 342] cc => I
Apply:  Pos: [330, 338] cc => I
Apply:  Pos: [340, 345] cc => I
Apply:  Pos: [334, 349] cc => I
Apply:  Pos: [337, 344] cc => I
Apply:  Pos: [341, 357] cc => I
Apply:  Pos: [343, 348] cc => I
Apply:  Pos: [350, 355] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [12, 15], [16, 1], [9, 17], [12, 5], [11, 4], [18, 10], [14, 8], [18, 10], [15, 19], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [14, 8], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [18, 13], [12, 2], [4, 15], [16, 1], [19, 3], [14, 17], [12, 5], [1, 9], [16, 1], [16, 12], [7, 0], [18, 13], [14, 8], [6, 0], [4, 12], [1, 9], [8, 17], [5, 10], [2, 13], [17, 7], [15, 19], [5, 18], [10, 6], [16, 12], [11, 4], [2, 18], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [7, 6], [14, 17], [4, 12], [15, 19], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [1, 9], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [15, 5], [9, 8], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [5, 10], [4, 12], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [5, 3], [1, 2], [8, 18], [16, 12], [9, 14], [2, 13], [13, 6], [9, 17], [7, 0], [18, 3], [16, 12], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  7.451984882354736

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 51]
[112, 123]
[105, 124]
[132, 146]
[137, 156]
[176, 191]
[204, 216]
[212, 219]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[115, 119, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[38, 44, 52]
[119, 121, 127]
[209, 211, 218]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[196, 202, 208]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 51]
[112, 123]
[105, 124]
[132, 146]
[137, 156]
[176, 191]
[204, 216]
[212, 219]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.219296455383301

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 44, 52] ccc => cc, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [105, 124] cc => I, Pos: [105, 124] cc => I, Pos: [112, 123] cc => I, Pos: [112, 123] cc => I, Pos: [115, 119, 121] ccc => cc, Pos: [119, 121, 127] ccc => cc, Pos: [132, 146] cc => I, Pos: [132, 146] cc => I, Pos: [137, 156] cc => I, Pos: [137, 156] cc => I, Pos: [176, 191] cc => I, Pos: [176, 191] cc => I, Pos: [196, 202, 208] ccc => cc, Pos: [204, 216] cc => I, Pos: [204, 216] cc => I, Pos: [209, 211, 218] ccc => cc, Pos: [212, 219] cc => I, Pos: [212, 219] cc => I]

--------End Timer [Generate Plans]:  0.031249046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 44, 52] ccc => cc,
 Pos: [49, 51] cc => I,
 Pos: [105, 124] cc => I,
 Pos: [112, 123] cc => I,
 Pos: [119, 121, 127] ccc => cc,
 Pos: [132, 146] cc => I,
 Pos: [137, 156] cc => I,
 Pos: [176, 191] cc => I,
 Pos: [196, 202, 208] ccc => cc,
 Pos: [204, 216] cc => I,
 Pos: [209, 211, 218] ccc => cc,
 Pos: [212, 219] cc => I]
Change: 12, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 44, 52] ccc => cc
Apply:  Pos: [49, 51] cc => I
Apply:  Pos: [105, 124] cc => I
Apply:  Pos: [112, 123] cc => I
Apply:  Pos: [119, 121, 127] ccc => cc
Apply:  Pos: [132, 146] cc => I
Apply:  Pos: [137, 156] cc => I
Apply:  Pos: [176, 191] cc => I
Apply:  Pos: [196, 202, 208] ccc => cc
Apply:  Pos: [204, 216] cc => I
Apply:  Pos: [209, 211, 218] ccc => cc
Apply:  Pos: [212, 219] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [4, 15], [16, 1], [19, 3], [14, 17], [12, 5], [16, 1], [16, 12], [1, 9], [7, 0], [6, 0], [4, 12], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [16, 12], [11, 4], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [3, 10], [4, 12], [2, 8], [7, 6], [16, 1], [8, 18], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  4.250545501708984

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[110, 115]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[185, 190, 193]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[110, 115]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7660961151123047

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [110, 115] cc => I, Pos: [110, 115] cc => I, Pos: [185, 190, 193] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [110, 115] cc => I, Pos: [185, 190, 193] ccc => cc]
Change: 2, Saving: 2

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [110, 115] cc => I
Apply:  Pos: [185, 190, 193] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 2], [12, 15], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [4, 15], [19, 3], [14, 17], [12, 5], [16, 12], [1, 9], [6, 0], [7, 0], [4, 12], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [16, 12], [11, 4], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.7660961151123047

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7193033695220947

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [4, 15], [19, 3], [14, 17], [12, 5], [16, 12], [1, 9], [7, 0], [6, 0], [4, 12], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [16, 12], [11, 4], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.7193033695220947

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [201] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 402

Reduced: 
 - size: 159 (44.17%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499117851257324

[2, 13], [1, 9], [18, 10], [15, 19], [7, 0], [11, 4], [8, 17], [12, 5], [8, 13], [7, 0], [1, 2], [19, 3], [9, 14], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [3, 10], [6, 0], [12, 5], [9, 17], [11, 16], [1, 2], [18, 13], [9, 14], [8, 13], [1, 2], [7, 0], [12, 5], [3, 10], [11, 16], [14, 17], [5, 18], [6, 0], [1, 12], [11, 4], [15, 19], [2, 13], [17, 7], [19, 3], [5, 10], [9, 14], [8, 13], [16, 12], [6, 0], [2, 18], [11, 4], [17, 7], [16, 12], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [1, 9], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [9, 14], [8, 13], [2, 18], [14, 17], [4, 5], [12, 15], [7, 6], [16, 1], [19, 3], [8, 13], [9, 17], [12, 5], [11, 4], [19, 3], [18, 10], [7, 6], [2, 13], [14, 8], [10, 6], [17, 7], [15, 19], [4, 5], [1, 12], [2, 13], [9, 8], [17, 7], [18, 10], [5, 3], [16, 12], [11, 4], [1, 2], [18, 13], [19, 3], [4, 15], [14, 17], [11, 16], [7, 0], [10, 6], [9, 8], [12, 5], [1, 2], [5, 10], [13, 7], [4, 12], [14, 17], [11, 16], [9, 8], [6, 0], [16, 1], [4, 15], [7, 6], [3, 10], [14, 8], [5, 18], [12, 2], [16, 1], [19, 3], [6, 0], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [11, 16], [18, 13], [1, 2], [7, 6], [12, 15], [5, 10], [19, 3], [8, 17], [11, 4], [3, 10], [14, 17], [15, 5], [7, 6], [18, 13], [1, 2], [9, 8], [11, 4], [13, 7], [1, 9], [14, 17], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [9, 8], [12, 5], [17, 7], [2, 18], [13, 0], [11, 16], [10, 6], [15, 5], [7, 0], [1, 2], [18, 10], [16, 12], [14, 17], [9, 8], [19, 3], [5, 18], [9, 17], [14, 8], [1, 2], [15, 19], [7, 6], [4, 12], [13, 0], [11, 16], [3, 10], [18, 13], [12, 2], [14, 8], [7, 6], [4, 15], [16, 1], [2, 13], [19, 3], [14, 17], [7, 6], [4, 15], [12, 5], [11, 16], [18, 10], [1, 9], [2, 13], [19, 3], [1, 9], [16, 12], [4, 15], [18, 10], [7, 0], [14, 8], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [19, 3], [17, 7], [5, 10], [2, 13], [8, 17], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [11, 4], [2, 18], [12, 15], [13, 6], [9, 14], [3, 10], [16, 1], [17, 7], [11, 4], [2, 13], [16, 1], [9, 8], [12, 15], [11, 4], [5, 3], [7, 6], [14, 17], [16, 2], [8, 13], [4, 12], [18, 10], [5, 3], [15, 19], [17, 7], [1, 9], [16, 2], [6, 0], [4, 5], [9, 17], [8, 13], [18, 10], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [9, 14], [6, 0], [5, 10], [11, 4], [16, 12], [9, 14], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [16, 12], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [6, 0], [12, 15], [4, 5], [6, 0], [16, 1], [14, 8], [18, 3], [2, 13], [17, 7], [15, 19], [5, 10], [7, 0], [1, 9], [11, 4], [13, 6], [14, 17], [16, 12], [18, 3], [15, 19], [12, 2], [3, 10], [17, 7], [11, 4], [6, 0], [16, 1], [5, 18], [14, 8], [19, 3], [8, 17], [7, 6], [4, 15], [12, 2], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [7, 6], [16, 2], [15, 5], [9, 8], [13, 0], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [16, 2], [1, 9], [17, 7], [5, 10], [4, 12], [13, 0], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [15, 19], [5, 3], [17, 7], [10, 6], [1, 2], [8, 18], [16, 12], [11, 4], [15, 19], [9, 14], [19, 3], [10, 6], [2, 13], [16, 12], [9, 8], [17, 7], [5, 18], [19, 3], [16, 12], [13, 6], [9, 17], [5, 18], [11, 4], [1, 2], [7, 0], [18, 3], [16, 12], [15, 19], [1, 2], [13, 0], [9, 8], [7, 6], [4, 5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 17, 25]
[5, 13, 36]
[174, 181, 188]
[273, 281, 293]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[42, 55, 62]
[54, 60, 64]
[80, 88, 99]
[109, 112, 119]
[193, 203, 212]
[205, 208, 221]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.218749761581421

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 9] cc => I, Pos: [4, 9] cc => I, Pos: [5, 13, 36] ccc => cc, Pos: [10, 23] cc => I, Pos: [10, 23] cc => I, Pos: [12, 17, 25] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [23, 27] cc => I, Pos: [23, 27] cc => I, Pos: [34, 45] cc => I, Pos: [34, 45] cc => I, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 55, 62] ccc => cc, Pos: [44, 49] cc => I, Pos: [44, 49] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [54, 60, 64] ccc => cc, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 88, 99] ccc => cc, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [86, 100] cc => I, Pos: [86, 100] cc => I, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [96, 106] cc => I, Pos: [96, 106] cc => I, Pos: [97, 107] cc => I, Pos: [97, 107] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [109, 112, 119] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [118, 132] cc => I, Pos: [118, 132] cc => I, Pos: [121, 127] cc => I, Pos: [121, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [126, 156] cc => I, Pos: [126, 156] cc => I, Pos: [127, 139] cc => I, Pos: [127, 139] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [134, 142] cc => I, Pos: [134, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [151, 164] cc => I, Pos: [151, 164] cc => I, Pos: [160, 169] cc => I, Pos: [160, 169] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [174, 181, 188] ccc => cc, Pos: [178, 198] cc => I, Pos: [178, 198] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 186] cc => I, Pos: [180, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [186, 195] cc => I, Pos: [186, 195] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [190, 193] cc => I, Pos: [190, 193] cc => I, Pos: [192, 204] cc => I, Pos: [192, 204] cc => I, Pos: [193, 203, 212] ccc => cc, Pos: [198, 200] cc => I, Pos: [198, 200] cc => I, Pos: [205, 208, 221] ccc => cc, Pos: [214, 222] cc => I, Pos: [214, 222] cc => I, Pos: [216, 226] cc => I, Pos: [216, 226] cc => I, Pos: [220, 224] cc => I, Pos: [220, 224] cc => I, Pos: [222, 227] cc => I, Pos: [222, 227] cc => I, Pos: [228, 235] cc => I, Pos: [228, 235] cc => I, Pos: [231, 239] cc => I, Pos: [231, 239] cc => I, Pos: [232, 243] cc => I, Pos: [232, 243] cc => I, Pos: [234, 244] cc => I, Pos: [234, 244] cc => I, Pos: [240, 252] cc => I, Pos: [240, 252] cc => I, Pos: [251, 256] cc => I, Pos: [251, 256] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [269, 272] cc => I, Pos: [269, 272] cc => I, Pos: [273, 281, 293] ccc => cc, Pos: [274, 295] cc => I, Pos: [274, 295] cc => I, Pos: [275, 286] cc => I, Pos: [275, 286] cc => I, Pos: [278, 287] cc => I, Pos: [278, 287] cc => I, Pos: [282, 291] cc => I, Pos: [282, 291] cc => I, Pos: [288, 300] cc => I, Pos: [288, 300] cc => I, Pos: [298, 306] cc => I, Pos: [298, 306] cc => I, Pos: [307, 316] cc => I, Pos: [307, 316] cc => I, Pos: [310, 321] cc => I, Pos: [310, 321] cc => I, Pos: [327, 335] cc => I, Pos: [327, 335] cc => I, Pos: [329, 342] cc => I, Pos: [329, 342] cc => I, Pos: [330, 338] cc => I, Pos: [330, 338] cc => I, Pos: [333, 340] cc => I, Pos: [333, 340] cc => I, Pos: [334, 349] cc => I, Pos: [334, 349] cc => I, Pos: [337, 344] cc => I, Pos: [337, 344] cc => I, Pos: [340, 345] cc => I, Pos: [340, 345] cc => I, Pos: [341, 357] cc => I, Pos: [341, 357] cc => I, Pos: [343, 348] cc => I, Pos: [343, 348] cc => I, Pos: [345, 353] cc => I, Pos: [345, 353] cc => I, Pos: [350, 355] cc => I, Pos: [350, 355] cc => I]

--------End Timer [Generate Plans]:  0.18748760223388672

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 9] cc => I,
 Pos: [36, 47] cc => I,
 Pos: [10, 23] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [86, 100] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [127, 139] cc => I,
 Pos: [134, 142] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [186, 195] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [190, 193] cc => I,
 Pos: [198, 200] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [214, 222] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [340, 345] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [350, 355] cc => I]
Change: 73, Saving: 74

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 9] cc => I
Apply:  Pos: [36, 47] cc => I
Apply:  Pos: [10, 23] cc => I
Apply:  Pos: [12, 17, 25] ccc => cc
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [34, 45] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 55, 62] ccc => cc
Apply:  Pos: [44, 49] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 88, 99] ccc => cc
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [86, 100] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [96, 106] cc => I
Apply:  Pos: [97, 107] cc => I
Apply:  Pos: [109, 112, 119] ccc => cc
Apply:  Pos: [110, 117] cc => I
Apply:  Pos: [118, 132] cc => I
Apply:  Pos: [127, 139] cc => I
Apply:  Pos: [134, 142] cc => I
Apply:  Pos: [126, 156] cc => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [151, 164] cc => I
Apply:  Pos: [160, 169] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [174, 181, 188] ccc => cc
Apply:  Pos: [186, 195] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [190, 193] cc => I
Apply:  Pos: [198, 200] cc => I
Apply:  Pos: [205, 208, 221] ccc => cc
Apply:  Pos: [214, 222] cc => I
Apply:  Pos: [216, 226] cc => I
Apply:  Pos: [220, 224] cc => I
Apply:  Pos: [228, 235] cc => I
Apply:  Pos: [231, 239] cc => I
Apply:  Pos: [232, 243] cc => I
Apply:  Pos: [234, 244] cc => I
Apply:  Pos: [240, 252] cc => I
Apply:  Pos: [251, 256] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [269, 272] cc => I
Apply:  Pos: [273, 281, 293] ccc => cc
Apply:  Pos: [275, 286] cc => I
Apply:  Pos: [278, 287] cc => I
Apply:  Pos: [282, 291] cc => I
Apply:  Pos: [288, 300] cc => I
Apply:  Pos: [298, 306] cc => I
Apply:  Pos: [307, 316] cc => I
Apply:  Pos: [310, 321] cc => I
Apply:  Pos: [327, 335] cc => I
Apply:  Pos: [329, 342] cc => I
Apply:  Pos: [330, 338] cc => I
Apply:  Pos: [340, 345] cc => I
Apply:  Pos: [334, 349] cc => I
Apply:  Pos: [337, 344] cc => I
Apply:  Pos: [341, 357] cc => I
Apply:  Pos: [343, 348] cc => I
Apply:  Pos: [350, 355] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.015598535537719727

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [12, 15], [16, 1], [9, 17], [12, 5], [11, 4], [18, 10], [14, 8], [18, 10], [15, 19], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [18, 13], [12, 2], [4, 15], [16, 1], [14, 17], [12, 5], [16, 12], [7, 0], [18, 13], [6, 0], [4, 12], [16, 1], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [2, 18], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [15, 19], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [1, 9], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [15, 5], [9, 8], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [5, 10], [4, 12], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [5, 3], [1, 2], [8, 18], [16, 12], [9, 14], [2, 13], [13, 6], [9, 17], [7, 0], [18, 3], [16, 12], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  7.437486171722412

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 51]
[111, 119]
[114, 122]
[128, 143]
[133, 153]
[173, 188]
[201, 213]
[209, 216]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[38, 44, 52]
[206, 208, 215]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[193, 199, 205]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 51]
[111, 119]
[114, 122]
[128, 143]
[133, 153]
[173, 188]
[201, 213]
[209, 216]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.125056743621826

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 44, 52] ccc => cc, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [111, 119] cc => I, Pos: [111, 119] cc => I, Pos: [114, 122] cc => I, Pos: [114, 122] cc => I, Pos: [128, 143] cc => I, Pos: [128, 143] cc => I, Pos: [133, 153] cc => I, Pos: [133, 153] cc => I, Pos: [173, 188] cc => I, Pos: [173, 188] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [201, 213] cc => I, Pos: [201, 213] cc => I, Pos: [206, 208, 215] ccc => cc, Pos: [209, 216] cc => I, Pos: [209, 216] cc => I]

--------End Timer [Generate Plans]:  0.015628337860107422

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 44, 52] ccc => cc,
 Pos: [49, 51] cc => I,
 Pos: [111, 119] cc => I,
 Pos: [114, 122] cc => I,
 Pos: [128, 143] cc => I,
 Pos: [133, 153] cc => I,
 Pos: [173, 188] cc => I,
 Pos: [193, 199, 205] ccc => cc,
 Pos: [201, 213] cc => I,
 Pos: [206, 208, 215] ccc => cc,
 Pos: [209, 216] cc => I]
Change: 11, Saving: 11

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 44, 52] ccc => cc
Apply:  Pos: [49, 51] cc => I
Apply:  Pos: [111, 119] cc => I
Apply:  Pos: [114, 122] cc => I
Apply:  Pos: [128, 143] cc => I
Apply:  Pos: [133, 153] cc => I
Apply:  Pos: [173, 188] cc => I
Apply:  Pos: [193, 199, 205] ccc => cc
Apply:  Pos: [201, 213] cc => I
Apply:  Pos: [206, 208, 215] ccc => cc
Apply:  Pos: [209, 216] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [4, 15], [14, 17], [12, 5], [16, 12], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [3, 10], [4, 12], [2, 8], [7, 6], [16, 1], [8, 18], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  4.140685081481934

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[183, 188, 191]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.7187271118164062

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [183, 188, 191] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [183, 188, 191] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [183, 188, 191] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 2], [12, 15], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [4, 15], [14, 17], [12, 5], [16, 12], [6, 0], [7, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.7187271118164062

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6561851501464844

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [4, 15], [14, 17], [12, 5], [16, 12], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.6561851501464844

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [201] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 402

Reduced: 
 - size: 159 (44.17%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061617851257324

[2, 13], [1, 9], [18, 10], [15, 19], [7, 0], [11, 4], [8, 17], [12, 5], [8, 13], [7, 0], [1, 2], [19, 3], [9, 14], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [3, 10], [6, 0], [12, 5], [9, 17], [11, 16], [1, 2], [18, 13], [9, 14], [8, 13], [1, 2], [7, 0], [12, 5], [3, 10], [11, 16], [14, 17], [5, 18], [6, 0], [1, 12], [11, 4], [15, 19], [2, 13], [17, 7], [19, 3], [5, 10], [9, 14], [8, 13], [16, 12], [6, 0], [2, 18], [11, 4], [17, 7], [16, 12], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [1, 9], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [9, 14], [8, 13], [2, 18], [14, 17], [4, 5], [12, 15], [7, 6], [16, 1], [19, 3], [8, 13], [9, 17], [12, 5], [11, 4], [19, 3], [18, 10], [7, 6], [2, 13], [14, 8], [10, 6], [17, 7], [15, 19], [4, 5], [1, 12], [2, 13], [9, 8], [17, 7], [18, 10], [5, 3], [16, 12], [11, 4], [1, 2], [18, 13], [19, 3], [4, 15], [14, 17], [11, 16], [7, 0], [10, 6], [9, 8], [12, 5], [1, 2], [5, 10], [13, 7], [4, 12], [14, 17], [11, 16], [9, 8], [6, 0], [16, 1], [4, 15], [7, 6], [3, 10], [14, 8], [5, 18], [12, 2], [16, 1], [19, 3], [6, 0], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [11, 16], [18, 13], [1, 2], [7, 6], [12, 15], [5, 10], [19, 3], [8, 17], [11, 4], [3, 10], [14, 17], [15, 5], [7, 6], [18, 13], [1, 2], [9, 8], [11, 4], [13, 7], [1, 9], [14, 17], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [9, 8], [12, 5], [17, 7], [2, 18], [13, 0], [11, 16], [10, 6], [15, 5], [7, 0], [1, 2], [18, 10], [16, 12], [14, 17], [9, 8], [19, 3], [5, 18], [9, 17], [14, 8], [1, 2], [15, 19], [7, 6], [4, 12], [13, 0], [11, 16], [3, 10], [18, 13], [12, 2], [14, 8], [7, 6], [4, 15], [16, 1], [2, 13], [19, 3], [14, 17], [7, 6], [4, 15], [12, 5], [11, 16], [18, 10], [1, 9], [2, 13], [19, 3], [1, 9], [16, 12], [4, 15], [18, 10], [7, 0], [14, 8], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [19, 3], [17, 7], [5, 10], [2, 13], [8, 17], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [11, 4], [2, 18], [12, 15], [13, 6], [9, 14], [3, 10], [16, 1], [17, 7], [11, 4], [2, 13], [16, 1], [9, 8], [12, 15], [11, 4], [5, 3], [7, 6], [14, 17], [16, 2], [8, 13], [4, 12], [18, 10], [5, 3], [15, 19], [17, 7], [1, 9], [16, 2], [6, 0], [4, 5], [9, 17], [8, 13], [18, 10], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [9, 14], [6, 0], [5, 10], [11, 4], [16, 12], [9, 14], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [16, 12], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [6, 0], [12, 15], [4, 5], [6, 0], [16, 1], [14, 8], [18, 3], [2, 13], [17, 7], [15, 19], [5, 10], [7, 0], [1, 9], [11, 4], [13, 6], [14, 17], [16, 12], [18, 3], [15, 19], [12, 2], [3, 10], [17, 7], [11, 4], [6, 0], [16, 1], [5, 18], [14, 8], [19, 3], [8, 17], [7, 6], [4, 15], [12, 2], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [7, 6], [16, 2], [15, 5], [9, 8], [13, 0], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [16, 2], [1, 9], [17, 7], [5, 10], [4, 12], [13, 0], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [15, 19], [5, 3], [17, 7], [10, 6], [1, 2], [8, 18], [16, 12], [11, 4], [15, 19], [9, 14], [19, 3], [10, 6], [2, 13], [16, 12], [9, 8], [17, 7], [5, 18], [19, 3], [16, 12], [13, 6], [9, 17], [5, 18], [11, 4], [1, 2], [7, 0], [18, 3], [16, 12], [15, 19], [1, 2], [13, 0], [9, 8], [7, 6], [4, 5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 17, 25]
[5, 13, 36]
[174, 181, 188]
[273, 281, 293]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[42, 55, 62]
[54, 60, 64]
[80, 88, 99]
[109, 112, 119]
[193, 203, 212]
[205, 208, 221]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.250024795532227

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 9] cc => I, Pos: [4, 9] cc => I, Pos: [5, 13, 36] ccc => cc, Pos: [10, 23] cc => I, Pos: [10, 23] cc => I, Pos: [12, 17, 25] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [23, 27] cc => I, Pos: [23, 27] cc => I, Pos: [34, 45] cc => I, Pos: [34, 45] cc => I, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 55, 62] ccc => cc, Pos: [44, 49] cc => I, Pos: [44, 49] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [54, 60, 64] ccc => cc, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 88, 99] ccc => cc, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [86, 100] cc => I, Pos: [86, 100] cc => I, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [96, 106] cc => I, Pos: [96, 106] cc => I, Pos: [97, 107] cc => I, Pos: [97, 107] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [109, 112, 119] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [118, 132] cc => I, Pos: [118, 132] cc => I, Pos: [121, 127] cc => I, Pos: [121, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [126, 156] cc => I, Pos: [126, 156] cc => I, Pos: [127, 139] cc => I, Pos: [127, 139] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [134, 142] cc => I, Pos: [134, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [151, 164] cc => I, Pos: [151, 164] cc => I, Pos: [160, 169] cc => I, Pos: [160, 169] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [174, 181, 188] ccc => cc, Pos: [178, 198] cc => I, Pos: [178, 198] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 186] cc => I, Pos: [180, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [186, 195] cc => I, Pos: [186, 195] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [190, 193] cc => I, Pos: [190, 193] cc => I, Pos: [192, 204] cc => I, Pos: [192, 204] cc => I, Pos: [193, 203, 212] ccc => cc, Pos: [198, 200] cc => I, Pos: [198, 200] cc => I, Pos: [205, 208, 221] ccc => cc, Pos: [214, 222] cc => I, Pos: [214, 222] cc => I, Pos: [216, 226] cc => I, Pos: [216, 226] cc => I, Pos: [220, 224] cc => I, Pos: [220, 224] cc => I, Pos: [222, 227] cc => I, Pos: [222, 227] cc => I, Pos: [228, 235] cc => I, Pos: [228, 235] cc => I, Pos: [231, 239] cc => I, Pos: [231, 239] cc => I, Pos: [232, 243] cc => I, Pos: [232, 243] cc => I, Pos: [234, 244] cc => I, Pos: [234, 244] cc => I, Pos: [240, 252] cc => I, Pos: [240, 252] cc => I, Pos: [251, 256] cc => I, Pos: [251, 256] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [269, 272] cc => I, Pos: [269, 272] cc => I, Pos: [273, 281, 293] ccc => cc, Pos: [274, 295] cc => I, Pos: [274, 295] cc => I, Pos: [275, 286] cc => I, Pos: [275, 286] cc => I, Pos: [278, 287] cc => I, Pos: [278, 287] cc => I, Pos: [282, 291] cc => I, Pos: [282, 291] cc => I, Pos: [288, 300] cc => I, Pos: [288, 300] cc => I, Pos: [298, 306] cc => I, Pos: [298, 306] cc => I, Pos: [307, 316] cc => I, Pos: [307, 316] cc => I, Pos: [310, 321] cc => I, Pos: [310, 321] cc => I, Pos: [327, 335] cc => I, Pos: [327, 335] cc => I, Pos: [329, 342] cc => I, Pos: [329, 342] cc => I, Pos: [330, 338] cc => I, Pos: [330, 338] cc => I, Pos: [333, 340] cc => I, Pos: [333, 340] cc => I, Pos: [334, 349] cc => I, Pos: [334, 349] cc => I, Pos: [337, 344] cc => I, Pos: [337, 344] cc => I, Pos: [340, 345] cc => I, Pos: [340, 345] cc => I, Pos: [341, 357] cc => I, Pos: [341, 357] cc => I, Pos: [343, 348] cc => I, Pos: [343, 348] cc => I, Pos: [345, 353] cc => I, Pos: [345, 353] cc => I, Pos: [350, 355] cc => I, Pos: [350, 355] cc => I]

--------End Timer [Generate Plans]:  0.18747401237487793

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 9] cc => I,
 Pos: [36, 47] cc => I,
 Pos: [23, 27] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [100, 108] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [121, 127] cc => I,
 Pos: [134, 142] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [179, 185] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [180, 186] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [190, 193] cc => I,
 Pos: [198, 200] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [214, 222] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [274, 295] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [333, 340] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [345, 353] cc => I,
 Pos: [350, 355] cc => I]
Change: 74, Saving: 75

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 9] cc => I
Apply:  Pos: [36, 47] cc => I
Apply:  Pos: [23, 27] cc => I
Apply:  Pos: [12, 17, 25] ccc => cc
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [34, 45] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 55, 62] ccc => cc
Apply:  Pos: [44, 49] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 88, 99] ccc => cc
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [100, 108] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [96, 106] cc => I
Apply:  Pos: [97, 107] cc => I
Apply:  Pos: [109, 112, 119] ccc => cc
Apply:  Pos: [110, 117] cc => I
Apply:  Pos: [118, 132] cc => I
Apply:  Pos: [121, 127] cc => I
Apply:  Pos: [134, 142] cc => I
Apply:  Pos: [126, 156] cc => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [151, 164] cc => I
Apply:  Pos: [160, 169] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [179, 185] cc => I
Apply:  Pos: [174, 181, 188] ccc => cc
Apply:  Pos: [180, 186] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [190, 193] cc => I
Apply:  Pos: [198, 200] cc => I
Apply:  Pos: [205, 208, 221] ccc => cc
Apply:  Pos: [214, 222] cc => I
Apply:  Pos: [216, 226] cc => I
Apply:  Pos: [220, 224] cc => I
Apply:  Pos: [228, 235] cc => I
Apply:  Pos: [231, 239] cc => I
Apply:  Pos: [232, 243] cc => I
Apply:  Pos: [234, 244] cc => I
Apply:  Pos: [240, 252] cc => I
Apply:  Pos: [251, 256] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [274, 295] cc => I
Apply:  Pos: [269, 272] cc => I
Apply:  Pos: [273, 281, 293] ccc => cc
Apply:  Pos: [275, 286] cc => I
Apply:  Pos: [278, 287] cc => I
Apply:  Pos: [282, 291] cc => I
Apply:  Pos: [288, 300] cc => I
Apply:  Pos: [298, 306] cc => I
Apply:  Pos: [307, 316] cc => I
Apply:  Pos: [310, 321] cc => I
Apply:  Pos: [327, 335] cc => I
Apply:  Pos: [329, 342] cc => I
Apply:  Pos: [330, 338] cc => I
Apply:  Pos: [333, 340] cc => I
Apply:  Pos: [334, 349] cc => I
Apply:  Pos: [337, 344] cc => I
Apply:  Pos: [341, 357] cc => I
Apply:  Pos: [343, 348] cc => I
Apply:  Pos: [345, 353] cc => I
Apply:  Pos: [350, 355] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [12, 15], [16, 1], [9, 17], [12, 5], [11, 4], [18, 10], [14, 8], [18, 10], [15, 19], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [18, 13], [12, 2], [16, 1], [14, 17], [12, 5], [16, 12], [4, 15], [7, 0], [18, 13], [6, 0], [4, 12], [16, 1], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [2, 18], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [15, 19], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [1, 9], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [15, 5], [9, 8], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [5, 10], [4, 12], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [5, 3], [1, 2], [8, 18], [9, 14], [2, 13], [13, 6], [9, 17], [7, 0], [18, 3], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  7.4374988079071045

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 51]
[111, 119]
[113, 122]
[128, 143]
[133, 153]
[174, 188]
[201, 212]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[38, 44, 52]
[206, 208, 214]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[193, 199, 205]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 51]
[111, 119]
[113, 122]
[128, 143]
[133, 153]
[174, 188]
[201, 212]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.078113079071045

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [38, 44, 52] ccc => cc, Pos: [49, 51] cc => I, Pos: [49, 51] cc => I, Pos: [111, 119] cc => I, Pos: [111, 119] cc => I, Pos: [113, 122] cc => I, Pos: [113, 122] cc => I, Pos: [128, 143] cc => I, Pos: [128, 143] cc => I, Pos: [133, 153] cc => I, Pos: [133, 153] cc => I, Pos: [174, 188] cc => I, Pos: [174, 188] cc => I, Pos: [193, 199, 205] ccc => cc, Pos: [201, 212] cc => I, Pos: [201, 212] cc => I, Pos: [206, 208, 214] ccc => cc]

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [38, 44, 52] ccc => cc,
 Pos: [49, 51] cc => I,
 Pos: [111, 119] cc => I,
 Pos: [113, 122] cc => I,
 Pos: [128, 143] cc => I,
 Pos: [133, 153] cc => I,
 Pos: [174, 188] cc => I,
 Pos: [193, 199, 205] ccc => cc,
 Pos: [201, 212] cc => I,
 Pos: [206, 208, 214] ccc => cc]
Change: 10, Saving: 10

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [38, 44, 52] ccc => cc
Apply:  Pos: [49, 51] cc => I
Apply:  Pos: [111, 119] cc => I
Apply:  Pos: [113, 122] cc => I
Apply:  Pos: [128, 143] cc => I
Apply:  Pos: [133, 153] cc => I
Apply:  Pos: [174, 188] cc => I
Apply:  Pos: [193, 199, 205] ccc => cc
Apply:  Pos: [201, 212] cc => I
Apply:  Pos: [206, 208, 214] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.01562356948852539

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [14, 17], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [3, 10], [4, 12], [2, 8], [7, 6], [16, 1], [8, 18], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  4.109361171722412

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[183, 188, 191]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6874477863311768

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [183, 188, 191] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [183, 188, 191] ccc => cc]
Change: 1, Saving: 1

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [183, 188, 191] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 2], [12, 15], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [14, 17], [12, 5], [16, 12], [4, 15], [6, 0], [7, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.6874477863311768

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6875905990600586

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 4], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [9, 8], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [7, 6], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [14, 17], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.6875905990600586

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [201] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 402

Reduced: 
 - size: 159 (44.17%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061522483825684

[2, 13], [1, 9], [18, 10], [15, 19], [7, 0], [11, 4], [8, 17], [12, 5], [8, 13], [7, 0], [1, 2], [19, 3], [9, 14], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [3, 10], [6, 0], [12, 5], [9, 17], [11, 16], [1, 2], [18, 13], [9, 14], [8, 13], [1, 2], [7, 0], [12, 5], [3, 10], [11, 16], [14, 17], [5, 18], [6, 0], [1, 12], [11, 4], [15, 19], [2, 13], [17, 7], [19, 3], [5, 10], [9, 14], [8, 13], [16, 12], [6, 0], [2, 18], [11, 4], [17, 7], [16, 12], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [1, 9], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [9, 14], [8, 13], [2, 18], [14, 17], [4, 5], [12, 15], [7, 6], [16, 1], [19, 3], [8, 13], [9, 17], [12, 5], [11, 4], [19, 3], [18, 10], [7, 6], [2, 13], [14, 8], [10, 6], [17, 7], [15, 19], [4, 5], [1, 12], [2, 13], [9, 8], [17, 7], [18, 10], [5, 3], [16, 12], [11, 4], [1, 2], [18, 13], [19, 3], [4, 15], [14, 17], [11, 16], [7, 0], [10, 6], [9, 8], [12, 5], [1, 2], [5, 10], [13, 7], [4, 12], [14, 17], [11, 16], [9, 8], [6, 0], [16, 1], [4, 15], [7, 6], [3, 10], [14, 8], [5, 18], [12, 2], [16, 1], [19, 3], [6, 0], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [11, 16], [18, 13], [1, 2], [7, 6], [12, 15], [5, 10], [19, 3], [8, 17], [11, 4], [3, 10], [14, 17], [15, 5], [7, 6], [18, 13], [1, 2], [9, 8], [11, 4], [13, 7], [1, 9], [14, 17], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [9, 8], [12, 5], [17, 7], [2, 18], [13, 0], [11, 16], [10, 6], [15, 5], [7, 0], [1, 2], [18, 10], [16, 12], [14, 17], [9, 8], [19, 3], [5, 18], [9, 17], [14, 8], [1, 2], [15, 19], [7, 6], [4, 12], [13, 0], [11, 16], [3, 10], [18, 13], [12, 2], [14, 8], [7, 6], [4, 15], [16, 1], [2, 13], [19, 3], [14, 17], [7, 6], [4, 15], [12, 5], [11, 16], [18, 10], [1, 9], [2, 13], [19, 3], [1, 9], [16, 12], [4, 15], [18, 10], [7, 0], [14, 8], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [19, 3], [17, 7], [5, 10], [2, 13], [8, 17], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [11, 4], [2, 18], [12, 15], [13, 6], [9, 14], [3, 10], [16, 1], [17, 7], [11, 4], [2, 13], [16, 1], [9, 8], [12, 15], [11, 4], [5, 3], [7, 6], [14, 17], [16, 2], [8, 13], [4, 12], [18, 10], [5, 3], [15, 19], [17, 7], [1, 9], [16, 2], [6, 0], [4, 5], [9, 17], [8, 13], [18, 10], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [9, 14], [6, 0], [5, 10], [11, 4], [16, 12], [9, 14], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [16, 12], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [6, 0], [12, 15], [4, 5], [6, 0], [16, 1], [14, 8], [18, 3], [2, 13], [17, 7], [15, 19], [5, 10], [7, 0], [1, 9], [11, 4], [13, 6], [14, 17], [16, 12], [18, 3], [15, 19], [12, 2], [3, 10], [17, 7], [11, 4], [6, 0], [16, 1], [5, 18], [14, 8], [19, 3], [8, 17], [7, 6], [4, 15], [12, 2], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [7, 6], [16, 2], [15, 5], [9, 8], [13, 0], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [16, 2], [1, 9], [17, 7], [5, 10], [4, 12], [13, 0], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [15, 19], [5, 3], [17, 7], [10, 6], [1, 2], [8, 18], [16, 12], [11, 4], [15, 19], [9, 14], [19, 3], [10, 6], [2, 13], [16, 12], [9, 8], [17, 7], [5, 18], [19, 3], [16, 12], [13, 6], [9, 17], [5, 18], [11, 4], [1, 2], [7, 0], [18, 3], [16, 12], [15, 19], [1, 2], [13, 0], [9, 8], [7, 6], [4, 5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 17, 25]
[5, 13, 36]
[174, 181, 188]
[273, 281, 293]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[42, 55, 62]
[54, 60, 64]
[80, 88, 99]
[109, 112, 119]
[193, 203, 212]
[205, 208, 221]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.234373569488525

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 9] cc => I, Pos: [4, 9] cc => I, Pos: [5, 13, 36] ccc => cc, Pos: [10, 23] cc => I, Pos: [10, 23] cc => I, Pos: [12, 17, 25] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [23, 27] cc => I, Pos: [23, 27] cc => I, Pos: [34, 45] cc => I, Pos: [34, 45] cc => I, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 55, 62] ccc => cc, Pos: [44, 49] cc => I, Pos: [44, 49] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [54, 60, 64] ccc => cc, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 88, 99] ccc => cc, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [86, 100] cc => I, Pos: [86, 100] cc => I, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [96, 106] cc => I, Pos: [96, 106] cc => I, Pos: [97, 107] cc => I, Pos: [97, 107] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [109, 112, 119] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [118, 132] cc => I, Pos: [118, 132] cc => I, Pos: [121, 127] cc => I, Pos: [121, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [126, 156] cc => I, Pos: [126, 156] cc => I, Pos: [127, 139] cc => I, Pos: [127, 139] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [134, 142] cc => I, Pos: [134, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [151, 164] cc => I, Pos: [151, 164] cc => I, Pos: [160, 169] cc => I, Pos: [160, 169] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [174, 181, 188] ccc => cc, Pos: [178, 198] cc => I, Pos: [178, 198] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 186] cc => I, Pos: [180, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [186, 195] cc => I, Pos: [186, 195] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [190, 193] cc => I, Pos: [190, 193] cc => I, Pos: [192, 204] cc => I, Pos: [192, 204] cc => I, Pos: [193, 203, 212] ccc => cc, Pos: [198, 200] cc => I, Pos: [198, 200] cc => I, Pos: [205, 208, 221] ccc => cc, Pos: [214, 222] cc => I, Pos: [214, 222] cc => I, Pos: [216, 226] cc => I, Pos: [216, 226] cc => I, Pos: [220, 224] cc => I, Pos: [220, 224] cc => I, Pos: [222, 227] cc => I, Pos: [222, 227] cc => I, Pos: [228, 235] cc => I, Pos: [228, 235] cc => I, Pos: [231, 239] cc => I, Pos: [231, 239] cc => I, Pos: [232, 243] cc => I, Pos: [232, 243] cc => I, Pos: [234, 244] cc => I, Pos: [234, 244] cc => I, Pos: [240, 252] cc => I, Pos: [240, 252] cc => I, Pos: [251, 256] cc => I, Pos: [251, 256] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [269, 272] cc => I, Pos: [269, 272] cc => I, Pos: [273, 281, 293] ccc => cc, Pos: [274, 295] cc => I, Pos: [274, 295] cc => I, Pos: [275, 286] cc => I, Pos: [275, 286] cc => I, Pos: [278, 287] cc => I, Pos: [278, 287] cc => I, Pos: [282, 291] cc => I, Pos: [282, 291] cc => I, Pos: [288, 300] cc => I, Pos: [288, 300] cc => I, Pos: [298, 306] cc => I, Pos: [298, 306] cc => I, Pos: [307, 316] cc => I, Pos: [307, 316] cc => I, Pos: [310, 321] cc => I, Pos: [310, 321] cc => I, Pos: [327, 335] cc => I, Pos: [327, 335] cc => I, Pos: [329, 342] cc => I, Pos: [329, 342] cc => I, Pos: [330, 338] cc => I, Pos: [330, 338] cc => I, Pos: [333, 340] cc => I, Pos: [333, 340] cc => I, Pos: [334, 349] cc => I, Pos: [334, 349] cc => I, Pos: [337, 344] cc => I, Pos: [337, 344] cc => I, Pos: [340, 345] cc => I, Pos: [340, 345] cc => I, Pos: [341, 357] cc => I, Pos: [341, 357] cc => I, Pos: [343, 348] cc => I, Pos: [343, 348] cc => I, Pos: [345, 353] cc => I, Pos: [345, 353] cc => I, Pos: [350, 355] cc => I, Pos: [350, 355] cc => I]

--------End Timer [Generate Plans]:  0.18752622604370117

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 9] cc => I,
 Pos: [5, 13, 36] ccc => cc,
 Pos: [23, 27] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [54, 60, 64] ccc => cc,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [86, 100] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [127, 139] cc => I,
 Pos: [134, 142] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [178, 198] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [180, 186] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [192, 204] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [190, 193] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [214, 222] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [340, 345] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [350, 355] cc => I]
Change: 72, Saving: 74

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 9] cc => I
Apply:  Pos: [5, 13, 36] ccc => cc
Apply:  Pos: [23, 27] cc => I
Apply:  Pos: [12, 17, 25] ccc => cc
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [34, 45] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 55, 62] ccc => cc
Apply:  Pos: [44, 49] cc => I
Apply:  Pos: [54, 60, 64] ccc => cc
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 88, 99] ccc => cc
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [86, 100] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [96, 106] cc => I
Apply:  Pos: [97, 107] cc => I
Apply:  Pos: [109, 112, 119] ccc => cc
Apply:  Pos: [110, 117] cc => I
Apply:  Pos: [118, 132] cc => I
Apply:  Pos: [127, 139] cc => I
Apply:  Pos: [134, 142] cc => I
Apply:  Pos: [126, 156] cc => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [151, 164] cc => I
Apply:  Pos: [160, 169] cc => I
Apply:  Pos: [178, 198] cc => I
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [174, 181, 188] ccc => cc
Apply:  Pos: [180, 186] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [192, 204] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [190, 193] cc => I
Apply:  Pos: [205, 208, 221] ccc => cc
Apply:  Pos: [214, 222] cc => I
Apply:  Pos: [216, 226] cc => I
Apply:  Pos: [220, 224] cc => I
Apply:  Pos: [228, 235] cc => I
Apply:  Pos: [231, 239] cc => I
Apply:  Pos: [232, 243] cc => I
Apply:  Pos: [234, 244] cc => I
Apply:  Pos: [240, 252] cc => I
Apply:  Pos: [251, 256] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [269, 272] cc => I
Apply:  Pos: [273, 281, 293] ccc => cc
Apply:  Pos: [275, 286] cc => I
Apply:  Pos: [278, 287] cc => I
Apply:  Pos: [282, 291] cc => I
Apply:  Pos: [288, 300] cc => I
Apply:  Pos: [298, 306] cc => I
Apply:  Pos: [307, 316] cc => I
Apply:  Pos: [310, 321] cc => I
Apply:  Pos: [327, 335] cc => I
Apply:  Pos: [329, 342] cc => I
Apply:  Pos: [330, 338] cc => I
Apply:  Pos: [340, 345] cc => I
Apply:  Pos: [334, 349] cc => I
Apply:  Pos: [337, 344] cc => I
Apply:  Pos: [341, 357] cc => I
Apply:  Pos: [343, 348] cc => I
Apply:  Pos: [350, 355] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [2, 18], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [12, 2], [9, 14], [8, 17], [13, 6], [11, 16], [15, 19], [2, 18], [3, 10], [14, 17], [4, 5], [12, 15], [16, 1], [9, 17], [12, 5], [11, 4], [18, 10], [14, 8], [18, 10], [15, 19], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [14, 8], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [18, 13], [12, 2], [16, 1], [19, 3], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [8, 17], [5, 10], [2, 13], [17, 7], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [2, 18], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [15, 19], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [1, 9], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [15, 5], [9, 8], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [5, 10], [4, 12], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [5, 3], [1, 2], [8, 18], [16, 12], [9, 14], [2, 13], [13, 6], [9, 17], [7, 0], [18, 3], [16, 12], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  7.421899795532227

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[51, 53]
[113, 123]
[107, 124]
[115, 127]
[132, 147]
[137, 157]
[177, 192]
[205, 217]
[213, 220]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[30, 36, 42]
[41, 46, 54]
[210, 212, 219]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[197, 203, 209]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[51, 53]
[113, 123]
[107, 124]
[115, 127]
[132, 147]
[137, 157]
[177, 192]
[205, 217]
[213, 220]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.203089475631714

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [30, 36, 42] ccc => cc, Pos: [41, 46, 54] ccc => cc, Pos: [51, 53] cc => I, Pos: [51, 53] cc => I, Pos: [107, 124] cc => I, Pos: [107, 124] cc => I, Pos: [113, 123] cc => I, Pos: [113, 123] cc => I, Pos: [115, 127] cc => I, Pos: [115, 127] cc => I, Pos: [132, 147] cc => I, Pos: [132, 147] cc => I, Pos: [137, 157] cc => I, Pos: [137, 157] cc => I, Pos: [177, 192] cc => I, Pos: [177, 192] cc => I, Pos: [197, 203, 209] ccc => cc, Pos: [205, 217] cc => I, Pos: [205, 217] cc => I, Pos: [210, 212, 219] ccc => cc, Pos: [213, 220] cc => I, Pos: [213, 220] cc => I]

--------End Timer [Generate Plans]:  0.031248092651367188

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [30, 36, 42] ccc => cc,
 Pos: [41, 46, 54] ccc => cc,
 Pos: [51, 53] cc => I,
 Pos: [107, 124] cc => I,
 Pos: [113, 123] cc => I,
 Pos: [115, 127] cc => I,
 Pos: [132, 147] cc => I,
 Pos: [137, 157] cc => I,
 Pos: [177, 192] cc => I,
 Pos: [197, 203, 209] ccc => cc,
 Pos: [205, 217] cc => I,
 Pos: [210, 212, 219] ccc => cc,
 Pos: [213, 220] cc => I]
Change: 13, Saving: 13

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [30, 36, 42] ccc => cc
Apply:  Pos: [41, 46, 54] ccc => cc
Apply:  Pos: [51, 53] cc => I
Apply:  Pos: [107, 124] cc => I
Apply:  Pos: [113, 123] cc => I
Apply:  Pos: [115, 127] cc => I
Apply:  Pos: [132, 147] cc => I
Apply:  Pos: [137, 157] cc => I
Apply:  Pos: [177, 192] cc => I
Apply:  Pos: [197, 203, 209] ccc => cc
Apply:  Pos: [205, 217] cc => I
Apply:  Pos: [210, 212, 219] ccc => cc
Apply:  Pos: [213, 220] cc => I
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [12, 2], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [3, 10], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [19, 3], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [3, 10], [4, 12], [2, 8], [7, 6], [16, 1], [8, 18], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  4.234337568283081

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[184, 189, 192]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.749993085861206

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [184, 189, 192] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [184, 189, 192] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [184, 189, 192] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [12, 2], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [3, 10], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [19, 3], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [6, 0], [7, 0], [4, 12], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.749993085861206

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.687319278717041

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [1, 2], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [12, 2], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [3, 10], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [9, 8], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [19, 3], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.7029435634613037

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [202] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 404

Reduced: 
 - size: 158 (43.89%)
 - depth: 1 (2.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.15623998641967773

[2, 13], [1, 9], [18, 10], [15, 19], [7, 0], [11, 4], [8, 17], [12, 5], [8, 13], [7, 0], [1, 2], [19, 3], [9, 14], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [3, 10], [6, 0], [12, 5], [9, 17], [11, 16], [1, 2], [18, 13], [9, 14], [8, 13], [1, 2], [7, 0], [12, 5], [3, 10], [11, 16], [14, 17], [5, 18], [6, 0], [1, 12], [11, 4], [15, 19], [2, 13], [17, 7], [19, 3], [5, 10], [9, 14], [8, 13], [16, 12], [6, 0], [2, 18], [11, 4], [17, 7], [16, 12], [13, 0], [10, 6], [4, 15], [5, 3], [2, 18], [1, 9], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [9, 14], [8, 13], [2, 18], [14, 17], [4, 5], [12, 15], [7, 6], [16, 1], [19, 3], [8, 13], [9, 17], [12, 5], [11, 4], [19, 3], [18, 10], [7, 6], [2, 13], [14, 8], [10, 6], [17, 7], [15, 19], [4, 5], [1, 12], [2, 13], [9, 8], [17, 7], [18, 10], [5, 3], [16, 12], [11, 4], [1, 2], [18, 13], [19, 3], [4, 15], [14, 17], [11, 16], [7, 0], [10, 6], [9, 8], [12, 5], [1, 2], [5, 10], [13, 7], [4, 12], [14, 17], [11, 16], [9, 8], [6, 0], [16, 1], [4, 15], [7, 6], [3, 10], [14, 8], [5, 18], [12, 2], [16, 1], [19, 3], [6, 0], [15, 5], [18, 13], [17, 7], [2, 8], [11, 4], [9, 14], [11, 16], [18, 13], [1, 2], [7, 6], [12, 15], [5, 10], [19, 3], [8, 17], [11, 4], [3, 10], [14, 17], [15, 5], [7, 6], [18, 13], [1, 2], [9, 8], [11, 4], [13, 7], [1, 9], [14, 17], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [9, 8], [12, 5], [17, 7], [2, 18], [13, 0], [11, 16], [10, 6], [15, 5], [7, 0], [1, 2], [18, 10], [16, 12], [14, 17], [9, 8], [19, 3], [5, 18], [9, 17], [14, 8], [1, 2], [15, 19], [7, 6], [4, 12], [13, 0], [11, 16], [3, 10], [18, 13], [12, 2], [14, 8], [7, 6], [4, 15], [16, 1], [2, 13], [19, 3], [14, 17], [7, 6], [4, 15], [12, 5], [11, 16], [18, 10], [1, 9], [2, 13], [19, 3], [1, 9], [16, 12], [4, 15], [18, 10], [7, 0], [14, 8], [18, 13], [14, 8], [6, 0], [4, 12], [16, 1], [19, 3], [17, 7], [5, 10], [2, 13], [8, 17], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [11, 4], [2, 18], [12, 15], [13, 6], [9, 14], [3, 10], [16, 1], [17, 7], [11, 4], [2, 13], [16, 1], [9, 8], [12, 15], [11, 4], [5, 3], [7, 6], [14, 17], [16, 2], [8, 13], [4, 12], [18, 10], [5, 3], [15, 19], [17, 7], [1, 9], [16, 2], [6, 0], [4, 5], [9, 17], [8, 13], [18, 10], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [9, 14], [6, 0], [5, 10], [11, 4], [16, 12], [9, 14], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [16, 12], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [14, 8], [6, 0], [12, 15], [4, 5], [6, 0], [16, 1], [14, 8], [18, 3], [2, 13], [17, 7], [15, 19], [5, 10], [7, 0], [1, 9], [11, 4], [13, 6], [14, 17], [16, 12], [18, 3], [15, 19], [12, 2], [3, 10], [17, 7], [11, 4], [6, 0], [16, 1], [5, 18], [14, 8], [19, 3], [8, 17], [7, 6], [4, 15], [12, 2], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [7, 6], [16, 2], [15, 5], [9, 8], [13, 0], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [16, 2], [1, 9], [17, 7], [5, 10], [4, 12], [13, 0], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [15, 19], [5, 3], [17, 7], [10, 6], [1, 2], [8, 18], [16, 12], [11, 4], [15, 19], [9, 14], [19, 3], [10, 6], [2, 13], [16, 12], [9, 8], [17, 7], [5, 18], [19, 3], [16, 12], [13, 6], [9, 17], [5, 18], [11, 4], [1, 2], [7, 0], [18, 3], [16, 12], [15, 19], [1, 2], [13, 0], [9, 8], [7, 6], [4, 5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[12, 17, 25]
[5, 13, 36]
[174, 181, 188]
[273, 281, 293]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[42, 55, 62]
[54, 60, 64]
[80, 88, 99]
[109, 112, 119]
[193, 203, 212]
[205, 208, 221]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 9]
[10, 23]
[23, 27]
[20, 29]
[18, 30]
[22, 31]
[34, 45]
[36, 47]
[39, 48]
[44, 49]
[46, 54]
[63, 71]
[70, 75]
[68, 77]
[78, 85]
[81, 87]
[86, 100]
[92, 102]
[96, 106]
[97, 107]
[100, 108]
[95, 111]
[110, 117]
[121, 127]
[118, 132]
[124, 134]
[129, 138]
[127, 139]
[128, 140]
[134, 142]
[136, 145]
[126, 156]
[151, 164]
[160, 169]
[168, 178]
[171, 179]
[179, 185]
[180, 186]
[182, 191]
[183, 192]
[190, 193]
[186, 195]
[189, 196]
[178, 198]
[198, 200]
[192, 204]
[214, 222]
[220, 224]
[216, 226]
[222, 227]
[228, 235]
[231, 239]
[232, 243]
[234, 244]
[240, 252]
[251, 256]
[255, 262]
[269, 272]
[268, 274]
[275, 286]
[278, 287]
[282, 291]
[274, 295]
[288, 300]
[298, 306]
[307, 316]
[310, 321]
[327, 335]
[330, 338]
[333, 340]
[329, 342]
[337, 344]
[340, 345]
[343, 348]
[334, 349]
[345, 353]
[350, 355]
[341, 357]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  7.234311819076538

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 9] cc => I, Pos: [4, 9] cc => I, Pos: [5, 13, 36] ccc => cc, Pos: [10, 23] cc => I, Pos: [10, 23] cc => I, Pos: [12, 17, 25] ccc => cc, Pos: [18, 30] cc => I, Pos: [18, 30] cc => I, Pos: [20, 29] cc => I, Pos: [20, 29] cc => I, Pos: [22, 31] cc => I, Pos: [22, 31] cc => I, Pos: [23, 27] cc => I, Pos: [23, 27] cc => I, Pos: [34, 45] cc => I, Pos: [34, 45] cc => I, Pos: [36, 47] cc => I, Pos: [36, 47] cc => I, Pos: [39, 48] cc => I, Pos: [39, 48] cc => I, Pos: [42, 55, 62] ccc => cc, Pos: [44, 49] cc => I, Pos: [44, 49] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [54, 60, 64] ccc => cc, Pos: [63, 71] cc => I, Pos: [63, 71] cc => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [70, 75] cc => I, Pos: [70, 75] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 88, 99] ccc => cc, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [86, 100] cc => I, Pos: [86, 100] cc => I, Pos: [92, 102] cc => I, Pos: [92, 102] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [96, 106] cc => I, Pos: [96, 106] cc => I, Pos: [97, 107] cc => I, Pos: [97, 107] cc => I, Pos: [100, 108] cc => I, Pos: [100, 108] cc => I, Pos: [109, 112, 119] ccc => cc, Pos: [110, 117] cc => I, Pos: [110, 117] cc => I, Pos: [118, 132] cc => I, Pos: [118, 132] cc => I, Pos: [121, 127] cc => I, Pos: [121, 127] cc => I, Pos: [124, 134] cc => I, Pos: [124, 134] cc => I, Pos: [126, 156] cc => I, Pos: [126, 156] cc => I, Pos: [127, 139] cc => I, Pos: [127, 139] cc => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [129, 138] cc => I, Pos: [129, 138] cc => I, Pos: [134, 142] cc => I, Pos: [134, 142] cc => I, Pos: [136, 145] cc => I, Pos: [136, 145] cc => I, Pos: [151, 164] cc => I, Pos: [151, 164] cc => I, Pos: [160, 169] cc => I, Pos: [160, 169] cc => I, Pos: [168, 178] cc => I, Pos: [168, 178] cc => I, Pos: [171, 179] cc => I, Pos: [171, 179] cc => I, Pos: [174, 181, 188] ccc => cc, Pos: [178, 198] cc => I, Pos: [178, 198] cc => I, Pos: [179, 185] cc => I, Pos: [179, 185] cc => I, Pos: [180, 186] cc => I, Pos: [180, 186] cc => I, Pos: [182, 191] cc => I, Pos: [182, 191] cc => I, Pos: [183, 192] cc => I, Pos: [183, 192] cc => I, Pos: [186, 195] cc => I, Pos: [186, 195] cc => I, Pos: [189, 196] cc => I, Pos: [189, 196] cc => I, Pos: [190, 193] cc => I, Pos: [190, 193] cc => I, Pos: [192, 204] cc => I, Pos: [192, 204] cc => I, Pos: [193, 203, 212] ccc => cc, Pos: [198, 200] cc => I, Pos: [198, 200] cc => I, Pos: [205, 208, 221] ccc => cc, Pos: [214, 222] cc => I, Pos: [214, 222] cc => I, Pos: [216, 226] cc => I, Pos: [216, 226] cc => I, Pos: [220, 224] cc => I, Pos: [220, 224] cc => I, Pos: [222, 227] cc => I, Pos: [222, 227] cc => I, Pos: [228, 235] cc => I, Pos: [228, 235] cc => I, Pos: [231, 239] cc => I, Pos: [231, 239] cc => I, Pos: [232, 243] cc => I, Pos: [232, 243] cc => I, Pos: [234, 244] cc => I, Pos: [234, 244] cc => I, Pos: [240, 252] cc => I, Pos: [240, 252] cc => I, Pos: [251, 256] cc => I, Pos: [251, 256] cc => I, Pos: [255, 262] cc => I, Pos: [255, 262] cc => I, Pos: [268, 274] cc => I, Pos: [268, 274] cc => I, Pos: [269, 272] cc => I, Pos: [269, 272] cc => I, Pos: [273, 281, 293] ccc => cc, Pos: [274, 295] cc => I, Pos: [274, 295] cc => I, Pos: [275, 286] cc => I, Pos: [275, 286] cc => I, Pos: [278, 287] cc => I, Pos: [278, 287] cc => I, Pos: [282, 291] cc => I, Pos: [282, 291] cc => I, Pos: [288, 300] cc => I, Pos: [288, 300] cc => I, Pos: [298, 306] cc => I, Pos: [298, 306] cc => I, Pos: [307, 316] cc => I, Pos: [307, 316] cc => I, Pos: [310, 321] cc => I, Pos: [310, 321] cc => I, Pos: [327, 335] cc => I, Pos: [327, 335] cc => I, Pos: [329, 342] cc => I, Pos: [329, 342] cc => I, Pos: [330, 338] cc => I, Pos: [330, 338] cc => I, Pos: [333, 340] cc => I, Pos: [333, 340] cc => I, Pos: [334, 349] cc => I, Pos: [334, 349] cc => I, Pos: [337, 344] cc => I, Pos: [337, 344] cc => I, Pos: [340, 345] cc => I, Pos: [340, 345] cc => I, Pos: [341, 357] cc => I, Pos: [341, 357] cc => I, Pos: [343, 348] cc => I, Pos: [343, 348] cc => I, Pos: [345, 353] cc => I, Pos: [345, 353] cc => I, Pos: [350, 355] cc => I, Pos: [350, 355] cc => I]

Plan: 1
[Pos: [4, 9] cc => I,
 Pos: [5, 13, 36] ccc => cc,
 Pos: [10, 23] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [86, 100] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [121, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [180, 186] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [190, 193] cc => I,
 Pos: [198, 200] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [214, 222] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [333, 340] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [345, 353] cc => I,
 Pos: [350, 355] cc => I]
Change: 74, Saving: 75

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.17186355590820312

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 9] cc => I,
 Pos: [5, 13, 36] ccc => cc,
 Pos: [10, 23] cc => I,
 Pos: [12, 17, 25] ccc => cc,
 Pos: [18, 30] cc => I,
 Pos: [20, 29] cc => I,
 Pos: [22, 31] cc => I,
 Pos: [34, 45] cc => I,
 Pos: [39, 48] cc => I,
 Pos: [42, 55, 62] ccc => cc,
 Pos: [44, 49] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [63, 71] cc => I,
 Pos: [68, 77] cc => I,
 Pos: [70, 75] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 88, 99] ccc => cc,
 Pos: [81, 87] cc => I,
 Pos: [86, 100] cc => I,
 Pos: [92, 102] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [96, 106] cc => I,
 Pos: [97, 107] cc => I,
 Pos: [109, 112, 119] ccc => cc,
 Pos: [110, 117] cc => I,
 Pos: [118, 132] cc => I,
 Pos: [121, 127] cc => I,
 Pos: [124, 134] cc => I,
 Pos: [126, 156] cc => I,
 Pos: [128, 140] cc => I,
 Pos: [129, 138] cc => I,
 Pos: [136, 145] cc => I,
 Pos: [151, 164] cc => I,
 Pos: [160, 169] cc => I,
 Pos: [168, 178] cc => I,
 Pos: [171, 179] cc => I,
 Pos: [174, 181, 188] ccc => cc,
 Pos: [180, 186] cc => I,
 Pos: [182, 191] cc => I,
 Pos: [183, 192] cc => I,
 Pos: [189, 196] cc => I,
 Pos: [190, 193] cc => I,
 Pos: [198, 200] cc => I,
 Pos: [205, 208, 221] ccc => cc,
 Pos: [214, 222] cc => I,
 Pos: [216, 226] cc => I,
 Pos: [220, 224] cc => I,
 Pos: [228, 235] cc => I,
 Pos: [231, 239] cc => I,
 Pos: [232, 243] cc => I,
 Pos: [234, 244] cc => I,
 Pos: [240, 252] cc => I,
 Pos: [251, 256] cc => I,
 Pos: [255, 262] cc => I,
 Pos: [268, 274] cc => I,
 Pos: [269, 272] cc => I,
 Pos: [273, 281, 293] ccc => cc,
 Pos: [275, 286] cc => I,
 Pos: [278, 287] cc => I,
 Pos: [282, 291] cc => I,
 Pos: [288, 300] cc => I,
 Pos: [298, 306] cc => I,
 Pos: [307, 316] cc => I,
 Pos: [310, 321] cc => I,
 Pos: [327, 335] cc => I,
 Pos: [329, 342] cc => I,
 Pos: [330, 338] cc => I,
 Pos: [333, 340] cc => I,
 Pos: [334, 349] cc => I,
 Pos: [337, 344] cc => I,
 Pos: [341, 357] cc => I,
 Pos: [343, 348] cc => I,
 Pos: [345, 353] cc => I,
 Pos: [350, 355] cc => I]
Change: 74, Saving: 75

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [4, 9] cc => I
Apply:  Pos: [5, 13, 36] ccc => cc
Apply:  Pos: [10, 23] cc => I
Apply:  Pos: [12, 17, 25] ccc => cc
Apply:  Pos: [18, 30] cc => I
Apply:  Pos: [20, 29] cc => I
Apply:  Pos: [22, 31] cc => I
Apply:  Pos: [34, 45] cc => I
Apply:  Pos: [39, 48] cc => I
Apply:  Pos: [42, 55, 62] ccc => cc
Apply:  Pos: [44, 49] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [63, 71] cc => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [70, 75] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 88, 99] ccc => cc
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [86, 100] cc => I
Apply:  Pos: [92, 102] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [96, 106] cc => I
Apply:  Pos: [97, 107] cc => I
Apply:  Pos: [109, 112, 119] ccc => cc
Apply:  Pos: [110, 117] cc => I
Apply:  Pos: [118, 132] cc => I
Apply:  Pos: [121, 127] cc => I
Apply:  Pos: [124, 134] cc => I
Apply:  Pos: [126, 156] cc => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [129, 138] cc => I
Apply:  Pos: [136, 145] cc => I
Apply:  Pos: [151, 164] cc => I
Apply:  Pos: [160, 169] cc => I
Apply:  Pos: [168, 178] cc => I
Apply:  Pos: [171, 179] cc => I
Apply:  Pos: [174, 181, 188] ccc => cc
Apply:  Pos: [180, 186] cc => I
Apply:  Pos: [182, 191] cc => I
Apply:  Pos: [183, 192] cc => I
Apply:  Pos: [189, 196] cc => I
Apply:  Pos: [190, 193] cc => I
Apply:  Pos: [198, 200] cc => I
Apply:  Pos: [205, 208, 221] ccc => cc
Apply:  Pos: [214, 222] cc => I
Apply:  Pos: [216, 226] cc => I
Apply:  Pos: [220, 224] cc => I
Apply:  Pos: [228, 235] cc => I
Apply:  Pos: [231, 239] cc => I
Apply:  Pos: [232, 243] cc => I
Apply:  Pos: [234, 244] cc => I
Apply:  Pos: [240, 252] cc => I
Apply:  Pos: [251, 256] cc => I
Apply:  Pos: [255, 262] cc => I
Apply:  Pos: [268, 274] cc => I
Apply:  Pos: [269, 272] cc => I
Apply:  Pos: [273, 281, 293] ccc => cc
Apply:  Pos: [275, 286] cc => I
Apply:  Pos: [278, 287] cc => I
Apply:  Pos: [282, 291] cc => I
Apply:  Pos: [288, 300] cc => I
Apply:  Pos: [298, 306] cc => I
Apply:  Pos: [307, 316] cc => I
Apply:  Pos: [310, 321] cc => I
Apply:  Pos: [327, 335] cc => I
Apply:  Pos: [329, 342] cc => I
Apply:  Pos: [330, 338] cc => I
Apply:  Pos: [333, 340] cc => I
Apply:  Pos: [334, 349] cc => I
Apply:  Pos: [337, 344] cc => I
Apply:  Pos: [341, 357] cc => I
Apply:  Pos: [343, 348] cc => I
Apply:  Pos: [345, 353] cc => I
Apply:  Pos: [350, 355] cc => I
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [15, 19], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [12, 15], [16, 1], [9, 17], [12, 5], [11, 4], [18, 10], [14, 8], [18, 10], [15, 19], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [18, 13], [12, 2], [16, 1], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [18, 13], [6, 0], [4, 12], [16, 1], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [15, 19], [5, 18], [10, 6], [1, 9], [16, 12], [2, 18], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [15, 19], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [2, 18], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [1, 9], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [1, 9], [18, 3], [15, 5], [9, 8], [11, 4], [3, 10], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [5, 10], [4, 12], [9, 17], [2, 8], [7, 6], [16, 1], [18, 3], [5, 3], [1, 2], [8, 18], [9, 14], [2, 13], [13, 6], [9, 17], [7, 0], [18, 3], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  7.406175374984741

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[50, 52]
[111, 120]
[113, 123]
[129, 144]
[134, 154]
[174, 189]
[202, 213]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[39, 45, 53]
[207, 209, 215]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[194, 200, 206]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[50, 52]
[111, 120]
[113, 123]
[129, 144]
[134, 154]
[174, 189]
[202, 213]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  4.0781638622283936

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [39, 45, 53] ccc => cc, Pos: [50, 52] cc => I, Pos: [50, 52] cc => I, Pos: [111, 120] cc => I, Pos: [111, 120] cc => I, Pos: [113, 123] cc => I, Pos: [113, 123] cc => I, Pos: [129, 144] cc => I, Pos: [129, 144] cc => I, Pos: [134, 154] cc => I, Pos: [134, 154] cc => I, Pos: [174, 189] cc => I, Pos: [174, 189] cc => I, Pos: [194, 200, 206] ccc => cc, Pos: [202, 213] cc => I, Pos: [202, 213] cc => I, Pos: [207, 209, 215] ccc => cc]

Plan: 1
[Pos: [39, 45, 53] ccc => cc,
 Pos: [50, 52] cc => I,
 Pos: [111, 120] cc => I,
 Pos: [113, 123] cc => I,
 Pos: [129, 144] cc => I,
 Pos: [134, 154] cc => I,
 Pos: [174, 189] cc => I,
 Pos: [194, 200, 206] ccc => cc,
 Pos: [202, 213] cc => I,
 Pos: [207, 209, 215] ccc => cc]
Change: 10, Saving: 11

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [39, 45, 53] ccc => cc,
 Pos: [50, 52] cc => I,
 Pos: [111, 120] cc => I,
 Pos: [113, 123] cc => I,
 Pos: [129, 144] cc => I,
 Pos: [134, 154] cc => I,
 Pos: [174, 189] cc => I,
 Pos: [194, 200, 206] ccc => cc,
 Pos: [202, 213] cc => I,
 Pos: [207, 209, 215] ccc => cc]
Change: 10, Saving: 11

Circuit before: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [39, 45, 53] ccc => cc
Apply:  Pos: [50, 52] cc => I
Apply:  Pos: [111, 120] cc => I
Apply:  Pos: [113, 123] cc => I
Apply:  Pos: [129, 144] cc => I
Apply:  Pos: [134, 154] cc => I
Apply:  Pos: [174, 189] cc => I
Apply:  Pos: [194, 200, 206] ccc => cc
Apply:  Pos: [202, 213] cc => I
Apply:  Pos: [207, 209, 215] ccc => cc
---------------
Circuit after: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [8, 18], [1, 9], [17, 7], [3, 10], [4, 12], [2, 8], [7, 6], [16, 1], [8, 18], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  4.093788146972656

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[184, 189, 192]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.6872079372406006

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [184, 189, 192] ccc => cc]

Plan: 1
[Pos: [184, 189, 192] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [184, 189, 192] ccc => cc]
Change: 1, Saving: 1

Circuit before: ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
---------------
Apply:  Pos: [184, 189, 192] ccc => cc
---------------
Circuit after: cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc

--------End Timer [apply mapping plan]:  0.0

[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [18, 13], [8, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 2], [12, 15], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [6, 0], [7, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.6872079372406006

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  3.65627384185791

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[2, 13], [1, 9], [18, 10], [15, 19], [11, 15], [8, 17], [12, 5], [8, 13], [19, 3], [9, 8], [4, 15], [16, 12], [10, 6], [5, 18], [14, 8], [6, 0], [9, 17], [8, 13], [18, 13], [1, 2], [7, 0], [14, 17], [5, 18], [1, 12], [15, 19], [2, 13], [19, 3], [5, 10], [1, 9], [8, 13], [11, 4], [13, 0], [10, 6], [4, 15], [5, 3], [9, 14], [8, 17], [13, 6], [11, 16], [12, 15], [12, 2], [3, 10], [2, 18], [14, 17], [4, 5], [15, 19], [16, 1], [9, 17], [12, 5], [11, 4], [14, 8], [4, 5], [1, 12], [10, 6], [5, 3], [16, 12], [11, 4], [18, 13], [19, 3], [7, 0], [12, 5], [5, 10], [13, 7], [4, 12], [9, 8], [7, 6], [6, 0], [3, 10], [14, 8], [5, 18], [12, 2], [15, 5], [17, 7], [2, 8], [9, 14], [12, 15], [5, 10], [8, 17], [3, 10], [15, 5], [18, 13], [9, 8], [11, 4], [13, 7], [1, 9], [12, 15], [18, 3], [2, 8], [5, 10], [4, 15], [12, 5], [17, 7], [2, 18], [13, 0], [10, 6], [15, 5], [7, 0], [18, 10], [16, 12], [14, 17], [19, 3], [5, 18], [9, 17], [15, 19], [4, 12], [13, 0], [11, 1], [3, 10], [12, 2], [14, 17], [7, 6], [12, 5], [16, 12], [4, 15], [7, 0], [6, 0], [4, 12], [19, 3], [8, 17], [5, 10], [2, 13], [17, 7], [5, 18], [10, 6], [1, 9], [16, 12], [13, 6], [9, 14], [3, 10], [2, 13], [9, 8], [11, 4], [7, 6], [14, 17], [4, 12], [17, 7], [1, 9], [4, 5], [9, 17], [1, 12], [16, 1], [13, 7], [12, 15], [19, 3], [5, 10], [11, 4], [10, 6], [18, 13], [4, 15], [2, 8], [17, 7], [15, 5], [13, 7], [18, 10], [9, 17], [1, 2], [12, 15], [4, 5], [16, 9], [2, 13], [17, 7], [5, 10], [7, 0], [13, 6], [14, 17], [16, 12], [3, 10], [17, 7], [6, 0], [5, 18], [14, 8], [19, 3], [8, 17], [4, 15], [18, 13], [11, 16], [5, 10], [18, 3], [15, 5], [9, 8], [11, 4], [5, 3], [12, 15], [13, 6], [2, 8], [1, 9], [17, 7], [3, 10], [4, 12], [8, 18], [7, 6], [16, 1], [1, 2], [18, 3], [9, 14], [2, 13], [13, 6], [7, 0], [15, 19], [13, 0], [7, 6], [4, 5], ----End Timer [Execute Mapping]:  3.65627384185791

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [360] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 720


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [202] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx]
 - circuit depth: 44 - (small)
 - circuit cycle: 404

Reduced: 
 - size: 158 (43.89%)
 - depth: 1 (2.22%)

