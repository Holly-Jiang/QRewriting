----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811760902404785

[19], [9, 14], [14], [7], [4], [6], [17], [9, 14], [14], [1], [14], [17], [2], [0, 7], [9, 14], [13], [2], [4], [14, 7], [17, 15], [17], [3], [8, 6], [14], [2], [3], [14], [6], [18], [8], [15], [19], [1], [0, 14], [9], [14, 7], [6, 16], [7], [8, 12], [13, 11], [5], [14, 7], [7], [3], [13], [4], [14, 7], [19, 8], [7], [9], [5], [17], [9], [13], [12, 7], [6, 16], [11], [10], [12, 0], [0], [17], [0], [10], [1, 8], [18, 3], [0], [6], [10], [11, 4], [19], [0, 7], [14], [12, 0], [13], [1], [18], [6, 12], [11, 4], [12, 0], [16, 5], [12], [16], [3], [8, 12], [12], [1], [16, 5], [12], [13, 11], [10], [14], [16, 12], [8, 6], [13, 11], [2], [16, 5], [14], [19], [12], [3, 5], [5], [9], [12], [6, 16], [5], [6], [2], [13, 11], [5], [8], [2], [5], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [3], [12], [8, 16], [3], [19], [15], [8], [6], [11], [3, 16], [3], [11], [17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[2, 7, 8]
[5, 22, 27]
[37, 41, 42]
[42, 46, 48]
[80, 83, 84]
[87, 91, 98]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.23442888259887695

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 31] xx => I, Pos: [0, 31] xx => I, Pos: [2, 7, 8] xcx => c, Pos: [4, 17] xx => I, Pos: [4, 17] xx => I, Pos: [5, 22, 27] xcx => c, Pos: [6, 11] xx => I, Pos: [6, 11] xx => I, Pos: [8, 10] xx => I, Pos: [8, 10] xx => I, Pos: [9, 32] xx => I, Pos: [9, 32] xx => I, Pos: [12, 16] xx => I, Pos: [12, 16] xx => I, Pos: [16, 24] xx => I, Pos: [16, 24] xx => I, Pos: [17, 45] xx => I, Pos: [17, 45] xx => I, Pos: [20, 51] xx => I, Pos: [20, 51] xx => I, Pos: [21, 25] xx => I, Pos: [21, 25] xx => I, Pos: [23, 26] xx => I, Pos: [23, 26] xx => I, Pos: [25, 43] xx => I, Pos: [25, 43] xx => I, Pos: [34, 49] xx => I, Pos: [34, 49] xx => I, Pos: [36, 55] cc => I, Pos: [36, 55] cc => I, Pos: [37, 41, 42] xcx => c, Pos: [40, 50] xx => I, Pos: [40, 50] xx => I, Pos: [42, 46, 48] xcx => c, Pos: [44, 53] xx => I, Pos: [44, 53] xx => I, Pos: [49, 52] xx => I, Pos: [49, 52] xx => I, Pos: [51, 60] xx => I, Pos: [51, 60] xx => I, Pos: [52, 101] xx => I, Pos: [52, 101] xx => I, Pos: [53, 73] xx => I, Pos: [53, 73] xx => I, Pos: [57, 62] xx => I, Pos: [57, 62] xx => I, Pos: [59, 61] xx => I, Pos: [59, 61] xx => I, Pos: [61, 65] xx => I, Pos: [61, 65] xx => I, Pos: [62, 67] xx => I, Pos: [62, 67] xx => I, Pos: [67, 89] xx => I, Pos: [67, 89] xx => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [69, 97] xx => I, Pos: [69, 97] xx => I, Pos: [71, 90] xx => I, Pos: [71, 90] xx => I, Pos: [72, 76, 78] ccc => cc, Pos: [74, 85] xx => I, Pos: [74, 85] xx => I, Pos: [80, 83, 84] xcx => c, Pos: [84, 87] xx => I, Pos: [84, 87] xx => I, Pos: [85, 118] xx => I, Pos: [85, 118] xx => I, Pos: [86, 95] cc => I, Pos: [86, 95] cc => I, Pos: [87, 91, 98] xcx => c, Pos: [88, 93] cc => I, Pos: [88, 93] cc => I, Pos: [90, 96] xx => I, Pos: [90, 96] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [94, 106] xx => I, Pos: [94, 106] xx => I, Pos: [97, 124] xx => I, Pos: [97, 124] xx => I, Pos: [98, 102] xx => I, Pos: [98, 102] xx => I, Pos: [100, 104] xx => I, Pos: [100, 104] xx => I, Pos: [102, 121] xx => I, Pos: [102, 121] xx => I, Pos: [104, 108] xx => I, Pos: [104, 108] xx => I, Pos: [106, 110] xx => I, Pos: [106, 110] xx => I, Pos: [108, 111] xx => I, Pos: [108, 111] xx => I, Pos: [111, 113] xx => I, Pos: [111, 113] xx => I, Pos: [120, 123] xx => I, Pos: [120, 123] xx => I, Pos: [128, 131] xx => I, Pos: [128, 131] xx => I]

Plan: 1
[Pos: [0, 31] xx => I,
 Pos: [2, 7, 8] xcx => c,
 Pos: [4, 17] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [12, 16] xx => I,
 Pos: [20, 51] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [34, 49] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [37, 41, 42] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [44, 53] xx => I,
 Pos: [52, 101] xx => I,
 Pos: [57, 62] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [67, 89] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [69, 97] xx => I,
 Pos: [71, 90] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [74, 85] xx => I,
 Pos: [80, 83, 84] xcx => c,
 Pos: [86, 95] cc => I,
 Pos: [87, 91, 98] xcx => c,
 Pos: [88, 93] cc => I,
 Pos: [94, 106] xx => I,
 Pos: [100, 104] xx => I,
 Pos: [102, 121] xx => I,
 Pos: [108, 111] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 34, Saving: 76

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 31] xx => I,
 Pos: [2, 7, 8] xcx => c,
 Pos: [4, 17] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [12, 16] xx => I,
 Pos: [20, 51] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [34, 49] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [37, 41, 42] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [44, 53] xx => I,
 Pos: [52, 101] xx => I,
 Pos: [57, 62] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [67, 89] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [69, 97] xx => I,
 Pos: [71, 90] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [74, 85] xx => I,
 Pos: [80, 83, 84] xcx => c,
 Pos: [86, 95] cc => I,
 Pos: [87, 91, 98] xcx => c,
 Pos: [88, 93] cc => I,
 Pos: [94, 106] xx => I,
 Pos: [100, 104] xx => I,
 Pos: [102, 121] xx => I,
 Pos: [108, 111] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 34, Saving: 76

Circuit before: xcxxxxxcxxxxxccxxxccxxcxxxxxxxxxxcxccxccxcxxxxccxxxxxxccxxcxxxxccxxxcxcxcxxxccccxxxcxxcxcxxcccxcxxxcxxxcxxxcxxxxcxcxcxxcxxcxxxxxxcxxx
---------------
Apply:  Pos: [0, 31] xx => I
Apply:  Pos: [2, 7, 8] xcx => c
Apply:  Pos: [4, 17] xx => I
Apply:  Pos: [5, 22, 27] xcx => c
Apply:  Pos: [6, 11] xx => I
Apply:  Pos: [9, 32] xx => I
Apply:  Pos: [12, 16] xx => I
Apply:  Pos: [20, 51] xx => I
Apply:  Pos: [21, 25] xx => I
Apply:  Pos: [23, 26] xx => I
Apply:  Pos: [34, 49] xx => I
Apply:  Pos: [36, 55] cc => I
Apply:  Pos: [37, 41, 42] xcx => c
Apply:  Pos: [40, 50] xx => I
Apply:  Pos: [44, 53] xx => I
Apply:  Pos: [52, 101] xx => I
Apply:  Pos: [57, 62] xx => I
Apply:  Pos: [59, 61] xx => I
Apply:  Pos: [67, 89] xx => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [69, 97] xx => I
Apply:  Pos: [71, 90] xx => I
Apply:  Pos: [72, 76, 78] ccc => cc
Apply:  Pos: [74, 85] xx => I
Apply:  Pos: [80, 83, 84] xcx => c
Apply:  Pos: [86, 95] cc => I
Apply:  Pos: [87, 91, 98] xcx => c
Apply:  Pos: [88, 93] cc => I
Apply:  Pos: [94, 106] xx => I
Apply:  Pos: [100, 104] xx => I
Apply:  Pos: [102, 121] xx => I
Apply:  Pos: [108, 111] xx => I
Apply:  Pos: [120, 123] xx => I
Apply:  Pos: [128, 131] xx => I
---------------
Circuit after: ccxcxccxccxxxxcccccxxccxcxcxccxxccxxcccxxccxccxcxxcxcxcxxccxxxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [9, 14], [7], [8, 6], [14], [0, 7], [9, 14], [13], [14, 7], [17, 15], [2], [18], [8], [15], [0, 14], [14, 7], [14, 7], [8, 12], [13, 11], [3], [4], [14, 7], [19, 8], [7], [12, 7], [11], [12, 0], [17], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [8, 6], [14], [3, 5], [6, 16], [6], [13, 11], [8], [2], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [8, 16], [19], [15], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.23442888259887695

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 45]
[11, 56]
[23, 61]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[6, 12, 17]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 45]
[11, 56]
[23, 61]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.10938072204589844

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 12, 17] ccc => cc, Pos: [8, 45] xx => I, Pos: [8, 45] xx => I, Pos: [11, 56] xx => I, Pos: [11, 56] xx => I, Pos: [23, 61] xx => I, Pos: [23, 61] xx => I]

Plan: 1
[Pos: [6, 12, 17] ccc => cc,
 Pos: [8, 45] xx => I,
 Pos: [11, 56] xx => I,
 Pos: [23, 61] xx => I]
Change: 4, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 12, 17] ccc => cc,
 Pos: [8, 45] xx => I,
 Pos: [11, 56] xx => I,
 Pos: [23, 61] xx => I]
Change: 4, Saving: 8

Circuit before: xcxccxccxxxxcccxxccxcxcxccxxccxxcccxxccxccxcxxcxcxcxxccxxxxcxx
---------------
Apply:  Pos: [6, 12, 17] ccc => cc
Apply:  Pos: [8, 45] xx => I
Apply:  Pos: [11, 56] xx => I
Apply:  Pos: [23, 61] xx => I
---------------
Circuit after: xcxccxccxxcccxxcxcxcccxxccxxcccxxccxccxcxcxcxcxxccxxxcx

--------End Timer [apply mapping plan]:  0.0

[7], [8, 6], [14], [0, 7], [9, 14], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [8, 6], [14], [3, 5], [6, 16], [6], [13, 11], [8], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [8, 16], [19], [8], [6], [3, 16], [3], ----End Timer [Execute Mapping]:  0.10938072204589844

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 53]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 53]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09470868110656738

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [49, 53] cc => I, Pos: [49, 53] cc => I]

Plan: 1
[Pos: [49, 53] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [49, 53] cc => I]
Change: 1, Saving: 4

Circuit before: xcxccxccxxcccxxcxcxcccxxccxxcccxxccxccxcxcxcxcxxccxxxcx
---------------
Apply:  Pos: [49, 53] cc => I
---------------
Circuit after: xcxccxccxxcccxxcxcxcccxxccxxcccxxccxccxcxcxcxcxxcxxxx

--------End Timer [apply mapping plan]:  0.0

[7], [8, 6], [14], [0, 7], [9, 14], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [8, 6], [14], [3, 5], [6, 16], [6], [13, 11], [8], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.09470868110656738

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.07795143127441406

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[7], [8, 6], [14], [0, 7], [9, 14], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [8, 6], [14], [3, 5], [6, 16], [6], [13, 11], [8], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.07795143127441406

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-x-x-x-x-x-cx-x-x-x-x-x-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-x-x-x-x-cx-x-cx-cx-x-cx-cx-x-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-cx-x-x-x-x-cx-cx-x-x-x-cx-x-cx-x-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-cx-x-cx-x-x-cx-cx-cx-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-x-cx-x-cx-x-cx-x-x-cx-x-x-cx-x-x-x-x-x-x-cx-x-x-x 
     => total size: [135] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 180


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-x-cx-cx-x-cx-cx-x-x-cx-cx-cx-x-x-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-x-cx-x-cx-x-cx-x-cx-x-x-cx-x-x-x-x 
     => total size: [53] (IBM)
 --------------------
 - qubits_num: 18, using gates: [x,cx]
 - circuit depth: 17 - (small)
 - circuit cycle: 80

Reduced: 
 - size: 82 (60.74%)
 - cycle: 100 (55.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.0625143051147461

[19], [9, 14], [14], [7], [4], [6], [17], [9, 14], [14], [1], [14], [17], [2], [0, 7], [9, 14], [13], [2], [4], [14, 7], [17, 15], [17], [3], [8, 6], [14], [2], [3], [14], [6], [18], [8], [15], [19], [1], [0, 14], [9], [14, 7], [6, 16], [7], [8, 12], [13, 11], [5], [14, 7], [7], [3], [13], [4], [14, 7], [19, 8], [7], [9], [5], [17], [9], [13], [12, 7], [6, 16], [11], [10], [12, 0], [0], [17], [0], [10], [1, 8], [18, 3], [0], [6], [10], [11, 4], [19], [0, 7], [14], [12, 0], [13], [1], [18], [6, 12], [11, 4], [12, 0], [16, 5], [12], [16], [3], [8, 12], [12], [1], [16, 5], [12], [13, 11], [10], [14], [16, 12], [8, 6], [13, 11], [2], [16, 5], [14], [19], [12], [3, 5], [5], [9], [12], [6, 16], [5], [6], [2], [13, 11], [5], [8], [2], [5], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [3], [12], [8, 16], [3], [19], [15], [8], [6], [11], [3, 16], [3], [11], [17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[2, 7, 8]
[5, 22, 27]
[37, 41, 42]
[42, 46, 48]
[80, 83, 84]
[87, 91, 98]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.2347850799560547

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 31] xx => I, Pos: [0, 31] xx => I, Pos: [2, 7, 8] xcx => c, Pos: [4, 17] xx => I, Pos: [4, 17] xx => I, Pos: [5, 22, 27] xcx => c, Pos: [6, 11] xx => I, Pos: [6, 11] xx => I, Pos: [8, 10] xx => I, Pos: [8, 10] xx => I, Pos: [9, 32] xx => I, Pos: [9, 32] xx => I, Pos: [12, 16] xx => I, Pos: [12, 16] xx => I, Pos: [16, 24] xx => I, Pos: [16, 24] xx => I, Pos: [17, 45] xx => I, Pos: [17, 45] xx => I, Pos: [20, 51] xx => I, Pos: [20, 51] xx => I, Pos: [21, 25] xx => I, Pos: [21, 25] xx => I, Pos: [23, 26] xx => I, Pos: [23, 26] xx => I, Pos: [25, 43] xx => I, Pos: [25, 43] xx => I, Pos: [34, 49] xx => I, Pos: [34, 49] xx => I, Pos: [36, 55] cc => I, Pos: [36, 55] cc => I, Pos: [37, 41, 42] xcx => c, Pos: [40, 50] xx => I, Pos: [40, 50] xx => I, Pos: [42, 46, 48] xcx => c, Pos: [44, 53] xx => I, Pos: [44, 53] xx => I, Pos: [49, 52] xx => I, Pos: [49, 52] xx => I, Pos: [51, 60] xx => I, Pos: [51, 60] xx => I, Pos: [52, 101] xx => I, Pos: [52, 101] xx => I, Pos: [53, 73] xx => I, Pos: [53, 73] xx => I, Pos: [57, 62] xx => I, Pos: [57, 62] xx => I, Pos: [59, 61] xx => I, Pos: [59, 61] xx => I, Pos: [61, 65] xx => I, Pos: [61, 65] xx => I, Pos: [62, 67] xx => I, Pos: [62, 67] xx => I, Pos: [67, 89] xx => I, Pos: [67, 89] xx => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [69, 97] xx => I, Pos: [69, 97] xx => I, Pos: [71, 90] xx => I, Pos: [71, 90] xx => I, Pos: [72, 76, 78] ccc => cc, Pos: [74, 85] xx => I, Pos: [74, 85] xx => I, Pos: [80, 83, 84] xcx => c, Pos: [84, 87] xx => I, Pos: [84, 87] xx => I, Pos: [85, 118] xx => I, Pos: [85, 118] xx => I, Pos: [86, 95] cc => I, Pos: [86, 95] cc => I, Pos: [87, 91, 98] xcx => c, Pos: [88, 93] cc => I, Pos: [88, 93] cc => I, Pos: [90, 96] xx => I, Pos: [90, 96] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [94, 106] xx => I, Pos: [94, 106] xx => I, Pos: [97, 124] xx => I, Pos: [97, 124] xx => I, Pos: [98, 102] xx => I, Pos: [98, 102] xx => I, Pos: [100, 104] xx => I, Pos: [100, 104] xx => I, Pos: [102, 121] xx => I, Pos: [102, 121] xx => I, Pos: [104, 108] xx => I, Pos: [104, 108] xx => I, Pos: [106, 110] xx => I, Pos: [106, 110] xx => I, Pos: [108, 111] xx => I, Pos: [108, 111] xx => I, Pos: [111, 113] xx => I, Pos: [111, 113] xx => I, Pos: [120, 123] xx => I, Pos: [120, 123] xx => I, Pos: [128, 131] xx => I, Pos: [128, 131] xx => I]

Plan: 1
[Pos: [0, 31] xx => I,
 Pos: [2, 7, 8] xcx => c,
 Pos: [4, 17] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [12, 16] xx => I,
 Pos: [20, 51] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [34, 49] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [37, 41, 42] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [44, 53] xx => I,
 Pos: [52, 101] xx => I,
 Pos: [57, 62] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [67, 89] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [69, 97] xx => I,
 Pos: [71, 90] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [74, 85] xx => I,
 Pos: [80, 83, 84] xcx => c,
 Pos: [86, 95] cc => I,
 Pos: [87, 91, 98] xcx => c,
 Pos: [88, 93] cc => I,
 Pos: [94, 106] xx => I,
 Pos: [100, 104] xx => I,
 Pos: [102, 121] xx => I,
 Pos: [108, 111] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 34, Saving: 33

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.07780051231384277

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 31] xx => I,
 Pos: [2, 7, 8] xcx => c,
 Pos: [4, 17] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [12, 16] xx => I,
 Pos: [20, 51] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [34, 49] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [37, 41, 42] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [44, 53] xx => I,
 Pos: [52, 101] xx => I,
 Pos: [57, 62] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [67, 89] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [69, 97] xx => I,
 Pos: [71, 90] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [74, 85] xx => I,
 Pos: [80, 83, 84] xcx => c,
 Pos: [86, 95] cc => I,
 Pos: [87, 91, 98] xcx => c,
 Pos: [88, 93] cc => I,
 Pos: [94, 106] xx => I,
 Pos: [100, 104] xx => I,
 Pos: [102, 121] xx => I,
 Pos: [108, 111] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 34, Saving: 33

Circuit before: xcxxxxxcxxxxxccxxxccxxcxxxxxxxxxxcxccxccxcxxxxccxxxxxxccxxcxxxxccxxxcxcxcxxxccccxxxcxxcxcxxcccxcxxxcxxxcxxxcxxxxcxcxcxxcxxcxxxxxxcxxx
---------------
Apply:  Pos: [0, 31] xx => I
Apply:  Pos: [2, 7, 8] xcx => c
Apply:  Pos: [4, 17] xx => I
Apply:  Pos: [5, 22, 27] xcx => c
Apply:  Pos: [6, 11] xx => I
Apply:  Pos: [9, 32] xx => I
Apply:  Pos: [12, 16] xx => I
Apply:  Pos: [20, 51] xx => I
Apply:  Pos: [21, 25] xx => I
Apply:  Pos: [23, 26] xx => I
Apply:  Pos: [34, 49] xx => I
Apply:  Pos: [36, 55] cc => I
Apply:  Pos: [37, 41, 42] xcx => c
Apply:  Pos: [40, 50] xx => I
Apply:  Pos: [44, 53] xx => I
Apply:  Pos: [52, 101] xx => I
Apply:  Pos: [57, 62] xx => I
Apply:  Pos: [59, 61] xx => I
Apply:  Pos: [67, 89] xx => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [69, 97] xx => I
Apply:  Pos: [71, 90] xx => I
Apply:  Pos: [72, 76, 78] ccc => cc
Apply:  Pos: [74, 85] xx => I
Apply:  Pos: [80, 83, 84] xcx => c
Apply:  Pos: [86, 95] cc => I
Apply:  Pos: [87, 91, 98] xcx => c
Apply:  Pos: [88, 93] cc => I
Apply:  Pos: [94, 106] xx => I
Apply:  Pos: [100, 104] xx => I
Apply:  Pos: [102, 121] xx => I
Apply:  Pos: [108, 111] xx => I
Apply:  Pos: [120, 123] xx => I
Apply:  Pos: [128, 131] xx => I
---------------
Circuit after: ccxcxccxccxxxxcccccxxccxcxcxccxxccxxcccxxccxccxcxxcxcxcxxccxxxxcxx

--------End Timer [apply mapping plan]:  0.01562809944152832

[9, 14], [9, 14], [7], [8, 6], [14], [0, 7], [9, 14], [13], [14, 7], [17, 15], [2], [18], [8], [15], [0, 14], [14, 7], [14, 7], [8, 12], [13, 11], [3], [4], [14, 7], [19, 8], [7], [12, 7], [11], [12, 0], [17], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [8, 6], [14], [3, 5], [6, 16], [6], [13, 11], [8], [2], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [8, 16], [19], [15], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.3282136917114258

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 45]
[11, 56]
[23, 61]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[6, 12, 17]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 45]
[11, 56]
[23, 61]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.10936713218688965

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 12, 17] ccc => cc, Pos: [8, 45] xx => I, Pos: [8, 45] xx => I, Pos: [11, 56] xx => I, Pos: [11, 56] xx => I, Pos: [23, 61] xx => I, Pos: [23, 61] xx => I]

Plan: 1
[Pos: [6, 12, 17] ccc => cc,
 Pos: [8, 45] xx => I,
 Pos: [11, 56] xx => I,
 Pos: [23, 61] xx => I]
Change: 4, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 12, 17] ccc => cc,
 Pos: [8, 45] xx => I,
 Pos: [11, 56] xx => I,
 Pos: [23, 61] xx => I]
Change: 4, Saving: 4

Circuit before: xcxccxccxxxxcccxxccxcxcxccxxccxxcccxxccxccxcxxcxcxcxxccxxxxcxx
---------------
Apply:  Pos: [6, 12, 17] ccc => cc
Apply:  Pos: [8, 45] xx => I
Apply:  Pos: [11, 56] xx => I
Apply:  Pos: [23, 61] xx => I
---------------
Circuit after: xcxccxccxxcccxxcxcxcccxxccxxcccxxccxccxcxcxcxcxxccxxxcx

--------End Timer [apply mapping plan]:  0.0

[7], [8, 6], [14], [0, 7], [9, 14], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [8, 6], [14], [3, 5], [6, 16], [6], [13, 11], [8], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [8, 16], [19], [8], [6], [3, 16], [3], ----End Timer [Execute Mapping]:  0.12499189376831055

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 53]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 53]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09375619888305664

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [49, 53] cc => I, Pos: [49, 53] cc => I]

Plan: 1
[Pos: [49, 53] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [49, 53] cc => I]
Change: 1, Saving: 1

Circuit before: xcxccxccxxcccxxcxcxcccxxccxxcccxxccxccxcxcxcxcxxccxxxcx
---------------
Apply:  Pos: [49, 53] cc => I
---------------
Circuit after: xcxccxccxxcccxxcxcxcccxxccxxcccxxccxccxcxcxcxcxxcxxxx

--------End Timer [apply mapping plan]:  0.0

[7], [8, 6], [14], [0, 7], [9, 14], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [8, 6], [14], [3, 5], [6, 16], [6], [13, 11], [8], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.09375619888305664

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.07810544967651367

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[7], [8, 6], [14], [0, 7], [9, 14], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [8, 6], [14], [3, 5], [6, 16], [6], [13, 11], [8], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.07810544967651367

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-x-x-x-x-x-cx-x-x-x-x-x-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-x-x-x-x-cx-x-cx-cx-x-cx-cx-x-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-cx-x-x-x-x-cx-cx-x-x-x-cx-x-cx-x-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-cx-x-cx-x-x-cx-cx-cx-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-x-cx-x-cx-x-cx-x-x-cx-x-x-cx-x-x-x-x-x-x-cx-x-x-x 
     => total size: [135] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 180


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-x-cx-cx-x-cx-cx-x-x-cx-cx-cx-x-x-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-x-cx-x-cx-x-cx-x-cx-x-x-cx-x-x-x-x 
     => total size: [53] (IBM)
 --------------------
 - qubits_num: 18, using gates: [cx,x]
 - circuit depth: 17 - (small)
 - circuit cycle: 80

Reduced: 
 - size: 82 (60.74%)
 - depth: 28 (62.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06247735023498535

[19], [9, 14], [14], [7], [4], [6], [17], [9, 14], [14], [1], [14], [17], [2], [0, 7], [9, 14], [13], [2], [4], [14, 7], [17, 15], [17], [3], [8, 6], [14], [2], [3], [14], [6], [18], [8], [15], [19], [1], [0, 14], [9], [14, 7], [6, 16], [7], [8, 12], [13, 11], [5], [14, 7], [7], [3], [13], [4], [14, 7], [19, 8], [7], [9], [5], [17], [9], [13], [12, 7], [6, 16], [11], [10], [12, 0], [0], [17], [0], [10], [1, 8], [18, 3], [0], [6], [10], [11, 4], [19], [0, 7], [14], [12, 0], [13], [1], [18], [6, 12], [11, 4], [12, 0], [16, 5], [12], [16], [3], [8, 12], [12], [1], [16, 5], [12], [13, 11], [10], [14], [16, 12], [8, 6], [13, 11], [2], [16, 5], [14], [19], [12], [3, 5], [5], [9], [12], [6, 16], [5], [6], [2], [13, 11], [5], [8], [2], [5], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [3], [12], [8, 16], [3], [19], [15], [8], [6], [11], [3, 16], [3], [11], [17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[2, 7, 8]
[5, 22, 27]
[37, 41, 42]
[42, 46, 48]
[80, 83, 84]
[87, 91, 98]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.23219799995422363

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 31] xx => I, Pos: [0, 31] xx => I, Pos: [2, 7, 8] xcx => c, Pos: [4, 17] xx => I, Pos: [4, 17] xx => I, Pos: [5, 22, 27] xcx => c, Pos: [6, 11] xx => I, Pos: [6, 11] xx => I, Pos: [8, 10] xx => I, Pos: [8, 10] xx => I, Pos: [9, 32] xx => I, Pos: [9, 32] xx => I, Pos: [12, 16] xx => I, Pos: [12, 16] xx => I, Pos: [16, 24] xx => I, Pos: [16, 24] xx => I, Pos: [17, 45] xx => I, Pos: [17, 45] xx => I, Pos: [20, 51] xx => I, Pos: [20, 51] xx => I, Pos: [21, 25] xx => I, Pos: [21, 25] xx => I, Pos: [23, 26] xx => I, Pos: [23, 26] xx => I, Pos: [25, 43] xx => I, Pos: [25, 43] xx => I, Pos: [34, 49] xx => I, Pos: [34, 49] xx => I, Pos: [36, 55] cc => I, Pos: [36, 55] cc => I, Pos: [37, 41, 42] xcx => c, Pos: [40, 50] xx => I, Pos: [40, 50] xx => I, Pos: [42, 46, 48] xcx => c, Pos: [44, 53] xx => I, Pos: [44, 53] xx => I, Pos: [49, 52] xx => I, Pos: [49, 52] xx => I, Pos: [51, 60] xx => I, Pos: [51, 60] xx => I, Pos: [52, 101] xx => I, Pos: [52, 101] xx => I, Pos: [53, 73] xx => I, Pos: [53, 73] xx => I, Pos: [57, 62] xx => I, Pos: [57, 62] xx => I, Pos: [59, 61] xx => I, Pos: [59, 61] xx => I, Pos: [61, 65] xx => I, Pos: [61, 65] xx => I, Pos: [62, 67] xx => I, Pos: [62, 67] xx => I, Pos: [67, 89] xx => I, Pos: [67, 89] xx => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [69, 97] xx => I, Pos: [69, 97] xx => I, Pos: [71, 90] xx => I, Pos: [71, 90] xx => I, Pos: [72, 76, 78] ccc => cc, Pos: [74, 85] xx => I, Pos: [74, 85] xx => I, Pos: [80, 83, 84] xcx => c, Pos: [84, 87] xx => I, Pos: [84, 87] xx => I, Pos: [85, 118] xx => I, Pos: [85, 118] xx => I, Pos: [86, 95] cc => I, Pos: [86, 95] cc => I, Pos: [87, 91, 98] xcx => c, Pos: [88, 93] cc => I, Pos: [88, 93] cc => I, Pos: [90, 96] xx => I, Pos: [90, 96] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [94, 106] xx => I, Pos: [94, 106] xx => I, Pos: [97, 124] xx => I, Pos: [97, 124] xx => I, Pos: [98, 102] xx => I, Pos: [98, 102] xx => I, Pos: [100, 104] xx => I, Pos: [100, 104] xx => I, Pos: [102, 121] xx => I, Pos: [102, 121] xx => I, Pos: [104, 108] xx => I, Pos: [104, 108] xx => I, Pos: [106, 110] xx => I, Pos: [106, 110] xx => I, Pos: [108, 111] xx => I, Pos: [108, 111] xx => I, Pos: [111, 113] xx => I, Pos: [111, 113] xx => I, Pos: [120, 123] xx => I, Pos: [120, 123] xx => I, Pos: [128, 131] xx => I, Pos: [128, 131] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 31] xx => I,
 Pos: [8, 10] xx => I,
 Pos: [17, 45] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [16, 24] xx => I,
 Pos: [51, 60] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [34, 49] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [42, 46, 48] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [44, 53] xx => I,
 Pos: [52, 101] xx => I,
 Pos: [57, 62] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [67, 89] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [69, 97] xx => I,
 Pos: [71, 90] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [85, 118] xx => I,
 Pos: [80, 83, 84] xcx => c,
 Pos: [86, 95] cc => I,
 Pos: [87, 91, 98] xcx => c,
 Pos: [93, 107] cc => I,
 Pos: [106, 110] xx => I,
 Pos: [104, 108] xx => I,
 Pos: [102, 121] xx => I,
 Pos: [111, 113] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 34, Saving: 76

Circuit before: xcxxxxxcxxxxxccxxxccxxcxxxxxxxxxxcxccxccxcxxxxccxxxxxxccxxcxxxxccxxxcxcxcxxxccccxxxcxxcxcxxcccxcxxxcxxxcxxxcxxxxcxcxcxxcxxcxxxxxxcxxx
---------------
Apply:  Pos: [0, 31] xx => I
Apply:  Pos: [8, 10] xx => I
Apply:  Pos: [17, 45] xx => I
Apply:  Pos: [5, 22, 27] xcx => c
Apply:  Pos: [6, 11] xx => I
Apply:  Pos: [9, 32] xx => I
Apply:  Pos: [16, 24] xx => I
Apply:  Pos: [51, 60] xx => I
Apply:  Pos: [21, 25] xx => I
Apply:  Pos: [23, 26] xx => I
Apply:  Pos: [34, 49] xx => I
Apply:  Pos: [36, 55] cc => I
Apply:  Pos: [42, 46, 48] xcx => c
Apply:  Pos: [40, 50] xx => I
Apply:  Pos: [44, 53] xx => I
Apply:  Pos: [52, 101] xx => I
Apply:  Pos: [57, 62] xx => I
Apply:  Pos: [59, 61] xx => I
Apply:  Pos: [67, 89] xx => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [69, 97] xx => I
Apply:  Pos: [71, 90] xx => I
Apply:  Pos: [72, 76, 78] ccc => cc
Apply:  Pos: [85, 118] xx => I
Apply:  Pos: [80, 83, 84] xcx => c
Apply:  Pos: [86, 95] cc => I
Apply:  Pos: [87, 91, 98] xcx => c
Apply:  Pos: [93, 107] cc => I
Apply:  Pos: [106, 110] xx => I
Apply:  Pos: [104, 108] xx => I
Apply:  Pos: [102, 121] xx => I
Apply:  Pos: [111, 113] xx => I
Apply:  Pos: [120, 123] xx => I
Apply:  Pos: [128, 131] xx => I
---------------
Circuit after: cxxxccxccxccxxxxccxccccxccxcccxxccxxxcccxxcccxxcxcxxccxcxccxxxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [4], [8, 6], [9, 14], [2], [0, 7], [9, 14], [13], [14, 7], [17, 15], [17], [18], [8], [15], [0, 14], [14, 7], [7], [8, 12], [13, 11], [14, 7], [14, 7], [3], [19, 8], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [1], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [13, 11], [8, 6], [2], [14], [3, 5], [5], [6, 16], [6], [8], [4, 3], [8, 6], [0], [16, 5], [7], [3, 16], [8, 16], [19], [15], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.23219799995422363

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 8]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[6, 43]
[15, 58]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[10, 16, 17]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[6, 43]
[15, 58]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 8]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.12278437614440918

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8] cc => I, Pos: [5, 8] cc => I, Pos: [6, 43] xx => I, Pos: [6, 43] xx => I, Pos: [10, 16, 17] ccc => cc, Pos: [15, 58] xx => I, Pos: [15, 58] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8] cc => I,
 Pos: [6, 43] xx => I,
 Pos: [10, 16, 17] ccc => cc,
 Pos: [15, 58] xx => I]
Change: 4, Saving: 10

Circuit before: cxxxccxccxccxxxxccxccxccxcccxxccxxxcccxxcccxxcxcxxccxcxccxxxxcxx
---------------
Apply:  Pos: [5, 8] cc => I
Apply:  Pos: [6, 43] xx => I
Apply:  Pos: [10, 16, 17] ccc => cc
Apply:  Pos: [15, 58] xx => I
---------------
Circuit after: cxxxccxccxxxcxccxccxcccxxccxxxcccxxcccxcxcxxccxcxccxxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [4], [8, 6], [0, 7], [13], [0, 14], [17, 15], [17], [18], [8], [14, 7], [7], [8, 12], [13, 11], [3], [19, 8], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [1], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [13, 11], [8, 6], [14], [3, 5], [5], [6, 16], [6], [8], [4, 3], [8, 6], [0], [16, 5], [7], [3, 16], [8, 16], [19], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.12278437614440918

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[50, 54]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[9, 56]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[9, 56]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[50, 54]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09375739097595215

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 56] xx => I, Pos: [9, 56] xx => I, Pos: [50, 54] cc => I, Pos: [50, 54] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 56] xx => I, Pos: [50, 54] cc => I]
Change: 2, Saving: 6

Circuit before: cxxxccxccxxxcxccxccxcccxxccxxxcccxxcccxcxcxxccxcxccxxxcxx
---------------
Apply:  Pos: [9, 56] xx => I
Apply:  Pos: [50, 54] cc => I
---------------
Circuit after: cxxxccxccxxcxccxccxcccxxccxxxcccxxcccxcxcxxccxcxcxxxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [4], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [14, 7], [7], [8, 12], [13, 11], [3], [19, 8], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [1], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [13, 11], [8, 6], [14], [3, 5], [5], [6, 16], [6], [8], [4, 3], [8, 6], [0], [16, 5], [7], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.09375739097595215

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.07811927795410156

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cxxxccxccxxcxccxccxcccxxccxxxcccxxcccxcxcxxccxcxcxxxx
---------------
---------------
Circuit after: cxxxccxccxxcxccxccxcccxxccxxxcccxxcccxcxcxxccxcxcxxxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [4], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [14, 7], [7], [8, 12], [13, 11], [3], [19, 8], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [1], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [13, 11], [8, 6], [14], [3, 5], [5], [6, 16], [6], [8], [4, 3], [8, 6], [0], [16, 5], [7], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.07811927795410156

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-x-x-x-x-x-cx-x-x-x-x-x-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-x-x-x-x-cx-x-cx-cx-x-cx-cx-x-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-cx-x-x-x-x-cx-cx-x-x-x-cx-x-cx-x-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-cx-x-cx-x-x-cx-cx-cx-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-x-cx-x-cx-x-cx-x-x-cx-x-x-cx-x-x-x-x-x-x-cx-x-x-x 
     => total size: [135] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 180


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-x-x-x-cx-cx-x-cx-cx-x-x-cx-x-cx-cx-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-x-cx-x-x-cx-cx-x-cx-x-cx-x-x-x-x 
     => total size: [53] (IBM)
 --------------------
 - qubits_num: 18, using gates: [x,cx]
 - circuit depth: 17 - (small)
 - circuit cycle: 80

Reduced: 
 - size: 82 (60.74%)
 - cycle: 100 (55.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06281089782714844

[19], [9, 14], [14], [7], [4], [6], [17], [9, 14], [14], [1], [14], [17], [2], [0, 7], [9, 14], [13], [2], [4], [14, 7], [17, 15], [17], [3], [8, 6], [14], [2], [3], [14], [6], [18], [8], [15], [19], [1], [0, 14], [9], [14, 7], [6, 16], [7], [8, 12], [13, 11], [5], [14, 7], [7], [3], [13], [4], [14, 7], [19, 8], [7], [9], [5], [17], [9], [13], [12, 7], [6, 16], [11], [10], [12, 0], [0], [17], [0], [10], [1, 8], [18, 3], [0], [6], [10], [11, 4], [19], [0, 7], [14], [12, 0], [13], [1], [18], [6, 12], [11, 4], [12, 0], [16, 5], [12], [16], [3], [8, 12], [12], [1], [16, 5], [12], [13, 11], [10], [14], [16, 12], [8, 6], [13, 11], [2], [16, 5], [14], [19], [12], [3, 5], [5], [9], [12], [6, 16], [5], [6], [2], [13, 11], [5], [8], [2], [5], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [3], [12], [8, 16], [3], [19], [15], [8], [6], [11], [3, 16], [3], [11], [17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[2, 7, 8]
[5, 22, 27]
[37, 41, 42]
[42, 46, 48]
[80, 83, 84]
[87, 91, 98]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.23418569564819336

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 31] xx => I, Pos: [0, 31] xx => I, Pos: [2, 7, 8] xcx => c, Pos: [4, 17] xx => I, Pos: [4, 17] xx => I, Pos: [5, 22, 27] xcx => c, Pos: [6, 11] xx => I, Pos: [6, 11] xx => I, Pos: [8, 10] xx => I, Pos: [8, 10] xx => I, Pos: [9, 32] xx => I, Pos: [9, 32] xx => I, Pos: [12, 16] xx => I, Pos: [12, 16] xx => I, Pos: [16, 24] xx => I, Pos: [16, 24] xx => I, Pos: [17, 45] xx => I, Pos: [17, 45] xx => I, Pos: [20, 51] xx => I, Pos: [20, 51] xx => I, Pos: [21, 25] xx => I, Pos: [21, 25] xx => I, Pos: [23, 26] xx => I, Pos: [23, 26] xx => I, Pos: [25, 43] xx => I, Pos: [25, 43] xx => I, Pos: [34, 49] xx => I, Pos: [34, 49] xx => I, Pos: [36, 55] cc => I, Pos: [36, 55] cc => I, Pos: [37, 41, 42] xcx => c, Pos: [40, 50] xx => I, Pos: [40, 50] xx => I, Pos: [42, 46, 48] xcx => c, Pos: [44, 53] xx => I, Pos: [44, 53] xx => I, Pos: [49, 52] xx => I, Pos: [49, 52] xx => I, Pos: [51, 60] xx => I, Pos: [51, 60] xx => I, Pos: [52, 101] xx => I, Pos: [52, 101] xx => I, Pos: [53, 73] xx => I, Pos: [53, 73] xx => I, Pos: [57, 62] xx => I, Pos: [57, 62] xx => I, Pos: [59, 61] xx => I, Pos: [59, 61] xx => I, Pos: [61, 65] xx => I, Pos: [61, 65] xx => I, Pos: [62, 67] xx => I, Pos: [62, 67] xx => I, Pos: [67, 89] xx => I, Pos: [67, 89] xx => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [69, 97] xx => I, Pos: [69, 97] xx => I, Pos: [71, 90] xx => I, Pos: [71, 90] xx => I, Pos: [72, 76, 78] ccc => cc, Pos: [74, 85] xx => I, Pos: [74, 85] xx => I, Pos: [80, 83, 84] xcx => c, Pos: [84, 87] xx => I, Pos: [84, 87] xx => I, Pos: [85, 118] xx => I, Pos: [85, 118] xx => I, Pos: [86, 95] cc => I, Pos: [86, 95] cc => I, Pos: [87, 91, 98] xcx => c, Pos: [88, 93] cc => I, Pos: [88, 93] cc => I, Pos: [90, 96] xx => I, Pos: [90, 96] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [94, 106] xx => I, Pos: [94, 106] xx => I, Pos: [97, 124] xx => I, Pos: [97, 124] xx => I, Pos: [98, 102] xx => I, Pos: [98, 102] xx => I, Pos: [100, 104] xx => I, Pos: [100, 104] xx => I, Pos: [102, 121] xx => I, Pos: [102, 121] xx => I, Pos: [104, 108] xx => I, Pos: [104, 108] xx => I, Pos: [106, 110] xx => I, Pos: [106, 110] xx => I, Pos: [108, 111] xx => I, Pos: [108, 111] xx => I, Pos: [111, 113] xx => I, Pos: [111, 113] xx => I, Pos: [120, 123] xx => I, Pos: [120, 123] xx => I, Pos: [128, 131] xx => I, Pos: [128, 131] xx => I]

--------End Timer [Generate Plans]:  0.07803797721862793

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 31] xx => I,
 Pos: [8, 10] xx => I,
 Pos: [17, 45] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [16, 24] xx => I,
 Pos: [51, 60] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [34, 49] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [42, 46, 48] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [53, 73] xx => I,
 Pos: [52, 101] xx => I,
 Pos: [62, 67] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [69, 97] xx => I,
 Pos: [90, 96] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [74, 85] xx => I,
 Pos: [84, 87] xx => I,
 Pos: [86, 95] cc => I,
 Pos: [93, 107] cc => I,
 Pos: [94, 106] xx => I,
 Pos: [102, 121] xx => I,
 Pos: [104, 108] xx => I,
 Pos: [111, 113] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 32, Saving: 31

Circuit before: xcxxxxxcxxxxxccxxxccxxcxxxxxxxxxxcxccxccxcxxxxccxxxxxxccxxcxxxxccxxxcxcxcxxxccccxxxcxxcxcxxcccxcxxxcxxxcxxxcxxxxcxcxcxxcxxcxxxxxxcxxx
---------------
Apply:  Pos: [0, 31] xx => I
Apply:  Pos: [8, 10] xx => I
Apply:  Pos: [17, 45] xx => I
Apply:  Pos: [5, 22, 27] xcx => c
Apply:  Pos: [6, 11] xx => I
Apply:  Pos: [9, 32] xx => I
Apply:  Pos: [16, 24] xx => I
Apply:  Pos: [51, 60] xx => I
Apply:  Pos: [21, 25] xx => I
Apply:  Pos: [23, 26] xx => I
Apply:  Pos: [34, 49] xx => I
Apply:  Pos: [36, 55] cc => I
Apply:  Pos: [42, 46, 48] xcx => c
Apply:  Pos: [40, 50] xx => I
Apply:  Pos: [53, 73] xx => I
Apply:  Pos: [52, 101] xx => I
Apply:  Pos: [62, 67] xx => I
Apply:  Pos: [59, 61] xx => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [69, 97] xx => I
Apply:  Pos: [90, 96] xx => I
Apply:  Pos: [72, 76, 78] ccc => cc
Apply:  Pos: [74, 85] xx => I
Apply:  Pos: [84, 87] xx => I
Apply:  Pos: [86, 95] cc => I
Apply:  Pos: [93, 107] cc => I
Apply:  Pos: [94, 106] xx => I
Apply:  Pos: [102, 121] xx => I
Apply:  Pos: [104, 108] xx => I
Apply:  Pos: [111, 113] xx => I
Apply:  Pos: [120, 123] xx => I
Apply:  Pos: [128, 131] xx => I
---------------
Circuit after: cxxxccxccxccxxxxccxccccxxccxxcccxxcxcxccxxxccxccxcxcxxxccxcxxccxxxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [4], [8, 6], [9, 14], [2], [0, 7], [9, 14], [13], [14, 7], [17, 15], [17], [18], [8], [15], [0, 14], [14, 7], [7], [8, 12], [13, 11], [14, 7], [14, 7], [3], [13], [19, 8], [12, 7], [11], [10], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [14], [6, 12], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [13, 11], [10], [16, 12], [8, 6], [12], [3, 5], [5], [6, 16], [6], [8], [2], [4, 3], [8, 6], [0], [16, 5], [7], [1], [3, 16], [8, 16], [19], [15], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.3122236728668213

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 8]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[26, 43]
[6, 52]
[15, 62]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[10, 16, 17]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[26, 43]
[6, 52]
[15, 62]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 8]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.12497711181640625

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8] cc => I, Pos: [5, 8] cc => I, Pos: [6, 52] xx => I, Pos: [6, 52] xx => I, Pos: [10, 16, 17] ccc => cc, Pos: [15, 62] xx => I, Pos: [15, 62] xx => I, Pos: [26, 43] xx => I, Pos: [26, 43] xx => I]

--------End Timer [Generate Plans]:  0.015637874603271484

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8] cc => I,
 Pos: [6, 52] xx => I,
 Pos: [10, 16, 17] ccc => cc,
 Pos: [15, 62] xx => I,
 Pos: [26, 43] xx => I]
Change: 5, Saving: 5

Circuit before: cxxxccxccxccxxxxccxccxxccxxcccxxcxcxccxxxccxccxcxcxxxccxcxxccxxxxcxx
---------------
Apply:  Pos: [5, 8] cc => I
Apply:  Pos: [6, 52] xx => I
Apply:  Pos: [10, 16, 17] ccc => cc
Apply:  Pos: [15, 62] xx => I
Apply:  Pos: [26, 43] xx => I
---------------
Circuit after: cxxxccxccxxxcxccxxccxcccxxcxcxccxxxccccxcxcxxccxcxxccxxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [4], [8, 6], [0, 7], [13], [0, 14], [17, 15], [17], [18], [8], [14, 7], [7], [8, 12], [13, 11], [3], [13], [19, 8], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [14], [6, 12], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [13, 11], [16, 12], [8, 6], [12], [3, 5], [5], [6, 16], [6], [8], [4, 3], [8, 6], [0], [16, 5], [7], [1], [3, 16], [8, 16], [19], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.14061498641967773

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[52, 56]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[9, 58]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[9, 58]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[52, 56]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09373068809509277

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 58] xx => I, Pos: [9, 58] xx => I, Pos: [52, 56] cc => I, Pos: [52, 56] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 58] xx => I, Pos: [52, 56] cc => I]
Change: 2, Saving: 2

Circuit before: cxxxccxccxxxcxccxxccxcccxxcxcxccxxxccccxcxcxxccxcxxccxxxcxx
---------------
Apply:  Pos: [9, 58] xx => I
Apply:  Pos: [52, 56] cc => I
---------------
Circuit after: cxxxccxccxxcxccxxccxcccxxcxcxccxxxccccxcxcxxccxcxxcxxxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [4], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [14, 7], [7], [8, 12], [13, 11], [3], [13], [19, 8], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [14], [6, 12], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [13, 11], [16, 12], [8, 6], [12], [3, 5], [5], [6, 16], [6], [8], [4, 3], [8, 6], [0], [16, 5], [7], [1], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.09373068809509277

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09374332427978516

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cxxxccxccxxcxccxxccxcccxxcxcxccxxxccccxcxcxxccxcxxcxxxx
---------------
---------------
Circuit after: cxxxccxccxxcxccxxccxcccxxcxcxccxxxccccxcxcxxccxcxxcxxxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [4], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [14, 7], [7], [8, 12], [13, 11], [3], [13], [19, 8], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [14], [6, 12], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [13, 11], [16, 12], [8, 6], [12], [3, 5], [5], [6, 16], [6], [8], [4, 3], [8, 6], [0], [16, 5], [7], [1], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.09374332427978516

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-x-x-x-x-x-cx-x-x-x-x-x-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-x-x-x-x-cx-x-cx-cx-x-cx-cx-x-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-cx-x-x-x-x-cx-cx-x-x-x-cx-x-cx-x-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-cx-x-cx-x-x-cx-cx-cx-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-x-cx-x-cx-x-cx-x-x-cx-x-x-cx-x-x-x-x-x-x-cx-x-x-x 
     => total size: [135] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 180


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-x-x-x-cx-cx-x-cx-cx-x-x-cx-x-cx-cx-x-x-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-x-cx-x-x-cx-cx-x-cx-x-x-cx-x-x-x-x 
     => total size: [55] (IBM)
 --------------------
 - qubits_num: 18, using gates: [cx,x]
 - circuit depth: 18 - (small)
 - circuit cycle: 82

Reduced: 
 - size: 80 (59.26%)
 - depth: 27 (60.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374642372131348

[19], [9, 14], [14], [7], [4], [6], [17], [9, 14], [14], [1], [14], [17], [2], [0, 7], [9, 14], [13], [2], [4], [14, 7], [17, 15], [17], [3], [8, 6], [14], [2], [3], [14], [6], [18], [8], [15], [19], [1], [0, 14], [9], [14, 7], [6, 16], [7], [8, 12], [13, 11], [5], [14, 7], [7], [3], [13], [4], [14, 7], [19, 8], [7], [9], [5], [17], [9], [13], [12, 7], [6, 16], [11], [10], [12, 0], [0], [17], [0], [10], [1, 8], [18, 3], [0], [6], [10], [11, 4], [19], [0, 7], [14], [12, 0], [13], [1], [18], [6, 12], [11, 4], [12, 0], [16, 5], [12], [16], [3], [8, 12], [12], [1], [16, 5], [12], [13, 11], [10], [14], [16, 12], [8, 6], [13, 11], [2], [16, 5], [14], [19], [12], [3, 5], [5], [9], [12], [6, 16], [5], [6], [2], [13, 11], [5], [8], [2], [5], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [3], [12], [8, 16], [3], [19], [15], [8], [6], [11], [3, 16], [3], [11], [17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[2, 7, 8]
[5, 22, 27]
[37, 41, 42]
[42, 46, 48]
[80, 83, 84]
[87, 91, 98]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.2344057559967041

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 31] xx => I, Pos: [0, 31] xx => I, Pos: [2, 7, 8] xcx => c, Pos: [4, 17] xx => I, Pos: [4, 17] xx => I, Pos: [5, 22, 27] xcx => c, Pos: [6, 11] xx => I, Pos: [6, 11] xx => I, Pos: [8, 10] xx => I, Pos: [8, 10] xx => I, Pos: [9, 32] xx => I, Pos: [9, 32] xx => I, Pos: [12, 16] xx => I, Pos: [12, 16] xx => I, Pos: [16, 24] xx => I, Pos: [16, 24] xx => I, Pos: [17, 45] xx => I, Pos: [17, 45] xx => I, Pos: [20, 51] xx => I, Pos: [20, 51] xx => I, Pos: [21, 25] xx => I, Pos: [21, 25] xx => I, Pos: [23, 26] xx => I, Pos: [23, 26] xx => I, Pos: [25, 43] xx => I, Pos: [25, 43] xx => I, Pos: [34, 49] xx => I, Pos: [34, 49] xx => I, Pos: [36, 55] cc => I, Pos: [36, 55] cc => I, Pos: [37, 41, 42] xcx => c, Pos: [40, 50] xx => I, Pos: [40, 50] xx => I, Pos: [42, 46, 48] xcx => c, Pos: [44, 53] xx => I, Pos: [44, 53] xx => I, Pos: [49, 52] xx => I, Pos: [49, 52] xx => I, Pos: [51, 60] xx => I, Pos: [51, 60] xx => I, Pos: [52, 101] xx => I, Pos: [52, 101] xx => I, Pos: [53, 73] xx => I, Pos: [53, 73] xx => I, Pos: [57, 62] xx => I, Pos: [57, 62] xx => I, Pos: [59, 61] xx => I, Pos: [59, 61] xx => I, Pos: [61, 65] xx => I, Pos: [61, 65] xx => I, Pos: [62, 67] xx => I, Pos: [62, 67] xx => I, Pos: [67, 89] xx => I, Pos: [67, 89] xx => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [69, 97] xx => I, Pos: [69, 97] xx => I, Pos: [71, 90] xx => I, Pos: [71, 90] xx => I, Pos: [72, 76, 78] ccc => cc, Pos: [74, 85] xx => I, Pos: [74, 85] xx => I, Pos: [80, 83, 84] xcx => c, Pos: [84, 87] xx => I, Pos: [84, 87] xx => I, Pos: [85, 118] xx => I, Pos: [85, 118] xx => I, Pos: [86, 95] cc => I, Pos: [86, 95] cc => I, Pos: [87, 91, 98] xcx => c, Pos: [88, 93] cc => I, Pos: [88, 93] cc => I, Pos: [90, 96] xx => I, Pos: [90, 96] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [94, 106] xx => I, Pos: [94, 106] xx => I, Pos: [97, 124] xx => I, Pos: [97, 124] xx => I, Pos: [98, 102] xx => I, Pos: [98, 102] xx => I, Pos: [100, 104] xx => I, Pos: [100, 104] xx => I, Pos: [102, 121] xx => I, Pos: [102, 121] xx => I, Pos: [104, 108] xx => I, Pos: [104, 108] xx => I, Pos: [106, 110] xx => I, Pos: [106, 110] xx => I, Pos: [108, 111] xx => I, Pos: [108, 111] xx => I, Pos: [111, 113] xx => I, Pos: [111, 113] xx => I, Pos: [120, 123] xx => I, Pos: [120, 123] xx => I, Pos: [128, 131] xx => I, Pos: [128, 131] xx => I]

--------End Timer [Generate Plans]:  0.07813811302185059

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 31] xx => I,
 Pos: [8, 10] xx => I,
 Pos: [4, 17] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [16, 24] xx => I,
 Pos: [20, 51] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [49, 52] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [42, 46, 48] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [44, 53] xx => I,
 Pos: [62, 67] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [69, 97] xx => I,
 Pos: [90, 96] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [85, 118] xx => I,
 Pos: [84, 87] xx => I,
 Pos: [86, 95] cc => I,
 Pos: [88, 93] cc => I,
 Pos: [106, 110] xx => I,
 Pos: [102, 121] xx => I,
 Pos: [104, 108] xx => I,
 Pos: [111, 113] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 31, Saving: 30

Circuit before: xcxxxxxcxxxxxccxxxccxxcxxxxxxxxxxcxccxccxcxxxxccxxxxxxccxxcxxxxccxxxcxcxcxxxccccxxxcxxcxcxxcccxcxxxcxxxcxxxcxxxxcxcxcxxcxxcxxxxxxcxxx
---------------
Apply:  Pos: [0, 31] xx => I
Apply:  Pos: [8, 10] xx => I
Apply:  Pos: [4, 17] xx => I
Apply:  Pos: [5, 22, 27] xcx => c
Apply:  Pos: [6, 11] xx => I
Apply:  Pos: [9, 32] xx => I
Apply:  Pos: [16, 24] xx => I
Apply:  Pos: [20, 51] xx => I
Apply:  Pos: [21, 25] xx => I
Apply:  Pos: [23, 26] xx => I
Apply:  Pos: [49, 52] xx => I
Apply:  Pos: [36, 55] cc => I
Apply:  Pos: [42, 46, 48] xcx => c
Apply:  Pos: [40, 50] xx => I
Apply:  Pos: [44, 53] xx => I
Apply:  Pos: [62, 67] xx => I
Apply:  Pos: [59, 61] xx => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [69, 97] xx => I
Apply:  Pos: [90, 96] xx => I
Apply:  Pos: [72, 76, 78] ccc => cc
Apply:  Pos: [85, 118] xx => I
Apply:  Pos: [84, 87] xx => I
Apply:  Pos: [86, 95] cc => I
Apply:  Pos: [88, 93] cc => I
Apply:  Pos: [106, 110] xx => I
Apply:  Pos: [102, 121] xx => I
Apply:  Pos: [104, 108] xx => I
Apply:  Pos: [111, 113] xx => I
Apply:  Pos: [120, 123] xx => I
Apply:  Pos: [128, 131] xx => I
---------------
Circuit after: cxxccxccxccxxxcxcxccccxxccxxcxccxxcxcxxxccxxxcxccxxcxxcxcxccxcxccxxxxcxx

--------End Timer [apply mapping plan]:  0.01562809944152832

[9, 14], [14], [7], [8, 6], [9, 14], [2], [0, 7], [9, 14], [13], [14, 7], [17, 15], [18], [8], [15], [0, 14], [9], [14, 7], [7], [8, 12], [13, 11], [14, 7], [14, 7], [3], [4], [19, 8], [12, 7], [11], [10], [12, 0], [17], [1, 8], [18, 3], [0], [6], [0, 7], [14], [6, 12], [13], [1], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [10], [16, 12], [8, 6], [2], [12], [3, 5], [5], [9], [6, 16], [6], [13, 11], [8], [4, 3], [8, 6], [0], [16, 5], [7], [3, 16], [8, 16], [19], [15], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.328171968460083

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[25, 44]
[5, 47]
[15, 51]
[27, 69]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[9, 14, 16]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[25, 44]
[5, 47]
[15, 51]
[27, 69]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 7]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.12497234344482422

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 7] cc => I, Pos: [4, 7] cc => I, Pos: [5, 47] xx => I, Pos: [5, 47] xx => I, Pos: [9, 14, 16] ccc => cc, Pos: [15, 51] xx => I, Pos: [15, 51] xx => I, Pos: [25, 44] xx => I, Pos: [25, 44] xx => I, Pos: [27, 69] xx => I, Pos: [27, 69] xx => I]

--------End Timer [Generate Plans]:  0.015627384185791016

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 7] cc => I,
 Pos: [5, 47] xx => I,
 Pos: [9, 14, 16] ccc => cc,
 Pos: [15, 51] xx => I,
 Pos: [25, 44] xx => I,
 Pos: [27, 69] xx => I]
Change: 6, Saving: 6

Circuit before: cxxccxccxccxxxcxcxccxxccxxcxccxxcxcxxxccxxxcxccxxcxxcxcxccxcxccxxxxcxx
---------------
Apply:  Pos: [4, 7] cc => I
Apply:  Pos: [5, 47] xx => I
Apply:  Pos: [9, 14, 16] ccc => cc
Apply:  Pos: [15, 51] xx => I
Apply:  Pos: [25, 44] xx => I
Apply:  Pos: [27, 69] xx => I
---------------
Circuit after: cxxccxccxxxcxccxxccxcccxxcxcxxxccxxxcccxcxcxcxccxcxccxxxxcx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [15], [14, 7], [7], [8, 12], [13, 11], [3], [4], [19, 8], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [14], [6, 12], [13], [1], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [16, 12], [8, 6], [12], [3, 5], [5], [6, 16], [6], [13, 11], [8], [4, 3], [8, 6], [0], [16, 5], [7], [3, 16], [8, 16], [19], [15], [8], [6], [3, 16], [3], ----End Timer [Execute Mapping]:  0.14059972763061523

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[52, 57]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[10, 54]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[10, 54]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[52, 57]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.10936784744262695

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [10, 54] xx => I, Pos: [10, 54] xx => I, Pos: [52, 57] cc => I, Pos: [52, 57] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [10, 54] xx => I, Pos: [52, 57] cc => I]
Change: 2, Saving: 2

Circuit before: cxxccxccxxxcxccxxccxcccxxcxcxxxccxxxcccxcxcxcxccxcxccxxxxcx
---------------
Apply:  Pos: [10, 54] xx => I
Apply:  Pos: [52, 57] cc => I
---------------
Circuit after: cxxccxccxxcxccxxccxcccxxcxcxxxccxxxcccxcxcxcxccxcxcxxxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [14, 7], [7], [8, 12], [13, 11], [3], [4], [19, 8], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [14], [6, 12], [13], [1], [18], [12, 0], [16, 5], [12], [16], [3], [16, 12], [8, 6], [8, 12], [12], [3, 5], [5], [6, 16], [6], [13, 11], [8], [4, 3], [8, 6], [0], [16, 5], [7], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.10936784744262695

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09374260902404785

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cxxccxccxxcxccxxccxcccxxcxcxxxccxxxcccxcxcxcxccxcxcxxxx
---------------
---------------
Circuit after: cxxccxccxxcxccxxccxcccxxcxcxxxccxxxcccxcxcxcxccxcxcxxxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [14, 7], [7], [8, 12], [13, 11], [3], [4], [19, 8], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [14], [6, 12], [13], [1], [18], [12, 0], [16, 5], [12], [16], [3], [16, 12], [8, 12], [8, 6], [12], [3, 5], [5], [6, 16], [6], [13, 11], [8], [4, 3], [8, 6], [0], [16, 5], [7], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.09374260902404785

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-x-x-x-x-x-cx-x-x-x-x-x-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-x-x-x-x-cx-x-cx-cx-x-cx-cx-x-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-cx-x-x-x-x-cx-cx-x-x-x-cx-x-cx-x-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-cx-x-cx-x-x-cx-cx-cx-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-x-cx-x-cx-x-cx-x-x-cx-x-x-cx-x-x-x-x-x-x-cx-x-x-x 
     => total size: [135] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 180


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-x-x-cx-cx-x-cx-cx-x-x-cx-x-cx-cx-x-x-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-cx-x-cx-x-cx-x-cx-cx-x-cx-x-cx-x-x-x-x 
     => total size: [55] (IBM)
 --------------------
 - qubits_num: 18, using gates: [x,cx]
 - circuit depth: 19 - (small)
 - circuit cycle: 82

Reduced: 
 - size: 80 (59.26%)
 - depth: 26 (57.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06249070167541504

[19], [9, 14], [14], [7], [4], [6], [17], [9, 14], [14], [1], [14], [17], [2], [0, 7], [9, 14], [13], [2], [4], [14, 7], [17, 15], [17], [3], [8, 6], [14], [2], [3], [14], [6], [18], [8], [15], [19], [1], [0, 14], [9], [14, 7], [6, 16], [7], [8, 12], [13, 11], [5], [14, 7], [7], [3], [13], [4], [14, 7], [19, 8], [7], [9], [5], [17], [9], [13], [12, 7], [6, 16], [11], [10], [12, 0], [0], [17], [0], [10], [1, 8], [18, 3], [0], [6], [10], [11, 4], [19], [0, 7], [14], [12, 0], [13], [1], [18], [6, 12], [11, 4], [12, 0], [16, 5], [12], [16], [3], [8, 12], [12], [1], [16, 5], [12], [13, 11], [10], [14], [16, 12], [8, 6], [13, 11], [2], [16, 5], [14], [19], [12], [3, 5], [5], [9], [12], [6, 16], [5], [6], [2], [13, 11], [5], [8], [2], [5], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [3], [12], [8, 16], [3], [19], [15], [8], [6], [11], [3, 16], [3], [11], [17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[2, 7, 8]
[5, 22, 27]
[37, 41, 42]
[42, 46, 48]
[80, 83, 84]
[87, 91, 98]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.23436379432678223

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 31] xx => I, Pos: [0, 31] xx => I, Pos: [2, 7, 8] xcx => c, Pos: [4, 17] xx => I, Pos: [4, 17] xx => I, Pos: [5, 22, 27] xcx => c, Pos: [6, 11] xx => I, Pos: [6, 11] xx => I, Pos: [8, 10] xx => I, Pos: [8, 10] xx => I, Pos: [9, 32] xx => I, Pos: [9, 32] xx => I, Pos: [12, 16] xx => I, Pos: [12, 16] xx => I, Pos: [16, 24] xx => I, Pos: [16, 24] xx => I, Pos: [17, 45] xx => I, Pos: [17, 45] xx => I, Pos: [20, 51] xx => I, Pos: [20, 51] xx => I, Pos: [21, 25] xx => I, Pos: [21, 25] xx => I, Pos: [23, 26] xx => I, Pos: [23, 26] xx => I, Pos: [25, 43] xx => I, Pos: [25, 43] xx => I, Pos: [34, 49] xx => I, Pos: [34, 49] xx => I, Pos: [36, 55] cc => I, Pos: [36, 55] cc => I, Pos: [37, 41, 42] xcx => c, Pos: [40, 50] xx => I, Pos: [40, 50] xx => I, Pos: [42, 46, 48] xcx => c, Pos: [44, 53] xx => I, Pos: [44, 53] xx => I, Pos: [49, 52] xx => I, Pos: [49, 52] xx => I, Pos: [51, 60] xx => I, Pos: [51, 60] xx => I, Pos: [52, 101] xx => I, Pos: [52, 101] xx => I, Pos: [53, 73] xx => I, Pos: [53, 73] xx => I, Pos: [57, 62] xx => I, Pos: [57, 62] xx => I, Pos: [59, 61] xx => I, Pos: [59, 61] xx => I, Pos: [61, 65] xx => I, Pos: [61, 65] xx => I, Pos: [62, 67] xx => I, Pos: [62, 67] xx => I, Pos: [67, 89] xx => I, Pos: [67, 89] xx => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [69, 97] xx => I, Pos: [69, 97] xx => I, Pos: [71, 90] xx => I, Pos: [71, 90] xx => I, Pos: [72, 76, 78] ccc => cc, Pos: [74, 85] xx => I, Pos: [74, 85] xx => I, Pos: [80, 83, 84] xcx => c, Pos: [84, 87] xx => I, Pos: [84, 87] xx => I, Pos: [85, 118] xx => I, Pos: [85, 118] xx => I, Pos: [86, 95] cc => I, Pos: [86, 95] cc => I, Pos: [87, 91, 98] xcx => c, Pos: [88, 93] cc => I, Pos: [88, 93] cc => I, Pos: [90, 96] xx => I, Pos: [90, 96] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [94, 106] xx => I, Pos: [94, 106] xx => I, Pos: [97, 124] xx => I, Pos: [97, 124] xx => I, Pos: [98, 102] xx => I, Pos: [98, 102] xx => I, Pos: [100, 104] xx => I, Pos: [100, 104] xx => I, Pos: [102, 121] xx => I, Pos: [102, 121] xx => I, Pos: [104, 108] xx => I, Pos: [104, 108] xx => I, Pos: [106, 110] xx => I, Pos: [106, 110] xx => I, Pos: [108, 111] xx => I, Pos: [108, 111] xx => I, Pos: [111, 113] xx => I, Pos: [111, 113] xx => I, Pos: [120, 123] xx => I, Pos: [120, 123] xx => I, Pos: [128, 131] xx => I, Pos: [128, 131] xx => I]

--------End Timer [Generate Plans]:  0.07811522483825684

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 31] xx => I,
 Pos: [8, 10] xx => I,
 Pos: [4, 17] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [12, 16] xx => I,
 Pos: [51, 60] xx => I,
 Pos: [25, 43] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [34, 49] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [37, 41, 42] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [53, 73] xx => I,
 Pos: [52, 101] xx => I,
 Pos: [62, 67] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [69, 97] xx => I,
 Pos: [90, 96] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [85, 118] xx => I,
 Pos: [80, 83, 84] xcx => c,
 Pos: [86, 95] cc => I,
 Pos: [87, 91, 98] xcx => c,
 Pos: [93, 107] cc => I,
 Pos: [106, 110] xx => I,
 Pos: [104, 108] xx => I,
 Pos: [102, 121] xx => I,
 Pos: [111, 113] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 33, Saving: 32

Circuit before: xcxxxxxcxxxxxccxxxccxxcxxxxxxxxxxcxccxccxcxxxxccxxxxxxccxxcxxxxccxxxcxcxcxxxccccxxxcxxcxcxxcccxcxxxcxxxcxxxcxxxxcxcxcxxcxxcxxxxxxcxxx
---------------
Apply:  Pos: [0, 31] xx => I
Apply:  Pos: [8, 10] xx => I
Apply:  Pos: [4, 17] xx => I
Apply:  Pos: [5, 22, 27] xcx => c
Apply:  Pos: [6, 11] xx => I
Apply:  Pos: [9, 32] xx => I
Apply:  Pos: [12, 16] xx => I
Apply:  Pos: [51, 60] xx => I
Apply:  Pos: [25, 43] xx => I
Apply:  Pos: [23, 26] xx => I
Apply:  Pos: [34, 49] xx => I
Apply:  Pos: [36, 55] cc => I
Apply:  Pos: [37, 41, 42] xcx => c
Apply:  Pos: [40, 50] xx => I
Apply:  Pos: [53, 73] xx => I
Apply:  Pos: [52, 101] xx => I
Apply:  Pos: [62, 67] xx => I
Apply:  Pos: [59, 61] xx => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [69, 97] xx => I
Apply:  Pos: [90, 96] xx => I
Apply:  Pos: [72, 76, 78] ccc => cc
Apply:  Pos: [85, 118] xx => I
Apply:  Pos: [80, 83, 84] xcx => c
Apply:  Pos: [86, 95] cc => I
Apply:  Pos: [87, 91, 98] xcx => c
Apply:  Pos: [93, 107] cc => I
Apply:  Pos: [106, 110] xx => I
Apply:  Pos: [104, 108] xx => I
Apply:  Pos: [102, 121] xx => I
Apply:  Pos: [111, 113] xx => I
Apply:  Pos: [120, 123] xx => I
Apply:  Pos: [128, 131] xx => I
---------------
Circuit after: cxxccccxccxxxxxxcccccxxccxcxxcccxxcxcxxcccxxccxcxcxcxxccxcxccxxxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [9, 14], [0, 7], [9, 14], [13], [14, 7], [17, 15], [17], [3], [2], [18], [8], [15], [0, 14], [14, 7], [14, 7], [8, 12], [13, 11], [13], [4], [14, 7], [19, 8], [7], [12, 7], [11], [10], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [14], [6, 12], [1], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [13, 11], [10], [8, 6], [2], [3, 5], [5], [6, 16], [6], [8], [4, 3], [8, 6], [0], [16, 5], [7], [3, 16], [8, 16], [19], [15], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.31247901916503906

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[26, 44]
[12, 46]
[15, 60]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[8, 16, 21]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[26, 44]
[12, 46]
[15, 60]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.10937166213989258

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 16, 21] ccc => cc, Pos: [12, 46] xx => I, Pos: [12, 46] xx => I, Pos: [15, 60] xx => I, Pos: [15, 60] xx => I, Pos: [26, 44] xx => I, Pos: [26, 44] xx => I]

--------End Timer [Generate Plans]:  0.015619993209838867

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [8, 16, 21] ccc => cc,
 Pos: [12, 46] xx => I,
 Pos: [15, 60] xx => I,
 Pos: [26, 44] xx => I]
Change: 5, Saving: 5

Circuit before: cxxccccxccxxxxxxcccxxccxcxxcccxxcxcxxcccxxccxcxcxcxxccxcxccxxxxcxx
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [8, 16, 21] ccc => cc
Apply:  Pos: [12, 46] xx => I
Apply:  Pos: [15, 60] xx => I
Apply:  Pos: [26, 44] xx => I
---------------
Circuit after: cxxccxccxxxxcccxxcxcxcccxxcxcxxcccxxccccxcxxccxcxccxxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [0, 7], [13], [0, 14], [17, 15], [17], [3], [18], [8], [14, 7], [8, 12], [13, 11], [13], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [14], [6, 12], [1], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [13, 11], [8, 6], [3, 5], [5], [6, 16], [6], [8], [4, 3], [8, 6], [0], [16, 5], [7], [3, 16], [8, 16], [19], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.12499165534973145

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[50, 54]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 56]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 56]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[50, 54]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09374308586120605

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 56] xx => I, Pos: [8, 56] xx => I, Pos: [50, 54] cc => I, Pos: [50, 54] cc => I]

--------End Timer [Generate Plans]:  0.015628337860107422

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 56] xx => I, Pos: [50, 54] cc => I]
Change: 2, Saving: 2

Circuit before: cxxccxccxxxxcccxxcxcxcccxxcxcxxcccxxccccxcxxccxcxccxxxcxx
---------------
Apply:  Pos: [8, 56] xx => I
Apply:  Pos: [50, 54] cc => I
---------------
Circuit after: cxxccxccxxxcccxxcxcxcccxxcxcxxcccxxccccxcxxccxcxcxxxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [0, 7], [13], [0, 14], [17, 15], [3], [18], [8], [14, 7], [8, 12], [13, 11], [13], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [14], [6, 12], [1], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [13, 11], [8, 6], [3, 5], [5], [6, 16], [6], [8], [4, 3], [8, 6], [0], [16, 5], [7], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.10937142372131348

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09374380111694336

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cxxccxccxxxcccxxcxcxcccxxcxcxxcccxxccccxcxxccxcxcxxxx
---------------
---------------
Circuit after: cxxccxccxxxcccxxcxcxcccxxcxcxxcccxxccccxcxxccxcxcxxxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [0, 7], [13], [0, 14], [17, 15], [3], [18], [8], [14, 7], [8, 12], [13, 11], [13], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [14], [6, 12], [1], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [13, 11], [8, 6], [3, 5], [5], [6, 16], [6], [8], [4, 3], [8, 6], [0], [16, 5], [7], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.09374380111694336

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-x-x-x-x-x-cx-x-x-x-x-x-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-x-x-x-x-cx-x-cx-cx-x-cx-cx-x-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-cx-x-x-x-x-cx-cx-x-x-x-cx-x-cx-x-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-cx-x-cx-x-x-cx-cx-cx-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-x-cx-x-cx-x-cx-x-x-cx-x-x-cx-x-x-x-x-x-x-cx-x-x-x 
     => total size: [135] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 180


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-x-x-cx-cx-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-x-cx-x-cx-cx-cx-x-x-cx-x-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-x-x-cx-cx-x-cx-x-cx-x-x-x-x 
     => total size: [53] (IBM)
 --------------------
 - qubits_num: 18, using gates: [cx,x]
 - circuit depth: 17 - (small)
 - circuit cycle: 80

Reduced: 
 - size: 82 (60.74%)
 - depth: 28 (62.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.062482595443725586

[19], [9, 14], [14], [7], [4], [6], [17], [9, 14], [14], [1], [14], [17], [2], [0, 7], [9, 14], [13], [2], [4], [14, 7], [17, 15], [17], [3], [8, 6], [14], [2], [3], [14], [6], [18], [8], [15], [19], [1], [0, 14], [9], [14, 7], [6, 16], [7], [8, 12], [13, 11], [5], [14, 7], [7], [3], [13], [4], [14, 7], [19, 8], [7], [9], [5], [17], [9], [13], [12, 7], [6, 16], [11], [10], [12, 0], [0], [17], [0], [10], [1, 8], [18, 3], [0], [6], [10], [11, 4], [19], [0, 7], [14], [12, 0], [13], [1], [18], [6, 12], [11, 4], [12, 0], [16, 5], [12], [16], [3], [8, 12], [12], [1], [16, 5], [12], [13, 11], [10], [14], [16, 12], [8, 6], [13, 11], [2], [16, 5], [14], [19], [12], [3, 5], [5], [9], [12], [6, 16], [5], [6], [2], [13, 11], [5], [8], [2], [5], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [3], [12], [8, 16], [3], [19], [15], [8], [6], [11], [3, 16], [3], [11], [17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[2, 7, 8]
[5, 22, 27]
[37, 41, 42]
[42, 46, 48]
[80, 83, 84]
[87, 91, 98]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.23435640335083008

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 31] xx => I, Pos: [0, 31] xx => I, Pos: [2, 7, 8] xcx => c, Pos: [4, 17] xx => I, Pos: [4, 17] xx => I, Pos: [5, 22, 27] xcx => c, Pos: [6, 11] xx => I, Pos: [6, 11] xx => I, Pos: [8, 10] xx => I, Pos: [8, 10] xx => I, Pos: [9, 32] xx => I, Pos: [9, 32] xx => I, Pos: [12, 16] xx => I, Pos: [12, 16] xx => I, Pos: [16, 24] xx => I, Pos: [16, 24] xx => I, Pos: [17, 45] xx => I, Pos: [17, 45] xx => I, Pos: [20, 51] xx => I, Pos: [20, 51] xx => I, Pos: [21, 25] xx => I, Pos: [21, 25] xx => I, Pos: [23, 26] xx => I, Pos: [23, 26] xx => I, Pos: [25, 43] xx => I, Pos: [25, 43] xx => I, Pos: [34, 49] xx => I, Pos: [34, 49] xx => I, Pos: [36, 55] cc => I, Pos: [36, 55] cc => I, Pos: [37, 41, 42] xcx => c, Pos: [40, 50] xx => I, Pos: [40, 50] xx => I, Pos: [42, 46, 48] xcx => c, Pos: [44, 53] xx => I, Pos: [44, 53] xx => I, Pos: [49, 52] xx => I, Pos: [49, 52] xx => I, Pos: [51, 60] xx => I, Pos: [51, 60] xx => I, Pos: [52, 101] xx => I, Pos: [52, 101] xx => I, Pos: [53, 73] xx => I, Pos: [53, 73] xx => I, Pos: [57, 62] xx => I, Pos: [57, 62] xx => I, Pos: [59, 61] xx => I, Pos: [59, 61] xx => I, Pos: [61, 65] xx => I, Pos: [61, 65] xx => I, Pos: [62, 67] xx => I, Pos: [62, 67] xx => I, Pos: [67, 89] xx => I, Pos: [67, 89] xx => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [69, 97] xx => I, Pos: [69, 97] xx => I, Pos: [71, 90] xx => I, Pos: [71, 90] xx => I, Pos: [72, 76, 78] ccc => cc, Pos: [74, 85] xx => I, Pos: [74, 85] xx => I, Pos: [80, 83, 84] xcx => c, Pos: [84, 87] xx => I, Pos: [84, 87] xx => I, Pos: [85, 118] xx => I, Pos: [85, 118] xx => I, Pos: [86, 95] cc => I, Pos: [86, 95] cc => I, Pos: [87, 91, 98] xcx => c, Pos: [88, 93] cc => I, Pos: [88, 93] cc => I, Pos: [90, 96] xx => I, Pos: [90, 96] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [94, 106] xx => I, Pos: [94, 106] xx => I, Pos: [97, 124] xx => I, Pos: [97, 124] xx => I, Pos: [98, 102] xx => I, Pos: [98, 102] xx => I, Pos: [100, 104] xx => I, Pos: [100, 104] xx => I, Pos: [102, 121] xx => I, Pos: [102, 121] xx => I, Pos: [104, 108] xx => I, Pos: [104, 108] xx => I, Pos: [106, 110] xx => I, Pos: [106, 110] xx => I, Pos: [108, 111] xx => I, Pos: [108, 111] xx => I, Pos: [111, 113] xx => I, Pos: [111, 113] xx => I, Pos: [120, 123] xx => I, Pos: [120, 123] xx => I, Pos: [128, 131] xx => I, Pos: [128, 131] xx => I]

--------End Timer [Generate Plans]:  0.07812023162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 31] xx => I,
 Pos: [8, 10] xx => I,
 Pos: [4, 17] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [16, 24] xx => I,
 Pos: [51, 60] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [34, 49] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [37, 41, 42] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [44, 53] xx => I,
 Pos: [52, 101] xx => I,
 Pos: [62, 67] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [97, 124] xx => I,
 Pos: [90, 96] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [85, 118] xx => I,
 Pos: [84, 87] xx => I,
 Pos: [86, 95] cc => I,
 Pos: [93, 107] cc => I,
 Pos: [106, 110] xx => I,
 Pos: [102, 121] xx => I,
 Pos: [100, 104] xx => I,
 Pos: [111, 113] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 32, Saving: 31

Circuit before: xcxxxxxcxxxxxccxxxccxxcxxxxxxxxxxcxccxccxcxxxxccxxxxxxccxxcxxxxccxxxcxcxcxxxccccxxxcxxcxcxxcccxcxxxcxxxcxxxcxxxxcxcxcxxcxxcxxxxxxcxxx
---------------
Apply:  Pos: [0, 31] xx => I
Apply:  Pos: [8, 10] xx => I
Apply:  Pos: [4, 17] xx => I
Apply:  Pos: [5, 22, 27] xcx => c
Apply:  Pos: [6, 11] xx => I
Apply:  Pos: [9, 32] xx => I
Apply:  Pos: [16, 24] xx => I
Apply:  Pos: [51, 60] xx => I
Apply:  Pos: [21, 25] xx => I
Apply:  Pos: [23, 26] xx => I
Apply:  Pos: [34, 49] xx => I
Apply:  Pos: [36, 55] cc => I
Apply:  Pos: [37, 41, 42] xcx => c
Apply:  Pos: [40, 50] xx => I
Apply:  Pos: [44, 53] xx => I
Apply:  Pos: [52, 101] xx => I
Apply:  Pos: [62, 67] xx => I
Apply:  Pos: [59, 61] xx => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [97, 124] xx => I
Apply:  Pos: [90, 96] xx => I
Apply:  Pos: [72, 76, 78] ccc => cc
Apply:  Pos: [85, 118] xx => I
Apply:  Pos: [84, 87] xx => I
Apply:  Pos: [86, 95] cc => I
Apply:  Pos: [93, 107] cc => I
Apply:  Pos: [106, 110] xx => I
Apply:  Pos: [102, 121] xx => I
Apply:  Pos: [100, 104] xx => I
Apply:  Pos: [111, 113] xx => I
Apply:  Pos: [120, 123] xx => I
Apply:  Pos: [128, 131] xx => I
---------------
Circuit after: cxxccxccxccxxxxcccccxxccxcxxcccxxxcxcxxxccxxxccxccxxccxxxccxcxccxxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [9, 14], [2], [0, 7], [9, 14], [13], [14, 7], [17, 15], [17], [18], [8], [15], [0, 14], [14, 7], [14, 7], [8, 12], [13, 11], [3], [4], [14, 7], [19, 8], [7], [12, 7], [11], [10], [12, 0], [1, 8], [18, 3], [0], [6], [19], [0, 7], [14], [6, 12], [13], [1], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [13, 11], [10], [16, 12], [8, 6], [2], [12], [3, 5], [6, 16], [6], [5], [8], [4, 3], [8, 6], [0], [16, 5], [7], [3, 16], [8, 16], [15], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.31247663497924805

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 7]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[25, 45]
[5, 48]
[14, 62]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[9, 15, 20]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[25, 45]
[5, 48]
[14, 62]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 7]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.12497806549072266

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 7] cc => I, Pos: [4, 7] cc => I, Pos: [5, 48] xx => I, Pos: [5, 48] xx => I, Pos: [9, 15, 20] ccc => cc, Pos: [14, 62] xx => I, Pos: [14, 62] xx => I, Pos: [25, 45] xx => I, Pos: [25, 45] xx => I]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 7] cc => I,
 Pos: [5, 48] xx => I,
 Pos: [9, 15, 20] ccc => cc,
 Pos: [14, 62] xx => I,
 Pos: [25, 45] xx => I]
Change: 5, Saving: 5

Circuit before: cxxccxccxccxxxxcccxxccxcxxcccxxxcxcxxxccxxxccxccxxccxxxccxcxccxxxcxx
---------------
Apply:  Pos: [4, 7] cc => I
Apply:  Pos: [5, 48] xx => I
Apply:  Pos: [9, 15, 20] ccc => cc
Apply:  Pos: [14, 62] xx => I
Apply:  Pos: [25, 45] xx => I
---------------
Circuit after: cxxccxccxxxcccxxcxcxcccxxxcxcxxxccxxxccccxccxxxccxcxccxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [0, 7], [13], [0, 14], [17, 15], [17], [18], [8], [14, 7], [8, 12], [13, 11], [3], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [19], [0, 7], [14], [6, 12], [13], [1], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [13, 11], [16, 12], [8, 6], [12], [3, 5], [6, 16], [6], [5], [8], [4, 3], [8, 6], [0], [16, 5], [7], [3, 16], [8, 16], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.14060235023498535

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 56]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 58]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 58]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[53, 56]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09374189376831055

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 58] xx => I, Pos: [8, 58] xx => I, Pos: [53, 56] cc => I, Pos: [53, 56] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 58] xx => I, Pos: [53, 56] cc => I]
Change: 2, Saving: 2

Circuit before: cxxccxccxxxcccxxcxcxcccxxxcxcxxxccxxxccccxccxxxccxcxccxxcxx
---------------
Apply:  Pos: [8, 58] xx => I
Apply:  Pos: [53, 56] cc => I
---------------
Circuit after: cxxccxccxxcccxxcxcxcccxxxcxcxxxccxxxccccxccxxxccxcxcxxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [19], [0, 7], [14], [6, 12], [13], [1], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [13, 11], [16, 12], [8, 6], [12], [3, 5], [6, 16], [6], [5], [8], [4, 3], [8, 6], [0], [16, 5], [7], [8, 16], [8], [6], [3], ----End Timer [Execute Mapping]:  0.09374189376831055

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09374332427978516

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cxxccxccxxcccxxcxcxcccxxxcxcxxxccxxxccccxccxxxccxcxcxxx
---------------
---------------
Circuit after: cxxccxccxxcccxxcxcxcccxxxcxcxxxccxxxccccxccxxxccxcxcxxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [19], [0, 7], [14], [6, 12], [13], [1], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [13, 11], [16, 12], [8, 6], [12], [3, 5], [6, 16], [6], [5], [8], [4, 3], [8, 6], [0], [16, 5], [7], [8, 16], [8], [6], [3], ----End Timer [Execute Mapping]:  0.09374332427978516

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-x-x-x-x-x-cx-x-x-x-x-x-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-x-x-x-x-cx-x-cx-cx-x-cx-cx-x-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-cx-x-x-x-x-cx-cx-x-x-x-cx-x-cx-x-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-cx-x-cx-x-x-cx-cx-cx-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-x-cx-x-cx-x-cx-x-x-cx-x-x-cx-x-x-x-x-x-x-cx-x-x-x 
     => total size: [135] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 180


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-x-x-cx-cx-x-cx-cx-x-x-cx-cx-cx-x-x-cx-x-cx-x-cx-cx-cx-x-x-x-cx-x-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-cx-x-cx-x-cx-x-x-x 
     => total size: [55] (IBM)
 --------------------
 - qubits_num: 18, using gates: [x,cx]
 - circuit depth: 18 - (small)
 - circuit cycle: 82

Reduced: 
 - size: 80 (59.26%)
 - depth: 27 (60.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.06249499320983887

[19], [9, 14], [14], [7], [4], [6], [17], [9, 14], [14], [1], [14], [17], [2], [0, 7], [9, 14], [13], [2], [4], [14, 7], [17, 15], [17], [3], [8, 6], [14], [2], [3], [14], [6], [18], [8], [15], [19], [1], [0, 14], [9], [14, 7], [6, 16], [7], [8, 12], [13, 11], [5], [14, 7], [7], [3], [13], [4], [14, 7], [19, 8], [7], [9], [5], [17], [9], [13], [12, 7], [6, 16], [11], [10], [12, 0], [0], [17], [0], [10], [1, 8], [18, 3], [0], [6], [10], [11, 4], [19], [0, 7], [14], [12, 0], [13], [1], [18], [6, 12], [11, 4], [12, 0], [16, 5], [12], [16], [3], [8, 12], [12], [1], [16, 5], [12], [13, 11], [10], [14], [16, 12], [8, 6], [13, 11], [2], [16, 5], [14], [19], [12], [3, 5], [5], [9], [12], [6, 16], [5], [6], [2], [13, 11], [5], [8], [2], [5], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [3], [12], [8, 16], [3], [19], [15], [8], [6], [11], [3, 16], [3], [11], [17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[2, 7, 8]
[5, 22, 27]
[37, 41, 42]
[42, 46, 48]
[80, 83, 84]
[87, 91, 98]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.2343590259552002

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 31] xx => I, Pos: [0, 31] xx => I, Pos: [2, 7, 8] xcx => c, Pos: [4, 17] xx => I, Pos: [4, 17] xx => I, Pos: [5, 22, 27] xcx => c, Pos: [6, 11] xx => I, Pos: [6, 11] xx => I, Pos: [8, 10] xx => I, Pos: [8, 10] xx => I, Pos: [9, 32] xx => I, Pos: [9, 32] xx => I, Pos: [12, 16] xx => I, Pos: [12, 16] xx => I, Pos: [16, 24] xx => I, Pos: [16, 24] xx => I, Pos: [17, 45] xx => I, Pos: [17, 45] xx => I, Pos: [20, 51] xx => I, Pos: [20, 51] xx => I, Pos: [21, 25] xx => I, Pos: [21, 25] xx => I, Pos: [23, 26] xx => I, Pos: [23, 26] xx => I, Pos: [25, 43] xx => I, Pos: [25, 43] xx => I, Pos: [34, 49] xx => I, Pos: [34, 49] xx => I, Pos: [36, 55] cc => I, Pos: [36, 55] cc => I, Pos: [37, 41, 42] xcx => c, Pos: [40, 50] xx => I, Pos: [40, 50] xx => I, Pos: [42, 46, 48] xcx => c, Pos: [44, 53] xx => I, Pos: [44, 53] xx => I, Pos: [49, 52] xx => I, Pos: [49, 52] xx => I, Pos: [51, 60] xx => I, Pos: [51, 60] xx => I, Pos: [52, 101] xx => I, Pos: [52, 101] xx => I, Pos: [53, 73] xx => I, Pos: [53, 73] xx => I, Pos: [57, 62] xx => I, Pos: [57, 62] xx => I, Pos: [59, 61] xx => I, Pos: [59, 61] xx => I, Pos: [61, 65] xx => I, Pos: [61, 65] xx => I, Pos: [62, 67] xx => I, Pos: [62, 67] xx => I, Pos: [67, 89] xx => I, Pos: [67, 89] xx => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [69, 97] xx => I, Pos: [69, 97] xx => I, Pos: [71, 90] xx => I, Pos: [71, 90] xx => I, Pos: [72, 76, 78] ccc => cc, Pos: [74, 85] xx => I, Pos: [74, 85] xx => I, Pos: [80, 83, 84] xcx => c, Pos: [84, 87] xx => I, Pos: [84, 87] xx => I, Pos: [85, 118] xx => I, Pos: [85, 118] xx => I, Pos: [86, 95] cc => I, Pos: [86, 95] cc => I, Pos: [87, 91, 98] xcx => c, Pos: [88, 93] cc => I, Pos: [88, 93] cc => I, Pos: [90, 96] xx => I, Pos: [90, 96] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [94, 106] xx => I, Pos: [94, 106] xx => I, Pos: [97, 124] xx => I, Pos: [97, 124] xx => I, Pos: [98, 102] xx => I, Pos: [98, 102] xx => I, Pos: [100, 104] xx => I, Pos: [100, 104] xx => I, Pos: [102, 121] xx => I, Pos: [102, 121] xx => I, Pos: [104, 108] xx => I, Pos: [104, 108] xx => I, Pos: [106, 110] xx => I, Pos: [106, 110] xx => I, Pos: [108, 111] xx => I, Pos: [108, 111] xx => I, Pos: [111, 113] xx => I, Pos: [111, 113] xx => I, Pos: [120, 123] xx => I, Pos: [120, 123] xx => I, Pos: [128, 131] xx => I, Pos: [128, 131] xx => I]

--------End Timer [Generate Plans]:  0.07812047004699707

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 31] xx => I,
 Pos: [2, 7, 8] xcx => c,
 Pos: [17, 45] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [12, 16] xx => I,
 Pos: [20, 51] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [49, 52] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [42, 46, 48] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [53, 73] xx => I,
 Pos: [62, 67] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [69, 97] xx => I,
 Pos: [71, 90] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [74, 85] xx => I,
 Pos: [84, 87] xx => I,
 Pos: [86, 95] cc => I,
 Pos: [88, 93] cc => I,
 Pos: [94, 106] xx => I,
 Pos: [98, 102] xx => I,
 Pos: [104, 108] xx => I,
 Pos: [111, 113] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 31, Saving: 30

Circuit before: xcxxxxxcxxxxxccxxxccxxcxxxxxxxxxxcxccxccxcxxxxccxxxxxxccxxcxxxxccxxxcxcxcxxxccccxxxcxxcxcxxcccxcxxxcxxxcxxxcxxxxcxcxcxxcxxcxxxxxxcxxx
---------------
Apply:  Pos: [0, 31] xx => I
Apply:  Pos: [2, 7, 8] xcx => c
Apply:  Pos: [17, 45] xx => I
Apply:  Pos: [5, 22, 27] xcx => c
Apply:  Pos: [6, 11] xx => I
Apply:  Pos: [9, 32] xx => I
Apply:  Pos: [12, 16] xx => I
Apply:  Pos: [20, 51] xx => I
Apply:  Pos: [21, 25] xx => I
Apply:  Pos: [23, 26] xx => I
Apply:  Pos: [49, 52] xx => I
Apply:  Pos: [36, 55] cc => I
Apply:  Pos: [42, 46, 48] xcx => c
Apply:  Pos: [40, 50] xx => I
Apply:  Pos: [53, 73] xx => I
Apply:  Pos: [62, 67] xx => I
Apply:  Pos: [59, 61] xx => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [69, 97] xx => I
Apply:  Pos: [71, 90] xx => I
Apply:  Pos: [72, 76, 78] ccc => cc
Apply:  Pos: [74, 85] xx => I
Apply:  Pos: [84, 87] xx => I
Apply:  Pos: [86, 95] cc => I
Apply:  Pos: [88, 93] cc => I
Apply:  Pos: [94, 106] xx => I
Apply:  Pos: [98, 102] xx => I
Apply:  Pos: [104, 108] xx => I
Apply:  Pos: [111, 113] xx => I
Apply:  Pos: [120, 123] xx => I
Apply:  Pos: [128, 131] xx => I
---------------
Circuit after: ccxxcxccxccxxxxcxcxccccxxccxxcxccxxccxccxxxcxccxcxxcxcxxccxcxxcxcxxxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [9, 14], [7], [4], [8, 6], [14], [0, 7], [9, 14], [13], [14, 7], [17, 15], [2], [18], [8], [15], [0, 14], [9], [14, 7], [7], [8, 12], [13, 11], [14, 7], [14, 7], [3], [13], [19, 8], [12, 7], [11], [10], [12, 0], [17], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [10], [16, 12], [8, 6], [14], [3, 5], [5], [9], [6, 16], [6], [13, 11], [8], [2], [4, 3], [8, 6], [0], [16, 5], [7], [1], [3, 16], [12], [8, 16], [19], [15], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.31247949600219727

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[24, 40]
[14, 46]
[9, 51]
[12, 62]
[26, 67]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[7, 13, 15]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[24, 40]
[14, 46]
[9, 51]
[12, 62]
[26, 67]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.12527036666870117

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [7, 13, 15] ccc => cc, Pos: [9, 51] xx => I, Pos: [9, 51] xx => I, Pos: [12, 62] xx => I, Pos: [12, 62] xx => I, Pos: [14, 46] xx => I, Pos: [14, 46] xx => I, Pos: [24, 40] xx => I, Pos: [24, 40] xx => I, Pos: [26, 67] xx => I, Pos: [26, 67] xx => I]

--------End Timer [Generate Plans]:  0.015505313873291016

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [7, 13, 15] ccc => cc,
 Pos: [9, 51] xx => I,
 Pos: [12, 62] xx => I,
 Pos: [14, 46] xx => I,
 Pos: [24, 40] xx => I,
 Pos: [26, 67] xx => I]
Change: 6, Saving: 6

Circuit before: xxcxccxccxxxxcxcxccxxccxxcxccxxccxccxxxcxccxcxxcxcxxccxcxxcxcxxxxcxx
---------------
Apply:  Pos: [7, 13, 15] ccc => cc
Apply:  Pos: [9, 51] xx => I
Apply:  Pos: [12, 62] xx => I
Apply:  Pos: [14, 46] xx => I
Apply:  Pos: [24, 40] xx => I
Apply:  Pos: [26, 67] xx => I
---------------
Circuit after: xxcxccxccxxcxccxxccxcccxxccxccxxxcccxcxcxcxccxcxxcxcxxxcx

--------End Timer [apply mapping plan]:  0.0

[7], [4], [8, 6], [14], [0, 7], [9, 14], [13], [0, 14], [17, 15], [18], [8], [14, 7], [7], [8, 12], [13, 11], [3], [13], [19, 8], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [16, 12], [8, 6], [14], [3, 5], [5], [6, 16], [6], [13, 11], [8], [4, 3], [8, 6], [0], [16, 5], [7], [1], [3, 16], [12], [8, 16], [19], [8], [6], [3, 16], [3], ----End Timer [Execute Mapping]:  0.1407756805419922

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09368395805358887

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxcxccxccxxcxccxxccxcccxxccxccxxxcccxcxcxcxccxcxxcxcxxxcx
---------------
---------------
Circuit after: xxcxccxccxxcxccxxccxcccxxccxccxxxcccxcxcxcxccxcxxcxcxxxcx

--------End Timer [apply mapping plan]:  0.0

[7], [4], [8, 6], [14], [0, 7], [9, 14], [13], [0, 14], [17, 15], [18], [8], [14, 7], [7], [8, 12], [13, 11], [3], [13], [19, 8], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [18], [12, 0], [16, 5], [12], [16], [3], [16, 12], [8, 6], [8, 12], [14], [3, 5], [5], [6, 16], [6], [13, 11], [8], [4, 3], [8, 6], [0], [16, 5], [7], [1], [3, 16], [12], [8, 16], [19], [8], [6], [3, 16], [3], ----End Timer [Execute Mapping]:  0.09368395805358887

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-x-x-x-x-x-cx-x-x-x-x-x-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-x-x-x-x-cx-x-cx-cx-x-cx-cx-x-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-cx-x-x-x-x-cx-cx-x-x-x-cx-x-cx-x-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-cx-x-cx-x-x-cx-cx-cx-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-x-cx-x-cx-x-cx-x-x-cx-x-x-cx-x-x-x-x-x-x-cx-x-x-x 
     => total size: [135] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 180


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-cx-x-cx-cx-x-cx-cx-x-x-cx-x-cx-cx-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-x-x-x-cx-cx-cx-x-cx-x-cx-x-cx-x-cx-cx-x-cx-x-x-cx-x-cx-x-x-x-cx-x 
     => total size: [57] (IBM)
 --------------------
 - qubits_num: 18, using gates: [x,cx]
 - circuit depth: 18 - (small)
 - circuit cycle: 86

Reduced: 
 - size: 78 (57.78%)
 - depth: 27 (60.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.062210798263549805

[19], [9, 14], [14], [7], [4], [6], [17], [9, 14], [14], [1], [14], [17], [2], [0, 7], [9, 14], [13], [2], [4], [14, 7], [17, 15], [17], [3], [8, 6], [14], [2], [3], [14], [6], [18], [8], [15], [19], [1], [0, 14], [9], [14, 7], [6, 16], [7], [8, 12], [13, 11], [5], [14, 7], [7], [3], [13], [4], [14, 7], [19, 8], [7], [9], [5], [17], [9], [13], [12, 7], [6, 16], [11], [10], [12, 0], [0], [17], [0], [10], [1, 8], [18, 3], [0], [6], [10], [11, 4], [19], [0, 7], [14], [12, 0], [13], [1], [18], [6, 12], [11, 4], [12, 0], [16, 5], [12], [16], [3], [8, 12], [12], [1], [16, 5], [12], [13, 11], [10], [14], [16, 12], [8, 6], [13, 11], [2], [16, 5], [14], [19], [12], [3, 5], [5], [9], [12], [6, 16], [5], [6], [2], [13, 11], [5], [8], [2], [5], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [3], [12], [8, 16], [3], [19], [15], [8], [6], [11], [3, 16], [3], [11], [17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[2, 7, 8]
[5, 22, 27]
[37, 41, 42]
[42, 46, 48]
[80, 83, 84]
[87, 91, 98]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.23427605628967285

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 31] xx => I, Pos: [0, 31] xx => I, Pos: [2, 7, 8] xcx => c, Pos: [4, 17] xx => I, Pos: [4, 17] xx => I, Pos: [5, 22, 27] xcx => c, Pos: [6, 11] xx => I, Pos: [6, 11] xx => I, Pos: [8, 10] xx => I, Pos: [8, 10] xx => I, Pos: [9, 32] xx => I, Pos: [9, 32] xx => I, Pos: [12, 16] xx => I, Pos: [12, 16] xx => I, Pos: [16, 24] xx => I, Pos: [16, 24] xx => I, Pos: [17, 45] xx => I, Pos: [17, 45] xx => I, Pos: [20, 51] xx => I, Pos: [20, 51] xx => I, Pos: [21, 25] xx => I, Pos: [21, 25] xx => I, Pos: [23, 26] xx => I, Pos: [23, 26] xx => I, Pos: [25, 43] xx => I, Pos: [25, 43] xx => I, Pos: [34, 49] xx => I, Pos: [34, 49] xx => I, Pos: [36, 55] cc => I, Pos: [36, 55] cc => I, Pos: [37, 41, 42] xcx => c, Pos: [40, 50] xx => I, Pos: [40, 50] xx => I, Pos: [42, 46, 48] xcx => c, Pos: [44, 53] xx => I, Pos: [44, 53] xx => I, Pos: [49, 52] xx => I, Pos: [49, 52] xx => I, Pos: [51, 60] xx => I, Pos: [51, 60] xx => I, Pos: [52, 101] xx => I, Pos: [52, 101] xx => I, Pos: [53, 73] xx => I, Pos: [53, 73] xx => I, Pos: [57, 62] xx => I, Pos: [57, 62] xx => I, Pos: [59, 61] xx => I, Pos: [59, 61] xx => I, Pos: [61, 65] xx => I, Pos: [61, 65] xx => I, Pos: [62, 67] xx => I, Pos: [62, 67] xx => I, Pos: [67, 89] xx => I, Pos: [67, 89] xx => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [69, 97] xx => I, Pos: [69, 97] xx => I, Pos: [71, 90] xx => I, Pos: [71, 90] xx => I, Pos: [72, 76, 78] ccc => cc, Pos: [74, 85] xx => I, Pos: [74, 85] xx => I, Pos: [80, 83, 84] xcx => c, Pos: [84, 87] xx => I, Pos: [84, 87] xx => I, Pos: [85, 118] xx => I, Pos: [85, 118] xx => I, Pos: [86, 95] cc => I, Pos: [86, 95] cc => I, Pos: [87, 91, 98] xcx => c, Pos: [88, 93] cc => I, Pos: [88, 93] cc => I, Pos: [90, 96] xx => I, Pos: [90, 96] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [94, 106] xx => I, Pos: [94, 106] xx => I, Pos: [97, 124] xx => I, Pos: [97, 124] xx => I, Pos: [98, 102] xx => I, Pos: [98, 102] xx => I, Pos: [100, 104] xx => I, Pos: [100, 104] xx => I, Pos: [102, 121] xx => I, Pos: [102, 121] xx => I, Pos: [104, 108] xx => I, Pos: [104, 108] xx => I, Pos: [106, 110] xx => I, Pos: [106, 110] xx => I, Pos: [108, 111] xx => I, Pos: [108, 111] xx => I, Pos: [111, 113] xx => I, Pos: [111, 113] xx => I, Pos: [120, 123] xx => I, Pos: [120, 123] xx => I, Pos: [128, 131] xx => I, Pos: [128, 131] xx => I]

--------End Timer [Generate Plans]:  0.07812047004699707

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 31] xx => I,
 Pos: [8, 10] xx => I,
 Pos: [4, 17] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [12, 16] xx => I,
 Pos: [51, 60] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [34, 49] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [37, 41, 42] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [53, 73] xx => I,
 Pos: [52, 101] xx => I,
 Pos: [62, 67] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [97, 124] xx => I,
 Pos: [90, 96] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [85, 118] xx => I,
 Pos: [84, 87] xx => I,
 Pos: [86, 95] cc => I,
 Pos: [93, 107] cc => I,
 Pos: [94, 106] xx => I,
 Pos: [98, 102] xx => I,
 Pos: [100, 104] xx => I,
 Pos: [108, 111] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 32, Saving: 31

Circuit before: xcxxxxxcxxxxxccxxxccxxcxxxxxxxxxxcxccxccxcxxxxccxxxxxxccxxcxxxxccxxxcxcxcxxxccccxxxcxxcxcxxcccxcxxxcxxxcxxxcxxxxcxcxcxxcxxcxxxxxxcxxx
---------------
Apply:  Pos: [0, 31] xx => I
Apply:  Pos: [8, 10] xx => I
Apply:  Pos: [4, 17] xx => I
Apply:  Pos: [5, 22, 27] xcx => c
Apply:  Pos: [6, 11] xx => I
Apply:  Pos: [9, 32] xx => I
Apply:  Pos: [12, 16] xx => I
Apply:  Pos: [51, 60] xx => I
Apply:  Pos: [21, 25] xx => I
Apply:  Pos: [23, 26] xx => I
Apply:  Pos: [34, 49] xx => I
Apply:  Pos: [36, 55] cc => I
Apply:  Pos: [37, 41, 42] xcx => c
Apply:  Pos: [40, 50] xx => I
Apply:  Pos: [53, 73] xx => I
Apply:  Pos: [52, 101] xx => I
Apply:  Pos: [62, 67] xx => I
Apply:  Pos: [59, 61] xx => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [97, 124] xx => I
Apply:  Pos: [90, 96] xx => I
Apply:  Pos: [72, 76, 78] ccc => cc
Apply:  Pos: [85, 118] xx => I
Apply:  Pos: [84, 87] xx => I
Apply:  Pos: [86, 95] cc => I
Apply:  Pos: [93, 107] cc => I
Apply:  Pos: [94, 106] xx => I
Apply:  Pos: [98, 102] xx => I
Apply:  Pos: [100, 104] xx => I
Apply:  Pos: [108, 111] xx => I
Apply:  Pos: [120, 123] xx => I
Apply:  Pos: [128, 131] xx => I
---------------
Circuit after: cxxccccxccxxxxxcccccxxxccxcxxcccxxxcxcxxccxxxccxccccxxxcxcxcxcxcxxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [9, 14], [0, 7], [9, 14], [13], [14, 7], [17, 15], [17], [2], [18], [8], [15], [0, 14], [14, 7], [14, 7], [8, 12], [13, 11], [3], [13], [4], [14, 7], [19, 8], [7], [12, 7], [11], [10], [12, 0], [1, 8], [18, 3], [0], [6], [19], [0, 7], [14], [6, 12], [1], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [13, 11], [10], [16, 12], [8, 6], [3, 5], [6, 16], [6], [8], [2], [4, 3], [5], [8, 6], [0], [16, 5], [7], [3, 16], [12], [8, 16], [15], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.3123965263366699

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[26, 45]
[11, 52]
[14, 62]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[8, 15, 21]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[26, 45]
[11, 52]
[14, 62]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[4, 6]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.12499141693115234

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 6] cc => I, Pos: [4, 6] cc => I, Pos: [8, 15, 21] ccc => cc, Pos: [11, 52] xx => I, Pos: [11, 52] xx => I, Pos: [14, 62] xx => I, Pos: [14, 62] xx => I, Pos: [26, 45] xx => I, Pos: [26, 45] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 6] cc => I,
 Pos: [8, 15, 21] ccc => cc,
 Pos: [11, 52] xx => I,
 Pos: [14, 62] xx => I,
 Pos: [26, 45] xx => I]
Change: 5, Saving: 5

Circuit before: cxxccccxccxxxxxcccxxxccxcxxcccxxxcxcxxccxxxccxccccxxxcxcxcxcxcxxxcxx
---------------
Apply:  Pos: [4, 6] cc => I
Apply:  Pos: [8, 15, 21] ccc => cc
Apply:  Pos: [11, 52] xx => I
Apply:  Pos: [14, 62] xx => I
Apply:  Pos: [26, 45] xx => I
---------------
Circuit after: cxxccxccxxxcccxxxcxcxcccxxxcxcxxccxxxccccccxxcxcxcxcxcxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [0, 7], [13], [0, 14], [17, 15], [17], [18], [8], [14, 7], [8, 12], [13, 11], [3], [13], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [19], [0, 7], [14], [6, 12], [1], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [13, 11], [16, 12], [8, 6], [3, 5], [6, 16], [6], [8], [4, 3], [5], [8, 6], [0], [16, 5], [7], [3, 16], [12], [8, 16], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.12499141693115234

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 58]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 58]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.10938072204589844

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [8, 58] xx => I, Pos: [8, 58] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 58] xx => I]
Change: 1, Saving: 1

Circuit before: cxxccxccxxxcccxxxcxcxcccxxxcxcxxccxxxccccccxxcxcxcxcxcxxcxx
---------------
Apply:  Pos: [8, 58] xx => I
---------------
Circuit after: cxxccxccxxcccxxxcxcxcccxxxcxcxxccxxxccccccxxcxcxcxcxcxxcx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [13], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [19], [0, 7], [14], [6, 12], [1], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [13, 11], [16, 12], [8, 6], [3, 5], [6, 16], [6], [8], [4, 3], [5], [8, 6], [0], [16, 5], [7], [3, 16], [12], [8, 16], [8], [6], [3, 16], [3], ----End Timer [Execute Mapping]:  0.10938072204589844

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09375619888305664

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cxxccxccxxcccxxxcxcxcccxxxcxcxxccxxxccccccxxcxcxcxcxcxxcx
---------------
---------------
Circuit after: cxxccxccxxcccxxxcxcxcccxxxcxcxxccxxxccccccxxcxcxcxcxcxxcx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [13], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [19], [0, 7], [14], [6, 12], [1], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [13, 11], [16, 12], [8, 6], [3, 5], [6, 16], [6], [8], [4, 3], [5], [8, 6], [0], [16, 5], [7], [3, 16], [12], [8, 16], [8], [6], [3, 16], [3], ----End Timer [Execute Mapping]:  0.09375619888305664

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-x-x-x-x-x-cx-x-x-x-x-x-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-x-x-x-x-cx-x-cx-cx-x-cx-cx-x-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-cx-x-x-x-x-cx-cx-x-x-x-cx-x-cx-x-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-cx-x-cx-x-x-cx-cx-cx-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-x-cx-x-cx-x-cx-x-x-cx-x-x-cx-x-x-x-x-x-x-cx-x-x-x 
     => total size: [135] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 180


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-x-x-cx-cx-x-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-cx-x-cx-cx-cx-x-x-x-cx-x-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-x-cx-x-cx-x-cx-x-cx-x-x-cx-x 
     => total size: [57] (IBM)
 --------------------
 - qubits_num: 18, using gates: [x,cx]
 - circuit depth: 19 - (small)
 - circuit cycle: 86

Reduced: 
 - size: 78 (57.78%)
 - depth: 26 (57.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.046853065490722656

[19], [9, 14], [14], [7], [4], [6], [17], [9, 14], [14], [1], [14], [17], [2], [0, 7], [9, 14], [13], [2], [4], [14, 7], [17, 15], [17], [3], [8, 6], [14], [2], [3], [14], [6], [18], [8], [15], [19], [1], [0, 14], [9], [14, 7], [6, 16], [7], [8, 12], [13, 11], [5], [14, 7], [7], [3], [13], [4], [14, 7], [19, 8], [7], [9], [5], [17], [9], [13], [12, 7], [6, 16], [11], [10], [12, 0], [0], [17], [0], [10], [1, 8], [18, 3], [0], [6], [10], [11, 4], [19], [0, 7], [14], [12, 0], [13], [1], [18], [6, 12], [11, 4], [12, 0], [16, 5], [12], [16], [3], [8, 12], [12], [1], [16, 5], [12], [13, 11], [10], [14], [16, 12], [8, 6], [13, 11], [2], [16, 5], [14], [19], [12], [3, 5], [5], [9], [12], [6, 16], [5], [6], [2], [13, 11], [5], [8], [2], [5], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [3], [12], [8, 16], [3], [19], [15], [8], [6], [11], [3, 16], [3], [11], [17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[2, 7, 8]
[5, 22, 27]
[37, 41, 42]
[42, 46, 48]
[80, 83, 84]
[87, 91, 98]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.2343902587890625

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 31] xx => I, Pos: [0, 31] xx => I, Pos: [2, 7, 8] xcx => c, Pos: [4, 17] xx => I, Pos: [4, 17] xx => I, Pos: [5, 22, 27] xcx => c, Pos: [6, 11] xx => I, Pos: [6, 11] xx => I, Pos: [8, 10] xx => I, Pos: [8, 10] xx => I, Pos: [9, 32] xx => I, Pos: [9, 32] xx => I, Pos: [12, 16] xx => I, Pos: [12, 16] xx => I, Pos: [16, 24] xx => I, Pos: [16, 24] xx => I, Pos: [17, 45] xx => I, Pos: [17, 45] xx => I, Pos: [20, 51] xx => I, Pos: [20, 51] xx => I, Pos: [21, 25] xx => I, Pos: [21, 25] xx => I, Pos: [23, 26] xx => I, Pos: [23, 26] xx => I, Pos: [25, 43] xx => I, Pos: [25, 43] xx => I, Pos: [34, 49] xx => I, Pos: [34, 49] xx => I, Pos: [36, 55] cc => I, Pos: [36, 55] cc => I, Pos: [37, 41, 42] xcx => c, Pos: [40, 50] xx => I, Pos: [40, 50] xx => I, Pos: [42, 46, 48] xcx => c, Pos: [44, 53] xx => I, Pos: [44, 53] xx => I, Pos: [49, 52] xx => I, Pos: [49, 52] xx => I, Pos: [51, 60] xx => I, Pos: [51, 60] xx => I, Pos: [52, 101] xx => I, Pos: [52, 101] xx => I, Pos: [53, 73] xx => I, Pos: [53, 73] xx => I, Pos: [57, 62] xx => I, Pos: [57, 62] xx => I, Pos: [59, 61] xx => I, Pos: [59, 61] xx => I, Pos: [61, 65] xx => I, Pos: [61, 65] xx => I, Pos: [62, 67] xx => I, Pos: [62, 67] xx => I, Pos: [67, 89] xx => I, Pos: [67, 89] xx => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [69, 97] xx => I, Pos: [69, 97] xx => I, Pos: [71, 90] xx => I, Pos: [71, 90] xx => I, Pos: [72, 76, 78] ccc => cc, Pos: [74, 85] xx => I, Pos: [74, 85] xx => I, Pos: [80, 83, 84] xcx => c, Pos: [84, 87] xx => I, Pos: [84, 87] xx => I, Pos: [85, 118] xx => I, Pos: [85, 118] xx => I, Pos: [86, 95] cc => I, Pos: [86, 95] cc => I, Pos: [87, 91, 98] xcx => c, Pos: [88, 93] cc => I, Pos: [88, 93] cc => I, Pos: [90, 96] xx => I, Pos: [90, 96] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [94, 106] xx => I, Pos: [94, 106] xx => I, Pos: [97, 124] xx => I, Pos: [97, 124] xx => I, Pos: [98, 102] xx => I, Pos: [98, 102] xx => I, Pos: [100, 104] xx => I, Pos: [100, 104] xx => I, Pos: [102, 121] xx => I, Pos: [102, 121] xx => I, Pos: [104, 108] xx => I, Pos: [104, 108] xx => I, Pos: [106, 110] xx => I, Pos: [106, 110] xx => I, Pos: [108, 111] xx => I, Pos: [108, 111] xx => I, Pos: [111, 113] xx => I, Pos: [111, 113] xx => I, Pos: [120, 123] xx => I, Pos: [120, 123] xx => I, Pos: [128, 131] xx => I, Pos: [128, 131] xx => I]

--------End Timer [Generate Plans]:  0.07810711860656738

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 31] xx => I,
 Pos: [8, 10] xx => I,
 Pos: [17, 45] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [16, 24] xx => I,
 Pos: [51, 60] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [34, 49] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [37, 41, 42] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [44, 53] xx => I,
 Pos: [52, 101] xx => I,
 Pos: [62, 67] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [97, 124] xx => I,
 Pos: [90, 96] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [85, 118] xx => I,
 Pos: [84, 87] xx => I,
 Pos: [86, 95] cc => I,
 Pos: [88, 93] cc => I,
 Pos: [106, 110] xx => I,
 Pos: [98, 102] xx => I,
 Pos: [100, 104] xx => I,
 Pos: [111, 113] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 32, Saving: 31

Circuit before: xcxxxxxcxxxxxccxxxccxxcxxxxxxxxxxcxccxccxcxxxxccxxxxxxccxxcxxxxccxxxcxcxcxxxccccxxxcxxcxcxxcccxcxxxcxxxcxxxcxxxxcxcxcxxcxxcxxxxxxcxxx
---------------
Apply:  Pos: [0, 31] xx => I
Apply:  Pos: [8, 10] xx => I
Apply:  Pos: [17, 45] xx => I
Apply:  Pos: [5, 22, 27] xcx => c
Apply:  Pos: [6, 11] xx => I
Apply:  Pos: [9, 32] xx => I
Apply:  Pos: [16, 24] xx => I
Apply:  Pos: [51, 60] xx => I
Apply:  Pos: [21, 25] xx => I
Apply:  Pos: [23, 26] xx => I
Apply:  Pos: [34, 49] xx => I
Apply:  Pos: [36, 55] cc => I
Apply:  Pos: [37, 41, 42] xcx => c
Apply:  Pos: [40, 50] xx => I
Apply:  Pos: [44, 53] xx => I
Apply:  Pos: [52, 101] xx => I
Apply:  Pos: [62, 67] xx => I
Apply:  Pos: [59, 61] xx => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [97, 124] xx => I
Apply:  Pos: [90, 96] xx => I
Apply:  Pos: [72, 76, 78] ccc => cc
Apply:  Pos: [85, 118] xx => I
Apply:  Pos: [84, 87] xx => I
Apply:  Pos: [86, 95] cc => I
Apply:  Pos: [88, 93] cc => I
Apply:  Pos: [106, 110] xx => I
Apply:  Pos: [98, 102] xx => I
Apply:  Pos: [100, 104] xx => I
Apply:  Pos: [111, 113] xx => I
Apply:  Pos: [120, 123] xx => I
Apply:  Pos: [128, 131] xx => I
---------------
Circuit after: cxxxccxccxccxxxxcccccxccxcxxcccxxxcxcxxxccxxxcxccxccxcxxccxcxcxcxxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [4], [8, 6], [9, 14], [2], [0, 7], [9, 14], [13], [14, 7], [17, 15], [17], [18], [8], [15], [0, 14], [14, 7], [14, 7], [8, 12], [13, 11], [3], [14, 7], [19, 8], [7], [12, 7], [11], [10], [12, 0], [1, 8], [18, 3], [0], [6], [19], [0, 7], [14], [6, 12], [13], [1], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [10], [16, 12], [8, 6], [2], [3, 5], [6, 16], [6], [13, 11], [5], [8], [4, 3], [8, 6], [0], [16, 5], [7], [3, 16], [12], [8, 16], [15], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.3124973773956299

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 8]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[25, 44]
[6, 47]
[15, 62]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[10, 16, 20]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[25, 44]
[6, 47]
[15, 62]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[5, 8]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.1250758171081543

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 8] cc => I, Pos: [5, 8] cc => I, Pos: [6, 47] xx => I, Pos: [6, 47] xx => I, Pos: [10, 16, 20] ccc => cc, Pos: [15, 62] xx => I, Pos: [15, 62] xx => I, Pos: [25, 44] xx => I, Pos: [25, 44] xx => I]

--------End Timer [Generate Plans]:  0.015628576278686523

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 8] cc => I,
 Pos: [6, 47] xx => I,
 Pos: [10, 16, 20] ccc => cc,
 Pos: [15, 62] xx => I,
 Pos: [25, 44] xx => I]
Change: 5, Saving: 5

Circuit before: cxxxccxccxccxxxxcccxccxcxxcccxxxcxcxxxccxxxcxccxccxcxxccxcxcxcxxxcxx
---------------
Apply:  Pos: [5, 8] cc => I
Apply:  Pos: [6, 47] xx => I
Apply:  Pos: [10, 16, 20] ccc => cc
Apply:  Pos: [15, 62] xx => I
Apply:  Pos: [25, 44] xx => I
---------------
Circuit after: cxxxccxccxxxcccxcxcxcccxxxcxcxxxccxxxcccccxcxxccxcxcxcxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [4], [8, 6], [0, 7], [13], [0, 14], [17, 15], [17], [18], [8], [14, 7], [8, 12], [13, 11], [3], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [19], [0, 7], [14], [6, 12], [13], [1], [18], [12, 0], [16, 5], [12], [16], [3], [8, 12], [16, 12], [8, 6], [3, 5], [6, 16], [6], [13, 11], [5], [8], [4, 3], [8, 6], [0], [16, 5], [7], [3, 16], [12], [8, 16], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.14070439338684082

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[9, 58]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[9, 58]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.10935354232788086

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [9, 58] xx => I, Pos: [9, 58] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [9, 58] xx => I]
Change: 1, Saving: 1

Circuit before: cxxxccxccxxxcccxcxcxcccxxxcxcxxxccxxxcccccxcxxccxcxcxcxxcxx
---------------
Apply:  Pos: [9, 58] xx => I
---------------
Circuit after: cxxxccxccxxcccxcxcxcccxxxcxcxxxccxxxcccccxcxxccxcxcxcxxcx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [4], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [19], [0, 7], [14], [6, 12], [13], [1], [18], [12, 0], [16, 5], [12], [16], [3], [16, 12], [8, 6], [8, 12], [3, 5], [6, 16], [6], [13, 11], [5], [8], [4, 3], [8, 6], [0], [16, 5], [7], [3, 16], [12], [8, 16], [8], [6], [3, 16], [3], ----End Timer [Execute Mapping]:  0.10935354232788086

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09374284744262695

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: cxxxccxccxxcccxcxcxcccxxxcxcxxxccxxxcccccxcxxccxcxcxcxxcx
---------------
---------------
Circuit after: cxxxccxccxxcccxcxcxcccxxxcxcxxxccxxxcccccxcxxccxcxcxcxxcx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [14], [7], [4], [8, 6], [0, 7], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [19], [0, 7], [14], [6, 12], [13], [1], [18], [12, 0], [16, 5], [12], [16], [3], [16, 12], [8, 12], [8, 6], [3, 5], [6, 16], [6], [13, 11], [5], [8], [4, 3], [8, 6], [0], [16, 5], [7], [3, 16], [12], [8, 16], [8], [6], [3, 16], [3], ----End Timer [Execute Mapping]:  0.09374284744262695

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-x-x-x-x-x-cx-x-x-x-x-x-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-x-x-x-x-cx-x-cx-cx-x-cx-cx-x-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-cx-x-x-x-x-cx-cx-x-x-x-cx-x-cx-x-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-cx-x-cx-x-x-cx-cx-cx-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-x-cx-x-cx-x-cx-x-x-cx-x-x-cx-x-x-x-x-x-x-cx-x-x-x 
     => total size: [135] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 180


>> Solved circuit: 
Circuit Info: 
 - circuit: cx-x-x-x-cx-cx-x-cx-cx-x-x-cx-cx-cx-x-cx-x-cx-x-cx-cx-cx-x-x-x-cx-x-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-x-cx-x-cx-x-cx-x-x-cx-x 
     => total size: [57] (IBM)
 --------------------
 - qubits_num: 18, using gates: [cx,x]
 - circuit depth: 20 - (small)
 - circuit cycle: 86

Reduced: 
 - size: 78 (57.78%)
 - depth: 25 (55.56%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.07811951637268066

[19], [9, 14], [14], [7], [4], [6], [17], [9, 14], [14], [1], [14], [17], [2], [0, 7], [9, 14], [13], [2], [4], [14, 7], [17, 15], [17], [3], [8, 6], [14], [2], [3], [14], [6], [18], [8], [15], [19], [1], [0, 14], [9], [14, 7], [6, 16], [7], [8, 12], [13, 11], [5], [14, 7], [7], [3], [13], [4], [14, 7], [19, 8], [7], [9], [5], [17], [9], [13], [12, 7], [6, 16], [11], [10], [12, 0], [0], [17], [0], [10], [1, 8], [18, 3], [0], [6], [10], [11, 4], [19], [0, 7], [14], [12, 0], [13], [1], [18], [6, 12], [11, 4], [12, 0], [16, 5], [12], [16], [3], [8, 12], [12], [1], [16, 5], [12], [13, 11], [10], [14], [16, 12], [8, 6], [13, 11], [2], [16, 5], [14], [19], [12], [3, 5], [5], [9], [12], [6, 16], [5], [6], [2], [13, 11], [5], [8], [2], [5], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [3], [12], [8, 16], [3], [19], [15], [8], [6], [11], [3, 16], [3], [11], [17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[2, 7, 8]
[5, 22, 27]
[37, 41, 42]
[42, 46, 48]
[80, 83, 84]
[87, 91, 98]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[72, 76, 78]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 10]
[6, 11]
[12, 16]
[4, 17]
[16, 24]
[21, 25]
[23, 26]
[0, 31]
[9, 32]
[25, 43]
[17, 45]
[34, 49]
[40, 50]
[20, 51]
[49, 52]
[44, 53]
[51, 60]
[59, 61]
[57, 62]
[61, 65]
[62, 67]
[53, 73]
[74, 85]
[84, 87]
[67, 89]
[71, 90]
[90, 96]
[69, 97]
[52, 101]
[98, 102]
[100, 104]
[94, 106]
[104, 108]
[106, 110]
[108, 111]
[111, 113]
[85, 118]
[102, 121]
[120, 123]
[97, 124]
[128, 131]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[36, 55]
[68, 77]
[88, 93]
[86, 95]
[93, 107]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.21890854835510254

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 31] xx => I, Pos: [0, 31] xx => I, Pos: [2, 7, 8] xcx => c, Pos: [4, 17] xx => I, Pos: [4, 17] xx => I, Pos: [5, 22, 27] xcx => c, Pos: [6, 11] xx => I, Pos: [6, 11] xx => I, Pos: [8, 10] xx => I, Pos: [8, 10] xx => I, Pos: [9, 32] xx => I, Pos: [9, 32] xx => I, Pos: [12, 16] xx => I, Pos: [12, 16] xx => I, Pos: [16, 24] xx => I, Pos: [16, 24] xx => I, Pos: [17, 45] xx => I, Pos: [17, 45] xx => I, Pos: [20, 51] xx => I, Pos: [20, 51] xx => I, Pos: [21, 25] xx => I, Pos: [21, 25] xx => I, Pos: [23, 26] xx => I, Pos: [23, 26] xx => I, Pos: [25, 43] xx => I, Pos: [25, 43] xx => I, Pos: [34, 49] xx => I, Pos: [34, 49] xx => I, Pos: [36, 55] cc => I, Pos: [36, 55] cc => I, Pos: [37, 41, 42] xcx => c, Pos: [40, 50] xx => I, Pos: [40, 50] xx => I, Pos: [42, 46, 48] xcx => c, Pos: [44, 53] xx => I, Pos: [44, 53] xx => I, Pos: [49, 52] xx => I, Pos: [49, 52] xx => I, Pos: [51, 60] xx => I, Pos: [51, 60] xx => I, Pos: [52, 101] xx => I, Pos: [52, 101] xx => I, Pos: [53, 73] xx => I, Pos: [53, 73] xx => I, Pos: [57, 62] xx => I, Pos: [57, 62] xx => I, Pos: [59, 61] xx => I, Pos: [59, 61] xx => I, Pos: [61, 65] xx => I, Pos: [61, 65] xx => I, Pos: [62, 67] xx => I, Pos: [62, 67] xx => I, Pos: [67, 89] xx => I, Pos: [67, 89] xx => I, Pos: [68, 77] cc => I, Pos: [68, 77] cc => I, Pos: [69, 97] xx => I, Pos: [69, 97] xx => I, Pos: [71, 90] xx => I, Pos: [71, 90] xx => I, Pos: [72, 76, 78] ccc => cc, Pos: [74, 85] xx => I, Pos: [74, 85] xx => I, Pos: [80, 83, 84] xcx => c, Pos: [84, 87] xx => I, Pos: [84, 87] xx => I, Pos: [85, 118] xx => I, Pos: [85, 118] xx => I, Pos: [86, 95] cc => I, Pos: [86, 95] cc => I, Pos: [87, 91, 98] xcx => c, Pos: [88, 93] cc => I, Pos: [88, 93] cc => I, Pos: [90, 96] xx => I, Pos: [90, 96] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [94, 106] xx => I, Pos: [94, 106] xx => I, Pos: [97, 124] xx => I, Pos: [97, 124] xx => I, Pos: [98, 102] xx => I, Pos: [98, 102] xx => I, Pos: [100, 104] xx => I, Pos: [100, 104] xx => I, Pos: [102, 121] xx => I, Pos: [102, 121] xx => I, Pos: [104, 108] xx => I, Pos: [104, 108] xx => I, Pos: [106, 110] xx => I, Pos: [106, 110] xx => I, Pos: [108, 111] xx => I, Pos: [108, 111] xx => I, Pos: [111, 113] xx => I, Pos: [111, 113] xx => I, Pos: [120, 123] xx => I, Pos: [120, 123] xx => I, Pos: [128, 131] xx => I, Pos: [128, 131] xx => I]

Plan: 1
[Pos: [0, 31] xx => I,
 Pos: [2, 7, 8] xcx => c,
 Pos: [4, 17] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [12, 16] xx => I,
 Pos: [20, 51] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [34, 49] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [37, 41, 42] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [44, 53] xx => I,
 Pos: [52, 101] xx => I,
 Pos: [57, 62] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [67, 89] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [69, 97] xx => I,
 Pos: [71, 90] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [74, 85] xx => I,
 Pos: [80, 83, 84] xcx => c,
 Pos: [86, 95] cc => I,
 Pos: [87, 91, 98] xcx => c,
 Pos: [88, 93] cc => I,
 Pos: [94, 106] xx => I,
 Pos: [100, 104] xx => I,
 Pos: [102, 121] xx => I,
 Pos: [108, 111] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 34, Saving: 33

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09362626075744629

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 31] xx => I,
 Pos: [2, 7, 8] xcx => c,
 Pos: [4, 17] xx => I,
 Pos: [5, 22, 27] xcx => c,
 Pos: [6, 11] xx => I,
 Pos: [9, 32] xx => I,
 Pos: [12, 16] xx => I,
 Pos: [20, 51] xx => I,
 Pos: [21, 25] xx => I,
 Pos: [23, 26] xx => I,
 Pos: [34, 49] xx => I,
 Pos: [36, 55] cc => I,
 Pos: [37, 41, 42] xcx => c,
 Pos: [40, 50] xx => I,
 Pos: [44, 53] xx => I,
 Pos: [52, 101] xx => I,
 Pos: [57, 62] xx => I,
 Pos: [59, 61] xx => I,
 Pos: [67, 89] xx => I,
 Pos: [68, 77] cc => I,
 Pos: [69, 97] xx => I,
 Pos: [71, 90] xx => I,
 Pos: [72, 76, 78] ccc => cc,
 Pos: [74, 85] xx => I,
 Pos: [80, 83, 84] xcx => c,
 Pos: [86, 95] cc => I,
 Pos: [87, 91, 98] xcx => c,
 Pos: [88, 93] cc => I,
 Pos: [94, 106] xx => I,
 Pos: [100, 104] xx => I,
 Pos: [102, 121] xx => I,
 Pos: [108, 111] xx => I,
 Pos: [120, 123] xx => I,
 Pos: [128, 131] xx => I]
Change: 34, Saving: 33

Circuit before: xcxxxxxcxxxxxccxxxccxxcxxxxxxxxxxcxccxccxcxxxxccxxxxxxccxxcxxxxccxxxcxcxcxxxccccxxxcxxcxcxxcccxcxxxcxxxcxxxcxxxxcxcxcxxcxxcxxxxxxcxxx
---------------
Apply:  Pos: [0, 31] xx => I
Apply:  Pos: [2, 7, 8] xcx => c
Apply:  Pos: [4, 17] xx => I
Apply:  Pos: [5, 22, 27] xcx => c
Apply:  Pos: [6, 11] xx => I
Apply:  Pos: [9, 32] xx => I
Apply:  Pos: [12, 16] xx => I
Apply:  Pos: [20, 51] xx => I
Apply:  Pos: [21, 25] xx => I
Apply:  Pos: [23, 26] xx => I
Apply:  Pos: [34, 49] xx => I
Apply:  Pos: [36, 55] cc => I
Apply:  Pos: [37, 41, 42] xcx => c
Apply:  Pos: [40, 50] xx => I
Apply:  Pos: [44, 53] xx => I
Apply:  Pos: [52, 101] xx => I
Apply:  Pos: [57, 62] xx => I
Apply:  Pos: [59, 61] xx => I
Apply:  Pos: [67, 89] xx => I
Apply:  Pos: [68, 77] cc => I
Apply:  Pos: [69, 97] xx => I
Apply:  Pos: [71, 90] xx => I
Apply:  Pos: [72, 76, 78] ccc => cc
Apply:  Pos: [74, 85] xx => I
Apply:  Pos: [80, 83, 84] xcx => c
Apply:  Pos: [86, 95] cc => I
Apply:  Pos: [87, 91, 98] xcx => c
Apply:  Pos: [88, 93] cc => I
Apply:  Pos: [94, 106] xx => I
Apply:  Pos: [100, 104] xx => I
Apply:  Pos: [102, 121] xx => I
Apply:  Pos: [108, 111] xx => I
Apply:  Pos: [120, 123] xx => I
Apply:  Pos: [128, 131] xx => I
---------------
Circuit after: ccxcxccxccxxxxcccccxxccxcxcxccxxccxxcccxxccxccxcxxcxcxcxxccxxxxcxx

--------End Timer [apply mapping plan]:  0.0

[9, 14], [9, 14], [7], [8, 6], [14], [0, 7], [9, 14], [13], [14, 7], [17, 15], [2], [18], [8], [15], [0, 14], [14, 7], [14, 7], [8, 12], [13, 11], [3], [4], [14, 7], [19, 8], [7], [12, 7], [11], [12, 0], [17], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [8, 6], [14], [3, 5], [6, 16], [6], [13, 11], [8], [2], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [8, 16], [19], [15], [8], [6], [3, 16], [3], [17], ----End Timer [Execute Mapping]:  0.31253480911254883

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 45]
[11, 56]
[23, 61]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[6, 12, 17]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[8, 45]
[11, 56]
[23, 61]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.10938525199890137

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [6, 12, 17] ccc => cc, Pos: [8, 45] xx => I, Pos: [8, 45] xx => I, Pos: [11, 56] xx => I, Pos: [11, 56] xx => I, Pos: [23, 61] xx => I, Pos: [23, 61] xx => I]

Plan: 1
[Pos: [6, 12, 17] ccc => cc,
 Pos: [8, 45] xx => I,
 Pos: [11, 56] xx => I,
 Pos: [23, 61] xx => I]
Change: 4, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.01562809944152832

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [6, 12, 17] ccc => cc,
 Pos: [8, 45] xx => I,
 Pos: [11, 56] xx => I,
 Pos: [23, 61] xx => I]
Change: 4, Saving: 4

Circuit before: xcxccxccxxxxcccxxccxcxcxccxxccxxcccxxccxccxcxxcxcxcxxccxxxxcxx
---------------
Apply:  Pos: [6, 12, 17] ccc => cc
Apply:  Pos: [8, 45] xx => I
Apply:  Pos: [11, 56] xx => I
Apply:  Pos: [23, 61] xx => I
---------------
Circuit after: xcxccxccxxcccxxcxcxcccxxccxxcccxxccxccxcxcxcxcxxccxxxcx

--------End Timer [apply mapping plan]:  0.0

[7], [8, 6], [14], [0, 7], [9, 14], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [8, 6], [14], [3, 5], [6, 16], [6], [13, 11], [8], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [3, 16], [8, 16], [19], [8], [6], [3, 16], [3], ----End Timer [Execute Mapping]:  0.1250133514404297

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 53]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[49, 53]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.09372758865356445

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [49, 53] cc => I, Pos: [49, 53] cc => I]

Plan: 1
[Pos: [49, 53] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [49, 53] cc => I]
Change: 1, Saving: 1

Circuit before: xcxccxccxxcccxxcxcxcccxxccxxcccxxccxccxcxcxcxcxxccxxxcx
---------------
Apply:  Pos: [49, 53] cc => I
---------------
Circuit after: xcxccxccxxcccxxcxcxcccxxccxxcccxxccxccxcxcxcxcxxcxxxx

--------End Timer [apply mapping plan]:  0.0

[7], [8, 6], [14], [0, 7], [9, 14], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [8, 6], [14], [3, 5], [6, 16], [6], [13, 11], [8], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.09372758865356445

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.07810664176940918

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[7], [8, 6], [14], [0, 7], [9, 14], [13], [0, 14], [17, 15], [18], [8], [14, 7], [8, 12], [13, 11], [3], [4], [19, 8], [7], [12, 7], [11], [12, 0], [1, 8], [18, 3], [0], [6], [0, 7], [6, 12], [13], [18], [12, 0], [16, 5], [8, 12], [16], [3], [16, 12], [8, 6], [14], [3, 5], [6, 16], [6], [13, 11], [8], [4, 3], [5], [8, 6], [0], [16, 5], [7], [1], [8, 16], [19], [8], [6], [3], ----End Timer [Execute Mapping]:  0.07810664176940918

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-x-x-x-x-x-cx-x-x-x-x-x-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-x-x-x-x-cx-x-cx-cx-x-cx-cx-x-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-cx-x-x-x-x-cx-cx-x-x-x-cx-x-cx-x-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-cx-x-cx-x-x-cx-cx-cx-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-cx-x-x-x-x-cx-x-cx-x-cx-x-x-cx-x-x-cx-x-x-x-x-x-x-cx-x-x-x 
     => total size: [135] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 180


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-x-cx-cx-x-cx-cx-x-x-cx-cx-cx-x-x-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-x-cx-x-cx-x-cx-x-cx-x-x-cx-x-x-x-x 
     => total size: [53] (IBM)
 --------------------
 - qubits_num: 18, using gates: [cx,x]
 - circuit depth: 17 - (small)
 - circuit cycle: 80

Reduced: 
 - size: 82 (60.74%)
 - depth: 28 (62.22%)

