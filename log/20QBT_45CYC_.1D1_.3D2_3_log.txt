----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374380111694336

[7], [2], [11, 0], [9, 1], [8, 19], [7], [17, 9], [4, 6], [10, 18], [0, 3], [7], [5, 1], [11, 9], [17, 10], [4, 6], [14], [10], [7, 9], [0, 3], [16, 15], [5, 1], [9], [14], [15], [4], [16], [6, 17], [9], [3], [12, 19], [16, 15], [9], [11, 0], [14, 4], [19, 2], [9], [3, 18], [6, 11], [16, 15], [9], [5], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [11], [2, 18], [13, 17], [14, 4], [7, 10], [2], [19], [11], [9, 1], [3, 18], [4, 17], [13, 12], [19], [13], [10, 2], [15, 11], [2], [1], [5], [4, 17], [6, 15], [1], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [16, 11], [8, 7], [9], [2, 18], [8, 7], [2], [16, 6], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [16, 11], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [7, 19], [16, 6], [1, 0], [0], [7, 19], [12, 8], [9, 10], [3, 18], [14, 4], [10], [8, 19], [6, 15], [0, 3], [13, 12], [8], [14], [12, 19], [3, 18], [1, 0], [5], [12, 8], [6, 17], [10, 3], [4, 13], [8], [3], [11, 9], [6, 17], [5], [15], [14], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [16], [13], [11, 9], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [16], [3], [8, 7], [10, 2], [13], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [13, 17], [16, 6], [9, 1], [13, 17], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [4], [11], [19], [13], [4], [2], [6], [15, 5], [1, 0], [17, 7], [4, 6], [10, 18], [5, 1], [15, 11], [12, 8], [17, 7], [7], [3], [0], [4], [2], [6, 11], [10, 18], [16, 15], [11], [0], [10, 2], [12, 19], [6, 17], [11], [19], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[136, 142, 149]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[61, 70, 72]
[124, 130, 134]
[189, 214, 217]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 122, 127]
[137, 143, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.0781080722808838

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] xx => I, Pos: [0, 5] xx => I, Pos: [5, 10] xx => I, Pos: [5, 10] xx => I, Pos: [7, 14] cc => I, Pos: [7, 14] cc => I, Pos: [9, 18] cc => I, Pos: [9, 18] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [15, 22] xx => I, Pos: [15, 22] xx => I, Pos: [21, 27] xx => I, Pos: [21, 27] xx => I, Pos: [27, 31] xx => I, Pos: [27, 31] xx => I, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [31, 35] xx => I, Pos: [31, 35] xx => I, Pos: [35, 39] xx => I, Pos: [35, 39] xx => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [40, 74] xx => I, Pos: [40, 74] xx => I, Pos: [56, 63] xx => I, Pos: [56, 63] xx => I, Pos: [61, 70, 72] xcx => c, Pos: [62, 68] xx => I, Pos: [62, 68] xx => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [73, 77] xx => I, Pos: [73, 77] xx => I, Pos: [89, 103] cc => I, Pos: [89, 103] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 122, 127] ccc => cc, Pos: [124, 130, 134] xcx => c, Pos: [125, 140] xx => I, Pos: [125, 140] xx => I, Pos: [129, 138] xx => I, Pos: [129, 138] xx => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [135, 162] xx => I, Pos: [135, 162] xx => I, Pos: [136, 142, 149] ccc => cc, Pos: [137, 143, 150] ccc => cc, Pos: [138, 146] xx => I, Pos: [138, 146] xx => I, Pos: [147, 161] xx => I, Pos: [147, 161] xx => I, Pos: [158, 165] xx => I, Pos: [158, 165] xx => I, Pos: [165, 168] xx => I, Pos: [165, 168] xx => I, Pos: [176, 179] cc => I, Pos: [176, 179] cc => I, Pos: [184, 192] xx => I, Pos: [184, 192] xx => I, Pos: [187, 191] xx => I, Pos: [187, 191] xx => I, Pos: [189, 214, 217] xcx => c, Pos: [192, 207] xx => I, Pos: [192, 207] xx => I, Pos: [196, 202] cc => I, Pos: [196, 202] cc => I, Pos: [198, 209] cc => I, Pos: [198, 209] cc => I, Pos: [205, 212] xx => I, Pos: [205, 212] xx => I, Pos: [211, 216] xx => I, Pos: [211, 216] xx => I]

Plan: 1
[Pos: [0, 5] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [21, 27] xx => I,
 Pos: [30, 38] cc => I,
 Pos: [31, 35] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [129, 138] xx => I,
 Pos: [131, 137] cc => I,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [158, 165] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [184, 192] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 96

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [21, 27] xx => I,
 Pos: [30, 38] cc => I,
 Pos: [31, 35] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [129, 138] xx => I,
 Pos: [131, 137] cc => I,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [158, 165] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [184, 192] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 96

Circuit before: xxcccxccccxccccxxccccxxxxxcxxccxcccxcccxxxxxccccxccccxxcxccccxxxccccxxccxxxccxcccxxcccxxxccxccxccccxxxcccccccccccxcccccxccccxxcccxccccxxccxxxccccxxxxccccxccccxxxxxccxxxxxxxcccxcccccccxxccxxxxxxxcccccccccxxxxxcccxxcccxxcccxccc
---------------
Apply:  Pos: [0, 5] xx => I
Apply:  Pos: [7, 14] cc => I
Apply:  Pos: [9, 18] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [15, 22] xx => I
Apply:  Pos: [21, 27] xx => I
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [31, 35] xx => I
Apply:  Pos: [40, 74] xx => I
Apply:  Pos: [56, 63] xx => I
Apply:  Pos: [61, 70, 72] xcx => c
Apply:  Pos: [62, 68] xx => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [73, 77] xx => I
Apply:  Pos: [89, 103] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 122, 127] ccc => cc
Apply:  Pos: [124, 130, 134] xcx => c
Apply:  Pos: [125, 140] xx => I
Apply:  Pos: [129, 138] xx => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [135, 162] xx => I
Apply:  Pos: [136, 142, 149] ccc => cc
Apply:  Pos: [147, 161] xx => I
Apply:  Pos: [158, 165] xx => I
Apply:  Pos: [176, 179] cc => I
Apply:  Pos: [184, 192] xx => I
Apply:  Pos: [187, 191] xx => I
Apply:  Pos: [189, 214, 217] xcx => c
Apply:  Pos: [196, 202] cc => I
Apply:  Pos: [198, 209] cc => I
Apply:  Pos: [205, 212] xx => I
Apply:  Pos: [211, 216] xx => I
---------------
Circuit after: xcccccxccxccxxxcxccccccxxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxccccccccccxccccxxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [11, 0], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [11, 0], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [14, 4], [7, 10], [10, 2], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 8], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  1.0781080722808838

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 18]
[43, 50]
[41, 51]
[89, 95]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 18]
[43, 50]
[41, 51]
[89, 95]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.9374651908874512

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 18] cc => I, Pos: [1, 18] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [43, 50] cc => I, Pos: [43, 50] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I]

Plan: 1
[Pos: [1, 18] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 95] cc => I]
Change: 4, Saving: 16

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 18] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 95] cc => I]
Change: 4, Saving: 16

Circuit before: xcccccxccxccxxxcxccccccxxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxccccccccccxccccxxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
Apply:  Pos: [1, 18] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [43, 50] cc => I
Apply:  Pos: [89, 95] cc => I
---------------
Circuit after: xccccxccxccxxxcxcccccxxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxcccccccccxcccxxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.9374651908874512

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.8281781673431396

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[2], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.8281781673431396

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-x-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-x-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx 
     => total size: [149] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 76 (33.78%)
 - cycle: 112 (31.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09373116493225098

[7], [2], [11, 0], [9, 1], [8, 19], [7], [17, 9], [4, 6], [10, 18], [0, 3], [7], [5, 1], [11, 9], [17, 10], [4, 6], [14], [10], [7, 9], [0, 3], [16, 15], [5, 1], [9], [14], [15], [4], [16], [6, 17], [9], [3], [12, 19], [16, 15], [9], [11, 0], [14, 4], [19, 2], [9], [3, 18], [6, 11], [16, 15], [9], [5], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [11], [2, 18], [13, 17], [14, 4], [7, 10], [2], [19], [11], [9, 1], [3, 18], [4, 17], [13, 12], [19], [13], [10, 2], [15, 11], [2], [1], [5], [4, 17], [6, 15], [1], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [16, 11], [8, 7], [9], [2, 18], [8, 7], [2], [16, 6], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [16, 11], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [7, 19], [16, 6], [1, 0], [0], [7, 19], [12, 8], [9, 10], [3, 18], [14, 4], [10], [8, 19], [6, 15], [0, 3], [13, 12], [8], [14], [12, 19], [3, 18], [1, 0], [5], [12, 8], [6, 17], [10, 3], [4, 13], [8], [3], [11, 9], [6, 17], [5], [15], [14], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [16], [13], [11, 9], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [16], [3], [8, 7], [10, 2], [13], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [13, 17], [16, 6], [9, 1], [13, 17], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [4], [11], [19], [13], [4], [2], [6], [15, 5], [1, 0], [17, 7], [4, 6], [10, 18], [5, 1], [15, 11], [12, 8], [17, 7], [7], [3], [0], [4], [2], [6, 11], [10, 18], [16, 15], [11], [0], [10, 2], [12, 19], [6, 17], [11], [19], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[136, 142, 149]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[61, 70, 72]
[124, 130, 134]
[189, 214, 217]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 122, 127]
[137, 143, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.0625190734863281

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] xx => I, Pos: [0, 5] xx => I, Pos: [5, 10] xx => I, Pos: [5, 10] xx => I, Pos: [7, 14] cc => I, Pos: [7, 14] cc => I, Pos: [9, 18] cc => I, Pos: [9, 18] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [15, 22] xx => I, Pos: [15, 22] xx => I, Pos: [21, 27] xx => I, Pos: [21, 27] xx => I, Pos: [27, 31] xx => I, Pos: [27, 31] xx => I, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [31, 35] xx => I, Pos: [31, 35] xx => I, Pos: [35, 39] xx => I, Pos: [35, 39] xx => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [40, 74] xx => I, Pos: [40, 74] xx => I, Pos: [56, 63] xx => I, Pos: [56, 63] xx => I, Pos: [61, 70, 72] xcx => c, Pos: [62, 68] xx => I, Pos: [62, 68] xx => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [73, 77] xx => I, Pos: [73, 77] xx => I, Pos: [89, 103] cc => I, Pos: [89, 103] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 122, 127] ccc => cc, Pos: [124, 130, 134] xcx => c, Pos: [125, 140] xx => I, Pos: [125, 140] xx => I, Pos: [129, 138] xx => I, Pos: [129, 138] xx => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [135, 162] xx => I, Pos: [135, 162] xx => I, Pos: [136, 142, 149] ccc => cc, Pos: [137, 143, 150] ccc => cc, Pos: [138, 146] xx => I, Pos: [138, 146] xx => I, Pos: [147, 161] xx => I, Pos: [147, 161] xx => I, Pos: [158, 165] xx => I, Pos: [158, 165] xx => I, Pos: [165, 168] xx => I, Pos: [165, 168] xx => I, Pos: [176, 179] cc => I, Pos: [176, 179] cc => I, Pos: [184, 192] xx => I, Pos: [184, 192] xx => I, Pos: [187, 191] xx => I, Pos: [187, 191] xx => I, Pos: [189, 214, 217] xcx => c, Pos: [192, 207] xx => I, Pos: [192, 207] xx => I, Pos: [196, 202] cc => I, Pos: [196, 202] cc => I, Pos: [198, 209] cc => I, Pos: [198, 209] cc => I, Pos: [205, 212] xx => I, Pos: [205, 212] xx => I, Pos: [211, 216] xx => I, Pos: [211, 216] xx => I]

Plan: 1
[Pos: [0, 5] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [21, 27] xx => I,
 Pos: [30, 38] cc => I,
 Pos: [31, 35] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [129, 138] xx => I,
 Pos: [131, 137] cc => I,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [158, 165] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [184, 192] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 36

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09374356269836426

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [21, 27] xx => I,
 Pos: [30, 38] cc => I,
 Pos: [31, 35] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [129, 138] xx => I,
 Pos: [131, 137] cc => I,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [158, 165] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [184, 192] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 36

Circuit before: xxcccxccccxccccxxccccxxxxxcxxccxcccxcccxxxxxccccxccccxxcxccccxxxccccxxccxxxccxcccxxcccxxxccxccxccccxxxcccccccccccxcccccxccccxxcccxccccxxccxxxccccxxxxccccxccccxxxxxccxxxxxxxcccxcccccccxxccxxxxxxxcccccccccxxxxxcccxxcccxxcccxccc
---------------
Apply:  Pos: [0, 5] xx => I
Apply:  Pos: [7, 14] cc => I
Apply:  Pos: [9, 18] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [15, 22] xx => I
Apply:  Pos: [21, 27] xx => I
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [31, 35] xx => I
Apply:  Pos: [40, 74] xx => I
Apply:  Pos: [56, 63] xx => I
Apply:  Pos: [61, 70, 72] xcx => c
Apply:  Pos: [62, 68] xx => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [73, 77] xx => I
Apply:  Pos: [89, 103] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 122, 127] ccc => cc
Apply:  Pos: [124, 130, 134] xcx => c
Apply:  Pos: [125, 140] xx => I
Apply:  Pos: [129, 138] xx => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [135, 162] xx => I
Apply:  Pos: [136, 142, 149] ccc => cc
Apply:  Pos: [147, 161] xx => I
Apply:  Pos: [158, 165] xx => I
Apply:  Pos: [176, 179] cc => I
Apply:  Pos: [184, 192] xx => I
Apply:  Pos: [187, 191] xx => I
Apply:  Pos: [189, 214, 217] xcx => c
Apply:  Pos: [196, 202] cc => I
Apply:  Pos: [198, 209] cc => I
Apply:  Pos: [205, 212] xx => I
Apply:  Pos: [211, 216] xx => I
---------------
Circuit after: xcccccxccxccxxxcxccccccxxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxccccccccccxccccxxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [11, 0], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [11, 0], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [14, 4], [7, 10], [10, 2], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 8], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  1.1562626361846924

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 18]
[43, 50]
[41, 51]
[89, 95]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 18]
[43, 50]
[41, 51]
[89, 95]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.9218540191650391

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 18] cc => I, Pos: [1, 18] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [43, 50] cc => I, Pos: [43, 50] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I]

Plan: 1
[Pos: [1, 18] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 95] cc => I]
Change: 4, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 18] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 95] cc => I]
Change: 4, Saving: 4

Circuit before: xcccccxccxccxxxcxccccccxxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxccccccccccxccccxxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
Apply:  Pos: [1, 18] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [43, 50] cc => I
Apply:  Pos: [89, 95] cc => I
---------------
Circuit after: xccccxccxccxxxcxcccccxxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxcccccccccxcccxxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.9218540191650391

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.8128671646118164

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[2], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.8128671646118164

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-x-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-x-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx 
     => total size: [149] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 28 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 76 (33.78%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374189376831055

[7], [2], [11, 0], [9, 1], [8, 19], [7], [17, 9], [4, 6], [10, 18], [0, 3], [7], [5, 1], [11, 9], [17, 10], [4, 6], [14], [10], [7, 9], [0, 3], [16, 15], [5, 1], [9], [14], [15], [4], [16], [6, 17], [9], [3], [12, 19], [16, 15], [9], [11, 0], [14, 4], [19, 2], [9], [3, 18], [6, 11], [16, 15], [9], [5], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [11], [2, 18], [13, 17], [14, 4], [7, 10], [2], [19], [11], [9, 1], [3, 18], [4, 17], [13, 12], [19], [13], [10, 2], [15, 11], [2], [1], [5], [4, 17], [6, 15], [1], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [16, 11], [8, 7], [9], [2, 18], [8, 7], [2], [16, 6], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [16, 11], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [7, 19], [16, 6], [1, 0], [0], [7, 19], [12, 8], [9, 10], [3, 18], [14, 4], [10], [8, 19], [6, 15], [0, 3], [13, 12], [8], [14], [12, 19], [3, 18], [1, 0], [5], [12, 8], [6, 17], [10, 3], [4, 13], [8], [3], [11, 9], [6, 17], [5], [15], [14], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [16], [13], [11, 9], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [16], [3], [8, 7], [10, 2], [13], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [13, 17], [16, 6], [9, 1], [13, 17], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [4], [11], [19], [13], [4], [2], [6], [15, 5], [1, 0], [17, 7], [4, 6], [10, 18], [5, 1], [15, 11], [12, 8], [17, 7], [7], [3], [0], [4], [2], [6, 11], [10, 18], [16, 15], [11], [0], [10, 2], [12, 19], [6, 17], [11], [19], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[136, 142, 149]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[61, 70, 72]
[124, 130, 134]
[189, 214, 217]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 122, 127]
[137, 143, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.07828950881958

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] xx => I, Pos: [0, 5] xx => I, Pos: [5, 10] xx => I, Pos: [5, 10] xx => I, Pos: [7, 14] cc => I, Pos: [7, 14] cc => I, Pos: [9, 18] cc => I, Pos: [9, 18] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [15, 22] xx => I, Pos: [15, 22] xx => I, Pos: [21, 27] xx => I, Pos: [21, 27] xx => I, Pos: [27, 31] xx => I, Pos: [27, 31] xx => I, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [31, 35] xx => I, Pos: [31, 35] xx => I, Pos: [35, 39] xx => I, Pos: [35, 39] xx => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [40, 74] xx => I, Pos: [40, 74] xx => I, Pos: [56, 63] xx => I, Pos: [56, 63] xx => I, Pos: [61, 70, 72] xcx => c, Pos: [62, 68] xx => I, Pos: [62, 68] xx => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [73, 77] xx => I, Pos: [73, 77] xx => I, Pos: [89, 103] cc => I, Pos: [89, 103] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 122, 127] ccc => cc, Pos: [124, 130, 134] xcx => c, Pos: [125, 140] xx => I, Pos: [125, 140] xx => I, Pos: [129, 138] xx => I, Pos: [129, 138] xx => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [135, 162] xx => I, Pos: [135, 162] xx => I, Pos: [136, 142, 149] ccc => cc, Pos: [137, 143, 150] ccc => cc, Pos: [138, 146] xx => I, Pos: [138, 146] xx => I, Pos: [147, 161] xx => I, Pos: [147, 161] xx => I, Pos: [158, 165] xx => I, Pos: [158, 165] xx => I, Pos: [165, 168] xx => I, Pos: [165, 168] xx => I, Pos: [176, 179] cc => I, Pos: [176, 179] cc => I, Pos: [184, 192] xx => I, Pos: [184, 192] xx => I, Pos: [187, 191] xx => I, Pos: [187, 191] xx => I, Pos: [189, 214, 217] xcx => c, Pos: [192, 207] xx => I, Pos: [192, 207] xx => I, Pos: [196, 202] cc => I, Pos: [196, 202] cc => I, Pos: [198, 209] cc => I, Pos: [198, 209] cc => I, Pos: [205, 212] xx => I, Pos: [205, 212] xx => I, Pos: [211, 216] xx => I, Pos: [211, 216] xx => I]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 10] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [27, 31] xx => I,
 Pos: [30, 38] cc => I,
 Pos: [35, 39] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [138, 146] xx => I,
 Pos: [137, 143, 150] ccc => cc,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [165, 168] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [192, 207] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 94

Circuit before: xxcccxccccxccccxxccccxxxxxcxxccxcccxcccxxxxxccccxccccxxcxccccxxxccccxxccxxxccxcccxxcccxxxccxccxccccxxxcccccccccccxcccccxccccxxcccxccccxxccxxxccccxxxxccccxccccxxxxxccxxxxxxxcccxcccccccxxccxxxxxxxcccccccccxxxxxcccxxcccxxcccxccc
---------------
Apply:  Pos: [5, 10] xx => I
Apply:  Pos: [7, 14] cc => I
Apply:  Pos: [9, 18] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [15, 22] xx => I
Apply:  Pos: [27, 31] xx => I
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [35, 39] xx => I
Apply:  Pos: [40, 74] xx => I
Apply:  Pos: [56, 63] xx => I
Apply:  Pos: [61, 70, 72] xcx => c
Apply:  Pos: [62, 68] xx => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [73, 77] xx => I
Apply:  Pos: [89, 103] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 122, 127] ccc => cc
Apply:  Pos: [124, 130, 134] xcx => c
Apply:  Pos: [125, 140] xx => I
Apply:  Pos: [138, 146] xx => I
Apply:  Pos: [137, 143, 150] ccc => cc
Apply:  Pos: [135, 162] xx => I
Apply:  Pos: [136, 142, 149] ccc => cc
Apply:  Pos: [147, 161] xx => I
Apply:  Pos: [165, 168] xx => I
Apply:  Pos: [176, 179] cc => I
Apply:  Pos: [192, 207] xx => I
Apply:  Pos: [187, 191] xx => I
Apply:  Pos: [189, 214, 217] xcx => c
Apply:  Pos: [196, 202] cc => I
Apply:  Pos: [198, 209] cc => I
Apply:  Pos: [205, 212] xx => I
Apply:  Pos: [211, 216] xx => I
---------------
Circuit after: xxcccccccxccxxxxcxccccccxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxcccccccxcccccxccccxxccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [11, 0], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [9], [15], [4], [16], [6, 17], [3], [12, 19], [11, 0], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [14, 4], [7, 10], [10, 2], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 8], [12, 19], [1, 0], [5], [6, 17], [10, 3], [4, 13], [11, 1], [4, 6], [15], [12, 8], [9, 1], [6, 17], [7, 10], [12], [13], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  1.0939130783081055

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 19]
[43, 50]
[41, 51]
[89, 98]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[92, 96, 100]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 19]
[43, 50]
[41, 51]
[89, 98]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.9378411769866943

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 19] cc => I, Pos: [2, 19] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [43, 50] cc => I, Pos: [43, 50] cc => I, Pos: [89, 98] cc => I, Pos: [89, 98] cc => I, Pos: [92, 96, 100] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 19] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 98] cc => I,
 Pos: [92, 96, 100] ccc => cc]
Change: 5, Saving: 18

Circuit before: xxcccccccxccxxxxcxccccccxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxcccccccxcccccxccccxxccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc
---------------
Apply:  Pos: [2, 19] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [43, 50] cc => I
Apply:  Pos: [89, 98] cc => I
Apply:  Pos: [92, 96, 100] ccc => cc
---------------
Circuit after: xxccccccxccxxxxcxcccccxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccccxccxxccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [9], [15], [4], [16], [6, 17], [3], [12, 19], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [5], [4, 6], [10, 3], [4, 13], [11, 1], [6, 17], [15], [9, 1], [7, 10], [12], [13], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.9378411769866943

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.8124434947967529

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxccccccxccxxxxcxcccccxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccccxccxxccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc
---------------
---------------
Circuit after: xxccccccxccxxxxcxcccccxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccccxccxxccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [9], [15], [4], [16], [6, 17], [3], [12, 19], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [5], [4, 6], [10, 3], [4, 13], [11, 1], [6, 17], [15], [9, 1], [7, 10], [12], [13], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.8124434947967529

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-x-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx 
     => total size: [149] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 76 (33.78%)
 - cycle: 112 (31.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09411740303039551

[7], [2], [11, 0], [9, 1], [8, 19], [7], [17, 9], [4, 6], [10, 18], [0, 3], [7], [5, 1], [11, 9], [17, 10], [4, 6], [14], [10], [7, 9], [0, 3], [16, 15], [5, 1], [9], [14], [15], [4], [16], [6, 17], [9], [3], [12, 19], [16, 15], [9], [11, 0], [14, 4], [19, 2], [9], [3, 18], [6, 11], [16, 15], [9], [5], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [11], [2, 18], [13, 17], [14, 4], [7, 10], [2], [19], [11], [9, 1], [3, 18], [4, 17], [13, 12], [19], [13], [10, 2], [15, 11], [2], [1], [5], [4, 17], [6, 15], [1], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [16, 11], [8, 7], [9], [2, 18], [8, 7], [2], [16, 6], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [16, 11], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [7, 19], [16, 6], [1, 0], [0], [7, 19], [12, 8], [9, 10], [3, 18], [14, 4], [10], [8, 19], [6, 15], [0, 3], [13, 12], [8], [14], [12, 19], [3, 18], [1, 0], [5], [12, 8], [6, 17], [10, 3], [4, 13], [8], [3], [11, 9], [6, 17], [5], [15], [14], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [16], [13], [11, 9], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [16], [3], [8, 7], [10, 2], [13], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [13, 17], [16, 6], [9, 1], [13, 17], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [4], [11], [19], [13], [4], [2], [6], [15, 5], [1, 0], [17, 7], [4, 6], [10, 18], [5, 1], [15, 11], [12, 8], [17, 7], [7], [3], [0], [4], [2], [6, 11], [10, 18], [16, 15], [11], [0], [10, 2], [12, 19], [6, 17], [11], [19], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[136, 142, 149]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[61, 70, 72]
[124, 130, 134]
[189, 214, 217]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 122, 127]
[137, 143, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.0781559944152832

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] xx => I, Pos: [0, 5] xx => I, Pos: [5, 10] xx => I, Pos: [5, 10] xx => I, Pos: [7, 14] cc => I, Pos: [7, 14] cc => I, Pos: [9, 18] cc => I, Pos: [9, 18] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [15, 22] xx => I, Pos: [15, 22] xx => I, Pos: [21, 27] xx => I, Pos: [21, 27] xx => I, Pos: [27, 31] xx => I, Pos: [27, 31] xx => I, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [31, 35] xx => I, Pos: [31, 35] xx => I, Pos: [35, 39] xx => I, Pos: [35, 39] xx => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [40, 74] xx => I, Pos: [40, 74] xx => I, Pos: [56, 63] xx => I, Pos: [56, 63] xx => I, Pos: [61, 70, 72] xcx => c, Pos: [62, 68] xx => I, Pos: [62, 68] xx => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [73, 77] xx => I, Pos: [73, 77] xx => I, Pos: [89, 103] cc => I, Pos: [89, 103] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 122, 127] ccc => cc, Pos: [124, 130, 134] xcx => c, Pos: [125, 140] xx => I, Pos: [125, 140] xx => I, Pos: [129, 138] xx => I, Pos: [129, 138] xx => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [135, 162] xx => I, Pos: [135, 162] xx => I, Pos: [136, 142, 149] ccc => cc, Pos: [137, 143, 150] ccc => cc, Pos: [138, 146] xx => I, Pos: [138, 146] xx => I, Pos: [147, 161] xx => I, Pos: [147, 161] xx => I, Pos: [158, 165] xx => I, Pos: [158, 165] xx => I, Pos: [165, 168] xx => I, Pos: [165, 168] xx => I, Pos: [176, 179] cc => I, Pos: [176, 179] cc => I, Pos: [184, 192] xx => I, Pos: [184, 192] xx => I, Pos: [187, 191] xx => I, Pos: [187, 191] xx => I, Pos: [189, 214, 217] xcx => c, Pos: [192, 207] xx => I, Pos: [192, 207] xx => I, Pos: [196, 202] cc => I, Pos: [196, 202] cc => I, Pos: [198, 209] cc => I, Pos: [198, 209] cc => I, Pos: [205, 212] xx => I, Pos: [205, 212] xx => I, Pos: [211, 216] xx => I, Pos: [211, 216] xx => I]

--------End Timer [Generate Plans]:  0.07811927795410156

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 10] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [21, 27] xx => I,
 Pos: [38, 44] cc => I,
 Pos: [31, 35] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [129, 138] xx => I,
 Pos: [131, 137] cc => I,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [165, 168] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [184, 192] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 36

Circuit before: xxcccxccccxccccxxccccxxxxxcxxccxcccxcccxxxxxccccxccccxxcxccccxxxccccxxccxxxccxcccxxcccxxxccxccxccccxxxcccccccccccxcccccxccccxxcccxccccxxccxxxccccxxxxccccxccccxxxxxccxxxxxxxcccxcccccccxxccxxxxxxxcccccccccxxxxxcccxxcccxxcccxccc
---------------
Apply:  Pos: [5, 10] xx => I
Apply:  Pos: [7, 14] cc => I
Apply:  Pos: [9, 18] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [15, 22] xx => I
Apply:  Pos: [21, 27] xx => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [31, 35] xx => I
Apply:  Pos: [40, 74] xx => I
Apply:  Pos: [56, 63] xx => I
Apply:  Pos: [61, 70, 72] xcx => c
Apply:  Pos: [62, 68] xx => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [73, 77] xx => I
Apply:  Pos: [89, 103] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 122, 127] ccc => cc
Apply:  Pos: [124, 130, 134] xcx => c
Apply:  Pos: [125, 140] xx => I
Apply:  Pos: [129, 138] xx => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [135, 162] xx => I
Apply:  Pos: [136, 142, 149] ccc => cc
Apply:  Pos: [147, 161] xx => I
Apply:  Pos: [165, 168] xx => I
Apply:  Pos: [176, 179] cc => I
Apply:  Pos: [184, 192] xx => I
Apply:  Pos: [187, 191] xx => I
Apply:  Pos: [189, 214, 217] xcx => c
Apply:  Pos: [196, 202] cc => I
Apply:  Pos: [198, 209] cc => I
Apply:  Pos: [205, 212] xx => I
Apply:  Pos: [211, 216] xx => I
---------------
Circuit after: xxcccccccxccxxxcxcccccccxxxxcccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxccccccccccxccccxxxcccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.015625953674316406

[7], [2], [11, 0], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [16, 15], [11, 0], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [14, 4], [7, 10], [10, 2], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 8], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  1.1719012260437012

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 19]
[43, 50]
[41, 51]
[89, 95]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 19]
[43, 50]
[41, 51]
[89, 95]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.9686791896820068

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 19] cc => I, Pos: [2, 19] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [43, 50] cc => I, Pos: [43, 50] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 19] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 95] cc => I]
Change: 4, Saving: 4

Circuit before: xxcccccccxccxxxcxcccccccxxxxcccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxccccccccccxccccxxxcccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
Apply:  Pos: [2, 19] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [43, 50] cc => I
Apply:  Pos: [89, 95] cc => I
---------------
Circuit after: xxccccccxccxxxcxccccccxxxxcccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxcccccccccxcccxxxcccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [16, 15], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.9686791896820068

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.8128700256347656

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxccccccxccxxxcxccccccxxxxcccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxcccccccccxcccxxxcccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
---------------
Circuit after: xxccccccxccxxxcxccccccxxxxcccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxcccccccccxcccxxxcccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [16, 15], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.8128700256347656

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-x-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx 
     => total size: [149] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 28 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 76 (33.78%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10878825187683105

[7], [2], [11, 0], [9, 1], [8, 19], [7], [17, 9], [4, 6], [10, 18], [0, 3], [7], [5, 1], [11, 9], [17, 10], [4, 6], [14], [10], [7, 9], [0, 3], [16, 15], [5, 1], [9], [14], [15], [4], [16], [6, 17], [9], [3], [12, 19], [16, 15], [9], [11, 0], [14, 4], [19, 2], [9], [3, 18], [6, 11], [16, 15], [9], [5], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [11], [2, 18], [13, 17], [14, 4], [7, 10], [2], [19], [11], [9, 1], [3, 18], [4, 17], [13, 12], [19], [13], [10, 2], [15, 11], [2], [1], [5], [4, 17], [6, 15], [1], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [16, 11], [8, 7], [9], [2, 18], [8, 7], [2], [16, 6], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [16, 11], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [7, 19], [16, 6], [1, 0], [0], [7, 19], [12, 8], [9, 10], [3, 18], [14, 4], [10], [8, 19], [6, 15], [0, 3], [13, 12], [8], [14], [12, 19], [3, 18], [1, 0], [5], [12, 8], [6, 17], [10, 3], [4, 13], [8], [3], [11, 9], [6, 17], [5], [15], [14], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [16], [13], [11, 9], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [16], [3], [8, 7], [10, 2], [13], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [13, 17], [16, 6], [9, 1], [13, 17], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [4], [11], [19], [13], [4], [2], [6], [15, 5], [1, 0], [17, 7], [4, 6], [10, 18], [5, 1], [15, 11], [12, 8], [17, 7], [7], [3], [0], [4], [2], [6, 11], [10, 18], [16, 15], [11], [0], [10, 2], [12, 19], [6, 17], [11], [19], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[136, 142, 149]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[61, 70, 72]
[124, 130, 134]
[189, 214, 217]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 122, 127]
[137, 143, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.0937938690185547

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] xx => I, Pos: [0, 5] xx => I, Pos: [5, 10] xx => I, Pos: [5, 10] xx => I, Pos: [7, 14] cc => I, Pos: [7, 14] cc => I, Pos: [9, 18] cc => I, Pos: [9, 18] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [15, 22] xx => I, Pos: [15, 22] xx => I, Pos: [21, 27] xx => I, Pos: [21, 27] xx => I, Pos: [27, 31] xx => I, Pos: [27, 31] xx => I, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [31, 35] xx => I, Pos: [31, 35] xx => I, Pos: [35, 39] xx => I, Pos: [35, 39] xx => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [40, 74] xx => I, Pos: [40, 74] xx => I, Pos: [56, 63] xx => I, Pos: [56, 63] xx => I, Pos: [61, 70, 72] xcx => c, Pos: [62, 68] xx => I, Pos: [62, 68] xx => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [73, 77] xx => I, Pos: [73, 77] xx => I, Pos: [89, 103] cc => I, Pos: [89, 103] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 122, 127] ccc => cc, Pos: [124, 130, 134] xcx => c, Pos: [125, 140] xx => I, Pos: [125, 140] xx => I, Pos: [129, 138] xx => I, Pos: [129, 138] xx => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [135, 162] xx => I, Pos: [135, 162] xx => I, Pos: [136, 142, 149] ccc => cc, Pos: [137, 143, 150] ccc => cc, Pos: [138, 146] xx => I, Pos: [138, 146] xx => I, Pos: [147, 161] xx => I, Pos: [147, 161] xx => I, Pos: [158, 165] xx => I, Pos: [158, 165] xx => I, Pos: [165, 168] xx => I, Pos: [165, 168] xx => I, Pos: [176, 179] cc => I, Pos: [176, 179] cc => I, Pos: [184, 192] xx => I, Pos: [184, 192] xx => I, Pos: [187, 191] xx => I, Pos: [187, 191] xx => I, Pos: [189, 214, 217] xcx => c, Pos: [192, 207] xx => I, Pos: [192, 207] xx => I, Pos: [196, 202] cc => I, Pos: [196, 202] cc => I, Pos: [198, 209] cc => I, Pos: [198, 209] cc => I, Pos: [205, 212] xx => I, Pos: [205, 212] xx => I, Pos: [211, 216] xx => I, Pos: [211, 216] xx => I]

--------End Timer [Generate Plans]:  0.09373140335083008

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 10] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [21, 27] xx => I,
 Pos: [30, 38] cc => I,
 Pos: [35, 39] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [129, 138] xx => I,
 Pos: [137, 143, 150] ccc => cc,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [165, 168] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [184, 192] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 36

Circuit before: xxcccxccccxccccxxccccxxxxxcxxccxcccxcccxxxxxccccxccccxxcxccccxxxccccxxccxxxccxcccxxcccxxxccxccxccccxxxcccccccccccxcccccxccccxxcccxccccxxccxxxccccxxxxccccxccccxxxxxccxxxxxxxcccxcccccccxxccxxxxxxxcccccccccxxxxxcccxxcccxxcccxccc
---------------
Apply:  Pos: [5, 10] xx => I
Apply:  Pos: [7, 14] cc => I
Apply:  Pos: [9, 18] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [15, 22] xx => I
Apply:  Pos: [21, 27] xx => I
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [35, 39] xx => I
Apply:  Pos: [40, 74] xx => I
Apply:  Pos: [56, 63] xx => I
Apply:  Pos: [61, 70, 72] xcx => c
Apply:  Pos: [62, 68] xx => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [73, 77] xx => I
Apply:  Pos: [89, 103] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 122, 127] ccc => cc
Apply:  Pos: [124, 130, 134] xcx => c
Apply:  Pos: [125, 140] xx => I
Apply:  Pos: [129, 138] xx => I
Apply:  Pos: [137, 143, 150] ccc => cc
Apply:  Pos: [135, 162] xx => I
Apply:  Pos: [136, 142, 149] ccc => cc
Apply:  Pos: [147, 161] xx => I
Apply:  Pos: [165, 168] xx => I
Apply:  Pos: [176, 179] cc => I
Apply:  Pos: [184, 192] xx => I
Apply:  Pos: [187, 191] xx => I
Apply:  Pos: [189, 214, 217] xcx => c
Apply:  Pos: [196, 202] cc => I
Apply:  Pos: [198, 209] cc => I
Apply:  Pos: [205, 212] xx => I
Apply:  Pos: [211, 216] xx => I
---------------
Circuit after: xxcccccccxccxxxcxcxcccccxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxccccccccccccxccccxxxccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [11, 0], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [9], [11, 0], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [14, 4], [7, 10], [10, 2], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 8], [12, 19], [1, 0], [6, 17], [10, 3], [4, 13], [11, 1], [4, 6], [15], [12, 8], [9, 1], [6, 17], [7, 10], [12], [5], [13], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  1.1875252723693848

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 19]
[43, 50]
[41, 51]
[89, 97]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[91, 95, 99]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 19]
[43, 50]
[41, 51]
[89, 97]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.9530806541442871

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 19] cc => I, Pos: [2, 19] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [43, 50] cc => I, Pos: [43, 50] cc => I, Pos: [89, 97] cc => I, Pos: [89, 97] cc => I, Pos: [91, 95, 99] ccc => cc]

--------End Timer [Generate Plans]:  0.015609025955200195

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 19] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 97] cc => I,
 Pos: [91, 95, 99] ccc => cc]
Change: 5, Saving: 5

Circuit before: xxcccccccxccxxxcxcxcccccxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxccccccccccccxccccxxxccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
Apply:  Pos: [2, 19] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [43, 50] cc => I
Apply:  Pos: [89, 97] cc => I
Apply:  Pos: [91, 95, 99] ccc => cc
---------------
Circuit after: xxccccccxccxxxcxcxccccxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxcccccccccccxccxxxccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [9], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [4, 6], [10, 3], [4, 13], [11, 1], [6, 17], [15], [9, 1], [7, 10], [12], [5], [13], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.9686896800994873

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.8125379085540771

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxccccccxccxxxcxcxccccxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxcccccccccccxccxxxccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
---------------
Circuit after: xxccccccxccxxxcxcxccccxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxcccccccccccxccxxxccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [9], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [4, 6], [10, 3], [4, 13], [11, 1], [6, 17], [15], [9, 1], [7, 10], [12], [5], [13], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.8125379085540771

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-x-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx 
     => total size: [149] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 76 (33.78%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374141693115234

[7], [2], [11, 0], [9, 1], [8, 19], [7], [17, 9], [4, 6], [10, 18], [0, 3], [7], [5, 1], [11, 9], [17, 10], [4, 6], [14], [10], [7, 9], [0, 3], [16, 15], [5, 1], [9], [14], [15], [4], [16], [6, 17], [9], [3], [12, 19], [16, 15], [9], [11, 0], [14, 4], [19, 2], [9], [3, 18], [6, 11], [16, 15], [9], [5], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [11], [2, 18], [13, 17], [14, 4], [7, 10], [2], [19], [11], [9, 1], [3, 18], [4, 17], [13, 12], [19], [13], [10, 2], [15, 11], [2], [1], [5], [4, 17], [6, 15], [1], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [16, 11], [8, 7], [9], [2, 18], [8, 7], [2], [16, 6], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [16, 11], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [7, 19], [16, 6], [1, 0], [0], [7, 19], [12, 8], [9, 10], [3, 18], [14, 4], [10], [8, 19], [6, 15], [0, 3], [13, 12], [8], [14], [12, 19], [3, 18], [1, 0], [5], [12, 8], [6, 17], [10, 3], [4, 13], [8], [3], [11, 9], [6, 17], [5], [15], [14], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [16], [13], [11, 9], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [16], [3], [8, 7], [10, 2], [13], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [13, 17], [16, 6], [9, 1], [13, 17], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [4], [11], [19], [13], [4], [2], [6], [15, 5], [1, 0], [17, 7], [4, 6], [10, 18], [5, 1], [15, 11], [12, 8], [17, 7], [7], [3], [0], [4], [2], [6, 11], [10, 18], [16, 15], [11], [0], [10, 2], [12, 19], [6, 17], [11], [19], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[136, 142, 149]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[61, 70, 72]
[124, 130, 134]
[189, 214, 217]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 122, 127]
[137, 143, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.062441110610962

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] xx => I, Pos: [0, 5] xx => I, Pos: [5, 10] xx => I, Pos: [5, 10] xx => I, Pos: [7, 14] cc => I, Pos: [7, 14] cc => I, Pos: [9, 18] cc => I, Pos: [9, 18] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [15, 22] xx => I, Pos: [15, 22] xx => I, Pos: [21, 27] xx => I, Pos: [21, 27] xx => I, Pos: [27, 31] xx => I, Pos: [27, 31] xx => I, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [31, 35] xx => I, Pos: [31, 35] xx => I, Pos: [35, 39] xx => I, Pos: [35, 39] xx => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [40, 74] xx => I, Pos: [40, 74] xx => I, Pos: [56, 63] xx => I, Pos: [56, 63] xx => I, Pos: [61, 70, 72] xcx => c, Pos: [62, 68] xx => I, Pos: [62, 68] xx => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [73, 77] xx => I, Pos: [73, 77] xx => I, Pos: [89, 103] cc => I, Pos: [89, 103] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 122, 127] ccc => cc, Pos: [124, 130, 134] xcx => c, Pos: [125, 140] xx => I, Pos: [125, 140] xx => I, Pos: [129, 138] xx => I, Pos: [129, 138] xx => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [135, 162] xx => I, Pos: [135, 162] xx => I, Pos: [136, 142, 149] ccc => cc, Pos: [137, 143, 150] ccc => cc, Pos: [138, 146] xx => I, Pos: [138, 146] xx => I, Pos: [147, 161] xx => I, Pos: [147, 161] xx => I, Pos: [158, 165] xx => I, Pos: [158, 165] xx => I, Pos: [165, 168] xx => I, Pos: [165, 168] xx => I, Pos: [176, 179] cc => I, Pos: [176, 179] cc => I, Pos: [184, 192] xx => I, Pos: [184, 192] xx => I, Pos: [187, 191] xx => I, Pos: [187, 191] xx => I, Pos: [189, 214, 217] xcx => c, Pos: [192, 207] xx => I, Pos: [192, 207] xx => I, Pos: [196, 202] cc => I, Pos: [196, 202] cc => I, Pos: [198, 209] cc => I, Pos: [198, 209] cc => I, Pos: [205, 212] xx => I, Pos: [205, 212] xx => I, Pos: [211, 216] xx => I, Pos: [211, 216] xx => I]

--------End Timer [Generate Plans]:  0.07811903953552246

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [27, 31] xx => I,
 Pos: [38, 44] cc => I,
 Pos: [35, 39] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [138, 146] xx => I,
 Pos: [137, 143, 150] ccc => cc,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [165, 168] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [184, 192] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 36

Circuit before: xxcccxccccxccccxxccccxxxxxcxxccxcccxcccxxxxxccccxccccxxcxccccxxxccccxxccxxxccxcccxxcccxxxccxccxccccxxxcccccccccccxcccccxccccxxcccxccccxxccxxxccccxxxxccccxccccxxxxxccxxxxxxxcccxcccccccxxccxxxxxxxcccccccccxxxxxcccxxcccxxcccxccc
---------------
Apply:  Pos: [0, 5] xx => I
Apply:  Pos: [7, 14] cc => I
Apply:  Pos: [9, 18] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [15, 22] xx => I
Apply:  Pos: [27, 31] xx => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [35, 39] xx => I
Apply:  Pos: [40, 74] xx => I
Apply:  Pos: [56, 63] xx => I
Apply:  Pos: [61, 70, 72] xcx => c
Apply:  Pos: [62, 68] xx => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [73, 77] xx => I
Apply:  Pos: [89, 103] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 122, 127] ccc => cc
Apply:  Pos: [124, 130, 134] xcx => c
Apply:  Pos: [125, 140] xx => I
Apply:  Pos: [138, 146] xx => I
Apply:  Pos: [137, 143, 150] ccc => cc
Apply:  Pos: [135, 162] xx => I
Apply:  Pos: [136, 142, 149] ccc => cc
Apply:  Pos: [147, 161] xx => I
Apply:  Pos: [165, 168] xx => I
Apply:  Pos: [176, 179] cc => I
Apply:  Pos: [184, 192] xx => I
Apply:  Pos: [187, 191] xx => I
Apply:  Pos: [189, 214, 217] xcx => c
Apply:  Pos: [196, 202] cc => I
Apply:  Pos: [198, 209] cc => I
Apply:  Pos: [205, 212] xx => I
Apply:  Pos: [211, 216] xx => I
---------------
Circuit after: xcccccxccxccxxxxcxcccccccxxxcccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxcccccccxcccccxccccxxccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [11, 0], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [9], [15], [4], [16], [6, 17], [3], [12, 19], [16, 15], [11, 0], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [14, 4], [7, 10], [10, 2], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 8], [12, 19], [1, 0], [5], [6, 17], [10, 3], [4, 13], [11, 1], [4, 6], [15], [12, 8], [9, 1], [6, 17], [7, 10], [12], [13], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  1.1405601501464844

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 20]
[43, 50]
[41, 51]
[89, 98]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[92, 96, 100]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 20]
[43, 50]
[41, 51]
[89, 98]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.9377903938293457

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 20] cc => I, Pos: [1, 20] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [43, 50] cc => I, Pos: [43, 50] cc => I, Pos: [89, 98] cc => I, Pos: [89, 98] cc => I, Pos: [92, 96, 100] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 20] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 98] cc => I,
 Pos: [92, 96, 100] ccc => cc]
Change: 5, Saving: 5

Circuit before: xcccccxccxccxxxxcxcccccccxxxcccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxcccccccxcccccxccccxxccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
Apply:  Pos: [1, 20] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [43, 50] cc => I
Apply:  Pos: [89, 98] cc => I
Apply:  Pos: [92, 96, 100] ccc => cc
---------------
Circuit after: xccccxccxccxxxxcxccccccxxxcccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccccxccxxccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.015628337860107422

[2], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [9], [15], [4], [16], [6, 17], [3], [12, 19], [16, 15], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [5], [4, 6], [10, 3], [4, 13], [11, 1], [6, 17], [15], [9, 1], [7, 10], [12], [13], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.9534187316894531

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.8124444484710693

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xccccxccxccxxxxcxccccccxxxcccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccccxccxxccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
---------------
Circuit after: xccccxccxccxxxxcxccccccxxxcccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccccxccxxccxccccxxxccxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [9], [15], [4], [16], [6, 17], [3], [12, 19], [16, 15], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [5], [4, 6], [10, 3], [4, 13], [11, 1], [6, 17], [15], [9, 1], [7, 10], [12], [13], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.8124444484710693

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-x-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-x-cx-cx-x-x-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx 
     => total size: [149] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 28 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 76 (33.78%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09372591972351074

[7], [2], [11, 0], [9, 1], [8, 19], [7], [17, 9], [4, 6], [10, 18], [0, 3], [7], [5, 1], [11, 9], [17, 10], [4, 6], [14], [10], [7, 9], [0, 3], [16, 15], [5, 1], [9], [14], [15], [4], [16], [6, 17], [9], [3], [12, 19], [16, 15], [9], [11, 0], [14, 4], [19, 2], [9], [3, 18], [6, 11], [16, 15], [9], [5], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [11], [2, 18], [13, 17], [14, 4], [7, 10], [2], [19], [11], [9, 1], [3, 18], [4, 17], [13, 12], [19], [13], [10, 2], [15, 11], [2], [1], [5], [4, 17], [6, 15], [1], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [16, 11], [8, 7], [9], [2, 18], [8, 7], [2], [16, 6], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [16, 11], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [7, 19], [16, 6], [1, 0], [0], [7, 19], [12, 8], [9, 10], [3, 18], [14, 4], [10], [8, 19], [6, 15], [0, 3], [13, 12], [8], [14], [12, 19], [3, 18], [1, 0], [5], [12, 8], [6, 17], [10, 3], [4, 13], [8], [3], [11, 9], [6, 17], [5], [15], [14], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [16], [13], [11, 9], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [16], [3], [8, 7], [10, 2], [13], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [13, 17], [16, 6], [9, 1], [13, 17], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [4], [11], [19], [13], [4], [2], [6], [15, 5], [1, 0], [17, 7], [4, 6], [10, 18], [5, 1], [15, 11], [12, 8], [17, 7], [7], [3], [0], [4], [2], [6, 11], [10, 18], [16, 15], [11], [0], [10, 2], [12, 19], [6, 17], [11], [19], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[136, 142, 149]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[61, 70, 72]
[124, 130, 134]
[189, 214, 217]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 122, 127]
[137, 143, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.09401273727417

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] xx => I, Pos: [0, 5] xx => I, Pos: [5, 10] xx => I, Pos: [5, 10] xx => I, Pos: [7, 14] cc => I, Pos: [7, 14] cc => I, Pos: [9, 18] cc => I, Pos: [9, 18] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [15, 22] xx => I, Pos: [15, 22] xx => I, Pos: [21, 27] xx => I, Pos: [21, 27] xx => I, Pos: [27, 31] xx => I, Pos: [27, 31] xx => I, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [31, 35] xx => I, Pos: [31, 35] xx => I, Pos: [35, 39] xx => I, Pos: [35, 39] xx => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [40, 74] xx => I, Pos: [40, 74] xx => I, Pos: [56, 63] xx => I, Pos: [56, 63] xx => I, Pos: [61, 70, 72] xcx => c, Pos: [62, 68] xx => I, Pos: [62, 68] xx => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [73, 77] xx => I, Pos: [73, 77] xx => I, Pos: [89, 103] cc => I, Pos: [89, 103] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 122, 127] ccc => cc, Pos: [124, 130, 134] xcx => c, Pos: [125, 140] xx => I, Pos: [125, 140] xx => I, Pos: [129, 138] xx => I, Pos: [129, 138] xx => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [135, 162] xx => I, Pos: [135, 162] xx => I, Pos: [136, 142, 149] ccc => cc, Pos: [137, 143, 150] ccc => cc, Pos: [138, 146] xx => I, Pos: [138, 146] xx => I, Pos: [147, 161] xx => I, Pos: [147, 161] xx => I, Pos: [158, 165] xx => I, Pos: [158, 165] xx => I, Pos: [165, 168] xx => I, Pos: [165, 168] xx => I, Pos: [176, 179] cc => I, Pos: [176, 179] cc => I, Pos: [184, 192] xx => I, Pos: [184, 192] xx => I, Pos: [187, 191] xx => I, Pos: [187, 191] xx => I, Pos: [189, 214, 217] xcx => c, Pos: [192, 207] xx => I, Pos: [192, 207] xx => I, Pos: [196, 202] cc => I, Pos: [196, 202] cc => I, Pos: [198, 209] cc => I, Pos: [198, 209] cc => I, Pos: [205, 212] xx => I, Pos: [205, 212] xx => I, Pos: [211, 216] xx => I, Pos: [211, 216] xx => I]

--------End Timer [Generate Plans]:  0.07811951637268066

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [21, 27] xx => I,
 Pos: [30, 38] cc => I,
 Pos: [35, 39] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [129, 138] xx => I,
 Pos: [131, 137] cc => I,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [165, 168] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [192, 207] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 36

Circuit before: xxcccxccccxccccxxccccxxxxxcxxccxcccxcccxxxxxccccxccccxxcxccccxxxccccxxccxxxccxcccxxcccxxxccxccxccccxxxcccccccccccxcccccxccccxxcccxccccxxccxxxccccxxxxccccxccccxxxxxccxxxxxxxcccxcccccccxxccxxxxxxxcccccccccxxxxxcccxxcccxxcccxccc
---------------
Apply:  Pos: [0, 5] xx => I
Apply:  Pos: [7, 14] cc => I
Apply:  Pos: [9, 18] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [15, 22] xx => I
Apply:  Pos: [21, 27] xx => I
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [35, 39] xx => I
Apply:  Pos: [40, 74] xx => I
Apply:  Pos: [56, 63] xx => I
Apply:  Pos: [61, 70, 72] xcx => c
Apply:  Pos: [62, 68] xx => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [73, 77] xx => I
Apply:  Pos: [89, 103] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 122, 127] ccc => cc
Apply:  Pos: [124, 130, 134] xcx => c
Apply:  Pos: [125, 140] xx => I
Apply:  Pos: [129, 138] xx => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [135, 162] xx => I
Apply:  Pos: [136, 142, 149] ccc => cc
Apply:  Pos: [147, 161] xx => I
Apply:  Pos: [165, 168] xx => I
Apply:  Pos: [176, 179] cc => I
Apply:  Pos: [192, 207] xx => I
Apply:  Pos: [187, 191] xx => I
Apply:  Pos: [189, 214, 217] xcx => c
Apply:  Pos: [196, 202] cc => I
Apply:  Pos: [198, 209] cc => I
Apply:  Pos: [205, 212] xx => I
Apply:  Pos: [211, 216] xx => I
---------------
Circuit after: xcccccxccxccxxxcxcxcccccxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxccccccccccxccccxxxcccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [11, 0], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [9], [11, 0], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [14, 4], [7, 10], [10, 2], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 8], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  1.1721322536468506

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 19]
[43, 50]
[41, 51]
[89, 95]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 19]
[43, 50]
[41, 51]
[89, 95]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.9374487400054932

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 19] cc => I, Pos: [1, 19] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [43, 50] cc => I, Pos: [43, 50] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I]

--------End Timer [Generate Plans]:  0.015629291534423828

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 19] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 95] cc => I]
Change: 4, Saving: 4

Circuit before: xcccccxccxccxxxcxcxcccccxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxccccccccccxccccxxxcccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc
---------------
Apply:  Pos: [1, 19] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [43, 50] cc => I
Apply:  Pos: [89, 95] cc => I
---------------
Circuit after: xccccxccxccxxxcxcxccccxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxcccccccccxcccxxxcccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [9], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.953078031539917

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.8278322219848633

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xccccxccxccxxxcxcxccccxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxcccccccccxcccxxxcccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc
---------------
---------------
Circuit after: xccccxccxccxxxcxcxccccxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxcccccccccxcccxxxcccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [9], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.8278322219848633

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-x-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-x-cx-cx-x-x-x-cx-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx 
     => total size: [149] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 76 (33.78%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374403953552246

[7], [2], [11, 0], [9, 1], [8, 19], [7], [17, 9], [4, 6], [10, 18], [0, 3], [7], [5, 1], [11, 9], [17, 10], [4, 6], [14], [10], [7, 9], [0, 3], [16, 15], [5, 1], [9], [14], [15], [4], [16], [6, 17], [9], [3], [12, 19], [16, 15], [9], [11, 0], [14, 4], [19, 2], [9], [3, 18], [6, 11], [16, 15], [9], [5], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [11], [2, 18], [13, 17], [14, 4], [7, 10], [2], [19], [11], [9, 1], [3, 18], [4, 17], [13, 12], [19], [13], [10, 2], [15, 11], [2], [1], [5], [4, 17], [6, 15], [1], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [16, 11], [8, 7], [9], [2, 18], [8, 7], [2], [16, 6], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [16, 11], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [7, 19], [16, 6], [1, 0], [0], [7, 19], [12, 8], [9, 10], [3, 18], [14, 4], [10], [8, 19], [6, 15], [0, 3], [13, 12], [8], [14], [12, 19], [3, 18], [1, 0], [5], [12, 8], [6, 17], [10, 3], [4, 13], [8], [3], [11, 9], [6, 17], [5], [15], [14], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [16], [13], [11, 9], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [16], [3], [8, 7], [10, 2], [13], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [13, 17], [16, 6], [9, 1], [13, 17], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [4], [11], [19], [13], [4], [2], [6], [15, 5], [1, 0], [17, 7], [4, 6], [10, 18], [5, 1], [15, 11], [12, 8], [17, 7], [7], [3], [0], [4], [2], [6, 11], [10, 18], [16, 15], [11], [0], [10, 2], [12, 19], [6, 17], [11], [19], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[136, 142, 149]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[61, 70, 72]
[124, 130, 134]
[189, 214, 217]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 122, 127]
[137, 143, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.0941674709320068

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] xx => I, Pos: [0, 5] xx => I, Pos: [5, 10] xx => I, Pos: [5, 10] xx => I, Pos: [7, 14] cc => I, Pos: [7, 14] cc => I, Pos: [9, 18] cc => I, Pos: [9, 18] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [15, 22] xx => I, Pos: [15, 22] xx => I, Pos: [21, 27] xx => I, Pos: [21, 27] xx => I, Pos: [27, 31] xx => I, Pos: [27, 31] xx => I, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [31, 35] xx => I, Pos: [31, 35] xx => I, Pos: [35, 39] xx => I, Pos: [35, 39] xx => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [40, 74] xx => I, Pos: [40, 74] xx => I, Pos: [56, 63] xx => I, Pos: [56, 63] xx => I, Pos: [61, 70, 72] xcx => c, Pos: [62, 68] xx => I, Pos: [62, 68] xx => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [73, 77] xx => I, Pos: [73, 77] xx => I, Pos: [89, 103] cc => I, Pos: [89, 103] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 122, 127] ccc => cc, Pos: [124, 130, 134] xcx => c, Pos: [125, 140] xx => I, Pos: [125, 140] xx => I, Pos: [129, 138] xx => I, Pos: [129, 138] xx => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [135, 162] xx => I, Pos: [135, 162] xx => I, Pos: [136, 142, 149] ccc => cc, Pos: [137, 143, 150] ccc => cc, Pos: [138, 146] xx => I, Pos: [138, 146] xx => I, Pos: [147, 161] xx => I, Pos: [147, 161] xx => I, Pos: [158, 165] xx => I, Pos: [158, 165] xx => I, Pos: [165, 168] xx => I, Pos: [165, 168] xx => I, Pos: [176, 179] cc => I, Pos: [176, 179] cc => I, Pos: [184, 192] xx => I, Pos: [184, 192] xx => I, Pos: [187, 191] xx => I, Pos: [187, 191] xx => I, Pos: [189, 214, 217] xcx => c, Pos: [192, 207] xx => I, Pos: [192, 207] xx => I, Pos: [196, 202] cc => I, Pos: [196, 202] cc => I, Pos: [198, 209] cc => I, Pos: [198, 209] cc => I, Pos: [205, 212] xx => I, Pos: [205, 212] xx => I, Pos: [211, 216] xx => I, Pos: [211, 216] xx => I]

--------End Timer [Generate Plans]:  0.07794499397277832

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [21, 27] xx => I,
 Pos: [38, 44] cc => I,
 Pos: [31, 35] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [138, 146] xx => I,
 Pos: [131, 137] cc => I,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [158, 165] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [184, 192] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 36

Circuit before: xxcccxccccxccccxxccccxxxxxcxxccxcccxcccxxxxxccccxccccxxcxccccxxxccccxxccxxxccxcccxxcccxxxccxccxccccxxxcccccccccccxcccccxccccxxcccxccccxxccxxxccccxxxxccccxccccxxxxxccxxxxxxxcccxcccccccxxccxxxxxxxcccccccccxxxxxcccxxcccxxcccxccc
---------------
Apply:  Pos: [0, 5] xx => I
Apply:  Pos: [7, 14] cc => I
Apply:  Pos: [9, 18] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [15, 22] xx => I
Apply:  Pos: [21, 27] xx => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [31, 35] xx => I
Apply:  Pos: [40, 74] xx => I
Apply:  Pos: [56, 63] xx => I
Apply:  Pos: [61, 70, 72] xcx => c
Apply:  Pos: [62, 68] xx => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [73, 77] xx => I
Apply:  Pos: [89, 103] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 122, 127] ccc => cc
Apply:  Pos: [124, 130, 134] xcx => c
Apply:  Pos: [125, 140] xx => I
Apply:  Pos: [138, 146] xx => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [135, 162] xx => I
Apply:  Pos: [136, 142, 149] ccc => cc
Apply:  Pos: [147, 161] xx => I
Apply:  Pos: [158, 165] xx => I
Apply:  Pos: [176, 179] cc => I
Apply:  Pos: [184, 192] xx => I
Apply:  Pos: [187, 191] xx => I
Apply:  Pos: [189, 214, 217] xcx => c
Apply:  Pos: [196, 202] cc => I
Apply:  Pos: [198, 209] cc => I
Apply:  Pos: [205, 212] xx => I
Apply:  Pos: [211, 216] xx => I
---------------
Circuit after: xcccccxccxccxxxcxcccccccxxxxcccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxcccccccxcccxccccxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [11, 0], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [16, 15], [11, 0], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [14, 4], [7, 10], [10, 2], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 8], [12, 19], [1, 0], [5], [10, 3], [4, 13], [11, 1], [15], [12, 8], [9, 1], [4, 6], [7, 10], [12], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  1.1721124649047852

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 19]
[43, 50]
[41, 51]
[89, 96]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 19]
[43, 50]
[41, 51]
[89, 96]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.9222209453582764

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 19] cc => I, Pos: [1, 19] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [43, 50] cc => I, Pos: [43, 50] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I]

--------End Timer [Generate Plans]:  0.015519142150878906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 19] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 96] cc => I]
Change: 4, Saving: 4

Circuit before: xcccccxccxccxxxcxcccccccxxxxcccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxcccccccxcccxccccxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
Apply:  Pos: [1, 19] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [43, 50] cc => I
Apply:  Pos: [89, 96] cc => I
---------------
Circuit after: xccccxccxccxxxcxccccccxxxxcccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccxcccxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [16, 15], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [5], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.9377400875091553

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.8122732639312744

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xccccxccxccxxxcxccccccxxxxcccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccxcccxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
---------------
Circuit after: xccccxccxccxxxcxccccccxxxxcccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccxcccxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [16, 15], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [5], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.8122732639312744

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-x-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-x-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx 
     => total size: [149] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 76 (33.78%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10928821563720703

[7], [2], [11, 0], [9, 1], [8, 19], [7], [17, 9], [4, 6], [10, 18], [0, 3], [7], [5, 1], [11, 9], [17, 10], [4, 6], [14], [10], [7, 9], [0, 3], [16, 15], [5, 1], [9], [14], [15], [4], [16], [6, 17], [9], [3], [12, 19], [16, 15], [9], [11, 0], [14, 4], [19, 2], [9], [3, 18], [6, 11], [16, 15], [9], [5], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [11], [2, 18], [13, 17], [14, 4], [7, 10], [2], [19], [11], [9, 1], [3, 18], [4, 17], [13, 12], [19], [13], [10, 2], [15, 11], [2], [1], [5], [4, 17], [6, 15], [1], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [16, 11], [8, 7], [9], [2, 18], [8, 7], [2], [16, 6], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [16, 11], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [7, 19], [16, 6], [1, 0], [0], [7, 19], [12, 8], [9, 10], [3, 18], [14, 4], [10], [8, 19], [6, 15], [0, 3], [13, 12], [8], [14], [12, 19], [3, 18], [1, 0], [5], [12, 8], [6, 17], [10, 3], [4, 13], [8], [3], [11, 9], [6, 17], [5], [15], [14], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [16], [13], [11, 9], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [16], [3], [8, 7], [10, 2], [13], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [13, 17], [16, 6], [9, 1], [13, 17], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [4], [11], [19], [13], [4], [2], [6], [15, 5], [1, 0], [17, 7], [4, 6], [10, 18], [5, 1], [15, 11], [12, 8], [17, 7], [7], [3], [0], [4], [2], [6, 11], [10, 18], [16, 15], [11], [0], [10, 2], [12, 19], [6, 17], [11], [19], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[136, 142, 149]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[61, 70, 72]
[124, 130, 134]
[189, 214, 217]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 122, 127]
[137, 143, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.062523365020752

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] xx => I, Pos: [0, 5] xx => I, Pos: [5, 10] xx => I, Pos: [5, 10] xx => I, Pos: [7, 14] cc => I, Pos: [7, 14] cc => I, Pos: [9, 18] cc => I, Pos: [9, 18] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [15, 22] xx => I, Pos: [15, 22] xx => I, Pos: [21, 27] xx => I, Pos: [21, 27] xx => I, Pos: [27, 31] xx => I, Pos: [27, 31] xx => I, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [31, 35] xx => I, Pos: [31, 35] xx => I, Pos: [35, 39] xx => I, Pos: [35, 39] xx => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [40, 74] xx => I, Pos: [40, 74] xx => I, Pos: [56, 63] xx => I, Pos: [56, 63] xx => I, Pos: [61, 70, 72] xcx => c, Pos: [62, 68] xx => I, Pos: [62, 68] xx => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [73, 77] xx => I, Pos: [73, 77] xx => I, Pos: [89, 103] cc => I, Pos: [89, 103] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 122, 127] ccc => cc, Pos: [124, 130, 134] xcx => c, Pos: [125, 140] xx => I, Pos: [125, 140] xx => I, Pos: [129, 138] xx => I, Pos: [129, 138] xx => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [135, 162] xx => I, Pos: [135, 162] xx => I, Pos: [136, 142, 149] ccc => cc, Pos: [137, 143, 150] ccc => cc, Pos: [138, 146] xx => I, Pos: [138, 146] xx => I, Pos: [147, 161] xx => I, Pos: [147, 161] xx => I, Pos: [158, 165] xx => I, Pos: [158, 165] xx => I, Pos: [165, 168] xx => I, Pos: [165, 168] xx => I, Pos: [176, 179] cc => I, Pos: [176, 179] cc => I, Pos: [184, 192] xx => I, Pos: [184, 192] xx => I, Pos: [187, 191] xx => I, Pos: [187, 191] xx => I, Pos: [189, 214, 217] xcx => c, Pos: [192, 207] xx => I, Pos: [192, 207] xx => I, Pos: [196, 202] cc => I, Pos: [196, 202] cc => I, Pos: [198, 209] cc => I, Pos: [198, 209] cc => I, Pos: [205, 212] xx => I, Pos: [205, 212] xx => I, Pos: [211, 216] xx => I, Pos: [211, 216] xx => I]

--------End Timer [Generate Plans]:  0.09374284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 10] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [27, 31] xx => I,
 Pos: [38, 44] cc => I,
 Pos: [35, 39] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [138, 146] xx => I,
 Pos: [131, 137] cc => I,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [158, 165] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [184, 192] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 36

Circuit before: xxcccxccccxccccxxccccxxxxxcxxccxcccxcccxxxxxccccxccccxxcxccccxxxccccxxccxxxccxcccxxcccxxxccxccxccccxxxcccccccccccxcccccxccccxxcccxccccxxccxxxccccxxxxccccxccccxxxxxccxxxxxxxcccxcccccccxxccxxxxxxxcccccccccxxxxxcccxxcccxxcccxccc
---------------
Apply:  Pos: [5, 10] xx => I
Apply:  Pos: [7, 14] cc => I
Apply:  Pos: [9, 18] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [15, 22] xx => I
Apply:  Pos: [27, 31] xx => I
Apply:  Pos: [38, 44] cc => I
Apply:  Pos: [35, 39] xx => I
Apply:  Pos: [40, 74] xx => I
Apply:  Pos: [56, 63] xx => I
Apply:  Pos: [61, 70, 72] xcx => c
Apply:  Pos: [62, 68] xx => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [73, 77] xx => I
Apply:  Pos: [89, 103] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 122, 127] ccc => cc
Apply:  Pos: [124, 130, 134] xcx => c
Apply:  Pos: [125, 140] xx => I
Apply:  Pos: [138, 146] xx => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [135, 162] xx => I
Apply:  Pos: [136, 142, 149] ccc => cc
Apply:  Pos: [147, 161] xx => I
Apply:  Pos: [158, 165] xx => I
Apply:  Pos: [176, 179] cc => I
Apply:  Pos: [184, 192] xx => I
Apply:  Pos: [187, 191] xx => I
Apply:  Pos: [189, 214, 217] xcx => c
Apply:  Pos: [196, 202] cc => I
Apply:  Pos: [198, 209] cc => I
Apply:  Pos: [205, 212] xx => I
Apply:  Pos: [211, 216] xx => I
---------------
Circuit after: xxcccccccxccxxxxcxcccccccxxxcccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxcccccccxcccxccccxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [11, 0], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [9], [15], [4], [16], [6, 17], [3], [12, 19], [16, 15], [11, 0], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [14, 4], [7, 10], [10, 2], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 8], [12, 19], [1, 0], [5], [10, 3], [4, 13], [11, 1], [15], [12, 8], [9, 1], [4, 6], [7, 10], [12], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  1.156266212463379

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 20]
[43, 50]
[41, 51]
[89, 96]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 20]
[43, 50]
[41, 51]
[89, 96]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.9218599796295166

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 20] cc => I, Pos: [2, 20] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [43, 50] cc => I, Pos: [43, 50] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I]

--------End Timer [Generate Plans]:  0.015622854232788086

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 20] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 96] cc => I]
Change: 4, Saving: 4

Circuit before: xxcccccccxccxxxxcxcccccccxxxcccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxcccccccxcccxccccxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
Apply:  Pos: [2, 20] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [43, 50] cc => I
Apply:  Pos: [89, 96] cc => I
---------------
Circuit after: xxccccccxccxxxxcxccccccxxxcccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccxcccxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [9], [15], [4], [16], [6, 17], [3], [12, 19], [16, 15], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [5], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.9374828338623047

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.8281917572021484

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxccccccxccxxxxcxccccccxxxcccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccxcccxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
---------------
Circuit after: xxccccccxccxxxxcxccccccxxxcccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccxcccxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [9], [15], [4], [16], [6, 17], [3], [12, 19], [16, 15], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [5], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.8281917572021484

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-x-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx 
     => total size: [149] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 76 (33.78%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09374260902404785

[7], [2], [11, 0], [9, 1], [8, 19], [7], [17, 9], [4, 6], [10, 18], [0, 3], [7], [5, 1], [11, 9], [17, 10], [4, 6], [14], [10], [7, 9], [0, 3], [16, 15], [5, 1], [9], [14], [15], [4], [16], [6, 17], [9], [3], [12, 19], [16, 15], [9], [11, 0], [14, 4], [19, 2], [9], [3, 18], [6, 11], [16, 15], [9], [5], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [11], [2, 18], [13, 17], [14, 4], [7, 10], [2], [19], [11], [9, 1], [3, 18], [4, 17], [13, 12], [19], [13], [10, 2], [15, 11], [2], [1], [5], [4, 17], [6, 15], [1], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [16, 11], [8, 7], [9], [2, 18], [8, 7], [2], [16, 6], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [16, 11], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [7, 19], [16, 6], [1, 0], [0], [7, 19], [12, 8], [9, 10], [3, 18], [14, 4], [10], [8, 19], [6, 15], [0, 3], [13, 12], [8], [14], [12, 19], [3, 18], [1, 0], [5], [12, 8], [6, 17], [10, 3], [4, 13], [8], [3], [11, 9], [6, 17], [5], [15], [14], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [16], [13], [11, 9], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [16], [3], [8, 7], [10, 2], [13], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [13, 17], [16, 6], [9, 1], [13, 17], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [4], [11], [19], [13], [4], [2], [6], [15, 5], [1, 0], [17, 7], [4, 6], [10, 18], [5, 1], [15, 11], [12, 8], [17, 7], [7], [3], [0], [4], [2], [6, 11], [10, 18], [16, 15], [11], [0], [10, 2], [12, 19], [6, 17], [11], [19], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[136, 142, 149]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[61, 70, 72]
[124, 130, 134]
[189, 214, 217]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 122, 127]
[137, 143, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.093749761581421

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] xx => I, Pos: [0, 5] xx => I, Pos: [5, 10] xx => I, Pos: [5, 10] xx => I, Pos: [7, 14] cc => I, Pos: [7, 14] cc => I, Pos: [9, 18] cc => I, Pos: [9, 18] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [15, 22] xx => I, Pos: [15, 22] xx => I, Pos: [21, 27] xx => I, Pos: [21, 27] xx => I, Pos: [27, 31] xx => I, Pos: [27, 31] xx => I, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [31, 35] xx => I, Pos: [31, 35] xx => I, Pos: [35, 39] xx => I, Pos: [35, 39] xx => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [40, 74] xx => I, Pos: [40, 74] xx => I, Pos: [56, 63] xx => I, Pos: [56, 63] xx => I, Pos: [61, 70, 72] xcx => c, Pos: [62, 68] xx => I, Pos: [62, 68] xx => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [73, 77] xx => I, Pos: [73, 77] xx => I, Pos: [89, 103] cc => I, Pos: [89, 103] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 122, 127] ccc => cc, Pos: [124, 130, 134] xcx => c, Pos: [125, 140] xx => I, Pos: [125, 140] xx => I, Pos: [129, 138] xx => I, Pos: [129, 138] xx => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [135, 162] xx => I, Pos: [135, 162] xx => I, Pos: [136, 142, 149] ccc => cc, Pos: [137, 143, 150] ccc => cc, Pos: [138, 146] xx => I, Pos: [138, 146] xx => I, Pos: [147, 161] xx => I, Pos: [147, 161] xx => I, Pos: [158, 165] xx => I, Pos: [158, 165] xx => I, Pos: [165, 168] xx => I, Pos: [165, 168] xx => I, Pos: [176, 179] cc => I, Pos: [176, 179] cc => I, Pos: [184, 192] xx => I, Pos: [184, 192] xx => I, Pos: [187, 191] xx => I, Pos: [187, 191] xx => I, Pos: [189, 214, 217] xcx => c, Pos: [192, 207] xx => I, Pos: [192, 207] xx => I, Pos: [196, 202] cc => I, Pos: [196, 202] cc => I, Pos: [198, 209] cc => I, Pos: [198, 209] cc => I, Pos: [205, 212] xx => I, Pos: [205, 212] xx => I, Pos: [211, 216] xx => I, Pos: [211, 216] xx => I]

--------End Timer [Generate Plans]:  0.07811570167541504

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 10] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [21, 27] xx => I,
 Pos: [30, 38] cc => I,
 Pos: [35, 39] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [138, 146] xx => I,
 Pos: [131, 137] cc => I,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [165, 168] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [192, 207] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 36

Circuit before: xxcccxccccxccccxxccccxxxxxcxxccxcccxcccxxxxxccccxccccxxcxccccxxxccccxxccxxxccxcccxxcccxxxccxccxccccxxxcccccccccccxcccccxccccxxcccxccccxxccxxxccccxxxxccccxccccxxxxxccxxxxxxxcccxcccccccxxccxxxxxxxcccccccccxxxxxcccxxcccxxcccxccc
---------------
Apply:  Pos: [5, 10] xx => I
Apply:  Pos: [7, 14] cc => I
Apply:  Pos: [9, 18] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [15, 22] xx => I
Apply:  Pos: [21, 27] xx => I
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [35, 39] xx => I
Apply:  Pos: [40, 74] xx => I
Apply:  Pos: [56, 63] xx => I
Apply:  Pos: [61, 70, 72] xcx => c
Apply:  Pos: [62, 68] xx => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [73, 77] xx => I
Apply:  Pos: [89, 103] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 122, 127] ccc => cc
Apply:  Pos: [124, 130, 134] xcx => c
Apply:  Pos: [125, 140] xx => I
Apply:  Pos: [138, 146] xx => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [135, 162] xx => I
Apply:  Pos: [136, 142, 149] ccc => cc
Apply:  Pos: [147, 161] xx => I
Apply:  Pos: [165, 168] xx => I
Apply:  Pos: [176, 179] cc => I
Apply:  Pos: [192, 207] xx => I
Apply:  Pos: [187, 191] xx => I
Apply:  Pos: [189, 214, 217] xcx => c
Apply:  Pos: [196, 202] cc => I
Apply:  Pos: [198, 209] cc => I
Apply:  Pos: [205, 212] xx => I
Apply:  Pos: [211, 216] xx => I
---------------
Circuit after: xxcccccccxccxxxcxcxcccccxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxcccccccxcccxccccxxcccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [11, 0], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [9], [11, 0], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [14, 4], [7, 10], [10, 2], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 8], [12, 19], [1, 0], [5], [10, 3], [4, 13], [11, 1], [15], [12, 8], [9, 1], [4, 6], [7, 10], [12], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  1.171865463256836

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 19]
[43, 50]
[41, 51]
[89, 96]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 19]
[43, 50]
[41, 51]
[89, 96]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.9375219345092773

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [2, 19] cc => I, Pos: [2, 19] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [43, 50] cc => I, Pos: [43, 50] cc => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [2, 19] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 96] cc => I]
Change: 4, Saving: 4

Circuit before: xxcccccccxccxxxcxcxcccccxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxcccccccxcccxccccxxcccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc
---------------
Apply:  Pos: [2, 19] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [43, 50] cc => I
Apply:  Pos: [89, 96] cc => I
---------------
Circuit after: xxccccccxccxxxcxcxccccxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccxcccxxcccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [9], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [5], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.9375219345092773

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.8125119209289551

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxccccccxccxxxcxcxccccxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccxcccxxcccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc
---------------
---------------
Circuit after: xxccccccxccxxxcxcxccccxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxccccccxcccxcccxxcccxccccxxxccxxxxxcccxcccccxxccxcxxccccccxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[7], [2], [9, 1], [8, 19], [17, 9], [10, 18], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [9], [14, 4], [19, 2], [3, 18], [6, 11], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [5], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [8, 7], [10, 2], [1], [11], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.8125119209289551

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-x-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx 
     => total size: [149] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 28 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 76 (33.78%)
 - depth: 17 (37.78%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.09372687339782715

[7], [2], [11, 0], [9, 1], [8, 19], [7], [17, 9], [4, 6], [10, 18], [0, 3], [7], [5, 1], [11, 9], [17, 10], [4, 6], [14], [10], [7, 9], [0, 3], [16, 15], [5, 1], [9], [14], [15], [4], [16], [6, 17], [9], [3], [12, 19], [16, 15], [9], [11, 0], [14, 4], [19, 2], [9], [3, 18], [6, 11], [16, 15], [9], [5], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [11], [2, 18], [13, 17], [14, 4], [7, 10], [2], [19], [11], [9, 1], [3, 18], [4, 17], [13, 12], [19], [13], [10, 2], [15, 11], [2], [1], [5], [4, 17], [6, 15], [1], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [16, 11], [8, 7], [9], [2, 18], [8, 7], [2], [16, 6], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [16, 11], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [7, 19], [16, 6], [1, 0], [0], [7, 19], [12, 8], [9, 10], [3, 18], [14, 4], [10], [8, 19], [6, 15], [0, 3], [13, 12], [8], [14], [12, 19], [3, 18], [1, 0], [5], [12, 8], [6, 17], [10, 3], [4, 13], [8], [3], [11, 9], [6, 17], [5], [15], [14], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [16], [13], [11, 9], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [13], [0], [14], [16], [3], [8, 7], [10, 2], [13], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [13, 17], [16, 6], [9, 1], [13, 17], [2, 3], [15, 11], [8, 7], [1], [2], [4, 13], [11, 9], [4], [11], [19], [13], [4], [2], [6], [15, 5], [1, 0], [17, 7], [4, 6], [10, 18], [5, 1], [15, 11], [12, 8], [17, 7], [7], [3], [0], [4], [2], [6, 11], [10, 18], [16, 15], [11], [0], [10, 2], [12, 19], [6, 17], [11], [19], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[136, 142, 149]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[61, 70, 72]
[124, 130, 134]
[189, 214, 217]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[117, 122, 127]
[137, 143, 150]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 5]
[5, 10]
[15, 22]
[21, 27]
[27, 31]
[31, 35]
[35, 39]
[56, 63]
[62, 68]
[40, 74]
[73, 77]
[129, 138]
[125, 140]
[138, 146]
[147, 161]
[135, 162]
[158, 165]
[165, 168]
[187, 191]
[184, 192]
[192, 207]
[205, 212]
[211, 216]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[7, 14]
[9, 18]
[11, 20]
[30, 38]
[38, 44]
[66, 75]
[90, 93]
[89, 103]
[95, 111]
[110, 114]
[131, 137]
[176, 179]
[196, 202]
[198, 209]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.093778371810913

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 5] xx => I, Pos: [0, 5] xx => I, Pos: [5, 10] xx => I, Pos: [5, 10] xx => I, Pos: [7, 14] cc => I, Pos: [7, 14] cc => I, Pos: [9, 18] cc => I, Pos: [9, 18] cc => I, Pos: [11, 20] cc => I, Pos: [11, 20] cc => I, Pos: [15, 22] xx => I, Pos: [15, 22] xx => I, Pos: [21, 27] xx => I, Pos: [21, 27] xx => I, Pos: [27, 31] xx => I, Pos: [27, 31] xx => I, Pos: [30, 38] cc => I, Pos: [30, 38] cc => I, Pos: [31, 35] xx => I, Pos: [31, 35] xx => I, Pos: [35, 39] xx => I, Pos: [35, 39] xx => I, Pos: [38, 44] cc => I, Pos: [38, 44] cc => I, Pos: [40, 74] xx => I, Pos: [40, 74] xx => I, Pos: [56, 63] xx => I, Pos: [56, 63] xx => I, Pos: [61, 70, 72] xcx => c, Pos: [62, 68] xx => I, Pos: [62, 68] xx => I, Pos: [66, 75] cc => I, Pos: [66, 75] cc => I, Pos: [73, 77] xx => I, Pos: [73, 77] xx => I, Pos: [89, 103] cc => I, Pos: [89, 103] cc => I, Pos: [90, 93] cc => I, Pos: [90, 93] cc => I, Pos: [95, 111] cc => I, Pos: [95, 111] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 122, 127] ccc => cc, Pos: [124, 130, 134] xcx => c, Pos: [125, 140] xx => I, Pos: [125, 140] xx => I, Pos: [129, 138] xx => I, Pos: [129, 138] xx => I, Pos: [131, 137] cc => I, Pos: [131, 137] cc => I, Pos: [135, 162] xx => I, Pos: [135, 162] xx => I, Pos: [136, 142, 149] ccc => cc, Pos: [137, 143, 150] ccc => cc, Pos: [138, 146] xx => I, Pos: [138, 146] xx => I, Pos: [147, 161] xx => I, Pos: [147, 161] xx => I, Pos: [158, 165] xx => I, Pos: [158, 165] xx => I, Pos: [165, 168] xx => I, Pos: [165, 168] xx => I, Pos: [176, 179] cc => I, Pos: [176, 179] cc => I, Pos: [184, 192] xx => I, Pos: [184, 192] xx => I, Pos: [187, 191] xx => I, Pos: [187, 191] xx => I, Pos: [189, 214, 217] xcx => c, Pos: [192, 207] xx => I, Pos: [192, 207] xx => I, Pos: [196, 202] cc => I, Pos: [196, 202] cc => I, Pos: [198, 209] cc => I, Pos: [198, 209] cc => I, Pos: [205, 212] xx => I, Pos: [205, 212] xx => I, Pos: [211, 216] xx => I, Pos: [211, 216] xx => I]

Plan: 1
[Pos: [0, 5] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [21, 27] xx => I,
 Pos: [30, 38] cc => I,
 Pos: [31, 35] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [129, 138] xx => I,
 Pos: [131, 137] cc => I,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [158, 165] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [184, 192] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 36

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09374332427978516

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 5] xx => I,
 Pos: [7, 14] cc => I,
 Pos: [9, 18] cc => I,
 Pos: [11, 20] cc => I,
 Pos: [15, 22] xx => I,
 Pos: [21, 27] xx => I,
 Pos: [30, 38] cc => I,
 Pos: [31, 35] xx => I,
 Pos: [40, 74] xx => I,
 Pos: [56, 63] xx => I,
 Pos: [61, 70, 72] xcx => c,
 Pos: [62, 68] xx => I,
 Pos: [66, 75] cc => I,
 Pos: [73, 77] xx => I,
 Pos: [89, 103] cc => I,
 Pos: [90, 93] cc => I,
 Pos: [95, 111] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 122, 127] ccc => cc,
 Pos: [124, 130, 134] xcx => c,
 Pos: [125, 140] xx => I,
 Pos: [129, 138] xx => I,
 Pos: [131, 137] cc => I,
 Pos: [135, 162] xx => I,
 Pos: [136, 142, 149] ccc => cc,
 Pos: [147, 161] xx => I,
 Pos: [158, 165] xx => I,
 Pos: [176, 179] cc => I,
 Pos: [184, 192] xx => I,
 Pos: [187, 191] xx => I,
 Pos: [189, 214, 217] xcx => c,
 Pos: [196, 202] cc => I,
 Pos: [198, 209] cc => I,
 Pos: [205, 212] xx => I,
 Pos: [211, 216] xx => I]
Change: 35, Saving: 36

Circuit before: xxcccxccccxccccxxccccxxxxxcxxccxcccxcccxxxxxccccxccccxxcxccccxxxccccxxccxxxccxcccxxcccxxxccxccxccccxxxcccccccccccxcccccxccccxxcccxccccxxccxxxccccxxxxccccxccccxxxxxccxxxxxxxcccxcccccccxxccxxxxxxxcccccccccxxxxxcccxxcccxxcccxccc
---------------
Apply:  Pos: [0, 5] xx => I
Apply:  Pos: [7, 14] cc => I
Apply:  Pos: [9, 18] cc => I
Apply:  Pos: [11, 20] cc => I
Apply:  Pos: [15, 22] xx => I
Apply:  Pos: [21, 27] xx => I
Apply:  Pos: [30, 38] cc => I
Apply:  Pos: [31, 35] xx => I
Apply:  Pos: [40, 74] xx => I
Apply:  Pos: [56, 63] xx => I
Apply:  Pos: [61, 70, 72] xcx => c
Apply:  Pos: [62, 68] xx => I
Apply:  Pos: [66, 75] cc => I
Apply:  Pos: [73, 77] xx => I
Apply:  Pos: [89, 103] cc => I
Apply:  Pos: [90, 93] cc => I
Apply:  Pos: [95, 111] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 122, 127] ccc => cc
Apply:  Pos: [124, 130, 134] xcx => c
Apply:  Pos: [125, 140] xx => I
Apply:  Pos: [129, 138] xx => I
Apply:  Pos: [131, 137] cc => I
Apply:  Pos: [135, 162] xx => I
Apply:  Pos: [136, 142, 149] ccc => cc
Apply:  Pos: [147, 161] xx => I
Apply:  Pos: [158, 165] xx => I
Apply:  Pos: [176, 179] cc => I
Apply:  Pos: [184, 192] xx => I
Apply:  Pos: [187, 191] xx => I
Apply:  Pos: [189, 214, 217] xcx => c
Apply:  Pos: [196, 202] cc => I
Apply:  Pos: [198, 209] cc => I
Apply:  Pos: [205, 212] xx => I
Apply:  Pos: [211, 216] xx => I
---------------
Circuit after: xcccccxccxccxxxcxccccccxxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxccccccccccxccccxxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [11, 0], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [11, 0], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [14, 4], [7, 10], [10, 2], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [10, 2], [14, 4], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 8], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [12, 8], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  1.1875216960906982

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 18]
[43, 50]
[41, 51]
[89, 95]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 18]
[43, 50]
[41, 51]
[89, 95]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.9219245910644531

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 18] cc => I, Pos: [1, 18] cc => I, Pos: [41, 51] cc => I, Pos: [41, 51] cc => I, Pos: [43, 50] cc => I, Pos: [43, 50] cc => I, Pos: [89, 95] cc => I, Pos: [89, 95] cc => I]

Plan: 1
[Pos: [1, 18] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 95] cc => I]
Change: 4, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015619516372680664

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 18] cc => I,
 Pos: [41, 51] cc => I,
 Pos: [43, 50] cc => I,
 Pos: [89, 95] cc => I]
Change: 4, Saving: 4

Circuit before: xcccccxccxccxxxcxccccccxxxxccccxccccxxcccccccccxcccccxxcccxxxxcxcccxxxccccccccxccccxccccccccccxccccxxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc
---------------
Apply:  Pos: [1, 18] cc => I
Apply:  Pos: [41, 51] cc => I
Apply:  Pos: [43, 50] cc => I
Apply:  Pos: [89, 95] cc => I
---------------
Circuit after: xccccxccxccxxxcxcccccxxxxccccxccccxxcccccccxcccxxcccxxxxcxcccxxxccccccccxccccxcccccccccxcccxxxcccxccccxxccxxxxxxcccxcccccxccxcxxccccccxxxxcccccccxccc

--------End Timer [apply mapping plan]:  0.0

[2], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.9375441074371338

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.8124690055847168

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[2], [9, 1], [8, 19], [17, 9], [10, 18], [7], [11, 9], [17, 10], [10], [7, 9], [16, 15], [15], [4], [16], [6, 17], [3], [12, 19], [14, 4], [19, 2], [3, 18], [6, 11], [9], [11], [1], [14], [16, 15], [9, 0], [2, 3], [4, 17], [2], [9, 10], [6, 15], [8, 7], [11, 1], [18], [17], [10, 2], [2, 18], [13, 17], [7, 10], [9, 1], [3, 18], [13, 12], [13], [15, 11], [6, 15], [13, 6], [13], [4], [2, 18], [17, 7], [12, 8], [18], [2], [12], [9], [2, 18], [2], [14, 4], [17, 9], [7, 19], [19], [14], [0], [2, 3], [4, 17], [13, 12], [19, 2], [11, 0], [7, 9], [10, 18], [1, 0], [0], [12, 8], [9, 10], [0, 3], [14, 4], [10], [8, 19], [6, 15], [3, 18], [13, 12], [12, 19], [1, 0], [10, 3], [4, 13], [11, 1], [15], [9, 1], [4, 6], [7, 10], [12], [5], [13], [6, 17], [19, 2], [14, 4], [10], [13, 12], [2, 18], [17, 7], [11, 0], [0], [14], [8, 7], [10, 2], [1], [11], [13], [4], [7], [6], [8, 19], [14, 16], [1, 0], [18], [16, 6], [9, 1], [2, 3], [15, 11], [8, 7], [1], [4, 13], [11, 9], [11], [12, 19], [13], [6], [15, 5], [1, 0], [4, 6], [5, 1], [15, 11], [12, 8], [7], [3], [4], [2], [6, 11], [16, 15], [10, 2], [6, 17], [15, 5], [14, 16], [2, 18], [5], [15, 11], [9, 0], [19, 2], ----End Timer [Execute Mapping]:  0.8124690055847168

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-x-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx 
     => total size: [225] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 360


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-x-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx 
     => total size: [149] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 28 - (small)
 - circuit cycle: 248

Reduced: 
 - size: 76 (33.78%)
 - depth: 17 (37.78%)

