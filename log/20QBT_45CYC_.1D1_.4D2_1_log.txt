----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500500679016113

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [3], [16], [10], [14, 4], [0, 11], [7], [19], [2], [14], [18], [5], [1, 0], [8, 6], [7], [10], [3], [0, 11], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [18, 16], [7], [14, 17], [18, 16], [7], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [13], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [7], [0], [19], [14, 2], [18, 5], [12, 17], [7], [13], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 8], [7], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [12, 17], [19, 13], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [1, 8], [6], [9, 3], [19, 13], [11, 14], [12, 17], [16, 4], [9], [12], [13, 17], [14, 2], [10, 19], [4, 7], [0, 11], [18], [9, 3], [11, 14], [4, 7], [6, 12], [8, 19], [13, 2], [0, 10], [9], [0], [8], [14], [13, 17], [7, 3], [10, 11], [6, 12], [18, 15], [9], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [4, 3], [1, 0], [9], [4, 3], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [9], [0], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [7, 9], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [7, 9], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [7, 3], [9], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [7, 3], [7], [14], [2, 9], [8, 13], [4, 3], [16, 5], [2], [8], [14], [4, 3], [0, 19], [18, 5], [7], [17], [13, 2], [16, 14], [0, 10], [18, 5], [8], [19, 13], [15, 16], [17, 2], [19], [9], [10, 18], [16, 14], [4, 7], [17], [19, 6], [1, 8], [16, 14], [11, 4], [0, 10], [10], [6], [9], [19, 11], [1, 8], [13, 17], [4, 3], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [4, 3], [15, 16], [8, 6], [13], [10], [6], [7, 9], [12, 17], [0, 19], [11, 14], [8, 13], [18, 5], [11, 14], [7, 9], [16, 4], [8], [3], [4, 9], [14, 17], [18, 16], [8, 19], [15, 16], [6, 12], [18, 5], [14, 17], [4, 3], [2, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[87, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[127, 146, 155]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 32, 37]
[210, 215, 220]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.671867847442627

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [21, 36] xx => I, Pos: [21, 36] xx => I, Pos: [23, 35] xx => I, Pos: [23, 35] xx => I, Pos: [25, 32, 37] ccc => cc, Pos: [26, 34] xx => I, Pos: [26, 34] xx => I, Pos: [34, 41] xx => I, Pos: [34, 41] xx => I, Pos: [35, 51] xx => I, Pos: [35, 51] xx => I, Pos: [41, 47] xx => I, Pos: [41, 47] xx => I, Pos: [46, 49] cc => I, Pos: [46, 49] cc => I, Pos: [47, 50] xx => I, Pos: [47, 50] xx => I, Pos: [50, 56] xx => I, Pos: [50, 56] xx => I, Pos: [64, 81] xx => I, Pos: [64, 81] xx => I, Pos: [69, 74] xx => I, Pos: [69, 74] xx => I, Pos: [74, 80] xx => I, Pos: [74, 80] xx => I, Pos: [80, 88] xx => I, Pos: [80, 88] xx => I, Pos: [87, 99, 104] ccc => cc, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [92, 98] cc => I, Pos: [92, 98] cc => I, Pos: [97, 109] cc => I, Pos: [97, 109] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [113, 130] cc => I, Pos: [113, 130] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [122, 133] cc => I, Pos: [122, 133] cc => I, Pos: [126, 135] xx => I, Pos: [126, 135] xx => I, Pos: [127, 146, 155] xcx => c, Pos: [135, 140] xx => I, Pos: [135, 140] xx => I, Pos: [140, 147] xx => I, Pos: [140, 147] xx => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [147, 154] xx => I, Pos: [147, 154] xx => I, Pos: [154, 160] xx => I, Pos: [154, 160] xx => I, Pos: [165, 173] cc => I, Pos: [165, 173] cc => I, Pos: [177, 183] xx => I, Pos: [177, 183] xx => I, Pos: [182, 194] cc => I, Pos: [182, 194] cc => I, Pos: [183, 187] xx => I, Pos: [183, 187] xx => I, Pos: [195, 207] xx => I, Pos: [195, 207] xx => I, Pos: [196, 203] xx => I, Pos: [196, 203] xx => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [202, 213] xx => I, Pos: [202, 213] xx => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [210, 215, 220] ccc => cc, Pos: [218, 230] xx => I, Pos: [218, 230] xx => I, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [228, 247] xx => I, Pos: [228, 247] xx => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [249, 256] cc => I, Pos: [249, 256] cc => I, Pos: [252, 255] cc => I, Pos: [252, 255] cc => I, Pos: [254, 266] cc => I, Pos: [254, 266] cc => I, Pos: [261, 267] cc => I, Pos: [261, 267] cc => I]

Plan: 1
[Pos: [20, 26] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [23, 35] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [34, 41] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [47, 50] xx => I,
 Pos: [64, 81] xx => I,
 Pos: [69, 74] xx => I,
 Pos: [80, 88] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [92, 98] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [126, 135] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [140, 147] xx => I,
 Pos: [145, 148] cc => I,
 Pos: [154, 160] xx => I,
 Pos: [165, 173] cc => I,
 Pos: [177, 183] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [210, 215, 220] ccc => cc,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 38, Saving: 110

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [23, 35] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [34, 41] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [47, 50] xx => I,
 Pos: [64, 81] xx => I,
 Pos: [69, 74] xx => I,
 Pos: [80, 88] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [92, 98] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [126, 135] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [140, 147] xx => I,
 Pos: [145, 148] cc => I,
 Pos: [154, 160] xx => I,
 Pos: [165, 173] cc => I,
 Pos: [177, 183] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [210, 215, 220] ccc => cc,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 38, Saving: 110

Circuit before: xcccccccxcccccxcccccxxxxccxxxxxxccxxxccccxxxcccxccxxccccxxccccxxxccccxxxccxxxcccxxccccccxxxxcccxcccccccccxcccccxxcccccxcccccccxxxxcccccxxcccxxcccccxccccccxxccccxccxxcccccxxxccccxxxxccxcccxxccccccxxccccxxxcccxxccccxcccxxcccxcccccxxxcccccxxcccxccccxxxcccccccccxxcccccccccc
---------------
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [21, 36] xx => I
Apply:  Pos: [23, 35] xx => I
Apply:  Pos: [25, 32, 37] ccc => cc
Apply:  Pos: [34, 41] xx => I
Apply:  Pos: [46, 49] cc => I
Apply:  Pos: [47, 50] xx => I
Apply:  Pos: [64, 81] xx => I
Apply:  Pos: [69, 74] xx => I
Apply:  Pos: [80, 88] xx => I
Apply:  Pos: [87, 99, 104] ccc => cc
Apply:  Pos: [92, 98] cc => I
Apply:  Pos: [97, 109] cc => I
Apply:  Pos: [113, 130] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [122, 133] cc => I
Apply:  Pos: [126, 135] xx => I
Apply:  Pos: [127, 146, 155] xcx => c
Apply:  Pos: [140, 147] xx => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [154, 160] xx => I
Apply:  Pos: [165, 173] cc => I
Apply:  Pos: [177, 183] xx => I
Apply:  Pos: [182, 194] cc => I
Apply:  Pos: [195, 207] xx => I
Apply:  Pos: [196, 203] xx => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 213] xx => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [210, 215, 220] ccc => cc
Apply:  Pos: [218, 230] xx => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [228, 247] xx => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [249, 256] cc => I
Apply:  Pos: [252, 255] cc => I
Apply:  Pos: [254, 266] cc => I
Apply:  Pos: [261, 267] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxccccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [12], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [12], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [0, 10], [19, 13], [16, 14], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [16, 14], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.671867847442627

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[159, 166]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 108]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[157, 162, 168]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[148, 157, 162]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 108]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[159, 166]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.437488317489624

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [88, 108] xx => I, Pos: [88, 108] xx => I, Pos: [148, 157, 162] ccc => cc, Pos: [157, 162, 168] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I]

Plan: 1
[Pos: [88, 108] xx => I,
 Pos: [148, 157, 162] ccc => cc,
 Pos: [159, 166] cc => I]
Change: 3, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [88, 108] xx => I,
 Pos: [148, 157, 162] ccc => cc,
 Pos: [159, 166] cc => I]
Change: 3, Saving: 8

Circuit before: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxccccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [88, 108] xx => I
Apply:  Pos: [148, 157, 162] ccc => cc
Apply:  Pos: [159, 166] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxcccccxcxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [19, 6], [8, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 10], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [10, 18], [19, 13], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.437488317489624

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[146, 155, 163]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4216318130493164

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [146, 155, 163] ccc => cc]

Plan: 1
[Pos: [146, 155, 163] ccc => cc]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [146, 155, 163] ccc => cc]
Change: 1, Saving: 2

Circuit before: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxcccccxcxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [146, 155, 163] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxcccccxcxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [10, 18], [19, 13], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4216318130493164

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.390589952468872

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [19, 6], [8, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [10, 18], [19, 13], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.390589952468872

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-x-cx-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [191] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 330

Reduced: 
 - size: 79 (29.26%)
 - cycle: 120 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1248006820678711

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [3], [16], [10], [14, 4], [0, 11], [7], [19], [2], [14], [18], [5], [1, 0], [8, 6], [7], [10], [3], [0, 11], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [18, 16], [7], [14, 17], [18, 16], [7], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [13], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [7], [0], [19], [14, 2], [18, 5], [12, 17], [7], [13], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 8], [7], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [12, 17], [19, 13], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [1, 8], [6], [9, 3], [19, 13], [11, 14], [12, 17], [16, 4], [9], [12], [13, 17], [14, 2], [10, 19], [4, 7], [0, 11], [18], [9, 3], [11, 14], [4, 7], [6, 12], [8, 19], [13, 2], [0, 10], [9], [0], [8], [14], [13, 17], [7, 3], [10, 11], [6, 12], [18, 15], [9], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [4, 3], [1, 0], [9], [4, 3], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [9], [0], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [7, 9], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [7, 9], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [7, 3], [9], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [7, 3], [7], [14], [2, 9], [8, 13], [4, 3], [16, 5], [2], [8], [14], [4, 3], [0, 19], [18, 5], [7], [17], [13, 2], [16, 14], [0, 10], [18, 5], [8], [19, 13], [15, 16], [17, 2], [19], [9], [10, 18], [16, 14], [4, 7], [17], [19, 6], [1, 8], [16, 14], [11, 4], [0, 10], [10], [6], [9], [19, 11], [1, 8], [13, 17], [4, 3], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [4, 3], [15, 16], [8, 6], [13], [10], [6], [7, 9], [12, 17], [0, 19], [11, 14], [8, 13], [18, 5], [11, 14], [7, 9], [16, 4], [8], [3], [4, 9], [14, 17], [18, 16], [8, 19], [15, 16], [6, 12], [18, 5], [14, 17], [4, 3], [2, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[87, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[127, 146, 155]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 32, 37]
[210, 215, 220]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.656233310699463

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [21, 36] xx => I, Pos: [21, 36] xx => I, Pos: [23, 35] xx => I, Pos: [23, 35] xx => I, Pos: [25, 32, 37] ccc => cc, Pos: [26, 34] xx => I, Pos: [26, 34] xx => I, Pos: [34, 41] xx => I, Pos: [34, 41] xx => I, Pos: [35, 51] xx => I, Pos: [35, 51] xx => I, Pos: [41, 47] xx => I, Pos: [41, 47] xx => I, Pos: [46, 49] cc => I, Pos: [46, 49] cc => I, Pos: [47, 50] xx => I, Pos: [47, 50] xx => I, Pos: [50, 56] xx => I, Pos: [50, 56] xx => I, Pos: [64, 81] xx => I, Pos: [64, 81] xx => I, Pos: [69, 74] xx => I, Pos: [69, 74] xx => I, Pos: [74, 80] xx => I, Pos: [74, 80] xx => I, Pos: [80, 88] xx => I, Pos: [80, 88] xx => I, Pos: [87, 99, 104] ccc => cc, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [92, 98] cc => I, Pos: [92, 98] cc => I, Pos: [97, 109] cc => I, Pos: [97, 109] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [113, 130] cc => I, Pos: [113, 130] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [122, 133] cc => I, Pos: [122, 133] cc => I, Pos: [126, 135] xx => I, Pos: [126, 135] xx => I, Pos: [127, 146, 155] xcx => c, Pos: [135, 140] xx => I, Pos: [135, 140] xx => I, Pos: [140, 147] xx => I, Pos: [140, 147] xx => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [147, 154] xx => I, Pos: [147, 154] xx => I, Pos: [154, 160] xx => I, Pos: [154, 160] xx => I, Pos: [165, 173] cc => I, Pos: [165, 173] cc => I, Pos: [177, 183] xx => I, Pos: [177, 183] xx => I, Pos: [182, 194] cc => I, Pos: [182, 194] cc => I, Pos: [183, 187] xx => I, Pos: [183, 187] xx => I, Pos: [195, 207] xx => I, Pos: [195, 207] xx => I, Pos: [196, 203] xx => I, Pos: [196, 203] xx => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [202, 213] xx => I, Pos: [202, 213] xx => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [210, 215, 220] ccc => cc, Pos: [218, 230] xx => I, Pos: [218, 230] xx => I, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [228, 247] xx => I, Pos: [228, 247] xx => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [249, 256] cc => I, Pos: [249, 256] cc => I, Pos: [252, 255] cc => I, Pos: [252, 255] cc => I, Pos: [254, 266] cc => I, Pos: [254, 266] cc => I, Pos: [261, 267] cc => I, Pos: [261, 267] cc => I]

Plan: 1
[Pos: [20, 26] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [23, 35] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [34, 41] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [47, 50] xx => I,
 Pos: [64, 81] xx => I,
 Pos: [69, 74] xx => I,
 Pos: [80, 88] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [92, 98] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [126, 135] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [140, 147] xx => I,
 Pos: [145, 148] cc => I,
 Pos: [154, 160] xx => I,
 Pos: [165, 173] cc => I,
 Pos: [177, 183] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [210, 215, 220] ccc => cc,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 38, Saving: 38

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09373021125793457

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [23, 35] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [34, 41] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [47, 50] xx => I,
 Pos: [64, 81] xx => I,
 Pos: [69, 74] xx => I,
 Pos: [80, 88] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [92, 98] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [126, 135] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [140, 147] xx => I,
 Pos: [145, 148] cc => I,
 Pos: [154, 160] xx => I,
 Pos: [165, 173] cc => I,
 Pos: [177, 183] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [210, 215, 220] ccc => cc,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 38, Saving: 38

Circuit before: xcccccccxcccccxcccccxxxxccxxxxxxccxxxccccxxxcccxccxxccccxxccccxxxccccxxxccxxxcccxxccccccxxxxcccxcccccccccxcccccxxcccccxcccccccxxxxcccccxxcccxxcccccxccccccxxccccxccxxcccccxxxccccxxxxccxcccxxccccccxxccccxxxcccxxccccxcccxxcccxcccccxxxcccccxxcccxccccxxxcccccccccxxcccccccccc
---------------
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [21, 36] xx => I
Apply:  Pos: [23, 35] xx => I
Apply:  Pos: [25, 32, 37] ccc => cc
Apply:  Pos: [34, 41] xx => I
Apply:  Pos: [46, 49] cc => I
Apply:  Pos: [47, 50] xx => I
Apply:  Pos: [64, 81] xx => I
Apply:  Pos: [69, 74] xx => I
Apply:  Pos: [80, 88] xx => I
Apply:  Pos: [87, 99, 104] ccc => cc
Apply:  Pos: [92, 98] cc => I
Apply:  Pos: [97, 109] cc => I
Apply:  Pos: [113, 130] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [122, 133] cc => I
Apply:  Pos: [126, 135] xx => I
Apply:  Pos: [127, 146, 155] xcx => c
Apply:  Pos: [140, 147] xx => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [154, 160] xx => I
Apply:  Pos: [165, 173] cc => I
Apply:  Pos: [177, 183] xx => I
Apply:  Pos: [182, 194] cc => I
Apply:  Pos: [195, 207] xx => I
Apply:  Pos: [196, 203] xx => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 213] xx => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [210, 215, 220] ccc => cc
Apply:  Pos: [218, 230] xx => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [228, 247] xx => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [249, 256] cc => I
Apply:  Pos: [252, 255] cc => I
Apply:  Pos: [254, 266] cc => I
Apply:  Pos: [261, 267] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxccccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [12], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [12], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [0, 10], [19, 13], [16, 14], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [16, 14], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.7499635219573975

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[159, 166]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 108]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[157, 162, 168]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[148, 157, 162]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 108]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[159, 166]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4530971050262451

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [88, 108] xx => I, Pos: [88, 108] xx => I, Pos: [148, 157, 162] ccc => cc, Pos: [157, 162, 168] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I]

Plan: 1
[Pos: [88, 108] xx => I,
 Pos: [148, 157, 162] ccc => cc,
 Pos: [159, 166] cc => I]
Change: 3, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [88, 108] xx => I,
 Pos: [148, 157, 162] ccc => cc,
 Pos: [159, 166] cc => I]
Change: 3, Saving: 3

Circuit before: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxccccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [88, 108] xx => I
Apply:  Pos: [148, 157, 162] ccc => cc
Apply:  Pos: [159, 166] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxcccccxcxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [19, 6], [8, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 10], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [10, 18], [19, 13], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4530971050262451

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[146, 155, 163]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4216148853302002

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [146, 155, 163] ccc => cc]

Plan: 1
[Pos: [146, 155, 163] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [146, 155, 163] ccc => cc]
Change: 1, Saving: 1

Circuit before: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxcccccxcxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [146, 155, 163] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxcccccxcxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [10, 18], [19, 13], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4216148853302002

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3906891345977783

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [19, 6], [8, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [10, 18], [19, 13], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.3906891345977783

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-x-cx-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [191] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 39 - (small)
 - circuit cycle: 330

Reduced: 
 - size: 79 (29.26%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935401916503906

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [3], [16], [10], [14, 4], [0, 11], [7], [19], [2], [14], [18], [5], [1, 0], [8, 6], [7], [10], [3], [0, 11], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [18, 16], [7], [14, 17], [18, 16], [7], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [13], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [7], [0], [19], [14, 2], [18, 5], [12, 17], [7], [13], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 8], [7], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [12, 17], [19, 13], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [1, 8], [6], [9, 3], [19, 13], [11, 14], [12, 17], [16, 4], [9], [12], [13, 17], [14, 2], [10, 19], [4, 7], [0, 11], [18], [9, 3], [11, 14], [4, 7], [6, 12], [8, 19], [13, 2], [0, 10], [9], [0], [8], [14], [13, 17], [7, 3], [10, 11], [6, 12], [18, 15], [9], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [4, 3], [1, 0], [9], [4, 3], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [9], [0], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [7, 9], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [7, 9], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [7, 3], [9], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [7, 3], [7], [14], [2, 9], [8, 13], [4, 3], [16, 5], [2], [8], [14], [4, 3], [0, 19], [18, 5], [7], [17], [13, 2], [16, 14], [0, 10], [18, 5], [8], [19, 13], [15, 16], [17, 2], [19], [9], [10, 18], [16, 14], [4, 7], [17], [19, 6], [1, 8], [16, 14], [11, 4], [0, 10], [10], [6], [9], [19, 11], [1, 8], [13, 17], [4, 3], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [4, 3], [15, 16], [8, 6], [13], [10], [6], [7, 9], [12, 17], [0, 19], [11, 14], [8, 13], [18, 5], [11, 14], [7, 9], [16, 4], [8], [3], [4, 9], [14, 17], [18, 16], [8, 19], [15, 16], [6, 12], [18, 5], [14, 17], [4, 3], [2, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[87, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[127, 146, 155]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 32, 37]
[210, 215, 220]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6394343376159668

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [21, 36] xx => I, Pos: [21, 36] xx => I, Pos: [23, 35] xx => I, Pos: [23, 35] xx => I, Pos: [25, 32, 37] ccc => cc, Pos: [26, 34] xx => I, Pos: [26, 34] xx => I, Pos: [34, 41] xx => I, Pos: [34, 41] xx => I, Pos: [35, 51] xx => I, Pos: [35, 51] xx => I, Pos: [41, 47] xx => I, Pos: [41, 47] xx => I, Pos: [46, 49] cc => I, Pos: [46, 49] cc => I, Pos: [47, 50] xx => I, Pos: [47, 50] xx => I, Pos: [50, 56] xx => I, Pos: [50, 56] xx => I, Pos: [64, 81] xx => I, Pos: [64, 81] xx => I, Pos: [69, 74] xx => I, Pos: [69, 74] xx => I, Pos: [74, 80] xx => I, Pos: [74, 80] xx => I, Pos: [80, 88] xx => I, Pos: [80, 88] xx => I, Pos: [87, 99, 104] ccc => cc, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [92, 98] cc => I, Pos: [92, 98] cc => I, Pos: [97, 109] cc => I, Pos: [97, 109] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [113, 130] cc => I, Pos: [113, 130] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [122, 133] cc => I, Pos: [122, 133] cc => I, Pos: [126, 135] xx => I, Pos: [126, 135] xx => I, Pos: [127, 146, 155] xcx => c, Pos: [135, 140] xx => I, Pos: [135, 140] xx => I, Pos: [140, 147] xx => I, Pos: [140, 147] xx => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [147, 154] xx => I, Pos: [147, 154] xx => I, Pos: [154, 160] xx => I, Pos: [154, 160] xx => I, Pos: [165, 173] cc => I, Pos: [165, 173] cc => I, Pos: [177, 183] xx => I, Pos: [177, 183] xx => I, Pos: [182, 194] cc => I, Pos: [182, 194] cc => I, Pos: [183, 187] xx => I, Pos: [183, 187] xx => I, Pos: [195, 207] xx => I, Pos: [195, 207] xx => I, Pos: [196, 203] xx => I, Pos: [196, 203] xx => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [202, 213] xx => I, Pos: [202, 213] xx => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [210, 215, 220] ccc => cc, Pos: [218, 230] xx => I, Pos: [218, 230] xx => I, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [228, 247] xx => I, Pos: [228, 247] xx => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [249, 256] cc => I, Pos: [249, 256] cc => I, Pos: [252, 255] cc => I, Pos: [252, 255] cc => I, Pos: [254, 266] cc => I, Pos: [254, 266] cc => I, Pos: [261, 267] cc => I, Pos: [261, 267] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [23, 35] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [41, 47] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [50, 56] xx => I,
 Pos: [64, 81] xx => I,
 Pos: [74, 80] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [88, 95] xx => I,
 Pos: [98, 107] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [126, 135] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [147, 154] xx => I,
 Pos: [145, 148] cc => I,
 Pos: [165, 173] cc => I,
 Pos: [177, 183] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [220, 225] cc => I,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 37, Saving: 110

Circuit before: xcccccccxcccccxcccccxxxxccxxxxxxccxxxccccxxxcccxccxxccccxxccccxxxccccxxxccxxxcccxxccccccxxxxcccxcccccccccxcccccxxcccccxcccccccxxxxcccccxxcccxxcccccxccccccxxccccxccxxcccccxxxccccxxxxccxcccxxccccccxxccccxxxcccxxccccxcccxxcccxcccccxxxcccccxxcccxccccxxxcccccccccxxcccccccccc
---------------
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [21, 36] xx => I
Apply:  Pos: [23, 35] xx => I
Apply:  Pos: [25, 32, 37] ccc => cc
Apply:  Pos: [41, 47] xx => I
Apply:  Pos: [46, 49] cc => I
Apply:  Pos: [50, 56] xx => I
Apply:  Pos: [64, 81] xx => I
Apply:  Pos: [74, 80] xx => I
Apply:  Pos: [87, 99, 104] ccc => cc
Apply:  Pos: [88, 95] xx => I
Apply:  Pos: [98, 107] cc => I
Apply:  Pos: [97, 109] cc => I
Apply:  Pos: [113, 130] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [122, 133] cc => I
Apply:  Pos: [126, 135] xx => I
Apply:  Pos: [127, 146, 155] xcx => c
Apply:  Pos: [147, 154] xx => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [165, 173] cc => I
Apply:  Pos: [177, 183] xx => I
Apply:  Pos: [182, 194] cc => I
Apply:  Pos: [195, 207] xx => I
Apply:  Pos: [196, 203] xx => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 213] xx => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [218, 230] xx => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [228, 247] xx => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [249, 256] cc => I
Apply:  Pos: [252, 255] cc => I
Apply:  Pos: [254, 266] cc => I
Apply:  Pos: [261, 267] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxccxcccxxcccxccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxxcccxccccccxxcccxcccxxccccccccccccxccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [12], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 10], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.6394343376159668

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 109]
[108, 122]
[122, 144]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[159, 164, 169]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[150, 159, 164]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 109]
[108, 122]
[122, 144]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3753395080566406

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [88, 109] xx => I, Pos: [88, 109] xx => I, Pos: [108, 122] xx => I, Pos: [108, 122] xx => I, Pos: [122, 144] xx => I, Pos: [122, 144] xx => I, Pos: [150, 159, 164] ccc => cc, Pos: [159, 164, 169] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [88, 109] xx => I,
 Pos: [108, 122] xx => I,
 Pos: [150, 159, 164] ccc => cc]
Change: 3, Saving: 6

Circuit before: xcccccccxcccccxcccccxccxxxxxccxcccxxcccxccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxxcccxccccccxxcccxcccxxccccccccccccxccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [88, 109] xx => I
Apply:  Pos: [108, 122] xx => I
Apply:  Pos: [150, 159, 164] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxccxcccxxcccxccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxcxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.015610456466674805

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 10], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [10, 18], [19, 13], [15, 16], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.3909499645233154

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[146, 155, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4217782020568848

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [146, 155, 164] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [146, 155, 164] ccc => cc]
Change: 1, Saving: 2

Circuit before: xcccccccxcccccxcccccxccxxxxxccxcccxxcccxccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxcxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [146, 155, 164] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxccxcccxxcccxccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxcxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [10, 18], [19, 13], [15, 16], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4217782020568848

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4065055847167969

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccccccxcccccxcccccxccxxxxxccxcccxxcccxccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxcxccxcccxxcccxcccxxccccxxccccccc
---------------
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxccxcccxxcccxccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxcxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [10, 18], [19, 13], [15, 16], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4065055847167969

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [192] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 332

Reduced: 
 - size: 78 (28.89%)
 - cycle: 118 (26.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936713218688965

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [3], [16], [10], [14, 4], [0, 11], [7], [19], [2], [14], [18], [5], [1, 0], [8, 6], [7], [10], [3], [0, 11], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [18, 16], [7], [14, 17], [18, 16], [7], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [13], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [7], [0], [19], [14, 2], [18, 5], [12, 17], [7], [13], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 8], [7], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [12, 17], [19, 13], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [1, 8], [6], [9, 3], [19, 13], [11, 14], [12, 17], [16, 4], [9], [12], [13, 17], [14, 2], [10, 19], [4, 7], [0, 11], [18], [9, 3], [11, 14], [4, 7], [6, 12], [8, 19], [13, 2], [0, 10], [9], [0], [8], [14], [13, 17], [7, 3], [10, 11], [6, 12], [18, 15], [9], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [4, 3], [1, 0], [9], [4, 3], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [9], [0], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [7, 9], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [7, 9], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [7, 3], [9], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [7, 3], [7], [14], [2, 9], [8, 13], [4, 3], [16, 5], [2], [8], [14], [4, 3], [0, 19], [18, 5], [7], [17], [13, 2], [16, 14], [0, 10], [18, 5], [8], [19, 13], [15, 16], [17, 2], [19], [9], [10, 18], [16, 14], [4, 7], [17], [19, 6], [1, 8], [16, 14], [11, 4], [0, 10], [10], [6], [9], [19, 11], [1, 8], [13, 17], [4, 3], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [4, 3], [15, 16], [8, 6], [13], [10], [6], [7, 9], [12, 17], [0, 19], [11, 14], [8, 13], [18, 5], [11, 14], [7, 9], [16, 4], [8], [3], [4, 9], [14, 17], [18, 16], [8, 19], [15, 16], [6, 12], [18, 5], [14, 17], [4, 3], [2, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[87, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[127, 146, 155]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 32, 37]
[210, 215, 220]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6861255168914795

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [21, 36] xx => I, Pos: [21, 36] xx => I, Pos: [23, 35] xx => I, Pos: [23, 35] xx => I, Pos: [25, 32, 37] ccc => cc, Pos: [26, 34] xx => I, Pos: [26, 34] xx => I, Pos: [34, 41] xx => I, Pos: [34, 41] xx => I, Pos: [35, 51] xx => I, Pos: [35, 51] xx => I, Pos: [41, 47] xx => I, Pos: [41, 47] xx => I, Pos: [46, 49] cc => I, Pos: [46, 49] cc => I, Pos: [47, 50] xx => I, Pos: [47, 50] xx => I, Pos: [50, 56] xx => I, Pos: [50, 56] xx => I, Pos: [64, 81] xx => I, Pos: [64, 81] xx => I, Pos: [69, 74] xx => I, Pos: [69, 74] xx => I, Pos: [74, 80] xx => I, Pos: [74, 80] xx => I, Pos: [80, 88] xx => I, Pos: [80, 88] xx => I, Pos: [87, 99, 104] ccc => cc, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [92, 98] cc => I, Pos: [92, 98] cc => I, Pos: [97, 109] cc => I, Pos: [97, 109] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [113, 130] cc => I, Pos: [113, 130] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [122, 133] cc => I, Pos: [122, 133] cc => I, Pos: [126, 135] xx => I, Pos: [126, 135] xx => I, Pos: [127, 146, 155] xcx => c, Pos: [135, 140] xx => I, Pos: [135, 140] xx => I, Pos: [140, 147] xx => I, Pos: [140, 147] xx => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [147, 154] xx => I, Pos: [147, 154] xx => I, Pos: [154, 160] xx => I, Pos: [154, 160] xx => I, Pos: [165, 173] cc => I, Pos: [165, 173] cc => I, Pos: [177, 183] xx => I, Pos: [177, 183] xx => I, Pos: [182, 194] cc => I, Pos: [182, 194] cc => I, Pos: [183, 187] xx => I, Pos: [183, 187] xx => I, Pos: [195, 207] xx => I, Pos: [195, 207] xx => I, Pos: [196, 203] xx => I, Pos: [196, 203] xx => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [202, 213] xx => I, Pos: [202, 213] xx => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [210, 215, 220] ccc => cc, Pos: [218, 230] xx => I, Pos: [218, 230] xx => I, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [228, 247] xx => I, Pos: [228, 247] xx => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [249, 256] cc => I, Pos: [249, 256] cc => I, Pos: [252, 255] cc => I, Pos: [252, 255] cc => I, Pos: [254, 266] cc => I, Pos: [254, 266] cc => I, Pos: [261, 267] cc => I, Pos: [261, 267] cc => I]

--------End Timer [Generate Plans]:  0.09374260902404785

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [23, 35] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [41, 47] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [50, 56] xx => I,
 Pos: [64, 81] xx => I,
 Pos: [74, 80] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [88, 95] xx => I,
 Pos: [98, 107] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [126, 135] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [147, 154] xx => I,
 Pos: [145, 148] cc => I,
 Pos: [165, 173] cc => I,
 Pos: [183, 187] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [210, 215, 220] ccc => cc,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 37, Saving: 37

Circuit before: xcccccccxcccccxcccccxxxxccxxxxxxccxxxccccxxxcccxccxxccccxxccccxxxccccxxxccxxxcccxxccccccxxxxcccxcccccccccxcccccxxcccccxcccccccxxxxcccccxxcccxxcccccxccccccxxccccxccxxcccccxxxccccxxxxccxcccxxccccccxxccccxxxcccxxccccxcccxxcccxcccccxxxcccccxxcccxccccxxxcccccccccxxcccccccccc
---------------
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [21, 36] xx => I
Apply:  Pos: [23, 35] xx => I
Apply:  Pos: [25, 32, 37] ccc => cc
Apply:  Pos: [41, 47] xx => I
Apply:  Pos: [46, 49] cc => I
Apply:  Pos: [50, 56] xx => I
Apply:  Pos: [64, 81] xx => I
Apply:  Pos: [74, 80] xx => I
Apply:  Pos: [87, 99, 104] ccc => cc
Apply:  Pos: [88, 95] xx => I
Apply:  Pos: [98, 107] cc => I
Apply:  Pos: [97, 109] cc => I
Apply:  Pos: [113, 130] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [122, 133] cc => I
Apply:  Pos: [126, 135] xx => I
Apply:  Pos: [127, 146, 155] xcx => c
Apply:  Pos: [147, 154] xx => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [165, 173] cc => I
Apply:  Pos: [183, 187] xx => I
Apply:  Pos: [182, 194] cc => I
Apply:  Pos: [195, 207] xx => I
Apply:  Pos: [196, 203] xx => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 213] xx => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [210, 215, 220] ccc => cc
Apply:  Pos: [218, 230] xx => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [228, 247] xx => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [249, 256] cc => I
Apply:  Pos: [252, 255] cc => I
Apply:  Pos: [254, 266] cc => I
Apply:  Pos: [261, 267] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxccxcccxxcccxccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxxcccxccccccxxcccxcccxxccccccccccccxccxxccccxxxcccxxxxccccxccccccccxcxccccccxccxccccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [12], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [0, 10], [19, 13], [16, 14], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [16, 14], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.7798681259155273

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[161, 168]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 109]
[108, 122]
[122, 137]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[159, 164, 170]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[150, 159, 164]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 109]
[108, 122]
[122, 137]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[161, 168]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4217770099639893

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [88, 109] xx => I, Pos: [88, 109] xx => I, Pos: [108, 122] xx => I, Pos: [108, 122] xx => I, Pos: [122, 137] xx => I, Pos: [122, 137] xx => I, Pos: [150, 159, 164] ccc => cc, Pos: [159, 164, 170] ccc => cc, Pos: [161, 168] cc => I, Pos: [161, 168] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [88, 109] xx => I,
 Pos: [108, 122] xx => I,
 Pos: [159, 164, 170] ccc => cc,
 Pos: [161, 168] cc => I]
Change: 4, Saving: 4

Circuit before: xcccccccxcccccxcccccxccxxxxxccxcccxxcccxccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxxcccxccccccxxcccxcccxxccccccccccccxccxxccccxxxcccxxxxccccxccccccccxcxccccccxccxccccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [88, 109] xx => I
Apply:  Pos: [108, 122] xx => I
Apply:  Pos: [159, 164, 170] ccc => cc
Apply:  Pos: [161, 168] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxccxcccxxcccxccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxxccccxccccccccxcxcccccxccxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [0, 18], [19, 13], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4217770099639893

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4377670288085938

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccccccxcccccxcccccxccxxxxxccxcccxxcccxccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxxccccxccccccccxcxcccccxccxccxcccxxcccxcccxxccccxxccccccc
---------------
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxccxcccxxcccxccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxxccccxccccccccxcxcccccxccxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [0, 18], [19, 13], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4377670288085938

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [192] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 39 - (small)
 - circuit cycle: 332

Reduced: 
 - size: 78 (28.89%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499570846557617

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [3], [16], [10], [14, 4], [0, 11], [7], [19], [2], [14], [18], [5], [1, 0], [8, 6], [7], [10], [3], [0, 11], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [18, 16], [7], [14, 17], [18, 16], [7], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [13], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [7], [0], [19], [14, 2], [18, 5], [12, 17], [7], [13], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 8], [7], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [12, 17], [19, 13], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [1, 8], [6], [9, 3], [19, 13], [11, 14], [12, 17], [16, 4], [9], [12], [13, 17], [14, 2], [10, 19], [4, 7], [0, 11], [18], [9, 3], [11, 14], [4, 7], [6, 12], [8, 19], [13, 2], [0, 10], [9], [0], [8], [14], [13, 17], [7, 3], [10, 11], [6, 12], [18, 15], [9], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [4, 3], [1, 0], [9], [4, 3], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [9], [0], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [7, 9], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [7, 9], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [7, 3], [9], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [7, 3], [7], [14], [2, 9], [8, 13], [4, 3], [16, 5], [2], [8], [14], [4, 3], [0, 19], [18, 5], [7], [17], [13, 2], [16, 14], [0, 10], [18, 5], [8], [19, 13], [15, 16], [17, 2], [19], [9], [10, 18], [16, 14], [4, 7], [17], [19, 6], [1, 8], [16, 14], [11, 4], [0, 10], [10], [6], [9], [19, 11], [1, 8], [13, 17], [4, 3], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [4, 3], [15, 16], [8, 6], [13], [10], [6], [7, 9], [12, 17], [0, 19], [11, 14], [8, 13], [18, 5], [11, 14], [7, 9], [16, 4], [8], [3], [4, 9], [14, 17], [18, 16], [8, 19], [15, 16], [6, 12], [18, 5], [14, 17], [4, 3], [2, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[87, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[127, 146, 155]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 32, 37]
[210, 215, 220]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6718988418579102

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [21, 36] xx => I, Pos: [21, 36] xx => I, Pos: [23, 35] xx => I, Pos: [23, 35] xx => I, Pos: [25, 32, 37] ccc => cc, Pos: [26, 34] xx => I, Pos: [26, 34] xx => I, Pos: [34, 41] xx => I, Pos: [34, 41] xx => I, Pos: [35, 51] xx => I, Pos: [35, 51] xx => I, Pos: [41, 47] xx => I, Pos: [41, 47] xx => I, Pos: [46, 49] cc => I, Pos: [46, 49] cc => I, Pos: [47, 50] xx => I, Pos: [47, 50] xx => I, Pos: [50, 56] xx => I, Pos: [50, 56] xx => I, Pos: [64, 81] xx => I, Pos: [64, 81] xx => I, Pos: [69, 74] xx => I, Pos: [69, 74] xx => I, Pos: [74, 80] xx => I, Pos: [74, 80] xx => I, Pos: [80, 88] xx => I, Pos: [80, 88] xx => I, Pos: [87, 99, 104] ccc => cc, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [92, 98] cc => I, Pos: [92, 98] cc => I, Pos: [97, 109] cc => I, Pos: [97, 109] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [113, 130] cc => I, Pos: [113, 130] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [122, 133] cc => I, Pos: [122, 133] cc => I, Pos: [126, 135] xx => I, Pos: [126, 135] xx => I, Pos: [127, 146, 155] xcx => c, Pos: [135, 140] xx => I, Pos: [135, 140] xx => I, Pos: [140, 147] xx => I, Pos: [140, 147] xx => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [147, 154] xx => I, Pos: [147, 154] xx => I, Pos: [154, 160] xx => I, Pos: [154, 160] xx => I, Pos: [165, 173] cc => I, Pos: [165, 173] cc => I, Pos: [177, 183] xx => I, Pos: [177, 183] xx => I, Pos: [182, 194] cc => I, Pos: [182, 194] cc => I, Pos: [183, 187] xx => I, Pos: [183, 187] xx => I, Pos: [195, 207] xx => I, Pos: [195, 207] xx => I, Pos: [196, 203] xx => I, Pos: [196, 203] xx => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [202, 213] xx => I, Pos: [202, 213] xx => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [210, 215, 220] ccc => cc, Pos: [218, 230] xx => I, Pos: [218, 230] xx => I, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [228, 247] xx => I, Pos: [228, 247] xx => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [249, 256] cc => I, Pos: [249, 256] cc => I, Pos: [252, 255] cc => I, Pos: [252, 255] cc => I, Pos: [254, 266] cc => I, Pos: [254, 266] cc => I, Pos: [261, 267] cc => I, Pos: [261, 267] cc => I]

--------End Timer [Generate Plans]:  0.09375762939453125

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [35, 51] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [41, 47] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [50, 56] xx => I,
 Pos: [64, 81] xx => I,
 Pos: [74, 80] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [88, 95] xx => I,
 Pos: [98, 107] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [126, 135] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [147, 154] xx => I,
 Pos: [145, 148] cc => I,
 Pos: [165, 173] cc => I,
 Pos: [183, 187] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [220, 225] cc => I,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 37, Saving: 37

Circuit before: xcccccccxcccccxcccccxxxxccxxxxxxccxxxccccxxxcccxccxxccccxxccccxxxccccxxxccxxxcccxxccccccxxxxcccxcccccccccxcccccxxcccccxcccccccxxxxcccccxxcccxxcccccxccccccxxccccxccxxcccccxxxccccxxxxccxcccxxccccccxxccccxxxcccxxccccxcccxxcccxcccccxxxcccccxxcccxccccxxxcccccccccxxcccccccccc
---------------
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [21, 36] xx => I
Apply:  Pos: [35, 51] xx => I
Apply:  Pos: [25, 32, 37] ccc => cc
Apply:  Pos: [41, 47] xx => I
Apply:  Pos: [46, 49] cc => I
Apply:  Pos: [50, 56] xx => I
Apply:  Pos: [64, 81] xx => I
Apply:  Pos: [74, 80] xx => I
Apply:  Pos: [87, 99, 104] ccc => cc
Apply:  Pos: [88, 95] xx => I
Apply:  Pos: [98, 107] cc => I
Apply:  Pos: [97, 109] cc => I
Apply:  Pos: [113, 130] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [122, 133] cc => I
Apply:  Pos: [126, 135] xx => I
Apply:  Pos: [127, 146, 155] xcx => c
Apply:  Pos: [147, 154] xx => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [165, 173] cc => I
Apply:  Pos: [183, 187] xx => I
Apply:  Pos: [182, 194] cc => I
Apply:  Pos: [195, 207] xx => I
Apply:  Pos: [196, 203] xx => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 213] xx => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [218, 230] xx => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [228, 247] xx => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [249, 256] cc => I
Apply:  Pos: [252, 255] cc => I
Apply:  Pos: [254, 266] cc => I
Apply:  Pos: [261, 267] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxccxcccxxcccccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxxcccxccccccxxcccxcccxxccccccccccccxccxxccccxxxcccxxxxccccxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [10], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [12], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 10], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.7656564712524414

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 109]
[108, 122]
[122, 137]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[159, 164, 169]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[150, 159, 164]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 109]
[108, 122]
[122, 137]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4062085151672363

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [88, 109] xx => I, Pos: [88, 109] xx => I, Pos: [108, 122] xx => I, Pos: [108, 122] xx => I, Pos: [122, 137] xx => I, Pos: [122, 137] xx => I, Pos: [150, 159, 164] ccc => cc, Pos: [159, 164, 169] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [88, 109] xx => I,
 Pos: [122, 137] xx => I,
 Pos: [159, 164, 169] ccc => cc]
Change: 3, Saving: 3

Circuit before: xcccccccxcccccxcccccxxccxxxxxccxcccxxcccccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxxcccxccccccxxcccxcccxxccccccccccccxccxxccccxxxcccxxxxccccxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [88, 109] xx => I
Apply:  Pos: [122, 137] xx => I
Apply:  Pos: [159, 164, 169] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxccxcccxxcccccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxccxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [10], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [9], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 18], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4062085151672363

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.436814546585083

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccccccxcccccxcccccxxccxxxxxccxcccxxcccccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxccxccxcccxxcccxcccxxccccxxccccccc
---------------
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxccxcccxxcccccccxccccxxccccxxxccxxcccccccccxxxcccccccccxcccxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxccxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [10], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [9], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 18], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.43686842918396

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [193] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 334

Reduced: 
 - size: 77 (28.52%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12498831748962402

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [3], [16], [10], [14, 4], [0, 11], [7], [19], [2], [14], [18], [5], [1, 0], [8, 6], [7], [10], [3], [0, 11], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [18, 16], [7], [14, 17], [18, 16], [7], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [13], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [7], [0], [19], [14, 2], [18, 5], [12, 17], [7], [13], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 8], [7], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [12, 17], [19, 13], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [1, 8], [6], [9, 3], [19, 13], [11, 14], [12, 17], [16, 4], [9], [12], [13, 17], [14, 2], [10, 19], [4, 7], [0, 11], [18], [9, 3], [11, 14], [4, 7], [6, 12], [8, 19], [13, 2], [0, 10], [9], [0], [8], [14], [13, 17], [7, 3], [10, 11], [6, 12], [18, 15], [9], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [4, 3], [1, 0], [9], [4, 3], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [9], [0], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [7, 9], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [7, 9], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [7, 3], [9], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [7, 3], [7], [14], [2, 9], [8, 13], [4, 3], [16, 5], [2], [8], [14], [4, 3], [0, 19], [18, 5], [7], [17], [13, 2], [16, 14], [0, 10], [18, 5], [8], [19, 13], [15, 16], [17, 2], [19], [9], [10, 18], [16, 14], [4, 7], [17], [19, 6], [1, 8], [16, 14], [11, 4], [0, 10], [10], [6], [9], [19, 11], [1, 8], [13, 17], [4, 3], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [4, 3], [15, 16], [8, 6], [13], [10], [6], [7, 9], [12, 17], [0, 19], [11, 14], [8, 13], [18, 5], [11, 14], [7, 9], [16, 4], [8], [3], [4, 9], [14, 17], [18, 16], [8, 19], [15, 16], [6, 12], [18, 5], [14, 17], [4, 3], [2, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[87, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[127, 146, 155]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 32, 37]
[210, 215, 220]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6522448062896729

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [21, 36] xx => I, Pos: [21, 36] xx => I, Pos: [23, 35] xx => I, Pos: [23, 35] xx => I, Pos: [25, 32, 37] ccc => cc, Pos: [26, 34] xx => I, Pos: [26, 34] xx => I, Pos: [34, 41] xx => I, Pos: [34, 41] xx => I, Pos: [35, 51] xx => I, Pos: [35, 51] xx => I, Pos: [41, 47] xx => I, Pos: [41, 47] xx => I, Pos: [46, 49] cc => I, Pos: [46, 49] cc => I, Pos: [47, 50] xx => I, Pos: [47, 50] xx => I, Pos: [50, 56] xx => I, Pos: [50, 56] xx => I, Pos: [64, 81] xx => I, Pos: [64, 81] xx => I, Pos: [69, 74] xx => I, Pos: [69, 74] xx => I, Pos: [74, 80] xx => I, Pos: [74, 80] xx => I, Pos: [80, 88] xx => I, Pos: [80, 88] xx => I, Pos: [87, 99, 104] ccc => cc, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [92, 98] cc => I, Pos: [92, 98] cc => I, Pos: [97, 109] cc => I, Pos: [97, 109] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [113, 130] cc => I, Pos: [113, 130] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [122, 133] cc => I, Pos: [122, 133] cc => I, Pos: [126, 135] xx => I, Pos: [126, 135] xx => I, Pos: [127, 146, 155] xcx => c, Pos: [135, 140] xx => I, Pos: [135, 140] xx => I, Pos: [140, 147] xx => I, Pos: [140, 147] xx => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [147, 154] xx => I, Pos: [147, 154] xx => I, Pos: [154, 160] xx => I, Pos: [154, 160] xx => I, Pos: [165, 173] cc => I, Pos: [165, 173] cc => I, Pos: [177, 183] xx => I, Pos: [177, 183] xx => I, Pos: [182, 194] cc => I, Pos: [182, 194] cc => I, Pos: [183, 187] xx => I, Pos: [183, 187] xx => I, Pos: [195, 207] xx => I, Pos: [195, 207] xx => I, Pos: [196, 203] xx => I, Pos: [196, 203] xx => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [202, 213] xx => I, Pos: [202, 213] xx => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [210, 215, 220] ccc => cc, Pos: [218, 230] xx => I, Pos: [218, 230] xx => I, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [228, 247] xx => I, Pos: [228, 247] xx => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [249, 256] cc => I, Pos: [249, 256] cc => I, Pos: [252, 255] cc => I, Pos: [252, 255] cc => I, Pos: [254, 266] cc => I, Pos: [254, 266] cc => I, Pos: [261, 267] cc => I, Pos: [261, 267] cc => I]

--------End Timer [Generate Plans]:  0.09374618530273438

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [35, 51] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [41, 47] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [50, 56] xx => I,
 Pos: [64, 81] xx => I,
 Pos: [74, 80] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [88, 95] xx => I,
 Pos: [92, 98] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [126, 135] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [147, 154] xx => I,
 Pos: [145, 148] cc => I,
 Pos: [165, 173] cc => I,
 Pos: [177, 183] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [220, 225] cc => I,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 37, Saving: 37

Circuit before: xcccccccxcccccxcccccxxxxccxxxxxxccxxxccccxxxcccxccxxccccxxccccxxxccccxxxccxxxcccxxccccccxxxxcccxcccccccccxcccccxxcccccxcccccccxxxxcccccxxcccxxcccccxccccccxxccccxccxxcccccxxxccccxxxxccxcccxxccccccxxccccxxxcccxxccccxcccxxcccxcccccxxxcccccxxcccxccccxxxcccccccccxxcccccccccc
---------------
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [21, 36] xx => I
Apply:  Pos: [35, 51] xx => I
Apply:  Pos: [25, 32, 37] ccc => cc
Apply:  Pos: [41, 47] xx => I
Apply:  Pos: [46, 49] cc => I
Apply:  Pos: [50, 56] xx => I
Apply:  Pos: [64, 81] xx => I
Apply:  Pos: [74, 80] xx => I
Apply:  Pos: [87, 99, 104] ccc => cc
Apply:  Pos: [88, 95] xx => I
Apply:  Pos: [92, 98] cc => I
Apply:  Pos: [97, 109] cc => I
Apply:  Pos: [113, 130] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [122, 133] cc => I
Apply:  Pos: [126, 135] xx => I
Apply:  Pos: [127, 146, 155] xcx => c
Apply:  Pos: [147, 154] xx => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [165, 173] cc => I
Apply:  Pos: [177, 183] xx => I
Apply:  Pos: [182, 194] cc => I
Apply:  Pos: [195, 207] xx => I
Apply:  Pos: [196, 203] xx => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 213] xx => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [218, 230] xx => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [228, 247] xx => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [249, 256] cc => I
Apply:  Pos: [252, 255] cc => I
Apply:  Pos: [254, 266] cc => I
Apply:  Pos: [261, 267] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxccxcccxxcccccccxccccxxccccxxxccxxcccccccccxxxccccccccxccccxxcccxccccccxxcccxcccxxccccccccccccxccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [10], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [12], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 10], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.7459909915924072

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 109]
[108, 122]
[122, 144]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[159, 164, 169]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[150, 159, 164]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 109]
[108, 122]
[122, 144]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3749055862426758

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [88, 109] xx => I, Pos: [88, 109] xx => I, Pos: [108, 122] xx => I, Pos: [108, 122] xx => I, Pos: [122, 144] xx => I, Pos: [122, 144] xx => I, Pos: [150, 159, 164] ccc => cc, Pos: [159, 164, 169] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [88, 109] xx => I,
 Pos: [122, 144] xx => I,
 Pos: [150, 159, 164] ccc => cc]
Change: 3, Saving: 3

Circuit before: xcccccccxcccccxcccccxxccxxxxxccxcccxxcccccccxccccxxccccxxxccxxcccccccccxxxccccccccxccccxxcccxccccccxxcccxcccxxccccccccccccxccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [88, 109] xx => I
Apply:  Pos: [122, 144] xx => I
Apply:  Pos: [150, 159, 164] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxccxcccxxcccccccxccccxxccccxxxccxxcccccccccxxxccccccccxccccxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxcxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [10], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [9], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 10], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [10, 18], [19, 13], [15, 16], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.3749055862426758

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[146, 155, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4063856601715088

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [146, 155, 164] ccc => cc]

--------End Timer [Generate Plans]:  0.015624523162841797

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [146, 155, 164] ccc => cc]
Change: 1, Saving: 1

Circuit before: xcccccccxcccccxcccccxxccxxxxxccxcccxxcccccccxccccxxccccxxxccxxcccccccccxxxccccccccxccccxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxcxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [146, 155, 164] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxccxcccxxcccccccxccccxxccccxxxccxxcccccccccxxxccccccccxccccxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxcxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [10], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [9], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [10, 18], [19, 13], [15, 16], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4220101833343506

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3908188343048096

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccccccxcccccxcccccxxccxxxxxccxcccxxcccccccxccccxxccccxxxccxxcccccccccxxxccccccccxccccxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxcxccxcccxxcccxcccxxccccxxccccccc
---------------
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxccxcccxxcccccccxccccxxccccxxxccxxcccccccccxxxccccccccxccccxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxcxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [10], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [7], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [9], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [10, 18], [19, 13], [15, 16], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.3908188343048096

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [192] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 39 - (small)
 - circuit cycle: 332

Reduced: 
 - size: 78 (28.89%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938096046447754

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [3], [16], [10], [14, 4], [0, 11], [7], [19], [2], [14], [18], [5], [1, 0], [8, 6], [7], [10], [3], [0, 11], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [18, 16], [7], [14, 17], [18, 16], [7], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [13], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [7], [0], [19], [14, 2], [18, 5], [12, 17], [7], [13], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 8], [7], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [12, 17], [19, 13], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [1, 8], [6], [9, 3], [19, 13], [11, 14], [12, 17], [16, 4], [9], [12], [13, 17], [14, 2], [10, 19], [4, 7], [0, 11], [18], [9, 3], [11, 14], [4, 7], [6, 12], [8, 19], [13, 2], [0, 10], [9], [0], [8], [14], [13, 17], [7, 3], [10, 11], [6, 12], [18, 15], [9], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [4, 3], [1, 0], [9], [4, 3], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [9], [0], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [7, 9], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [7, 9], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [7, 3], [9], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [7, 3], [7], [14], [2, 9], [8, 13], [4, 3], [16, 5], [2], [8], [14], [4, 3], [0, 19], [18, 5], [7], [17], [13, 2], [16, 14], [0, 10], [18, 5], [8], [19, 13], [15, 16], [17, 2], [19], [9], [10, 18], [16, 14], [4, 7], [17], [19, 6], [1, 8], [16, 14], [11, 4], [0, 10], [10], [6], [9], [19, 11], [1, 8], [13, 17], [4, 3], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [4, 3], [15, 16], [8, 6], [13], [10], [6], [7, 9], [12, 17], [0, 19], [11, 14], [8, 13], [18, 5], [11, 14], [7, 9], [16, 4], [8], [3], [4, 9], [14, 17], [18, 16], [8, 19], [15, 16], [6, 12], [18, 5], [14, 17], [4, 3], [2, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[87, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[127, 146, 155]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 32, 37]
[210, 215, 220]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6875779628753662

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [21, 36] xx => I, Pos: [21, 36] xx => I, Pos: [23, 35] xx => I, Pos: [23, 35] xx => I, Pos: [25, 32, 37] ccc => cc, Pos: [26, 34] xx => I, Pos: [26, 34] xx => I, Pos: [34, 41] xx => I, Pos: [34, 41] xx => I, Pos: [35, 51] xx => I, Pos: [35, 51] xx => I, Pos: [41, 47] xx => I, Pos: [41, 47] xx => I, Pos: [46, 49] cc => I, Pos: [46, 49] cc => I, Pos: [47, 50] xx => I, Pos: [47, 50] xx => I, Pos: [50, 56] xx => I, Pos: [50, 56] xx => I, Pos: [64, 81] xx => I, Pos: [64, 81] xx => I, Pos: [69, 74] xx => I, Pos: [69, 74] xx => I, Pos: [74, 80] xx => I, Pos: [74, 80] xx => I, Pos: [80, 88] xx => I, Pos: [80, 88] xx => I, Pos: [87, 99, 104] ccc => cc, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [92, 98] cc => I, Pos: [92, 98] cc => I, Pos: [97, 109] cc => I, Pos: [97, 109] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [113, 130] cc => I, Pos: [113, 130] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [122, 133] cc => I, Pos: [122, 133] cc => I, Pos: [126, 135] xx => I, Pos: [126, 135] xx => I, Pos: [127, 146, 155] xcx => c, Pos: [135, 140] xx => I, Pos: [135, 140] xx => I, Pos: [140, 147] xx => I, Pos: [140, 147] xx => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [147, 154] xx => I, Pos: [147, 154] xx => I, Pos: [154, 160] xx => I, Pos: [154, 160] xx => I, Pos: [165, 173] cc => I, Pos: [165, 173] cc => I, Pos: [177, 183] xx => I, Pos: [177, 183] xx => I, Pos: [182, 194] cc => I, Pos: [182, 194] cc => I, Pos: [183, 187] xx => I, Pos: [183, 187] xx => I, Pos: [195, 207] xx => I, Pos: [195, 207] xx => I, Pos: [196, 203] xx => I, Pos: [196, 203] xx => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [202, 213] xx => I, Pos: [202, 213] xx => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [210, 215, 220] ccc => cc, Pos: [218, 230] xx => I, Pos: [218, 230] xx => I, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [228, 247] xx => I, Pos: [228, 247] xx => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [249, 256] cc => I, Pos: [249, 256] cc => I, Pos: [252, 255] cc => I, Pos: [252, 255] cc => I, Pos: [254, 266] cc => I, Pos: [254, 266] cc => I, Pos: [261, 267] cc => I, Pos: [261, 267] cc => I]

--------End Timer [Generate Plans]:  0.09374380111694336

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [23, 35] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [34, 41] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [47, 50] xx => I,
 Pos: [64, 81] xx => I,
 Pos: [69, 74] xx => I,
 Pos: [80, 88] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [92, 98] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [135, 140] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [145, 148] cc => I,
 Pos: [154, 160] xx => I,
 Pos: [165, 173] cc => I,
 Pos: [177, 183] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [220, 225] cc => I,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 37, Saving: 37

Circuit before: xcccccccxcccccxcccccxxxxccxxxxxxccxxxccccxxxcccxccxxccccxxccccxxxccccxxxccxxxcccxxccccccxxxxcccxcccccccccxcccccxxcccccxcccccccxxxxcccccxxcccxxcccccxccccccxxccccxccxxcccccxxxccccxxxxccxcccxxccccccxxccccxxxcccxxccccxcccxxcccxcccccxxxcccccxxcccxccccxxxcccccccccxxcccccccccc
---------------
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [21, 36] xx => I
Apply:  Pos: [23, 35] xx => I
Apply:  Pos: [25, 32, 37] ccc => cc
Apply:  Pos: [34, 41] xx => I
Apply:  Pos: [46, 49] cc => I
Apply:  Pos: [47, 50] xx => I
Apply:  Pos: [64, 81] xx => I
Apply:  Pos: [69, 74] xx => I
Apply:  Pos: [80, 88] xx => I
Apply:  Pos: [87, 99, 104] ccc => cc
Apply:  Pos: [92, 98] cc => I
Apply:  Pos: [97, 109] cc => I
Apply:  Pos: [113, 130] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [122, 133] cc => I
Apply:  Pos: [135, 140] xx => I
Apply:  Pos: [127, 146, 155] xcx => c
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [154, 160] xx => I
Apply:  Pos: [165, 173] cc => I
Apply:  Pos: [177, 183] xx => I
Apply:  Pos: [182, 194] cc => I
Apply:  Pos: [195, 207] xx => I
Apply:  Pos: [196, 203] xx => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 213] xx => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [218, 230] xx => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [228, 247] xx => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [249, 256] cc => I
Apply:  Pos: [252, 255] cc => I
Apply:  Pos: [254, 266] cc => I
Apply:  Pos: [261, 267] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxxcccxcccccxcxxcccxcccxcccxcccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [12], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [9], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [12], [15, 5], [13, 2], [11, 14], [9], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 10], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.7813217639923096

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 109]
[98, 113]
[113, 144]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[159, 164, 169]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[150, 159, 164]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 109]
[98, 113]
[113, 144]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4065306186676025

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [88, 109] xx => I, Pos: [88, 109] xx => I, Pos: [98, 113] xx => I, Pos: [98, 113] xx => I, Pos: [113, 144] xx => I, Pos: [113, 144] xx => I, Pos: [150, 159, 164] ccc => cc, Pos: [159, 164, 169] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [88, 109] xx => I,
 Pos: [113, 144] xx => I,
 Pos: [159, 164, 169] ccc => cc]
Change: 3, Saving: 3

Circuit before: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxxcccxcccccxcxxcccxcccxcccxcccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [88, 109] xx => I
Apply:  Pos: [113, 144] xx => I
Apply:  Pos: [159, 164, 169] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxcccxcccccxcxxcccxcccccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxccxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [19, 6], [8, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [9], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 18], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4065306186676025

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4530384540557861

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxcccxcccccxcxxcccxcccccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxccxccxcccxxcccxcccxxccccxxccccccc
---------------
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxcccxcccccxcxxcccxcccccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxccxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [9], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 18], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4530384540557861

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [193] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 334

Reduced: 
 - size: 77 (28.52%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10937190055847168

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [3], [16], [10], [14, 4], [0, 11], [7], [19], [2], [14], [18], [5], [1, 0], [8, 6], [7], [10], [3], [0, 11], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [18, 16], [7], [14, 17], [18, 16], [7], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [13], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [7], [0], [19], [14, 2], [18, 5], [12, 17], [7], [13], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 8], [7], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [12, 17], [19, 13], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [1, 8], [6], [9, 3], [19, 13], [11, 14], [12, 17], [16, 4], [9], [12], [13, 17], [14, 2], [10, 19], [4, 7], [0, 11], [18], [9, 3], [11, 14], [4, 7], [6, 12], [8, 19], [13, 2], [0, 10], [9], [0], [8], [14], [13, 17], [7, 3], [10, 11], [6, 12], [18, 15], [9], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [4, 3], [1, 0], [9], [4, 3], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [9], [0], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [7, 9], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [7, 9], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [7, 3], [9], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [7, 3], [7], [14], [2, 9], [8, 13], [4, 3], [16, 5], [2], [8], [14], [4, 3], [0, 19], [18, 5], [7], [17], [13, 2], [16, 14], [0, 10], [18, 5], [8], [19, 13], [15, 16], [17, 2], [19], [9], [10, 18], [16, 14], [4, 7], [17], [19, 6], [1, 8], [16, 14], [11, 4], [0, 10], [10], [6], [9], [19, 11], [1, 8], [13, 17], [4, 3], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [4, 3], [15, 16], [8, 6], [13], [10], [6], [7, 9], [12, 17], [0, 19], [11, 14], [8, 13], [18, 5], [11, 14], [7, 9], [16, 4], [8], [3], [4, 9], [14, 17], [18, 16], [8, 19], [15, 16], [6, 12], [18, 5], [14, 17], [4, 3], [2, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[87, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[127, 146, 155]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 32, 37]
[210, 215, 220]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.734349250793457

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [21, 36] xx => I, Pos: [21, 36] xx => I, Pos: [23, 35] xx => I, Pos: [23, 35] xx => I, Pos: [25, 32, 37] ccc => cc, Pos: [26, 34] xx => I, Pos: [26, 34] xx => I, Pos: [34, 41] xx => I, Pos: [34, 41] xx => I, Pos: [35, 51] xx => I, Pos: [35, 51] xx => I, Pos: [41, 47] xx => I, Pos: [41, 47] xx => I, Pos: [46, 49] cc => I, Pos: [46, 49] cc => I, Pos: [47, 50] xx => I, Pos: [47, 50] xx => I, Pos: [50, 56] xx => I, Pos: [50, 56] xx => I, Pos: [64, 81] xx => I, Pos: [64, 81] xx => I, Pos: [69, 74] xx => I, Pos: [69, 74] xx => I, Pos: [74, 80] xx => I, Pos: [74, 80] xx => I, Pos: [80, 88] xx => I, Pos: [80, 88] xx => I, Pos: [87, 99, 104] ccc => cc, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [92, 98] cc => I, Pos: [92, 98] cc => I, Pos: [97, 109] cc => I, Pos: [97, 109] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [113, 130] cc => I, Pos: [113, 130] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [122, 133] cc => I, Pos: [122, 133] cc => I, Pos: [126, 135] xx => I, Pos: [126, 135] xx => I, Pos: [127, 146, 155] xcx => c, Pos: [135, 140] xx => I, Pos: [135, 140] xx => I, Pos: [140, 147] xx => I, Pos: [140, 147] xx => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [147, 154] xx => I, Pos: [147, 154] xx => I, Pos: [154, 160] xx => I, Pos: [154, 160] xx => I, Pos: [165, 173] cc => I, Pos: [165, 173] cc => I, Pos: [177, 183] xx => I, Pos: [177, 183] xx => I, Pos: [182, 194] cc => I, Pos: [182, 194] cc => I, Pos: [183, 187] xx => I, Pos: [183, 187] xx => I, Pos: [195, 207] xx => I, Pos: [195, 207] xx => I, Pos: [196, 203] xx => I, Pos: [196, 203] xx => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [202, 213] xx => I, Pos: [202, 213] xx => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [210, 215, 220] ccc => cc, Pos: [218, 230] xx => I, Pos: [218, 230] xx => I, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [228, 247] xx => I, Pos: [228, 247] xx => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [249, 256] cc => I, Pos: [249, 256] cc => I, Pos: [252, 255] cc => I, Pos: [252, 255] cc => I, Pos: [254, 266] cc => I, Pos: [254, 266] cc => I, Pos: [261, 267] cc => I, Pos: [261, 267] cc => I]

--------End Timer [Generate Plans]:  0.09374308586120605

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 34] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [35, 51] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [47, 50] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [64, 81] xx => I,
 Pos: [74, 80] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [88, 95] xx => I,
 Pos: [92, 98] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [135, 140] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [145, 148] cc => I,
 Pos: [147, 154] xx => I,
 Pos: [165, 173] cc => I,
 Pos: [183, 187] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [220, 225] cc => I,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 36, Saving: 36

Circuit before: xcccccccxcccccxcccccxxxxccxxxxxxccxxxccccxxxcccxccxxccccxxccccxxxccccxxxccxxxcccxxccccccxxxxcccxcccccccccxcccccxxcccccxcccccccxxxxcccccxxcccxxcccccxccccccxxccccxccxxcccccxxxccccxxxxccxcccxxccccccxxccccxxxcccxxccccxcccxxcccxcccccxxxcccccxxcccxccccxxxcccccccccxxcccccccccc
---------------
Apply:  Pos: [26, 34] xx => I
Apply:  Pos: [21, 36] xx => I
Apply:  Pos: [35, 51] xx => I
Apply:  Pos: [25, 32, 37] ccc => cc
Apply:  Pos: [47, 50] xx => I
Apply:  Pos: [46, 49] cc => I
Apply:  Pos: [64, 81] xx => I
Apply:  Pos: [74, 80] xx => I
Apply:  Pos: [87, 99, 104] ccc => cc
Apply:  Pos: [88, 95] xx => I
Apply:  Pos: [92, 98] cc => I
Apply:  Pos: [97, 109] cc => I
Apply:  Pos: [113, 130] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [122, 133] cc => I
Apply:  Pos: [135, 140] xx => I
Apply:  Pos: [127, 146, 155] xcx => c
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [147, 154] xx => I
Apply:  Pos: [165, 173] cc => I
Apply:  Pos: [183, 187] xx => I
Apply:  Pos: [182, 194] cc => I
Apply:  Pos: [195, 207] xx => I
Apply:  Pos: [196, 203] xx => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 213] xx => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [218, 230] xx => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [228, 247] xx => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [249, 256] cc => I
Apply:  Pos: [252, 255] cc => I
Apply:  Pos: [254, 266] cc => I
Apply:  Pos: [261, 267] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxxxccxxxxxcccccxxxcccccccxxccccxxccccxxxccxxcccccccccxxxccccccccxccccxxcccxcccccxcxxcccxcccxccccccccccccxccxxccccxxxcccxxxxccccxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [16], [10], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [14, 17], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [12], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [9], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [12], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 10], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.828092336654663

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 35]
[35, 45]
[90, 111]
[100, 124]
[124, 139]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[161, 166, 171]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[152, 161, 166]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 35]
[35, 45]
[90, 111]
[100, 124]
[124, 139]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.390690803527832

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 35] xx => I, Pos: [20, 35] xx => I, Pos: [35, 45] xx => I, Pos: [35, 45] xx => I, Pos: [90, 111] xx => I, Pos: [90, 111] xx => I, Pos: [100, 124] xx => I, Pos: [100, 124] xx => I, Pos: [124, 139] xx => I, Pos: [124, 139] xx => I, Pos: [152, 161, 166] ccc => cc, Pos: [161, 166, 171] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 35] xx => I,
 Pos: [90, 111] xx => I,
 Pos: [124, 139] xx => I,
 Pos: [161, 166, 171] ccc => cc]
Change: 4, Saving: 4

Circuit before: xcccccccxcccccxcccccxxxccxxxxxcccccxxxcccccccxxccccxxccccxxxccxxcccccccccxxxccccccccxccccxxcccxcccccxcxxcccxcccxccccccccccccxccxxccccxxxcccxxxxccccxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [20, 35] xx => I
Apply:  Pos: [90, 111] xx => I
Apply:  Pos: [124, 139] xx => I
Apply:  Pos: [161, 166, 171] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxcccccxxcccccccxxccccxxccccxxxccxxcccccccccxxxccccccccxccccxcccxcccccxcxxcccxcccccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxccxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [10], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [19, 6], [8, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [9], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 18], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4063165187835693

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4374399185180664

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccccccxcccccxcccccxxccxxxxxcccccxxcccccccxxccccxxccccxxxccxxcccccccccxxxccccccccxccccxcccxcccccxcxxcccxcccccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxccxccxcccxxcccxcccxxccccxxccccccc
---------------
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxcccccxxcccccccxxccccxxccccxxxccxxcccccccccxxxccccccccxccccxcccxcccccxcxxcccxcccccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxccxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [10], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [9], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 18], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4374399185180664

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [193] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 334

Reduced: 
 - size: 77 (28.52%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936760902404785

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [3], [16], [10], [14, 4], [0, 11], [7], [19], [2], [14], [18], [5], [1, 0], [8, 6], [7], [10], [3], [0, 11], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [18, 16], [7], [14, 17], [18, 16], [7], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [13], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [7], [0], [19], [14, 2], [18, 5], [12, 17], [7], [13], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 8], [7], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [12, 17], [19, 13], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [1, 8], [6], [9, 3], [19, 13], [11, 14], [12, 17], [16, 4], [9], [12], [13, 17], [14, 2], [10, 19], [4, 7], [0, 11], [18], [9, 3], [11, 14], [4, 7], [6, 12], [8, 19], [13, 2], [0, 10], [9], [0], [8], [14], [13, 17], [7, 3], [10, 11], [6, 12], [18, 15], [9], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [4, 3], [1, 0], [9], [4, 3], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [9], [0], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [7, 9], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [7, 9], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [7, 3], [9], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [7, 3], [7], [14], [2, 9], [8, 13], [4, 3], [16, 5], [2], [8], [14], [4, 3], [0, 19], [18, 5], [7], [17], [13, 2], [16, 14], [0, 10], [18, 5], [8], [19, 13], [15, 16], [17, 2], [19], [9], [10, 18], [16, 14], [4, 7], [17], [19, 6], [1, 8], [16, 14], [11, 4], [0, 10], [10], [6], [9], [19, 11], [1, 8], [13, 17], [4, 3], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [4, 3], [15, 16], [8, 6], [13], [10], [6], [7, 9], [12, 17], [0, 19], [11, 14], [8, 13], [18, 5], [11, 14], [7, 9], [16, 4], [8], [3], [4, 9], [14, 17], [18, 16], [8, 19], [15, 16], [6, 12], [18, 5], [14, 17], [4, 3], [2, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[87, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[127, 146, 155]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 32, 37]
[210, 215, 220]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6719274520874023

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [21, 36] xx => I, Pos: [21, 36] xx => I, Pos: [23, 35] xx => I, Pos: [23, 35] xx => I, Pos: [25, 32, 37] ccc => cc, Pos: [26, 34] xx => I, Pos: [26, 34] xx => I, Pos: [34, 41] xx => I, Pos: [34, 41] xx => I, Pos: [35, 51] xx => I, Pos: [35, 51] xx => I, Pos: [41, 47] xx => I, Pos: [41, 47] xx => I, Pos: [46, 49] cc => I, Pos: [46, 49] cc => I, Pos: [47, 50] xx => I, Pos: [47, 50] xx => I, Pos: [50, 56] xx => I, Pos: [50, 56] xx => I, Pos: [64, 81] xx => I, Pos: [64, 81] xx => I, Pos: [69, 74] xx => I, Pos: [69, 74] xx => I, Pos: [74, 80] xx => I, Pos: [74, 80] xx => I, Pos: [80, 88] xx => I, Pos: [80, 88] xx => I, Pos: [87, 99, 104] ccc => cc, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [92, 98] cc => I, Pos: [92, 98] cc => I, Pos: [97, 109] cc => I, Pos: [97, 109] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [113, 130] cc => I, Pos: [113, 130] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [122, 133] cc => I, Pos: [122, 133] cc => I, Pos: [126, 135] xx => I, Pos: [126, 135] xx => I, Pos: [127, 146, 155] xcx => c, Pos: [135, 140] xx => I, Pos: [135, 140] xx => I, Pos: [140, 147] xx => I, Pos: [140, 147] xx => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [147, 154] xx => I, Pos: [147, 154] xx => I, Pos: [154, 160] xx => I, Pos: [154, 160] xx => I, Pos: [165, 173] cc => I, Pos: [165, 173] cc => I, Pos: [177, 183] xx => I, Pos: [177, 183] xx => I, Pos: [182, 194] cc => I, Pos: [182, 194] cc => I, Pos: [183, 187] xx => I, Pos: [183, 187] xx => I, Pos: [195, 207] xx => I, Pos: [195, 207] xx => I, Pos: [196, 203] xx => I, Pos: [196, 203] xx => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [202, 213] xx => I, Pos: [202, 213] xx => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [210, 215, 220] ccc => cc, Pos: [218, 230] xx => I, Pos: [218, 230] xx => I, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [228, 247] xx => I, Pos: [228, 247] xx => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [249, 256] cc => I, Pos: [249, 256] cc => I, Pos: [252, 255] cc => I, Pos: [252, 255] cc => I, Pos: [254, 266] cc => I, Pos: [254, 266] cc => I, Pos: [261, 267] cc => I, Pos: [261, 267] cc => I]

--------End Timer [Generate Plans]:  0.09374380111694336

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 34] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [23, 35] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [47, 50] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [64, 81] xx => I,
 Pos: [69, 74] xx => I,
 Pos: [80, 88] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [98, 107] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [126, 135] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [140, 147] xx => I,
 Pos: [145, 148] cc => I,
 Pos: [154, 160] xx => I,
 Pos: [165, 173] cc => I,
 Pos: [177, 183] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [220, 225] cc => I,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 37, Saving: 37

Circuit before: xcccccccxcccccxcccccxxxxccxxxxxxccxxxccccxxxcccxccxxccccxxccccxxxccccxxxccxxxcccxxccccccxxxxcccxcccccccccxcccccxxcccccxcccccccxxxxcccccxxcccxxcccccxccccccxxccccxccxxcccccxxxccccxxxxccxcccxxccccccxxccccxxxcccxxccccxcccxxcccxcccccxxxcccccxxcccxccccxxxcccccccccxxcccccccccc
---------------
Apply:  Pos: [26, 34] xx => I
Apply:  Pos: [21, 36] xx => I
Apply:  Pos: [23, 35] xx => I
Apply:  Pos: [25, 32, 37] ccc => cc
Apply:  Pos: [47, 50] xx => I
Apply:  Pos: [46, 49] cc => I
Apply:  Pos: [64, 81] xx => I
Apply:  Pos: [69, 74] xx => I
Apply:  Pos: [80, 88] xx => I
Apply:  Pos: [87, 99, 104] ccc => cc
Apply:  Pos: [98, 107] cc => I
Apply:  Pos: [97, 109] cc => I
Apply:  Pos: [113, 130] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [122, 133] cc => I
Apply:  Pos: [126, 135] xx => I
Apply:  Pos: [127, 146, 155] xcx => c
Apply:  Pos: [140, 147] xx => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [154, 160] xx => I
Apply:  Pos: [165, 173] cc => I
Apply:  Pos: [177, 183] xx => I
Apply:  Pos: [182, 194] cc => I
Apply:  Pos: [195, 207] xx => I
Apply:  Pos: [196, 203] xx => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 213] xx => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [218, 230] xx => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [228, 247] xx => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [249, 256] cc => I
Apply:  Pos: [252, 255] cc => I
Apply:  Pos: [254, 266] cc => I
Apply:  Pos: [261, 267] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxcccccxxxcccxccccxxccccxxccccxxccxxcccccccccxxxcccxccccccxcccxxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [12], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [12], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 10], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.7656712532043457

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 34]
[34, 45]
[90, 110]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[159, 164, 169]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[150, 159, 164]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 34]
[34, 45]
[90, 110]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.406702995300293

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 34] xx => I, Pos: [20, 34] xx => I, Pos: [34, 45] xx => I, Pos: [34, 45] xx => I, Pos: [90, 110] xx => I, Pos: [90, 110] xx => I, Pos: [150, 159, 164] ccc => cc, Pos: [159, 164, 169] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 34] xx => I, Pos: [90, 110] xx => I, Pos: [150, 159, 164] ccc => cc]
Change: 3, Saving: 3

Circuit before: xcccccccxcccccxcccccxxccxxxxxcccccxxxcccxccccxxccccxxccccxxccxxcccccccccxxxcccxccccccxcccxxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [20, 34] xx => I
Apply:  Pos: [90, 110] xx => I
Apply:  Pos: [150, 159, 164] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxcccxccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxcxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [19, 6], [8, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 10], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [10, 18], [19, 13], [15, 16], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.406702995300293

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[146, 155, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.437234878540039

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [146, 155, 164] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [146, 155, 164] ccc => cc]
Change: 1, Saving: 1

Circuit before: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxcccxccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxcxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [146, 155, 164] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxcccxccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxcxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [10, 18], [19, 13], [15, 16], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.437234878540039

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4221646785736084

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxcccxccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxcxccxcccxxcccxcccxxccccxxccccccc
---------------
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxcccxccccccxcccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxcxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [19, 6], [8, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [10, 18], [19, 13], [15, 16], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4221646785736084

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [192] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 332

Reduced: 
 - size: 78 (28.89%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12498974800109863

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [3], [16], [10], [14, 4], [0, 11], [7], [19], [2], [14], [18], [5], [1, 0], [8, 6], [7], [10], [3], [0, 11], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [18, 16], [7], [14, 17], [18, 16], [7], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [13], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [7], [0], [19], [14, 2], [18, 5], [12, 17], [7], [13], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 8], [7], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [12, 17], [19, 13], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [1, 8], [6], [9, 3], [19, 13], [11, 14], [12, 17], [16, 4], [9], [12], [13, 17], [14, 2], [10, 19], [4, 7], [0, 11], [18], [9, 3], [11, 14], [4, 7], [6, 12], [8, 19], [13, 2], [0, 10], [9], [0], [8], [14], [13, 17], [7, 3], [10, 11], [6, 12], [18, 15], [9], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [4, 3], [1, 0], [9], [4, 3], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [9], [0], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [7, 9], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [7, 9], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [7, 3], [9], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [7, 3], [7], [14], [2, 9], [8, 13], [4, 3], [16, 5], [2], [8], [14], [4, 3], [0, 19], [18, 5], [7], [17], [13, 2], [16, 14], [0, 10], [18, 5], [8], [19, 13], [15, 16], [17, 2], [19], [9], [10, 18], [16, 14], [4, 7], [17], [19, 6], [1, 8], [16, 14], [11, 4], [0, 10], [10], [6], [9], [19, 11], [1, 8], [13, 17], [4, 3], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [4, 3], [15, 16], [8, 6], [13], [10], [6], [7, 9], [12, 17], [0, 19], [11, 14], [8, 13], [18, 5], [11, 14], [7, 9], [16, 4], [8], [3], [4, 9], [14, 17], [18, 16], [8, 19], [15, 16], [6, 12], [18, 5], [14, 17], [4, 3], [2, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[87, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[127, 146, 155]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 32, 37]
[210, 215, 220]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6874868869781494

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [21, 36] xx => I, Pos: [21, 36] xx => I, Pos: [23, 35] xx => I, Pos: [23, 35] xx => I, Pos: [25, 32, 37] ccc => cc, Pos: [26, 34] xx => I, Pos: [26, 34] xx => I, Pos: [34, 41] xx => I, Pos: [34, 41] xx => I, Pos: [35, 51] xx => I, Pos: [35, 51] xx => I, Pos: [41, 47] xx => I, Pos: [41, 47] xx => I, Pos: [46, 49] cc => I, Pos: [46, 49] cc => I, Pos: [47, 50] xx => I, Pos: [47, 50] xx => I, Pos: [50, 56] xx => I, Pos: [50, 56] xx => I, Pos: [64, 81] xx => I, Pos: [64, 81] xx => I, Pos: [69, 74] xx => I, Pos: [69, 74] xx => I, Pos: [74, 80] xx => I, Pos: [74, 80] xx => I, Pos: [80, 88] xx => I, Pos: [80, 88] xx => I, Pos: [87, 99, 104] ccc => cc, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [92, 98] cc => I, Pos: [92, 98] cc => I, Pos: [97, 109] cc => I, Pos: [97, 109] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [113, 130] cc => I, Pos: [113, 130] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [122, 133] cc => I, Pos: [122, 133] cc => I, Pos: [126, 135] xx => I, Pos: [126, 135] xx => I, Pos: [127, 146, 155] xcx => c, Pos: [135, 140] xx => I, Pos: [135, 140] xx => I, Pos: [140, 147] xx => I, Pos: [140, 147] xx => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [147, 154] xx => I, Pos: [147, 154] xx => I, Pos: [154, 160] xx => I, Pos: [154, 160] xx => I, Pos: [165, 173] cc => I, Pos: [165, 173] cc => I, Pos: [177, 183] xx => I, Pos: [177, 183] xx => I, Pos: [182, 194] cc => I, Pos: [182, 194] cc => I, Pos: [183, 187] xx => I, Pos: [183, 187] xx => I, Pos: [195, 207] xx => I, Pos: [195, 207] xx => I, Pos: [196, 203] xx => I, Pos: [196, 203] xx => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [202, 213] xx => I, Pos: [202, 213] xx => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [210, 215, 220] ccc => cc, Pos: [218, 230] xx => I, Pos: [218, 230] xx => I, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [228, 247] xx => I, Pos: [228, 247] xx => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [249, 256] cc => I, Pos: [249, 256] cc => I, Pos: [252, 255] cc => I, Pos: [252, 255] cc => I, Pos: [254, 266] cc => I, Pos: [254, 266] cc => I, Pos: [261, 267] cc => I, Pos: [261, 267] cc => I]

--------End Timer [Generate Plans]:  0.0781242847442627

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [26, 34] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [23, 35] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [41, 47] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [50, 56] xx => I,
 Pos: [64, 81] xx => I,
 Pos: [69, 74] xx => I,
 Pos: [88, 95] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [98, 107] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [135, 140] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [145, 148] cc => I,
 Pos: [147, 154] xx => I,
 Pos: [165, 173] cc => I,
 Pos: [177, 183] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [220, 225] cc => I,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 37, Saving: 37

Circuit before: xcccccccxcccccxcccccxxxxccxxxxxxccxxxccccxxxcccxccxxccccxxccccxxxccccxxxccxxxcccxxccccccxxxxcccxcccccccccxcccccxxcccccxcccccccxxxxcccccxxcccxxcccccxccccccxxccccxccxxcccccxxxccccxxxxccxcccxxccccccxxccccxxxcccxxccccxcccxxcccxcccccxxxcccccxxcccxccccxxxcccccccccxxcccccccccc
---------------
Apply:  Pos: [26, 34] xx => I
Apply:  Pos: [21, 36] xx => I
Apply:  Pos: [23, 35] xx => I
Apply:  Pos: [25, 32, 37] ccc => cc
Apply:  Pos: [41, 47] xx => I
Apply:  Pos: [46, 49] cc => I
Apply:  Pos: [50, 56] xx => I
Apply:  Pos: [64, 81] xx => I
Apply:  Pos: [69, 74] xx => I
Apply:  Pos: [88, 95] xx => I
Apply:  Pos: [87, 99, 104] ccc => cc
Apply:  Pos: [98, 107] cc => I
Apply:  Pos: [97, 109] cc => I
Apply:  Pos: [113, 130] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [122, 133] cc => I
Apply:  Pos: [135, 140] xx => I
Apply:  Pos: [127, 146, 155] xcx => c
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [147, 154] xx => I
Apply:  Pos: [165, 173] cc => I
Apply:  Pos: [177, 183] xx => I
Apply:  Pos: [182, 194] cc => I
Apply:  Pos: [195, 207] xx => I
Apply:  Pos: [196, 203] xx => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 213] xx => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [220, 225] cc => I
Apply:  Pos: [218, 230] xx => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [228, 247] xx => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [249, 256] cc => I
Apply:  Pos: [252, 255] cc => I
Apply:  Pos: [254, 266] cc => I
Apply:  Pos: [261, 267] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxcccccxxcccxccccxccccxxccccxxccxxcccxccccccxxxcccccccccxcccxxcccxcccccxcxxcccxcccxccccccccccccxccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [7], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [12], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [9], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [12], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [0, 10], [19, 13], [15, 16], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.78123140335083

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 109]
[98, 122]
[122, 144]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[159, 164, 169]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[150, 159, 164]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 109]
[98, 122]
[122, 144]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4219050407409668

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [88, 109] xx => I, Pos: [88, 109] xx => I, Pos: [98, 122] xx => I, Pos: [98, 122] xx => I, Pos: [122, 144] xx => I, Pos: [122, 144] xx => I, Pos: [150, 159, 164] ccc => cc, Pos: [159, 164, 169] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [88, 109] xx => I,
 Pos: [122, 144] xx => I,
 Pos: [150, 159, 164] ccc => cc]
Change: 3, Saving: 3

Circuit before: xcccccccxcccccxcccccxxccxxxxxcccccxxcccxccccxccccxxccccxxccxxcccxccccccxxxcccccccccxcccxxcccxcccccxcxxcccxcccxccccccccccccxccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [88, 109] xx => I
Apply:  Pos: [122, 144] xx => I
Apply:  Pos: [150, 159, 164] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxcccccxxcccxccccxccccxxccccxxccxxcccxccccccxxxcccccccccxcccxcccxcccccxcxxcccxcccccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxcxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [19, 6], [8, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [7], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [9], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 10], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [10, 18], [19, 13], [15, 16], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4219050407409668

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[146, 155, 164]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4687588214874268

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [146, 155, 164] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [146, 155, 164] ccc => cc]
Change: 1, Saving: 1

Circuit before: xcccccccxcccccxcccccxxccxxxxxcccccxxcccxccccxccccxxccccxxccxxcccxccccccxxxcccccccccxcccxcccxcccccxcxxcccxcccccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxcxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [146, 155, 164] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxcccccxxcccxccccxccccxxccccxxccxxcccxccccccxxxcccccccccxcccxcccxcccccxcxxcccxcccccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxcxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [7], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [9], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [10, 18], [19, 13], [15, 16], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4687588214874268

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4374570846557617

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccccccxcccccxcccccxxccxxxxxcccccxxcccxccccxccccxxccccxxccxxcccxccccccxxxcccccccccxcccxcccxcccccxcxxcccxcccccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxcxccxcccxxcccxcccxxccccxxccccccc
---------------
---------------
Circuit after: xcccccccxcccccxcccccxxccxxxxxcccccxxcccxccccxccccxxccccxxccxxcccxccccccxxxcccccccccxcccxcccxcccccxcxxcccxcccccccccccccccccxxccccxxxcccxxxccccxccccccccxcxccccccxcxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [19, 6], [8, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [7], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [19, 13], [17, 2], [10, 11], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [9], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [16, 14], [10, 18], [19, 13], [15, 16], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4374570846557617

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [192] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 332

Reduced: 
 - size: 78 (28.89%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500452995300293

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [7], [3], [16], [10], [14, 4], [0, 11], [7], [19], [2], [14], [18], [5], [1, 0], [8, 6], [7], [10], [3], [0, 11], [19, 6], [4, 9], [13, 17], [7], [12], [6], [14, 4], [2, 9], [18, 16], [7], [14, 17], [18, 16], [7], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [13], [7, 3], [1, 0], [6, 12], [11, 16], [7], [12], [1], [0, 10], [8, 6], [7], [0], [19], [14, 2], [18, 5], [12, 17], [7], [13], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 8], [7], [18], [14], [15], [19, 13], [17, 2], [10, 11], [7], [18, 15], [12, 17], [19, 13], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [1, 8], [6], [9, 3], [19, 13], [11, 14], [12, 17], [16, 4], [9], [12], [13, 17], [14, 2], [10, 19], [4, 7], [0, 11], [18], [9, 3], [11, 14], [4, 7], [6, 12], [8, 19], [13, 2], [0, 10], [9], [0], [8], [14], [13, 17], [7, 3], [10, 11], [6, 12], [18, 15], [9], [10], [16, 5], [19, 6], [14, 2], [9], [12], [15, 5], [13, 2], [11, 14], [4, 3], [1, 0], [9], [4, 3], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [9], [0], [15, 5], [10, 18], [19, 13], [14, 4], [9], [13, 14], [0, 19], [5], [18], [7, 9], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [7, 9], [19, 13], [1, 0], [6, 12], [9], [2], [6], [12], [14, 4], [7, 3], [9], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [7, 3], [7], [14], [2, 9], [8, 13], [4, 3], [16, 5], [2], [8], [14], [4, 3], [0, 19], [18, 5], [7], [17], [13, 2], [16, 14], [0, 10], [18, 5], [8], [19, 13], [15, 16], [17, 2], [19], [9], [10, 18], [16, 14], [4, 7], [17], [19, 6], [1, 8], [16, 14], [11, 4], [0, 10], [10], [6], [9], [19, 11], [1, 8], [13, 17], [4, 3], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [4, 3], [15, 16], [8, 6], [13], [10], [6], [7, 9], [12, 17], [0, 19], [11, 14], [8, 13], [18, 5], [11, 14], [7, 9], [16, 4], [8], [3], [4, 9], [14, 17], [18, 16], [8, 19], [15, 16], [6, 12], [18, 5], [14, 17], [4, 3], [2, 9], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[87, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[127, 146, 155]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[25, 32, 37]
[210, 215, 220]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[20, 26]
[26, 34]
[23, 35]
[21, 36]
[34, 41]
[41, 47]
[47, 50]
[35, 51]
[50, 56]
[69, 74]
[74, 80]
[64, 81]
[80, 88]
[88, 95]
[126, 135]
[135, 140]
[140, 147]
[147, 154]
[154, 160]
[177, 183]
[183, 187]
[196, 203]
[195, 207]
[202, 213]
[218, 230]
[228, 247]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[46, 49]
[92, 98]
[98, 107]
[97, 109]
[116, 121]
[113, 130]
[122, 133]
[145, 148]
[165, 173]
[182, 194]
[199, 204]
[206, 212]
[220, 225]
[224, 232]
[234, 243]
[252, 255]
[249, 256]
[254, 266]
[261, 267]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6562533378601074

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [21, 36] xx => I, Pos: [21, 36] xx => I, Pos: [23, 35] xx => I, Pos: [23, 35] xx => I, Pos: [25, 32, 37] ccc => cc, Pos: [26, 34] xx => I, Pos: [26, 34] xx => I, Pos: [34, 41] xx => I, Pos: [34, 41] xx => I, Pos: [35, 51] xx => I, Pos: [35, 51] xx => I, Pos: [41, 47] xx => I, Pos: [41, 47] xx => I, Pos: [46, 49] cc => I, Pos: [46, 49] cc => I, Pos: [47, 50] xx => I, Pos: [47, 50] xx => I, Pos: [50, 56] xx => I, Pos: [50, 56] xx => I, Pos: [64, 81] xx => I, Pos: [64, 81] xx => I, Pos: [69, 74] xx => I, Pos: [69, 74] xx => I, Pos: [74, 80] xx => I, Pos: [74, 80] xx => I, Pos: [80, 88] xx => I, Pos: [80, 88] xx => I, Pos: [87, 99, 104] ccc => cc, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [92, 98] cc => I, Pos: [92, 98] cc => I, Pos: [97, 109] cc => I, Pos: [97, 109] cc => I, Pos: [98, 107] cc => I, Pos: [98, 107] cc => I, Pos: [113, 130] cc => I, Pos: [113, 130] cc => I, Pos: [116, 121] cc => I, Pos: [116, 121] cc => I, Pos: [122, 133] cc => I, Pos: [122, 133] cc => I, Pos: [126, 135] xx => I, Pos: [126, 135] xx => I, Pos: [127, 146, 155] xcx => c, Pos: [135, 140] xx => I, Pos: [135, 140] xx => I, Pos: [140, 147] xx => I, Pos: [140, 147] xx => I, Pos: [145, 148] cc => I, Pos: [145, 148] cc => I, Pos: [147, 154] xx => I, Pos: [147, 154] xx => I, Pos: [154, 160] xx => I, Pos: [154, 160] xx => I, Pos: [165, 173] cc => I, Pos: [165, 173] cc => I, Pos: [177, 183] xx => I, Pos: [177, 183] xx => I, Pos: [182, 194] cc => I, Pos: [182, 194] cc => I, Pos: [183, 187] xx => I, Pos: [183, 187] xx => I, Pos: [195, 207] xx => I, Pos: [195, 207] xx => I, Pos: [196, 203] xx => I, Pos: [196, 203] xx => I, Pos: [199, 204] cc => I, Pos: [199, 204] cc => I, Pos: [202, 213] xx => I, Pos: [202, 213] xx => I, Pos: [206, 212] cc => I, Pos: [206, 212] cc => I, Pos: [210, 215, 220] ccc => cc, Pos: [218, 230] xx => I, Pos: [218, 230] xx => I, Pos: [220, 225] cc => I, Pos: [220, 225] cc => I, Pos: [224, 232] cc => I, Pos: [224, 232] cc => I, Pos: [228, 247] xx => I, Pos: [228, 247] xx => I, Pos: [234, 243] cc => I, Pos: [234, 243] cc => I, Pos: [249, 256] cc => I, Pos: [249, 256] cc => I, Pos: [252, 255] cc => I, Pos: [252, 255] cc => I, Pos: [254, 266] cc => I, Pos: [254, 266] cc => I, Pos: [261, 267] cc => I, Pos: [261, 267] cc => I]

Plan: 1
[Pos: [20, 26] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [23, 35] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [34, 41] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [47, 50] xx => I,
 Pos: [64, 81] xx => I,
 Pos: [69, 74] xx => I,
 Pos: [80, 88] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [92, 98] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [126, 135] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [140, 147] xx => I,
 Pos: [145, 148] cc => I,
 Pos: [154, 160] xx => I,
 Pos: [165, 173] cc => I,
 Pos: [177, 183] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [210, 215, 220] ccc => cc,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 38, Saving: 38

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09374475479125977

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [20, 26] xx => I,
 Pos: [21, 36] xx => I,
 Pos: [23, 35] xx => I,
 Pos: [25, 32, 37] ccc => cc,
 Pos: [34, 41] xx => I,
 Pos: [46, 49] cc => I,
 Pos: [47, 50] xx => I,
 Pos: [64, 81] xx => I,
 Pos: [69, 74] xx => I,
 Pos: [80, 88] xx => I,
 Pos: [87, 99, 104] ccc => cc,
 Pos: [92, 98] cc => I,
 Pos: [97, 109] cc => I,
 Pos: [113, 130] cc => I,
 Pos: [116, 121] cc => I,
 Pos: [122, 133] cc => I,
 Pos: [126, 135] xx => I,
 Pos: [127, 146, 155] xcx => c,
 Pos: [140, 147] xx => I,
 Pos: [145, 148] cc => I,
 Pos: [154, 160] xx => I,
 Pos: [165, 173] cc => I,
 Pos: [177, 183] xx => I,
 Pos: [182, 194] cc => I,
 Pos: [195, 207] xx => I,
 Pos: [196, 203] xx => I,
 Pos: [199, 204] cc => I,
 Pos: [202, 213] xx => I,
 Pos: [206, 212] cc => I,
 Pos: [210, 215, 220] ccc => cc,
 Pos: [218, 230] xx => I,
 Pos: [224, 232] cc => I,
 Pos: [228, 247] xx => I,
 Pos: [234, 243] cc => I,
 Pos: [249, 256] cc => I,
 Pos: [252, 255] cc => I,
 Pos: [254, 266] cc => I,
 Pos: [261, 267] cc => I]
Change: 38, Saving: 38

Circuit before: xcccccccxcccccxcccccxxxxccxxxxxxccxxxccccxxxcccxccxxccccxxccccxxxccccxxxccxxxcccxxccccccxxxxcccxcccccccccxcccccxxcccccxcccccccxxxxcccccxxcccxxcccccxccccccxxccccxccxxcccccxxxccccxxxxccxcccxxccccccxxccccxxxcccxxccccxcccxxcccxcccccxxxcccccxxcccxccccxxxcccccccccxxcccccccccc
---------------
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [21, 36] xx => I
Apply:  Pos: [23, 35] xx => I
Apply:  Pos: [25, 32, 37] ccc => cc
Apply:  Pos: [34, 41] xx => I
Apply:  Pos: [46, 49] cc => I
Apply:  Pos: [47, 50] xx => I
Apply:  Pos: [64, 81] xx => I
Apply:  Pos: [69, 74] xx => I
Apply:  Pos: [80, 88] xx => I
Apply:  Pos: [87, 99, 104] ccc => cc
Apply:  Pos: [92, 98] cc => I
Apply:  Pos: [97, 109] cc => I
Apply:  Pos: [113, 130] cc => I
Apply:  Pos: [116, 121] cc => I
Apply:  Pos: [122, 133] cc => I
Apply:  Pos: [126, 135] xx => I
Apply:  Pos: [127, 146, 155] xcx => c
Apply:  Pos: [140, 147] xx => I
Apply:  Pos: [145, 148] cc => I
Apply:  Pos: [154, 160] xx => I
Apply:  Pos: [165, 173] cc => I
Apply:  Pos: [177, 183] xx => I
Apply:  Pos: [182, 194] cc => I
Apply:  Pos: [195, 207] xx => I
Apply:  Pos: [196, 203] xx => I
Apply:  Pos: [199, 204] cc => I
Apply:  Pos: [202, 213] xx => I
Apply:  Pos: [206, 212] cc => I
Apply:  Pos: [210, 215, 220] ccc => cc
Apply:  Pos: [218, 230] xx => I
Apply:  Pos: [224, 232] cc => I
Apply:  Pos: [228, 247] xx => I
Apply:  Pos: [234, 243] cc => I
Apply:  Pos: [249, 256] cc => I
Apply:  Pos: [252, 255] cc => I
Apply:  Pos: [254, 266] cc => I
Apply:  Pos: [261, 267] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxccccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [12], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [12], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [10, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [0, 10], [19, 13], [16, 14], [17, 2], [19], [10, 18], [4, 7], [17], [19, 6], [16, 14], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.7499980926513672

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[159, 166]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 108]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[157, 162, 168]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[148, 157, 162]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[88, 108]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[159, 166]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4226489067077637

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [88, 108] xx => I, Pos: [88, 108] xx => I, Pos: [148, 157, 162] ccc => cc, Pos: [157, 162, 168] ccc => cc, Pos: [159, 166] cc => I, Pos: [159, 166] cc => I]

Plan: 1
[Pos: [88, 108] xx => I,
 Pos: [148, 157, 162] ccc => cc,
 Pos: [159, 166] cc => I]
Change: 3, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [88, 108] xx => I,
 Pos: [148, 157, 162] ccc => cc,
 Pos: [159, 166] cc => I]
Change: 3, Saving: 3

Circuit before: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxxcccxccccccxxcccxcccxccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxccccccxccxccccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [88, 108] xx => I
Apply:  Pos: [148, 157, 162] ccc => cc
Apply:  Pos: [159, 166] cc => I
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxcccccxcxcccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [19, 6], [8, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 10], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [10, 18], [19, 13], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [0, 10], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.4226489067077637

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[146, 155, 163]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.406235694885254

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [146, 155, 163] ccc => cc]

Plan: 1
[Pos: [146, 155, 163] ccc => cc]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [146, 155, 163] ccc => cc]
Change: 1, Saving: 1

Circuit before: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxcccccxcxcccxcccxxcccxcccxxccccxxccccccc
---------------
Apply:  Pos: [146, 155, 163] ccc => cc
---------------
Circuit after: xcccccccxcccccxcccccxccxxxxxcccccxxcccxccccxxccccxxccccxxccxxcccccccccxxxccxccccccxccccxcccxccccccxxcccxcccccccccccccccccxxccccxxxcccxxxccccxxccccccccxcxcccccxcxccxcccxxcccxcccxxccccxxccccccc

--------End Timer [apply mapping plan]:  0.0

[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [8, 6], [19, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [19, 6], [1, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [10, 18], [19, 13], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.406235694885254

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3749945163726807

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[7], [13, 17], [14, 2], [9, 3], [4, 7], [16, 5], [6, 12], [11, 14], [17], [5, 7], [10, 18], [14, 4], [13, 2], [19, 11], [4], [7, 9], [10, 11], [16, 5], [19, 13], [12, 17], [16], [14, 4], [1, 0], [19], [2], [14], [18], [5], [0, 11], [19, 6], [8, 6], [4, 9], [13, 17], [12], [6], [14, 4], [2, 9], [14, 17], [10], [0, 19], [17, 2], [4, 3], [8, 6], [7], [1], [16, 5], [12, 17], [4, 9], [19, 11], [4], [2], [7, 3], [1, 0], [6, 12], [11, 16], [12], [1], [0, 10], [8, 6], [0], [19], [14, 2], [18, 5], [12, 17], [15, 5], [10, 18], [2, 9], [16, 14], [1, 6], [19, 6], [18], [14], [15], [17, 2], [10, 11], [7], [18, 15], [8, 6], [0, 10], [7, 9], [15, 16], [18, 5], [6], [9, 3], [19, 13], [11, 14], [16, 4], [9], [14, 2], [10, 19], [0, 11], [18], [9, 3], [11, 14], [8, 19], [13, 2], [0, 10], [1, 0], [8], [14], [7, 3], [10, 11], [18, 15], [10], [16, 5], [19, 6], [14, 2], [15, 5], [13, 2], [11, 14], [10, 19], [18, 15], [1, 8], [14, 2], [5, 7], [15, 5], [10, 18], [19, 13], [14, 4], [13, 14], [0, 19], [5], [18], [0, 11], [15, 16], [13, 17], [8, 6], [15], [4], [16], [19, 13], [1, 0], [6, 12], [2], [6], [12], [14, 4], [0, 19], [13, 14], [11, 16], [9], [19], [1, 8], [16, 4], [13, 2], [6, 12], [0, 18], [2, 9], [8, 13], [16, 5], [2], [0, 19], [17], [13, 2], [15, 16], [10, 18], [19, 13], [17, 2], [19], [4, 7], [17], [19, 6], [11, 4], [6], [19, 11], [13, 17], [18, 5], [0], [16], [11, 14], [6, 12], [2, 9], [18], [13, 14], [15, 16], [8, 6], [13], [6], [12, 17], [0, 19], [8, 13], [16, 4], [8], [3], [4, 9], [18, 16], [8, 19], [15, 16], [6, 12], [4, 3], [2, 9], ----End Timer [Execute Mapping]:  1.3749945163726807

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-x-cx-x-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [191] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 39 - (small)
 - circuit cycle: 330

Reduced: 
 - size: 79 (29.26%)
 - depth: 6 (13.33%)

