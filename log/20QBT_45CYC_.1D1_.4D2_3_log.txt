----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12526774406433105

[9], [10], [2, 16], [13, 6], [17, 19], [7, 8], [5], [18], [3], [2], [7], [10, 16], [14, 17], [16], [1], [9], [15], [11, 18], [3, 19], [4, 7], [11], [14], [0, 16], [3, 19], [17, 4], [7, 9], [11], [16, 7], [4, 8], [14, 2], [13, 6], [5], [18], [6], [16, 7], [17, 4], [8, 9], [12, 13], [11], [15], [19], [2, 16], [17, 18], [4, 8], [2], [1], [17, 4], [13, 14], [5, 6], [2], [6], [8], [7], [5], [12], [11, 18], [13, 14], [1, 0], [4, 9], [17, 19], [10, 16], [5], [12], [10, 2], [7, 9], [14, 17], [13, 1], [11, 19], [0, 10], [4, 9], [1, 14], [15, 3], [1], [13], [7], [10, 2], [17, 4], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [2], [4, 9], [13, 6], [5, 15], [17, 19], [11, 18], [0, 16], [2], [16], [13, 1], [17, 4], [11, 18], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [10, 16], [11, 17], [7, 9], [0], [4, 9], [7, 8], [10, 16], [1, 6], [4, 9], [11, 19], [14, 17], [0, 10], [18, 8], [4], [14], [5, 15], [12, 13], [7, 9], [6, 11], [0, 10], [18, 8], [4, 9], [19, 18], [15, 11], [1, 6], [12, 13], [16, 7], [4], [8], [15], [5, 11], [10, 16], [13, 14], [4], [17, 19], [13, 1], [11, 18], [8, 9], [5, 15], [15], [4, 8], [13, 6], [1, 0], [7, 9], [4], [7], [6], [19, 18], [10, 16], [13, 1], [4], [16], [5], [7, 8], [13, 14], [2, 17], [11, 19], [6], [1], [4, 7], [8, 9], [3, 19], [5, 15], [11, 18], [14, 2], [7, 8], [17, 18], [14, 2], [4, 9], [8], [11], [17], [1], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [16], [18, 8], [2, 17], [12, 13], [3, 19], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [18], [3, 19], [7, 8], [1, 0], [6, 11], [14, 4], [18], [19], [8, 9], [10, 16], [13, 1], [18], [16], [17, 19], [5, 11], [7, 8], [18], [14, 4], [17, 19], [1, 0], [18], [10], [6, 11], [14, 4], [12, 5], [0, 16], [8], [2], [17, 18], [1, 0], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [18], [4], [11], [10], [13, 6], [18], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [4, 9], [18], [10], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [10], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 28, 35]
[76, 89, 98]
[141, 148, 155]
[199, 205, 212]
[216, 222, 226]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[33, 48, 50]
[135, 144, 145]
[186, 206, 209]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 75]
[69, 76, 89]
[200, 207, 216]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7966012954711914

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 15] xx => I, Pos: [0, 15] xx => I, Pos: [3, 30] cc => I, Pos: [3, 30] cc => I, Pos: [6, 31] xx => I, Pos: [6, 31] xx => I, Pos: [14, 45] xx => I, Pos: [14, 45] xx => I, Pos: [16, 39] xx => I, Pos: [16, 39] xx => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [24, 28, 35] ccc => cc, Pos: [26, 38] xx => I, Pos: [26, 38] xx => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [33, 48, 50] xcx => c, Pos: [44, 49] xx => I, Pos: [44, 49] xx => I, Pos: [47, 56] cc => I, Pos: [47, 56] cc => I, Pos: [53, 61] xx => I, Pos: [53, 61] xx => I, Pos: [54, 62] xx => I, Pos: [54, 62] xx => I, Pos: [63, 68, 75] ccc => cc, Pos: [69, 76, 89] ccc => cc, Pos: [76, 89, 98] ccc => cc, Pos: [81, 88] xx => I, Pos: [81, 88] xx => I, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [93, 99] cc => I, Pos: [93, 99] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 131] cc => I, Pos: [122, 131] cc => I, Pos: [133, 139] xx => I, Pos: [133, 139] xx => I, Pos: [135, 144, 145] xcx => c, Pos: [137, 154] cc => I, Pos: [137, 154] cc => I, Pos: [138, 160] cc => I, Pos: [138, 160] cc => I, Pos: [141, 148, 155] ccc => cc, Pos: [150, 156] xx => I, Pos: [150, 156] xx => I, Pos: [152, 163] xx => I, Pos: [152, 163] xx => I, Pos: [164, 178] xx => I, Pos: [164, 178] xx => I, Pos: [167, 190] cc => I, Pos: [167, 190] cc => I, Pos: [170, 173] cc => I, Pos: [170, 173] cc => I, Pos: [183, 200] cc => I, Pos: [183, 200] cc => I, Pos: [186, 206, 209] xcx => c, Pos: [191, 197] xx => I, Pos: [191, 197] xx => I, Pos: [197, 203] xx => I, Pos: [197, 203] xx => I, Pos: [199, 205, 212] ccc => cc, Pos: [200, 207, 216] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [203, 208] xx => I, Pos: [203, 208] xx => I, Pos: [208, 213] xx => I, Pos: [208, 213] xx => I, Pos: [210, 215] cc => I, Pos: [210, 215] cc => I, Pos: [213, 217] xx => I, Pos: [213, 217] xx => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [216, 222, 226] ccc => cc, Pos: [218, 235] xx => I, Pos: [218, 235] xx => I, Pos: [220, 227] cc => I, Pos: [220, 227] cc => I, Pos: [226, 246] cc => I, Pos: [226, 246] cc => I, Pos: [232, 237] xx => I, Pos: [232, 237] xx => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [255, 263] xx => I, Pos: [255, 263] xx => I]

Plan: 1
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [20, 26] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [69, 76, 89] ccc => cc,
 Pos: [81, 88] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [183, 200] cc => I,
 Pos: [186, 206, 209] xcx => c,
 Pos: [191, 197] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [203, 208] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [213, 217] xx => I,
 Pos: [216, 222, 226] ccc => cc,
 Pos: [218, 235] xx => I,
 Pos: [220, 227] cc => I,
 Pos: [232, 237] xx => I,
 Pos: [249, 253] cc => I,
 Pos: [255, 263] xx => I]
Change: 47, Saving: 132

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [20, 26] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [69, 76, 89] ccc => cc,
 Pos: [81, 88] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [183, 200] cc => I,
 Pos: [186, 206, 209] xcx => c,
 Pos: [191, 197] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [203, 208] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [213, 217] xx => I,
 Pos: [216, 222, 226] ccc => cc,
 Pos: [218, 235] xx => I,
 Pos: [220, 227] cc => I,
 Pos: [232, 237] xx => I,
 Pos: [249, 253] cc => I,
 Pos: [255, 263] xx => I]
Change: 47, Saving: 132

Circuit before: xxccccxxxxxccxxxxcccxxccccxccccxxxccccxxxcccxxcccxxxxxxccccccxxcccccccccxxxccccccxxxxcccxccccccxxcccxcccxccccxcccccccccxxccccccccccccxxxcccxcccccxccccxxxcccxxxccccxxccccccccccxxxxcccccccxccccxxccccxcccccxxcccxxcccxcccxxccccxxcccccccxxxxcxxxxcccxcccccxxccxxccccccxxcccccc
---------------
Apply:  Pos: [0, 15] xx => I
Apply:  Pos: [3, 30] cc => I
Apply:  Pos: [6, 31] xx => I
Apply:  Pos: [14, 45] xx => I
Apply:  Pos: [16, 39] xx => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [24, 28, 35] ccc => cc
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [33, 48, 50] xcx => c
Apply:  Pos: [44, 49] xx => I
Apply:  Pos: [47, 56] cc => I
Apply:  Pos: [53, 61] xx => I
Apply:  Pos: [54, 62] xx => I
Apply:  Pos: [63, 68, 75] ccc => cc
Apply:  Pos: [69, 76, 89] ccc => cc
Apply:  Pos: [81, 88] xx => I
Apply:  Pos: [93, 99] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 131] cc => I
Apply:  Pos: [133, 139] xx => I
Apply:  Pos: [135, 144, 145] xcx => c
Apply:  Pos: [137, 154] cc => I
Apply:  Pos: [138, 160] cc => I
Apply:  Pos: [141, 148, 155] ccc => cc
Apply:  Pos: [150, 156] xx => I
Apply:  Pos: [152, 163] xx => I
Apply:  Pos: [164, 178] xx => I
Apply:  Pos: [167, 190] cc => I
Apply:  Pos: [170, 173] cc => I
Apply:  Pos: [183, 200] cc => I
Apply:  Pos: [186, 206, 209] xcx => c
Apply:  Pos: [191, 197] xx => I
Apply:  Pos: [199, 205, 212] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [203, 208] xx => I
Apply:  Pos: [210, 215] cc => I
Apply:  Pos: [213, 217] xx => I
Apply:  Pos: [216, 222, 226] ccc => cc
Apply:  Pos: [218, 235] xx => I
Apply:  Pos: [220, 227] cc => I
Apply:  Pos: [232, 237] xx => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [255, 263] xx => I
---------------
Circuit after: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxcccccccxxccxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxcccccccxcccccccxxcccccxxcxxxcccxccccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 8], [14, 2], [18], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [4, 8], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 4], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [19, 18], [1, 14], [13, 6], [5, 15], [17, 19], [0, 16], [2], [16], [13, 1], [17, 4], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [11, 17], [7, 9], [0], [7, 8], [1, 6], [11, 19], [14, 17], [4], [14], [5, 15], [7, 9], [6, 11], [4, 9], [19, 18], [15, 11], [1, 6], [16, 7], [8], [5, 15], [5, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [19], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.7966012954711914

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[136, 154]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[17, 21, 27]
[42, 48, 66]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[4, 11, 19]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 61, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[87, 91, 92]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[136, 154]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4844231605529785

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 11, 19] xcx => c, Pos: [17, 21, 27] ccc => cc, Pos: [42, 48, 66] ccc => cc, Pos: [57, 61, 70] ccc => cc, Pos: [71, 80] xx => I, Pos: [71, 80] xx => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [87, 91, 92] ccc => cc, Pos: [136, 154] xx => I, Pos: [136, 154] xx => I]

Plan: 1
[Pos: [4, 11, 19] xcx => c,
 Pos: [17, 21, 27] ccc => cc,
 Pos: [42, 48, 66] ccc => cc,
 Pos: [57, 61, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [136, 154] xx => I]
Change: 8, Saving: 18

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 11, 19] xcx => c,
 Pos: [17, 21, 27] ccc => cc,
 Pos: [42, 48, 66] ccc => cc,
 Pos: [57, 61, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [136, 154] xx => I]
Change: 8, Saving: 18

Circuit before: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxcccccccxxccxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxcccccccxcccccccxxcccccxxcxxxcccxccccxxcxccccccxcccccc
---------------
Apply:  Pos: [4, 11, 19] xcx => c
Apply:  Pos: [17, 21, 27] ccc => cc
Apply:  Pos: [42, 48, 66] ccc => cc
Apply:  Pos: [57, 61, 70] ccc => cc
Apply:  Pos: [71, 80] xx => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [87, 91, 92] ccc => cc
Apply:  Pos: [136, 154] xx => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [5, 15], [6, 11], [4, 9], [19, 18], [5, 15], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4844231605529785

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 78]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 78]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.468696117401123

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [74, 78] cc => I, Pos: [74, 78] cc => I]

Plan: 1
[Pos: [74, 78] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [74, 78] cc => I]
Change: 1, Saving: 4

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxcccccc
---------------
Apply:  Pos: [74, 78] cc => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [4, 9], [7, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 4], [17, 18], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.468696117401123

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4062626361846924

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4062626361846924

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [168] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 102 (37.78%)
 - cycle: 154 (34.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10935354232788086

[9], [10], [2, 16], [13, 6], [17, 19], [7, 8], [5], [18], [3], [2], [7], [10, 16], [14, 17], [16], [1], [9], [15], [11, 18], [3, 19], [4, 7], [11], [14], [0, 16], [3, 19], [17, 4], [7, 9], [11], [16, 7], [4, 8], [14, 2], [13, 6], [5], [18], [6], [16, 7], [17, 4], [8, 9], [12, 13], [11], [15], [19], [2, 16], [17, 18], [4, 8], [2], [1], [17, 4], [13, 14], [5, 6], [2], [6], [8], [7], [5], [12], [11, 18], [13, 14], [1, 0], [4, 9], [17, 19], [10, 16], [5], [12], [10, 2], [7, 9], [14, 17], [13, 1], [11, 19], [0, 10], [4, 9], [1, 14], [15, 3], [1], [13], [7], [10, 2], [17, 4], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [2], [4, 9], [13, 6], [5, 15], [17, 19], [11, 18], [0, 16], [2], [16], [13, 1], [17, 4], [11, 18], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [10, 16], [11, 17], [7, 9], [0], [4, 9], [7, 8], [10, 16], [1, 6], [4, 9], [11, 19], [14, 17], [0, 10], [18, 8], [4], [14], [5, 15], [12, 13], [7, 9], [6, 11], [0, 10], [18, 8], [4, 9], [19, 18], [15, 11], [1, 6], [12, 13], [16, 7], [4], [8], [15], [5, 11], [10, 16], [13, 14], [4], [17, 19], [13, 1], [11, 18], [8, 9], [5, 15], [15], [4, 8], [13, 6], [1, 0], [7, 9], [4], [7], [6], [19, 18], [10, 16], [13, 1], [4], [16], [5], [7, 8], [13, 14], [2, 17], [11, 19], [6], [1], [4, 7], [8, 9], [3, 19], [5, 15], [11, 18], [14, 2], [7, 8], [17, 18], [14, 2], [4, 9], [8], [11], [17], [1], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [16], [18, 8], [2, 17], [12, 13], [3, 19], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [18], [3, 19], [7, 8], [1, 0], [6, 11], [14, 4], [18], [19], [8, 9], [10, 16], [13, 1], [18], [16], [17, 19], [5, 11], [7, 8], [18], [14, 4], [17, 19], [1, 0], [18], [10], [6, 11], [14, 4], [12, 5], [0, 16], [8], [2], [17, 18], [1, 0], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [18], [4], [11], [10], [13, 6], [18], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [4, 9], [18], [10], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [10], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 28, 35]
[76, 89, 98]
[141, 148, 155]
[199, 205, 212]
[216, 222, 226]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[33, 48, 50]
[135, 144, 145]
[186, 206, 209]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 75]
[69, 76, 89]
[200, 207, 216]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7812113761901855

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 15] xx => I, Pos: [0, 15] xx => I, Pos: [3, 30] cc => I, Pos: [3, 30] cc => I, Pos: [6, 31] xx => I, Pos: [6, 31] xx => I, Pos: [14, 45] xx => I, Pos: [14, 45] xx => I, Pos: [16, 39] xx => I, Pos: [16, 39] xx => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [24, 28, 35] ccc => cc, Pos: [26, 38] xx => I, Pos: [26, 38] xx => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [33, 48, 50] xcx => c, Pos: [44, 49] xx => I, Pos: [44, 49] xx => I, Pos: [47, 56] cc => I, Pos: [47, 56] cc => I, Pos: [53, 61] xx => I, Pos: [53, 61] xx => I, Pos: [54, 62] xx => I, Pos: [54, 62] xx => I, Pos: [63, 68, 75] ccc => cc, Pos: [69, 76, 89] ccc => cc, Pos: [76, 89, 98] ccc => cc, Pos: [81, 88] xx => I, Pos: [81, 88] xx => I, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [93, 99] cc => I, Pos: [93, 99] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 131] cc => I, Pos: [122, 131] cc => I, Pos: [133, 139] xx => I, Pos: [133, 139] xx => I, Pos: [135, 144, 145] xcx => c, Pos: [137, 154] cc => I, Pos: [137, 154] cc => I, Pos: [138, 160] cc => I, Pos: [138, 160] cc => I, Pos: [141, 148, 155] ccc => cc, Pos: [150, 156] xx => I, Pos: [150, 156] xx => I, Pos: [152, 163] xx => I, Pos: [152, 163] xx => I, Pos: [164, 178] xx => I, Pos: [164, 178] xx => I, Pos: [167, 190] cc => I, Pos: [167, 190] cc => I, Pos: [170, 173] cc => I, Pos: [170, 173] cc => I, Pos: [183, 200] cc => I, Pos: [183, 200] cc => I, Pos: [186, 206, 209] xcx => c, Pos: [191, 197] xx => I, Pos: [191, 197] xx => I, Pos: [197, 203] xx => I, Pos: [197, 203] xx => I, Pos: [199, 205, 212] ccc => cc, Pos: [200, 207, 216] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [203, 208] xx => I, Pos: [203, 208] xx => I, Pos: [208, 213] xx => I, Pos: [208, 213] xx => I, Pos: [210, 215] cc => I, Pos: [210, 215] cc => I, Pos: [213, 217] xx => I, Pos: [213, 217] xx => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [216, 222, 226] ccc => cc, Pos: [218, 235] xx => I, Pos: [218, 235] xx => I, Pos: [220, 227] cc => I, Pos: [220, 227] cc => I, Pos: [226, 246] cc => I, Pos: [226, 246] cc => I, Pos: [232, 237] xx => I, Pos: [232, 237] xx => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [255, 263] xx => I, Pos: [255, 263] xx => I]

Plan: 1
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [20, 26] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [69, 76, 89] ccc => cc,
 Pos: [81, 88] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [183, 200] cc => I,
 Pos: [186, 206, 209] xcx => c,
 Pos: [191, 197] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [203, 208] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [213, 217] xx => I,
 Pos: [216, 222, 226] ccc => cc,
 Pos: [218, 235] xx => I,
 Pos: [220, 227] cc => I,
 Pos: [232, 237] xx => I,
 Pos: [249, 253] cc => I,
 Pos: [255, 263] xx => I]
Change: 47, Saving: 47

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10942602157592773

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [20, 26] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [69, 76, 89] ccc => cc,
 Pos: [81, 88] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [183, 200] cc => I,
 Pos: [186, 206, 209] xcx => c,
 Pos: [191, 197] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [203, 208] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [213, 217] xx => I,
 Pos: [216, 222, 226] ccc => cc,
 Pos: [218, 235] xx => I,
 Pos: [220, 227] cc => I,
 Pos: [232, 237] xx => I,
 Pos: [249, 253] cc => I,
 Pos: [255, 263] xx => I]
Change: 47, Saving: 47

Circuit before: xxccccxxxxxccxxxxcccxxccccxccccxxxccccxxxcccxxcccxxxxxxccccccxxcccccccccxxxccccccxxxxcccxccccccxxcccxcccxccccxcccccccccxxccccccccccccxxxcccxcccccxccccxxxcccxxxccccxxccccccccccxxxxcccccccxccccxxccccxcccccxxcccxxcccxcccxxccccxxcccccccxxxxcxxxxcccxcccccxxccxxccccccxxcccccc
---------------
Apply:  Pos: [0, 15] xx => I
Apply:  Pos: [3, 30] cc => I
Apply:  Pos: [6, 31] xx => I
Apply:  Pos: [14, 45] xx => I
Apply:  Pos: [16, 39] xx => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [24, 28, 35] ccc => cc
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [33, 48, 50] xcx => c
Apply:  Pos: [44, 49] xx => I
Apply:  Pos: [47, 56] cc => I
Apply:  Pos: [53, 61] xx => I
Apply:  Pos: [54, 62] xx => I
Apply:  Pos: [63, 68, 75] ccc => cc
Apply:  Pos: [69, 76, 89] ccc => cc
Apply:  Pos: [81, 88] xx => I
Apply:  Pos: [93, 99] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 131] cc => I
Apply:  Pos: [133, 139] xx => I
Apply:  Pos: [135, 144, 145] xcx => c
Apply:  Pos: [137, 154] cc => I
Apply:  Pos: [138, 160] cc => I
Apply:  Pos: [141, 148, 155] ccc => cc
Apply:  Pos: [150, 156] xx => I
Apply:  Pos: [152, 163] xx => I
Apply:  Pos: [164, 178] xx => I
Apply:  Pos: [167, 190] cc => I
Apply:  Pos: [170, 173] cc => I
Apply:  Pos: [183, 200] cc => I
Apply:  Pos: [186, 206, 209] xcx => c
Apply:  Pos: [191, 197] xx => I
Apply:  Pos: [199, 205, 212] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [203, 208] xx => I
Apply:  Pos: [210, 215] cc => I
Apply:  Pos: [213, 217] xx => I
Apply:  Pos: [216, 222, 226] ccc => cc
Apply:  Pos: [218, 235] xx => I
Apply:  Pos: [220, 227] cc => I
Apply:  Pos: [232, 237] xx => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [255, 263] xx => I
---------------
Circuit after: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxcccccccxxccxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxcccccccxcccccccxxcccccxxcxxxcccxccccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 8], [14, 2], [18], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [4, 8], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 4], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [19, 18], [1, 14], [13, 6], [5, 15], [17, 19], [0, 16], [2], [16], [13, 1], [17, 4], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [11, 17], [7, 9], [0], [7, 8], [1, 6], [11, 19], [14, 17], [4], [14], [5, 15], [7, 9], [6, 11], [4, 9], [19, 18], [15, 11], [1, 6], [16, 7], [8], [5, 15], [5, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [19], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.8906373977661133

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[136, 154]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[17, 21, 27]
[42, 48, 66]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[4, 11, 19]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 61, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[87, 91, 92]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[136, 154]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.468719720840454

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 11, 19] xcx => c, Pos: [17, 21, 27] ccc => cc, Pos: [42, 48, 66] ccc => cc, Pos: [57, 61, 70] ccc => cc, Pos: [71, 80] xx => I, Pos: [71, 80] xx => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [87, 91, 92] ccc => cc, Pos: [136, 154] xx => I, Pos: [136, 154] xx => I]

Plan: 1
[Pos: [4, 11, 19] xcx => c,
 Pos: [17, 21, 27] ccc => cc,
 Pos: [42, 48, 66] ccc => cc,
 Pos: [57, 61, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [136, 154] xx => I]
Change: 8, Saving: 9

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.03126049041748047

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 11, 19] xcx => c,
 Pos: [17, 21, 27] ccc => cc,
 Pos: [42, 48, 66] ccc => cc,
 Pos: [57, 61, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [136, 154] xx => I]
Change: 8, Saving: 9

Circuit before: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxcccccccxxccxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxcccccccxcccccccxxcccccxxcxxxcccxccccxxcxccccccxcccccc
---------------
Apply:  Pos: [4, 11, 19] xcx => c
Apply:  Pos: [17, 21, 27] ccc => cc
Apply:  Pos: [42, 48, 66] ccc => cc
Apply:  Pos: [57, 61, 70] ccc => cc
Apply:  Pos: [71, 80] xx => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [87, 91, 92] ccc => cc
Apply:  Pos: [136, 154] xx => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [5, 15], [6, 11], [4, 9], [19, 18], [5, 15], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4999802112579346

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 78]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 78]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.45314621925354

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [74, 78] cc => I, Pos: [74, 78] cc => I]

Plan: 1
[Pos: [74, 78] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [74, 78] cc => I]
Change: 1, Saving: 1

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxcccccc
---------------
Apply:  Pos: [74, 78] cc => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [4, 9], [7, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 4], [17, 18], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.45314621925354

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3906304836273193

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.3906304836273193

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [168] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 33 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 102 (37.78%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12500476837158203

[9], [10], [2, 16], [13, 6], [17, 19], [7, 8], [5], [18], [3], [2], [7], [10, 16], [14, 17], [16], [1], [9], [15], [11, 18], [3, 19], [4, 7], [11], [14], [0, 16], [3, 19], [17, 4], [7, 9], [11], [16, 7], [4, 8], [14, 2], [13, 6], [5], [18], [6], [16, 7], [17, 4], [8, 9], [12, 13], [11], [15], [19], [2, 16], [17, 18], [4, 8], [2], [1], [17, 4], [13, 14], [5, 6], [2], [6], [8], [7], [5], [12], [11, 18], [13, 14], [1, 0], [4, 9], [17, 19], [10, 16], [5], [12], [10, 2], [7, 9], [14, 17], [13, 1], [11, 19], [0, 10], [4, 9], [1, 14], [15, 3], [1], [13], [7], [10, 2], [17, 4], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [2], [4, 9], [13, 6], [5, 15], [17, 19], [11, 18], [0, 16], [2], [16], [13, 1], [17, 4], [11, 18], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [10, 16], [11, 17], [7, 9], [0], [4, 9], [7, 8], [10, 16], [1, 6], [4, 9], [11, 19], [14, 17], [0, 10], [18, 8], [4], [14], [5, 15], [12, 13], [7, 9], [6, 11], [0, 10], [18, 8], [4, 9], [19, 18], [15, 11], [1, 6], [12, 13], [16, 7], [4], [8], [15], [5, 11], [10, 16], [13, 14], [4], [17, 19], [13, 1], [11, 18], [8, 9], [5, 15], [15], [4, 8], [13, 6], [1, 0], [7, 9], [4], [7], [6], [19, 18], [10, 16], [13, 1], [4], [16], [5], [7, 8], [13, 14], [2, 17], [11, 19], [6], [1], [4, 7], [8, 9], [3, 19], [5, 15], [11, 18], [14, 2], [7, 8], [17, 18], [14, 2], [4, 9], [8], [11], [17], [1], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [16], [18, 8], [2, 17], [12, 13], [3, 19], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [18], [3, 19], [7, 8], [1, 0], [6, 11], [14, 4], [18], [19], [8, 9], [10, 16], [13, 1], [18], [16], [17, 19], [5, 11], [7, 8], [18], [14, 4], [17, 19], [1, 0], [18], [10], [6, 11], [14, 4], [12, 5], [0, 16], [8], [2], [17, 18], [1, 0], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [18], [4], [11], [10], [13, 6], [18], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [4, 9], [18], [10], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [10], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 28, 35]
[76, 89, 98]
[141, 148, 155]
[199, 205, 212]
[216, 222, 226]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[33, 48, 50]
[135, 144, 145]
[186, 206, 209]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 75]
[69, 76, 89]
[200, 207, 216]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7645432949066162

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 15] xx => I, Pos: [0, 15] xx => I, Pos: [3, 30] cc => I, Pos: [3, 30] cc => I, Pos: [6, 31] xx => I, Pos: [6, 31] xx => I, Pos: [14, 45] xx => I, Pos: [14, 45] xx => I, Pos: [16, 39] xx => I, Pos: [16, 39] xx => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [24, 28, 35] ccc => cc, Pos: [26, 38] xx => I, Pos: [26, 38] xx => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [33, 48, 50] xcx => c, Pos: [44, 49] xx => I, Pos: [44, 49] xx => I, Pos: [47, 56] cc => I, Pos: [47, 56] cc => I, Pos: [53, 61] xx => I, Pos: [53, 61] xx => I, Pos: [54, 62] xx => I, Pos: [54, 62] xx => I, Pos: [63, 68, 75] ccc => cc, Pos: [69, 76, 89] ccc => cc, Pos: [76, 89, 98] ccc => cc, Pos: [81, 88] xx => I, Pos: [81, 88] xx => I, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [93, 99] cc => I, Pos: [93, 99] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 131] cc => I, Pos: [122, 131] cc => I, Pos: [133, 139] xx => I, Pos: [133, 139] xx => I, Pos: [135, 144, 145] xcx => c, Pos: [137, 154] cc => I, Pos: [137, 154] cc => I, Pos: [138, 160] cc => I, Pos: [138, 160] cc => I, Pos: [141, 148, 155] ccc => cc, Pos: [150, 156] xx => I, Pos: [150, 156] xx => I, Pos: [152, 163] xx => I, Pos: [152, 163] xx => I, Pos: [164, 178] xx => I, Pos: [164, 178] xx => I, Pos: [167, 190] cc => I, Pos: [167, 190] cc => I, Pos: [170, 173] cc => I, Pos: [170, 173] cc => I, Pos: [183, 200] cc => I, Pos: [183, 200] cc => I, Pos: [186, 206, 209] xcx => c, Pos: [191, 197] xx => I, Pos: [191, 197] xx => I, Pos: [197, 203] xx => I, Pos: [197, 203] xx => I, Pos: [199, 205, 212] ccc => cc, Pos: [200, 207, 216] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [203, 208] xx => I, Pos: [203, 208] xx => I, Pos: [208, 213] xx => I, Pos: [208, 213] xx => I, Pos: [210, 215] cc => I, Pos: [210, 215] cc => I, Pos: [213, 217] xx => I, Pos: [213, 217] xx => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [216, 222, 226] ccc => cc, Pos: [218, 235] xx => I, Pos: [218, 235] xx => I, Pos: [220, 227] cc => I, Pos: [220, 227] cc => I, Pos: [226, 246] cc => I, Pos: [226, 246] cc => I, Pos: [232, 237] xx => I, Pos: [232, 237] xx => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [255, 263] xx => I, Pos: [255, 263] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [26, 38] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [69, 76, 89] ccc => cc,
 Pos: [81, 88] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [183, 200] cc => I,
 Pos: [186, 206, 209] xcx => c,
 Pos: [197, 203] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [214, 220] cc => I,
 Pos: [208, 213] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [226, 246] cc => I,
 Pos: [218, 235] xx => I,
 Pos: [232, 237] xx => I,
 Pos: [249, 253] cc => I,
 Pos: [255, 263] xx => I]
Change: 45, Saving: 128

Circuit before: xxccccxxxxxccxxxxcccxxccccxccccxxxccccxxxcccxxcccxxxxxxccccccxxcccccccccxxxccccccxxxxcccxccccccxxcccxcccxccccxcccccccccxxccccccccccccxxxcccxcccccxccccxxxcccxxxccccxxccccccccccxxxxcccccccxccccxxccccxcccccxxcccxxcccxcccxxccccxxcccccccxxxxcxxxxcccxcccccxxccxxccccccxxcccccc
---------------
Apply:  Pos: [0, 15] xx => I
Apply:  Pos: [3, 30] cc => I
Apply:  Pos: [6, 31] xx => I
Apply:  Pos: [14, 45] xx => I
Apply:  Pos: [16, 39] xx => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [26, 38] xx => I
Apply:  Pos: [24, 28, 35] ccc => cc
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [33, 48, 50] xcx => c
Apply:  Pos: [44, 49] xx => I
Apply:  Pos: [47, 56] cc => I
Apply:  Pos: [53, 61] xx => I
Apply:  Pos: [54, 62] xx => I
Apply:  Pos: [63, 68, 75] ccc => cc
Apply:  Pos: [69, 76, 89] ccc => cc
Apply:  Pos: [81, 88] xx => I
Apply:  Pos: [93, 99] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 131] cc => I
Apply:  Pos: [133, 139] xx => I
Apply:  Pos: [135, 144, 145] xcx => c
Apply:  Pos: [137, 154] cc => I
Apply:  Pos: [138, 160] cc => I
Apply:  Pos: [141, 148, 155] ccc => cc
Apply:  Pos: [150, 156] xx => I
Apply:  Pos: [152, 163] xx => I
Apply:  Pos: [164, 178] xx => I
Apply:  Pos: [167, 190] cc => I
Apply:  Pos: [170, 173] cc => I
Apply:  Pos: [183, 200] cc => I
Apply:  Pos: [186, 206, 209] xcx => c
Apply:  Pos: [197, 203] xx => I
Apply:  Pos: [199, 205, 212] ccc => cc
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [208, 213] xx => I
Apply:  Pos: [210, 215] cc => I
Apply:  Pos: [226, 246] cc => I
Apply:  Pos: [218, 235] xx => I
Apply:  Pos: [232, 237] xx => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [255, 263] xx => I
---------------
Circuit after: xcccxxxxccxccxxcccccxcccxccccxxccccccccccccccxxxcccccxxxcccccccxxccxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxxccccccccxccccxcccxxccccccxxcxxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [11], [14], [0, 16], [17, 8], [7, 9], [4, 8], [14, 2], [18], [5, 6], [8, 9], [12, 13], [19], [2, 16], [17, 18], [4, 8], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 4], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [19, 18], [1, 14], [13, 6], [5, 15], [17, 19], [0, 16], [2], [16], [13, 1], [17, 4], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [11, 17], [7, 9], [0], [7, 8], [1, 6], [11, 19], [14, 17], [4], [14], [5, 15], [7, 9], [6, 11], [4, 9], [19, 18], [15, 11], [1, 6], [16, 7], [8], [5, 15], [5, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [14, 4], [19], [8, 9], [13, 1], [5, 11], [1, 0], [18], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.7645432949066162

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[137, 150]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[128, 143]
[138, 158]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[18, 22, 27]
[42, 48, 66]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 61, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[87, 91, 92]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[128, 143]
[138, 158]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[137, 150]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4533507823944092

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [18, 22, 27] ccc => cc, Pos: [42, 48, 66] ccc => cc, Pos: [57, 61, 70] ccc => cc, Pos: [71, 80] xx => I, Pos: [71, 80] xx => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [87, 91, 92] ccc => cc, Pos: [128, 143] xx => I, Pos: [128, 143] xx => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [138, 158] xx => I, Pos: [138, 158] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [18, 22, 27] ccc => cc,
 Pos: [42, 48, 66] ccc => cc,
 Pos: [57, 61, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [128, 143] xx => I,
 Pos: [137, 150] cc => I,
 Pos: [138, 158] xx => I]
Change: 9, Saving: 22

Circuit before: xcccxxxxccxccxxcccccxcccxccccxxccccccccccccccxxxcccccxxxcccccccxxccxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxxccccccccxccccxcccxxccccccxxcxxxcccxcccxxcxccccccxcccccc
---------------
Apply:  Pos: [18, 22, 27] ccc => cc
Apply:  Pos: [42, 48, 66] ccc => cc
Apply:  Pos: [57, 61, 70] ccc => cc
Apply:  Pos: [71, 80] xx => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [87, 91, 92] ccc => cc
Apply:  Pos: [128, 143] xx => I
Apply:  Pos: [137, 150] cc => I
Apply:  Pos: [138, 158] xx => I
---------------
Circuit after: xcccxxxxccxccxxcccccxcccxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [11], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [18], [5, 6], [8, 9], [12, 13], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [5, 15], [6, 11], [4, 9], [19, 18], [5, 15], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4533507823944092

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 80]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[76, 80]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.421783208847046

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [76, 80] cc => I, Pos: [76, 80] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [76, 80] cc => I]
Change: 1, Saving: 4

Circuit before: xcccxxxxccxccxxcccccxcccxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc
---------------
Apply:  Pos: [76, 80] cc => I
---------------
Circuit after: xcccxxxxccxccxxcccccxcccxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [11], [14], [0, 16], [17, 8], [4, 9], [7, 9], [14, 2], [18], [5, 6], [8, 9], [12, 13], [19], [2, 16], [17, 4], [17, 18], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.421783208847046

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3751962184906006

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxxxxccxccxxcccccxcccxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc
---------------
---------------
Circuit after: xcccxxxxccxccxxcccccxcccxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [11], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [18], [5, 6], [8, 9], [12, 13], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.3751962184906006

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [169] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 101 (37.41%)
 - cycle: 154 (34.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499022483825684

[9], [10], [2, 16], [13, 6], [17, 19], [7, 8], [5], [18], [3], [2], [7], [10, 16], [14, 17], [16], [1], [9], [15], [11, 18], [3, 19], [4, 7], [11], [14], [0, 16], [3, 19], [17, 4], [7, 9], [11], [16, 7], [4, 8], [14, 2], [13, 6], [5], [18], [6], [16, 7], [17, 4], [8, 9], [12, 13], [11], [15], [19], [2, 16], [17, 18], [4, 8], [2], [1], [17, 4], [13, 14], [5, 6], [2], [6], [8], [7], [5], [12], [11, 18], [13, 14], [1, 0], [4, 9], [17, 19], [10, 16], [5], [12], [10, 2], [7, 9], [14, 17], [13, 1], [11, 19], [0, 10], [4, 9], [1, 14], [15, 3], [1], [13], [7], [10, 2], [17, 4], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [2], [4, 9], [13, 6], [5, 15], [17, 19], [11, 18], [0, 16], [2], [16], [13, 1], [17, 4], [11, 18], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [10, 16], [11, 17], [7, 9], [0], [4, 9], [7, 8], [10, 16], [1, 6], [4, 9], [11, 19], [14, 17], [0, 10], [18, 8], [4], [14], [5, 15], [12, 13], [7, 9], [6, 11], [0, 10], [18, 8], [4, 9], [19, 18], [15, 11], [1, 6], [12, 13], [16, 7], [4], [8], [15], [5, 11], [10, 16], [13, 14], [4], [17, 19], [13, 1], [11, 18], [8, 9], [5, 15], [15], [4, 8], [13, 6], [1, 0], [7, 9], [4], [7], [6], [19, 18], [10, 16], [13, 1], [4], [16], [5], [7, 8], [13, 14], [2, 17], [11, 19], [6], [1], [4, 7], [8, 9], [3, 19], [5, 15], [11, 18], [14, 2], [7, 8], [17, 18], [14, 2], [4, 9], [8], [11], [17], [1], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [16], [18, 8], [2, 17], [12, 13], [3, 19], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [18], [3, 19], [7, 8], [1, 0], [6, 11], [14, 4], [18], [19], [8, 9], [10, 16], [13, 1], [18], [16], [17, 19], [5, 11], [7, 8], [18], [14, 4], [17, 19], [1, 0], [18], [10], [6, 11], [14, 4], [12, 5], [0, 16], [8], [2], [17, 18], [1, 0], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [18], [4], [11], [10], [13, 6], [18], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [4, 9], [18], [10], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [10], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 28, 35]
[76, 89, 98]
[141, 148, 155]
[199, 205, 212]
[216, 222, 226]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[33, 48, 50]
[135, 144, 145]
[186, 206, 209]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 75]
[69, 76, 89]
[200, 207, 216]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7955455780029297

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 15] xx => I, Pos: [0, 15] xx => I, Pos: [3, 30] cc => I, Pos: [3, 30] cc => I, Pos: [6, 31] xx => I, Pos: [6, 31] xx => I, Pos: [14, 45] xx => I, Pos: [14, 45] xx => I, Pos: [16, 39] xx => I, Pos: [16, 39] xx => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [24, 28, 35] ccc => cc, Pos: [26, 38] xx => I, Pos: [26, 38] xx => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [33, 48, 50] xcx => c, Pos: [44, 49] xx => I, Pos: [44, 49] xx => I, Pos: [47, 56] cc => I, Pos: [47, 56] cc => I, Pos: [53, 61] xx => I, Pos: [53, 61] xx => I, Pos: [54, 62] xx => I, Pos: [54, 62] xx => I, Pos: [63, 68, 75] ccc => cc, Pos: [69, 76, 89] ccc => cc, Pos: [76, 89, 98] ccc => cc, Pos: [81, 88] xx => I, Pos: [81, 88] xx => I, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [93, 99] cc => I, Pos: [93, 99] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 131] cc => I, Pos: [122, 131] cc => I, Pos: [133, 139] xx => I, Pos: [133, 139] xx => I, Pos: [135, 144, 145] xcx => c, Pos: [137, 154] cc => I, Pos: [137, 154] cc => I, Pos: [138, 160] cc => I, Pos: [138, 160] cc => I, Pos: [141, 148, 155] ccc => cc, Pos: [150, 156] xx => I, Pos: [150, 156] xx => I, Pos: [152, 163] xx => I, Pos: [152, 163] xx => I, Pos: [164, 178] xx => I, Pos: [164, 178] xx => I, Pos: [167, 190] cc => I, Pos: [167, 190] cc => I, Pos: [170, 173] cc => I, Pos: [170, 173] cc => I, Pos: [183, 200] cc => I, Pos: [183, 200] cc => I, Pos: [186, 206, 209] xcx => c, Pos: [191, 197] xx => I, Pos: [191, 197] xx => I, Pos: [197, 203] xx => I, Pos: [197, 203] xx => I, Pos: [199, 205, 212] ccc => cc, Pos: [200, 207, 216] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [203, 208] xx => I, Pos: [203, 208] xx => I, Pos: [208, 213] xx => I, Pos: [208, 213] xx => I, Pos: [210, 215] cc => I, Pos: [210, 215] cc => I, Pos: [213, 217] xx => I, Pos: [213, 217] xx => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [216, 222, 226] ccc => cc, Pos: [218, 235] xx => I, Pos: [218, 235] xx => I, Pos: [220, 227] cc => I, Pos: [220, 227] cc => I, Pos: [226, 246] cc => I, Pos: [226, 246] cc => I, Pos: [232, 237] xx => I, Pos: [232, 237] xx => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [255, 263] xx => I, Pos: [255, 263] xx => I]

--------End Timer [Generate Plans]:  0.10935544967651367

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [20, 26] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [76, 89, 98] ccc => cc,
 Pos: [81, 88] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [183, 200] cc => I,
 Pos: [186, 206, 209] xcx => c,
 Pos: [191, 197] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [214, 220] cc => I,
 Pos: [208, 213] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [226, 246] cc => I,
 Pos: [218, 235] xx => I,
 Pos: [232, 237] xx => I,
 Pos: [249, 253] cc => I,
 Pos: [255, 263] xx => I]
Change: 45, Saving: 45

Circuit before: xxccccxxxxxccxxxxcccxxccccxccccxxxccccxxxcccxxcccxxxxxxccccccxxcccccccccxxxccccccxxxxcccxccccccxxcccxcccxccccxcccccccccxxccccccccccccxxxcccxcccccxccccxxxcccxxxccccxxccccccccccxxxxcccccccxccccxxccccxcccccxxcccxxcccxcccxxccccxxcccccccxxxxcxxxxcccxcccccxxccxxccccccxxcccccc
---------------
Apply:  Pos: [0, 15] xx => I
Apply:  Pos: [3, 30] cc => I
Apply:  Pos: [6, 31] xx => I
Apply:  Pos: [14, 45] xx => I
Apply:  Pos: [16, 39] xx => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [24, 28, 35] ccc => cc
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [33, 48, 50] xcx => c
Apply:  Pos: [44, 49] xx => I
Apply:  Pos: [47, 56] cc => I
Apply:  Pos: [53, 61] xx => I
Apply:  Pos: [54, 62] xx => I
Apply:  Pos: [63, 68, 75] ccc => cc
Apply:  Pos: [76, 89, 98] ccc => cc
Apply:  Pos: [81, 88] xx => I
Apply:  Pos: [93, 99] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 131] cc => I
Apply:  Pos: [133, 139] xx => I
Apply:  Pos: [135, 144, 145] xcx => c
Apply:  Pos: [137, 154] cc => I
Apply:  Pos: [138, 160] cc => I
Apply:  Pos: [141, 148, 155] ccc => cc
Apply:  Pos: [150, 156] xx => I
Apply:  Pos: [152, 163] xx => I
Apply:  Pos: [164, 178] xx => I
Apply:  Pos: [167, 190] cc => I
Apply:  Pos: [170, 173] cc => I
Apply:  Pos: [183, 200] cc => I
Apply:  Pos: [186, 206, 209] xcx => c
Apply:  Pos: [191, 197] xx => I
Apply:  Pos: [199, 205, 212] ccc => cc
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [208, 213] xx => I
Apply:  Pos: [210, 215] cc => I
Apply:  Pos: [226, 246] cc => I
Apply:  Pos: [218, 235] xx => I
Apply:  Pos: [232, 237] xx => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [255, 263] xx => I
---------------
Circuit after: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxccccccccxxcxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxccccccccxxccccxcccxxccccccxxcxxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 8], [14, 2], [18], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [4, 8], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [19, 18], [1, 14], [4, 9], [13, 6], [5, 15], [17, 19], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [11, 17], [7, 9], [0], [7, 8], [1, 6], [11, 19], [14, 17], [4], [14], [5, 15], [7, 9], [6, 11], [4, 9], [19, 18], [15, 11], [1, 6], [16, 7], [8], [5, 15], [5, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [14, 4], [18], [19], [8, 9], [13, 1], [5, 11], [1, 0], [18], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.9049010276794434

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[136, 150]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[137, 143]
[138, 158]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[17, 21, 27]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[4, 11, 19]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 62, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[87, 91, 92]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[137, 143]
[138, 158]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[136, 150]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.484285831451416

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 11, 19] xcx => c, Pos: [17, 21, 27] ccc => cc, Pos: [57, 62, 70] ccc => cc, Pos: [71, 80] xx => I, Pos: [71, 80] xx => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [87, 91, 92] ccc => cc, Pos: [136, 150] cc => I, Pos: [136, 150] cc => I, Pos: [137, 143] xx => I, Pos: [137, 143] xx => I, Pos: [138, 158] xx => I, Pos: [138, 158] xx => I]

--------End Timer [Generate Plans]:  0.01561117172241211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 11, 19] xcx => c,
 Pos: [17, 21, 27] ccc => cc,
 Pos: [57, 62, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [136, 150] cc => I,
 Pos: [137, 143] xx => I,
 Pos: [138, 158] xx => I]
Change: 9, Saving: 10

Circuit before: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxccccccccxxcxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxccccccccxxccccxcccxxccccccxxcxxxcccxcccxxcxccccccxcccccc
---------------
Apply:  Pos: [4, 11, 19] xcx => c
Apply:  Pos: [17, 21, 27] ccc => cc
Apply:  Pos: [57, 62, 70] ccc => cc
Apply:  Pos: [71, 80] xx => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [87, 91, 92] ccc => cc
Apply:  Pos: [136, 150] cc => I
Apply:  Pos: [137, 143] xx => I
Apply:  Pos: [138, 158] xx => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [5, 15], [6, 11], [4, 9], [19, 18], [5, 15], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4998970031738281

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4530398845672607

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [75, 79] cc => I, Pos: [75, 79] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [75, 79] cc => I]
Change: 1, Saving: 1

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc
---------------
Apply:  Pos: [75, 79] cc => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [4, 9], [7, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 4], [17, 18], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4530398845672607

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4217777252197266

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc
---------------
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4217777252197266

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [168] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 33 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 102 (37.78%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938072204589844

[9], [10], [2, 16], [13, 6], [17, 19], [7, 8], [5], [18], [3], [2], [7], [10, 16], [14, 17], [16], [1], [9], [15], [11, 18], [3, 19], [4, 7], [11], [14], [0, 16], [3, 19], [17, 4], [7, 9], [11], [16, 7], [4, 8], [14, 2], [13, 6], [5], [18], [6], [16, 7], [17, 4], [8, 9], [12, 13], [11], [15], [19], [2, 16], [17, 18], [4, 8], [2], [1], [17, 4], [13, 14], [5, 6], [2], [6], [8], [7], [5], [12], [11, 18], [13, 14], [1, 0], [4, 9], [17, 19], [10, 16], [5], [12], [10, 2], [7, 9], [14, 17], [13, 1], [11, 19], [0, 10], [4, 9], [1, 14], [15, 3], [1], [13], [7], [10, 2], [17, 4], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [2], [4, 9], [13, 6], [5, 15], [17, 19], [11, 18], [0, 16], [2], [16], [13, 1], [17, 4], [11, 18], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [10, 16], [11, 17], [7, 9], [0], [4, 9], [7, 8], [10, 16], [1, 6], [4, 9], [11, 19], [14, 17], [0, 10], [18, 8], [4], [14], [5, 15], [12, 13], [7, 9], [6, 11], [0, 10], [18, 8], [4, 9], [19, 18], [15, 11], [1, 6], [12, 13], [16, 7], [4], [8], [15], [5, 11], [10, 16], [13, 14], [4], [17, 19], [13, 1], [11, 18], [8, 9], [5, 15], [15], [4, 8], [13, 6], [1, 0], [7, 9], [4], [7], [6], [19, 18], [10, 16], [13, 1], [4], [16], [5], [7, 8], [13, 14], [2, 17], [11, 19], [6], [1], [4, 7], [8, 9], [3, 19], [5, 15], [11, 18], [14, 2], [7, 8], [17, 18], [14, 2], [4, 9], [8], [11], [17], [1], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [16], [18, 8], [2, 17], [12, 13], [3, 19], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [18], [3, 19], [7, 8], [1, 0], [6, 11], [14, 4], [18], [19], [8, 9], [10, 16], [13, 1], [18], [16], [17, 19], [5, 11], [7, 8], [18], [14, 4], [17, 19], [1, 0], [18], [10], [6, 11], [14, 4], [12, 5], [0, 16], [8], [2], [17, 18], [1, 0], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [18], [4], [11], [10], [13, 6], [18], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [4, 9], [18], [10], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [10], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 28, 35]
[76, 89, 98]
[141, 148, 155]
[199, 205, 212]
[216, 222, 226]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[33, 48, 50]
[135, 144, 145]
[186, 206, 209]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 75]
[69, 76, 89]
[200, 207, 216]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7969059944152832

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 15] xx => I, Pos: [0, 15] xx => I, Pos: [3, 30] cc => I, Pos: [3, 30] cc => I, Pos: [6, 31] xx => I, Pos: [6, 31] xx => I, Pos: [14, 45] xx => I, Pos: [14, 45] xx => I, Pos: [16, 39] xx => I, Pos: [16, 39] xx => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [24, 28, 35] ccc => cc, Pos: [26, 38] xx => I, Pos: [26, 38] xx => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [33, 48, 50] xcx => c, Pos: [44, 49] xx => I, Pos: [44, 49] xx => I, Pos: [47, 56] cc => I, Pos: [47, 56] cc => I, Pos: [53, 61] xx => I, Pos: [53, 61] xx => I, Pos: [54, 62] xx => I, Pos: [54, 62] xx => I, Pos: [63, 68, 75] ccc => cc, Pos: [69, 76, 89] ccc => cc, Pos: [76, 89, 98] ccc => cc, Pos: [81, 88] xx => I, Pos: [81, 88] xx => I, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [93, 99] cc => I, Pos: [93, 99] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 131] cc => I, Pos: [122, 131] cc => I, Pos: [133, 139] xx => I, Pos: [133, 139] xx => I, Pos: [135, 144, 145] xcx => c, Pos: [137, 154] cc => I, Pos: [137, 154] cc => I, Pos: [138, 160] cc => I, Pos: [138, 160] cc => I, Pos: [141, 148, 155] ccc => cc, Pos: [150, 156] xx => I, Pos: [150, 156] xx => I, Pos: [152, 163] xx => I, Pos: [152, 163] xx => I, Pos: [164, 178] xx => I, Pos: [164, 178] xx => I, Pos: [167, 190] cc => I, Pos: [167, 190] cc => I, Pos: [170, 173] cc => I, Pos: [170, 173] cc => I, Pos: [183, 200] cc => I, Pos: [183, 200] cc => I, Pos: [186, 206, 209] xcx => c, Pos: [191, 197] xx => I, Pos: [191, 197] xx => I, Pos: [197, 203] xx => I, Pos: [197, 203] xx => I, Pos: [199, 205, 212] ccc => cc, Pos: [200, 207, 216] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [203, 208] xx => I, Pos: [203, 208] xx => I, Pos: [208, 213] xx => I, Pos: [208, 213] xx => I, Pos: [210, 215] cc => I, Pos: [210, 215] cc => I, Pos: [213, 217] xx => I, Pos: [213, 217] xx => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [216, 222, 226] ccc => cc, Pos: [218, 235] xx => I, Pos: [218, 235] xx => I, Pos: [220, 227] cc => I, Pos: [220, 227] cc => I, Pos: [226, 246] cc => I, Pos: [226, 246] cc => I, Pos: [232, 237] xx => I, Pos: [232, 237] xx => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [255, 263] xx => I, Pos: [255, 263] xx => I]

--------End Timer [Generate Plans]:  0.10938191413879395

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [20, 26] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [69, 76, 89] ccc => cc,
 Pos: [81, 88] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [183, 200] cc => I,
 Pos: [186, 206, 209] xcx => c,
 Pos: [197, 203] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [214, 220] cc => I,
 Pos: [208, 213] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [226, 246] cc => I,
 Pos: [218, 235] xx => I,
 Pos: [232, 237] xx => I,
 Pos: [249, 253] cc => I,
 Pos: [255, 263] xx => I]
Change: 45, Saving: 45

Circuit before: xxccccxxxxxccxxxxcccxxccccxccccxxxccccxxxcccxxcccxxxxxxccccccxxcccccccccxxxccccccxxxxcccxccccccxxcccxcccxccccxcccccccccxxccccccccccccxxxcccxcccccxccccxxxcccxxxccccxxccccccccccxxxxcccccccxccccxxccccxcccccxxcccxxcccxcccxxccccxxcccccccxxxxcxxxxcccxcccccxxccxxccccccxxcccccc
---------------
Apply:  Pos: [0, 15] xx => I
Apply:  Pos: [3, 30] cc => I
Apply:  Pos: [6, 31] xx => I
Apply:  Pos: [14, 45] xx => I
Apply:  Pos: [16, 39] xx => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [24, 28, 35] ccc => cc
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [33, 48, 50] xcx => c
Apply:  Pos: [44, 49] xx => I
Apply:  Pos: [47, 56] cc => I
Apply:  Pos: [53, 61] xx => I
Apply:  Pos: [54, 62] xx => I
Apply:  Pos: [63, 68, 75] ccc => cc
Apply:  Pos: [69, 76, 89] ccc => cc
Apply:  Pos: [81, 88] xx => I
Apply:  Pos: [93, 99] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 131] cc => I
Apply:  Pos: [133, 139] xx => I
Apply:  Pos: [135, 144, 145] xcx => c
Apply:  Pos: [137, 154] cc => I
Apply:  Pos: [138, 160] cc => I
Apply:  Pos: [141, 148, 155] ccc => cc
Apply:  Pos: [150, 156] xx => I
Apply:  Pos: [152, 163] xx => I
Apply:  Pos: [164, 178] xx => I
Apply:  Pos: [167, 190] cc => I
Apply:  Pos: [170, 173] cc => I
Apply:  Pos: [183, 200] cc => I
Apply:  Pos: [186, 206, 209] xcx => c
Apply:  Pos: [197, 203] xx => I
Apply:  Pos: [199, 205, 212] ccc => cc
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [208, 213] xx => I
Apply:  Pos: [210, 215] cc => I
Apply:  Pos: [226, 246] cc => I
Apply:  Pos: [218, 235] xx => I
Apply:  Pos: [232, 237] xx => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [255, 263] xx => I
---------------
Circuit after: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxcccccccxxccxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxxccccccccxccccxcccxxccccccxxcxxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 8], [14, 2], [18], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [4, 8], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 4], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [19, 18], [1, 14], [13, 6], [5, 15], [17, 19], [0, 16], [2], [16], [13, 1], [17, 4], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [11, 17], [7, 9], [0], [7, 8], [1, 6], [11, 19], [14, 17], [4], [14], [5, 15], [7, 9], [6, 11], [4, 9], [19, 18], [15, 11], [1, 6], [16, 7], [8], [5, 15], [5, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [14, 4], [19], [8, 9], [13, 1], [5, 11], [1, 0], [18], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.9062879085540771

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[137, 150]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[128, 143]
[138, 158]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[17, 21, 27]
[42, 48, 66]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[4, 11, 19]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 61, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[87, 91, 92]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[128, 143]
[138, 158]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[137, 150]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5155818462371826

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 11, 19] xcx => c, Pos: [17, 21, 27] ccc => cc, Pos: [42, 48, 66] ccc => cc, Pos: [57, 61, 70] ccc => cc, Pos: [71, 80] xx => I, Pos: [71, 80] xx => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [87, 91, 92] ccc => cc, Pos: [128, 143] xx => I, Pos: [128, 143] xx => I, Pos: [137, 150] cc => I, Pos: [137, 150] cc => I, Pos: [138, 158] xx => I, Pos: [138, 158] xx => I]

--------End Timer [Generate Plans]:  0.01564192771911621

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 11, 19] xcx => c,
 Pos: [17, 21, 27] ccc => cc,
 Pos: [42, 48, 66] ccc => cc,
 Pos: [57, 61, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [128, 143] xx => I,
 Pos: [137, 150] cc => I,
 Pos: [138, 158] xx => I]
Change: 10, Saving: 11

Circuit before: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxcccccccxxccxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxxccccccccxccccxcccxxccccccxxcxxxcccxcccxxcxccccccxcccccc
---------------
Apply:  Pos: [4, 11, 19] xcx => c
Apply:  Pos: [17, 21, 27] ccc => cc
Apply:  Pos: [42, 48, 66] ccc => cc
Apply:  Pos: [57, 61, 70] ccc => cc
Apply:  Pos: [71, 80] xx => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [87, 91, 92] ccc => cc
Apply:  Pos: [128, 143] xx => I
Apply:  Pos: [137, 150] cc => I
Apply:  Pos: [138, 158] xx => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.015605926513671875

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [5, 15], [6, 11], [4, 9], [19, 18], [5, 15], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.5468297004699707

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 78]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 78]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5000152587890625

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [74, 78] cc => I, Pos: [74, 78] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [74, 78] cc => I]
Change: 1, Saving: 1

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc
---------------
Apply:  Pos: [74, 78] cc => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [4, 9], [7, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 4], [17, 18], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.5000152587890625

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4062776565551758

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc
---------------
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4062776565551758

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [167] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 294

Reduced: 
 - size: 103 (38.15%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936784744262695

[9], [10], [2, 16], [13, 6], [17, 19], [7, 8], [5], [18], [3], [2], [7], [10, 16], [14, 17], [16], [1], [9], [15], [11, 18], [3, 19], [4, 7], [11], [14], [0, 16], [3, 19], [17, 4], [7, 9], [11], [16, 7], [4, 8], [14, 2], [13, 6], [5], [18], [6], [16, 7], [17, 4], [8, 9], [12, 13], [11], [15], [19], [2, 16], [17, 18], [4, 8], [2], [1], [17, 4], [13, 14], [5, 6], [2], [6], [8], [7], [5], [12], [11, 18], [13, 14], [1, 0], [4, 9], [17, 19], [10, 16], [5], [12], [10, 2], [7, 9], [14, 17], [13, 1], [11, 19], [0, 10], [4, 9], [1, 14], [15, 3], [1], [13], [7], [10, 2], [17, 4], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [2], [4, 9], [13, 6], [5, 15], [17, 19], [11, 18], [0, 16], [2], [16], [13, 1], [17, 4], [11, 18], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [10, 16], [11, 17], [7, 9], [0], [4, 9], [7, 8], [10, 16], [1, 6], [4, 9], [11, 19], [14, 17], [0, 10], [18, 8], [4], [14], [5, 15], [12, 13], [7, 9], [6, 11], [0, 10], [18, 8], [4, 9], [19, 18], [15, 11], [1, 6], [12, 13], [16, 7], [4], [8], [15], [5, 11], [10, 16], [13, 14], [4], [17, 19], [13, 1], [11, 18], [8, 9], [5, 15], [15], [4, 8], [13, 6], [1, 0], [7, 9], [4], [7], [6], [19, 18], [10, 16], [13, 1], [4], [16], [5], [7, 8], [13, 14], [2, 17], [11, 19], [6], [1], [4, 7], [8, 9], [3, 19], [5, 15], [11, 18], [14, 2], [7, 8], [17, 18], [14, 2], [4, 9], [8], [11], [17], [1], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [16], [18, 8], [2, 17], [12, 13], [3, 19], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [18], [3, 19], [7, 8], [1, 0], [6, 11], [14, 4], [18], [19], [8, 9], [10, 16], [13, 1], [18], [16], [17, 19], [5, 11], [7, 8], [18], [14, 4], [17, 19], [1, 0], [18], [10], [6, 11], [14, 4], [12, 5], [0, 16], [8], [2], [17, 18], [1, 0], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [18], [4], [11], [10], [13, 6], [18], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [4, 9], [18], [10], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [10], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 28, 35]
[76, 89, 98]
[141, 148, 155]
[199, 205, 212]
[216, 222, 226]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[33, 48, 50]
[135, 144, 145]
[186, 206, 209]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 75]
[69, 76, 89]
[200, 207, 216]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.765756368637085

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 15] xx => I, Pos: [0, 15] xx => I, Pos: [3, 30] cc => I, Pos: [3, 30] cc => I, Pos: [6, 31] xx => I, Pos: [6, 31] xx => I, Pos: [14, 45] xx => I, Pos: [14, 45] xx => I, Pos: [16, 39] xx => I, Pos: [16, 39] xx => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [24, 28, 35] ccc => cc, Pos: [26, 38] xx => I, Pos: [26, 38] xx => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [33, 48, 50] xcx => c, Pos: [44, 49] xx => I, Pos: [44, 49] xx => I, Pos: [47, 56] cc => I, Pos: [47, 56] cc => I, Pos: [53, 61] xx => I, Pos: [53, 61] xx => I, Pos: [54, 62] xx => I, Pos: [54, 62] xx => I, Pos: [63, 68, 75] ccc => cc, Pos: [69, 76, 89] ccc => cc, Pos: [76, 89, 98] ccc => cc, Pos: [81, 88] xx => I, Pos: [81, 88] xx => I, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [93, 99] cc => I, Pos: [93, 99] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 131] cc => I, Pos: [122, 131] cc => I, Pos: [133, 139] xx => I, Pos: [133, 139] xx => I, Pos: [135, 144, 145] xcx => c, Pos: [137, 154] cc => I, Pos: [137, 154] cc => I, Pos: [138, 160] cc => I, Pos: [138, 160] cc => I, Pos: [141, 148, 155] ccc => cc, Pos: [150, 156] xx => I, Pos: [150, 156] xx => I, Pos: [152, 163] xx => I, Pos: [152, 163] xx => I, Pos: [164, 178] xx => I, Pos: [164, 178] xx => I, Pos: [167, 190] cc => I, Pos: [167, 190] cc => I, Pos: [170, 173] cc => I, Pos: [170, 173] cc => I, Pos: [183, 200] cc => I, Pos: [183, 200] cc => I, Pos: [186, 206, 209] xcx => c, Pos: [191, 197] xx => I, Pos: [191, 197] xx => I, Pos: [197, 203] xx => I, Pos: [197, 203] xx => I, Pos: [199, 205, 212] ccc => cc, Pos: [200, 207, 216] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [203, 208] xx => I, Pos: [203, 208] xx => I, Pos: [208, 213] xx => I, Pos: [208, 213] xx => I, Pos: [210, 215] cc => I, Pos: [210, 215] cc => I, Pos: [213, 217] xx => I, Pos: [213, 217] xx => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [216, 222, 226] ccc => cc, Pos: [218, 235] xx => I, Pos: [218, 235] xx => I, Pos: [220, 227] cc => I, Pos: [220, 227] cc => I, Pos: [226, 246] cc => I, Pos: [226, 246] cc => I, Pos: [232, 237] xx => I, Pos: [232, 237] xx => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [255, 263] xx => I, Pos: [255, 263] xx => I]

--------End Timer [Generate Plans]:  0.10936760902404785

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [20, 26] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [76, 89, 98] ccc => cc,
 Pos: [81, 88] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [183, 200] cc => I,
 Pos: [186, 206, 209] xcx => c,
 Pos: [191, 197] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [214, 220] cc => I,
 Pos: [208, 213] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [226, 246] cc => I,
 Pos: [218, 235] xx => I,
 Pos: [232, 237] xx => I,
 Pos: [249, 253] cc => I,
 Pos: [255, 263] xx => I]
Change: 45, Saving: 45

Circuit before: xxccccxxxxxccxxxxcccxxccccxccccxxxccccxxxcccxxcccxxxxxxccccccxxcccccccccxxxccccccxxxxcccxccccccxxcccxcccxccccxcccccccccxxccccccccccccxxxcccxcccccxccccxxxcccxxxccccxxccccccccccxxxxcccccccxccccxxccccxcccccxxcccxxcccxcccxxccccxxcccccccxxxxcxxxxcccxcccccxxccxxccccccxxcccccc
---------------
Apply:  Pos: [0, 15] xx => I
Apply:  Pos: [3, 30] cc => I
Apply:  Pos: [6, 31] xx => I
Apply:  Pos: [14, 45] xx => I
Apply:  Pos: [16, 39] xx => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [24, 28, 35] ccc => cc
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [33, 48, 50] xcx => c
Apply:  Pos: [44, 49] xx => I
Apply:  Pos: [47, 56] cc => I
Apply:  Pos: [53, 61] xx => I
Apply:  Pos: [54, 62] xx => I
Apply:  Pos: [63, 68, 75] ccc => cc
Apply:  Pos: [76, 89, 98] ccc => cc
Apply:  Pos: [81, 88] xx => I
Apply:  Pos: [93, 99] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 131] cc => I
Apply:  Pos: [133, 139] xx => I
Apply:  Pos: [135, 144, 145] xcx => c
Apply:  Pos: [137, 154] cc => I
Apply:  Pos: [138, 160] cc => I
Apply:  Pos: [141, 148, 155] ccc => cc
Apply:  Pos: [150, 156] xx => I
Apply:  Pos: [152, 163] xx => I
Apply:  Pos: [164, 178] xx => I
Apply:  Pos: [167, 190] cc => I
Apply:  Pos: [170, 173] cc => I
Apply:  Pos: [183, 200] cc => I
Apply:  Pos: [186, 206, 209] xcx => c
Apply:  Pos: [191, 197] xx => I
Apply:  Pos: [199, 205, 212] ccc => cc
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [208, 213] xx => I
Apply:  Pos: [210, 215] cc => I
Apply:  Pos: [226, 246] cc => I
Apply:  Pos: [218, 235] xx => I
Apply:  Pos: [232, 237] xx => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [255, 263] xx => I
---------------
Circuit after: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxccccccccxxcxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxccccccccxxccccxcccxxccccccxxcxxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 8], [14, 2], [18], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [4, 8], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [19, 18], [1, 14], [4, 9], [13, 6], [5, 15], [17, 19], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [11, 17], [7, 9], [0], [7, 8], [1, 6], [11, 19], [14, 17], [4], [14], [5, 15], [7, 9], [6, 11], [4, 9], [19, 18], [15, 11], [1, 6], [16, 7], [8], [5, 15], [5, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [14, 4], [18], [19], [8, 9], [13, 1], [5, 11], [1, 0], [18], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.8751239776611328

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[136, 150]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[137, 143]
[138, 158]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[17, 21, 27]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[4, 11, 19]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 62, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[87, 91, 92]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[137, 143]
[138, 158]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[136, 150]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4530229568481445

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 11, 19] xcx => c, Pos: [17, 21, 27] ccc => cc, Pos: [57, 62, 70] ccc => cc, Pos: [71, 80] xx => I, Pos: [71, 80] xx => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [87, 91, 92] ccc => cc, Pos: [136, 150] cc => I, Pos: [136, 150] cc => I, Pos: [137, 143] xx => I, Pos: [137, 143] xx => I, Pos: [138, 158] xx => I, Pos: [138, 158] xx => I]

--------End Timer [Generate Plans]:  0.0158383846282959

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 11, 19] xcx => c,
 Pos: [17, 21, 27] ccc => cc,
 Pos: [57, 62, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [136, 150] cc => I,
 Pos: [137, 143] xx => I,
 Pos: [138, 158] xx => I]
Change: 9, Saving: 10

Circuit before: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxccccccccxxcxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxccccccccxxccccxcccxxccccccxxcxxxcccxcccxxcxccccccxcccccc
---------------
Apply:  Pos: [4, 11, 19] xcx => c
Apply:  Pos: [17, 21, 27] ccc => cc
Apply:  Pos: [57, 62, 70] ccc => cc
Apply:  Pos: [71, 80] xx => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [87, 91, 92] ccc => cc
Apply:  Pos: [136, 150] cc => I
Apply:  Pos: [137, 143] xx => I
Apply:  Pos: [138, 158] xx => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [5, 15], [6, 11], [4, 9], [19, 18], [5, 15], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4688613414764404

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4061353206634521

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [75, 79] cc => I, Pos: [75, 79] cc => I]

--------End Timer [Generate Plans]:  0.01564168930053711

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [75, 79] cc => I]
Change: 1, Saving: 1

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc
---------------
Apply:  Pos: [75, 79] cc => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [4, 9], [7, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 4], [17, 18], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4217770099639893

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.375159740447998

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc
---------------
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.375159740447998

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [168] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 33 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 102 (37.78%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499141693115234

[9], [10], [2, 16], [13, 6], [17, 19], [7, 8], [5], [18], [3], [2], [7], [10, 16], [14, 17], [16], [1], [9], [15], [11, 18], [3, 19], [4, 7], [11], [14], [0, 16], [3, 19], [17, 4], [7, 9], [11], [16, 7], [4, 8], [14, 2], [13, 6], [5], [18], [6], [16, 7], [17, 4], [8, 9], [12, 13], [11], [15], [19], [2, 16], [17, 18], [4, 8], [2], [1], [17, 4], [13, 14], [5, 6], [2], [6], [8], [7], [5], [12], [11, 18], [13, 14], [1, 0], [4, 9], [17, 19], [10, 16], [5], [12], [10, 2], [7, 9], [14, 17], [13, 1], [11, 19], [0, 10], [4, 9], [1, 14], [15, 3], [1], [13], [7], [10, 2], [17, 4], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [2], [4, 9], [13, 6], [5, 15], [17, 19], [11, 18], [0, 16], [2], [16], [13, 1], [17, 4], [11, 18], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [10, 16], [11, 17], [7, 9], [0], [4, 9], [7, 8], [10, 16], [1, 6], [4, 9], [11, 19], [14, 17], [0, 10], [18, 8], [4], [14], [5, 15], [12, 13], [7, 9], [6, 11], [0, 10], [18, 8], [4, 9], [19, 18], [15, 11], [1, 6], [12, 13], [16, 7], [4], [8], [15], [5, 11], [10, 16], [13, 14], [4], [17, 19], [13, 1], [11, 18], [8, 9], [5, 15], [15], [4, 8], [13, 6], [1, 0], [7, 9], [4], [7], [6], [19, 18], [10, 16], [13, 1], [4], [16], [5], [7, 8], [13, 14], [2, 17], [11, 19], [6], [1], [4, 7], [8, 9], [3, 19], [5, 15], [11, 18], [14, 2], [7, 8], [17, 18], [14, 2], [4, 9], [8], [11], [17], [1], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [16], [18, 8], [2, 17], [12, 13], [3, 19], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [18], [3, 19], [7, 8], [1, 0], [6, 11], [14, 4], [18], [19], [8, 9], [10, 16], [13, 1], [18], [16], [17, 19], [5, 11], [7, 8], [18], [14, 4], [17, 19], [1, 0], [18], [10], [6, 11], [14, 4], [12, 5], [0, 16], [8], [2], [17, 18], [1, 0], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [18], [4], [11], [10], [13, 6], [18], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [4, 9], [18], [10], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [10], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 28, 35]
[76, 89, 98]
[141, 148, 155]
[199, 205, 212]
[216, 222, 226]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[33, 48, 50]
[135, 144, 145]
[186, 206, 209]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 75]
[69, 76, 89]
[200, 207, 216]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7971549034118652

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 15] xx => I, Pos: [0, 15] xx => I, Pos: [3, 30] cc => I, Pos: [3, 30] cc => I, Pos: [6, 31] xx => I, Pos: [6, 31] xx => I, Pos: [14, 45] xx => I, Pos: [14, 45] xx => I, Pos: [16, 39] xx => I, Pos: [16, 39] xx => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [24, 28, 35] ccc => cc, Pos: [26, 38] xx => I, Pos: [26, 38] xx => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [33, 48, 50] xcx => c, Pos: [44, 49] xx => I, Pos: [44, 49] xx => I, Pos: [47, 56] cc => I, Pos: [47, 56] cc => I, Pos: [53, 61] xx => I, Pos: [53, 61] xx => I, Pos: [54, 62] xx => I, Pos: [54, 62] xx => I, Pos: [63, 68, 75] ccc => cc, Pos: [69, 76, 89] ccc => cc, Pos: [76, 89, 98] ccc => cc, Pos: [81, 88] xx => I, Pos: [81, 88] xx => I, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [93, 99] cc => I, Pos: [93, 99] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 131] cc => I, Pos: [122, 131] cc => I, Pos: [133, 139] xx => I, Pos: [133, 139] xx => I, Pos: [135, 144, 145] xcx => c, Pos: [137, 154] cc => I, Pos: [137, 154] cc => I, Pos: [138, 160] cc => I, Pos: [138, 160] cc => I, Pos: [141, 148, 155] ccc => cc, Pos: [150, 156] xx => I, Pos: [150, 156] xx => I, Pos: [152, 163] xx => I, Pos: [152, 163] xx => I, Pos: [164, 178] xx => I, Pos: [164, 178] xx => I, Pos: [167, 190] cc => I, Pos: [167, 190] cc => I, Pos: [170, 173] cc => I, Pos: [170, 173] cc => I, Pos: [183, 200] cc => I, Pos: [183, 200] cc => I, Pos: [186, 206, 209] xcx => c, Pos: [191, 197] xx => I, Pos: [191, 197] xx => I, Pos: [197, 203] xx => I, Pos: [197, 203] xx => I, Pos: [199, 205, 212] ccc => cc, Pos: [200, 207, 216] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [203, 208] xx => I, Pos: [203, 208] xx => I, Pos: [208, 213] xx => I, Pos: [208, 213] xx => I, Pos: [210, 215] cc => I, Pos: [210, 215] cc => I, Pos: [213, 217] xx => I, Pos: [213, 217] xx => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [216, 222, 226] ccc => cc, Pos: [218, 235] xx => I, Pos: [218, 235] xx => I, Pos: [220, 227] cc => I, Pos: [220, 227] cc => I, Pos: [226, 246] cc => I, Pos: [226, 246] cc => I, Pos: [232, 237] xx => I, Pos: [232, 237] xx => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [255, 263] xx => I, Pos: [255, 263] xx => I]

--------End Timer [Generate Plans]:  0.12499141693115234

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [26, 38] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [76, 89, 98] ccc => cc,
 Pos: [88, 95] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [183, 200] cc => I,
 Pos: [186, 206, 209] xcx => c,
 Pos: [191, 197] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [214, 220] cc => I,
 Pos: [203, 208] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [213, 217] xx => I,
 Pos: [216, 222, 226] ccc => cc,
 Pos: [218, 235] xx => I,
 Pos: [232, 237] xx => I,
 Pos: [253, 266] cc => I,
 Pos: [255, 263] xx => I]
Change: 46, Saving: 46

Circuit before: xxccccxxxxxccxxxxcccxxccccxccccxxxccccxxxcccxxcccxxxxxxccccccxxcccccccccxxxccccccxxxxcccxccccccxxcccxcccxccccxcccccccccxxccccccccccccxxxcccxcccccxccccxxxcccxxxccccxxccccccccccxxxxcccccccxccccxxccccxcccccxxcccxxcccxcccxxccccxxcccccccxxxxcxxxxcccxcccccxxccxxccccccxxcccccc
---------------
Apply:  Pos: [0, 15] xx => I
Apply:  Pos: [3, 30] cc => I
Apply:  Pos: [6, 31] xx => I
Apply:  Pos: [14, 45] xx => I
Apply:  Pos: [16, 39] xx => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [26, 38] xx => I
Apply:  Pos: [24, 28, 35] ccc => cc
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [33, 48, 50] xcx => c
Apply:  Pos: [44, 49] xx => I
Apply:  Pos: [47, 56] cc => I
Apply:  Pos: [53, 61] xx => I
Apply:  Pos: [54, 62] xx => I
Apply:  Pos: [63, 68, 75] ccc => cc
Apply:  Pos: [76, 89, 98] ccc => cc
Apply:  Pos: [88, 95] xx => I
Apply:  Pos: [93, 99] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 131] cc => I
Apply:  Pos: [133, 139] xx => I
Apply:  Pos: [135, 144, 145] xcx => c
Apply:  Pos: [137, 154] cc => I
Apply:  Pos: [138, 160] cc => I
Apply:  Pos: [141, 148, 155] ccc => cc
Apply:  Pos: [150, 156] xx => I
Apply:  Pos: [152, 163] xx => I
Apply:  Pos: [164, 178] xx => I
Apply:  Pos: [167, 190] cc => I
Apply:  Pos: [170, 173] cc => I
Apply:  Pos: [183, 200] cc => I
Apply:  Pos: [186, 206, 209] xcx => c
Apply:  Pos: [191, 197] xx => I
Apply:  Pos: [199, 205, 212] ccc => cc
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [203, 208] xx => I
Apply:  Pos: [210, 215] cc => I
Apply:  Pos: [213, 217] xx => I
Apply:  Pos: [216, 222, 226] ccc => cc
Apply:  Pos: [218, 235] xx => I
Apply:  Pos: [232, 237] xx => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [255, 263] xx => I
---------------
Circuit after: xcccxxxxccxccxxcccccxcccxccccxxccccccccccccccxxxcccccxxxxccccccccxcxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxccccccccxcccccccxxccccccxxcxxxcccxcccccxxcxccccccxccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [11], [14], [0, 16], [17, 8], [7, 9], [4, 8], [14, 2], [18], [5, 6], [8, 9], [12, 13], [19], [2, 16], [17, 18], [4, 8], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [4, 9], [13, 6], [5, 15], [17, 19], [0, 16], [16], [13, 1], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [11, 17], [7, 9], [0], [7, 8], [1, 6], [11, 19], [14, 17], [4], [14], [5, 15], [7, 9], [6, 11], [4, 9], [19, 18], [15, 11], [1, 6], [16, 7], [8], [5, 15], [5, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [14, 4], [19], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.9221463203430176

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[136, 148]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[137, 156]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[18, 22, 27]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[58, 63, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[87, 91, 92]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[137, 156]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[136, 148]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5471434593200684

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [18, 22, 27] ccc => cc, Pos: [58, 63, 70] ccc => cc, Pos: [71, 80] xx => I, Pos: [71, 80] xx => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [87, 91, 92] ccc => cc, Pos: [136, 148] cc => I, Pos: [136, 148] cc => I, Pos: [137, 156] xx => I, Pos: [137, 156] xx => I]

--------End Timer [Generate Plans]:  0.01561117172241211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [18, 22, 27] ccc => cc,
 Pos: [58, 63, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [136, 148] cc => I,
 Pos: [137, 156] xx => I]
Change: 7, Saving: 8

Circuit before: xcccxxxxccxccxxcccccxcccxccccxxccccccccccccccxxxcccccxxxxccccccccxcxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxccccccccxcccccccxxccccccxxcxxxcccxcccccxxcxccccccxccccc
---------------
Apply:  Pos: [18, 22, 27] ccc => cc
Apply:  Pos: [58, 63, 70] ccc => cc
Apply:  Pos: [71, 80] xx => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [87, 91, 92] ccc => cc
Apply:  Pos: [136, 148] cc => I
Apply:  Pos: [137, 156] xx => I
---------------
Circuit after: xcccxxxxccxccxxcccccxcccxcccxxccccccccccccccxxxcccccxxxxccccccccxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccccxxcxccccccxccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [11], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [18], [5, 6], [8, 9], [12, 13], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [5, 15], [6, 11], [4, 9], [19, 18], [5, 15], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.5627546310424805

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[77, 81]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[77, 81]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.469015121459961

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 81] cc => I, Pos: [77, 81] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 81] cc => I]
Change: 1, Saving: 1

Circuit before: xcccxxxxccxccxxcccccxcccxcccxxccccccccccccccxxxcccccxxxxccccccccxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccccxxcxccccccxccccc
---------------
Apply:  Pos: [77, 81] cc => I
---------------
Circuit after: xcccxxxxccxccxxcccccxcccxcccxxccccccccccccccxxxcccccxxxxccccccccxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccccxxcxccccccxccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [11], [14], [0, 16], [17, 8], [4, 9], [7, 9], [14, 2], [18], [5, 6], [8, 9], [12, 13], [19], [2, 16], [17, 4], [17, 18], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.469015121459961

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4374141693115234

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxxxxccxccxxcccccxcccxcccxxccccccccccccccxxxcccccxxxxccccccccxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccccxxcxccccccxccccc
---------------
---------------
Circuit after: xcccxxxxccxccxxcccccxcccxcccxxccccccccccccccxxxcccccxxxxccccccccxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxcccccxxcxccccccxccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [11], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [18], [5, 6], [8, 9], [12, 13], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4374141693115234

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [171] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 300

Reduced: 
 - size: 99 (36.67%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936760902404785

[9], [10], [2, 16], [13, 6], [17, 19], [7, 8], [5], [18], [3], [2], [7], [10, 16], [14, 17], [16], [1], [9], [15], [11, 18], [3, 19], [4, 7], [11], [14], [0, 16], [3, 19], [17, 4], [7, 9], [11], [16, 7], [4, 8], [14, 2], [13, 6], [5], [18], [6], [16, 7], [17, 4], [8, 9], [12, 13], [11], [15], [19], [2, 16], [17, 18], [4, 8], [2], [1], [17, 4], [13, 14], [5, 6], [2], [6], [8], [7], [5], [12], [11, 18], [13, 14], [1, 0], [4, 9], [17, 19], [10, 16], [5], [12], [10, 2], [7, 9], [14, 17], [13, 1], [11, 19], [0, 10], [4, 9], [1, 14], [15, 3], [1], [13], [7], [10, 2], [17, 4], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [2], [4, 9], [13, 6], [5, 15], [17, 19], [11, 18], [0, 16], [2], [16], [13, 1], [17, 4], [11, 18], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [10, 16], [11, 17], [7, 9], [0], [4, 9], [7, 8], [10, 16], [1, 6], [4, 9], [11, 19], [14, 17], [0, 10], [18, 8], [4], [14], [5, 15], [12, 13], [7, 9], [6, 11], [0, 10], [18, 8], [4, 9], [19, 18], [15, 11], [1, 6], [12, 13], [16, 7], [4], [8], [15], [5, 11], [10, 16], [13, 14], [4], [17, 19], [13, 1], [11, 18], [8, 9], [5, 15], [15], [4, 8], [13, 6], [1, 0], [7, 9], [4], [7], [6], [19, 18], [10, 16], [13, 1], [4], [16], [5], [7, 8], [13, 14], [2, 17], [11, 19], [6], [1], [4, 7], [8, 9], [3, 19], [5, 15], [11, 18], [14, 2], [7, 8], [17, 18], [14, 2], [4, 9], [8], [11], [17], [1], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [16], [18, 8], [2, 17], [12, 13], [3, 19], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [18], [3, 19], [7, 8], [1, 0], [6, 11], [14, 4], [18], [19], [8, 9], [10, 16], [13, 1], [18], [16], [17, 19], [5, 11], [7, 8], [18], [14, 4], [17, 19], [1, 0], [18], [10], [6, 11], [14, 4], [12, 5], [0, 16], [8], [2], [17, 18], [1, 0], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [18], [4], [11], [10], [13, 6], [18], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [4, 9], [18], [10], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [10], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 28, 35]
[76, 89, 98]
[141, 148, 155]
[199, 205, 212]
[216, 222, 226]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[33, 48, 50]
[135, 144, 145]
[186, 206, 209]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 75]
[69, 76, 89]
[200, 207, 216]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.81245756149292

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 15] xx => I, Pos: [0, 15] xx => I, Pos: [3, 30] cc => I, Pos: [3, 30] cc => I, Pos: [6, 31] xx => I, Pos: [6, 31] xx => I, Pos: [14, 45] xx => I, Pos: [14, 45] xx => I, Pos: [16, 39] xx => I, Pos: [16, 39] xx => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [24, 28, 35] ccc => cc, Pos: [26, 38] xx => I, Pos: [26, 38] xx => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [33, 48, 50] xcx => c, Pos: [44, 49] xx => I, Pos: [44, 49] xx => I, Pos: [47, 56] cc => I, Pos: [47, 56] cc => I, Pos: [53, 61] xx => I, Pos: [53, 61] xx => I, Pos: [54, 62] xx => I, Pos: [54, 62] xx => I, Pos: [63, 68, 75] ccc => cc, Pos: [69, 76, 89] ccc => cc, Pos: [76, 89, 98] ccc => cc, Pos: [81, 88] xx => I, Pos: [81, 88] xx => I, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [93, 99] cc => I, Pos: [93, 99] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 131] cc => I, Pos: [122, 131] cc => I, Pos: [133, 139] xx => I, Pos: [133, 139] xx => I, Pos: [135, 144, 145] xcx => c, Pos: [137, 154] cc => I, Pos: [137, 154] cc => I, Pos: [138, 160] cc => I, Pos: [138, 160] cc => I, Pos: [141, 148, 155] ccc => cc, Pos: [150, 156] xx => I, Pos: [150, 156] xx => I, Pos: [152, 163] xx => I, Pos: [152, 163] xx => I, Pos: [164, 178] xx => I, Pos: [164, 178] xx => I, Pos: [167, 190] cc => I, Pos: [167, 190] cc => I, Pos: [170, 173] cc => I, Pos: [170, 173] cc => I, Pos: [183, 200] cc => I, Pos: [183, 200] cc => I, Pos: [186, 206, 209] xcx => c, Pos: [191, 197] xx => I, Pos: [191, 197] xx => I, Pos: [197, 203] xx => I, Pos: [197, 203] xx => I, Pos: [199, 205, 212] ccc => cc, Pos: [200, 207, 216] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [203, 208] xx => I, Pos: [203, 208] xx => I, Pos: [208, 213] xx => I, Pos: [208, 213] xx => I, Pos: [210, 215] cc => I, Pos: [210, 215] cc => I, Pos: [213, 217] xx => I, Pos: [213, 217] xx => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [216, 222, 226] ccc => cc, Pos: [218, 235] xx => I, Pos: [218, 235] xx => I, Pos: [220, 227] cc => I, Pos: [220, 227] cc => I, Pos: [226, 246] cc => I, Pos: [226, 246] cc => I, Pos: [232, 237] xx => I, Pos: [232, 237] xx => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [255, 263] xx => I, Pos: [255, 263] xx => I]

--------End Timer [Generate Plans]:  0.10936784744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [20, 26] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [76, 89, 98] ccc => cc,
 Pos: [81, 88] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [200, 207, 216] ccc => cc,
 Pos: [186, 206, 209] xcx => c,
 Pos: [191, 197] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [203, 208] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [213, 217] xx => I,
 Pos: [218, 235] xx => I,
 Pos: [220, 227] cc => I,
 Pos: [226, 246] cc => I,
 Pos: [232, 237] xx => I,
 Pos: [249, 253] cc => I,
 Pos: [255, 263] xx => I]
Change: 47, Saving: 47

Circuit before: xxccccxxxxxccxxxxcccxxccccxccccxxxccccxxxcccxxcccxxxxxxccccccxxcccccccccxxxccccccxxxxcccxccccccxxcccxcccxccccxcccccccccxxccccccccccccxxxcccxcccccxccccxxxcccxxxccccxxccccccccccxxxxcccccccxccccxxccccxcccccxxcccxxcccxcccxxccccxxcccccccxxxxcxxxxcccxcccccxxccxxccccccxxcccccc
---------------
Apply:  Pos: [0, 15] xx => I
Apply:  Pos: [3, 30] cc => I
Apply:  Pos: [6, 31] xx => I
Apply:  Pos: [14, 45] xx => I
Apply:  Pos: [16, 39] xx => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [24, 28, 35] ccc => cc
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [33, 48, 50] xcx => c
Apply:  Pos: [44, 49] xx => I
Apply:  Pos: [47, 56] cc => I
Apply:  Pos: [53, 61] xx => I
Apply:  Pos: [54, 62] xx => I
Apply:  Pos: [63, 68, 75] ccc => cc
Apply:  Pos: [76, 89, 98] ccc => cc
Apply:  Pos: [81, 88] xx => I
Apply:  Pos: [93, 99] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 131] cc => I
Apply:  Pos: [133, 139] xx => I
Apply:  Pos: [135, 144, 145] xcx => c
Apply:  Pos: [137, 154] cc => I
Apply:  Pos: [138, 160] cc => I
Apply:  Pos: [141, 148, 155] ccc => cc
Apply:  Pos: [150, 156] xx => I
Apply:  Pos: [152, 163] xx => I
Apply:  Pos: [164, 178] xx => I
Apply:  Pos: [167, 190] cc => I
Apply:  Pos: [170, 173] cc => I
Apply:  Pos: [200, 207, 216] ccc => cc
Apply:  Pos: [186, 206, 209] xcx => c
Apply:  Pos: [191, 197] xx => I
Apply:  Pos: [199, 205, 212] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [203, 208] xx => I
Apply:  Pos: [210, 215] cc => I
Apply:  Pos: [213, 217] xx => I
Apply:  Pos: [218, 235] xx => I
Apply:  Pos: [220, 227] cc => I
Apply:  Pos: [226, 246] cc => I
Apply:  Pos: [232, 237] xx => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [255, 263] xx => I
---------------
Circuit after: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxccccccccxxcxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxcccccccccccxccccccccxccccccxxcccccxxcxxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 8], [14, 2], [18], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [4, 8], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [19, 18], [1, 14], [4, 9], [13, 6], [5, 15], [17, 19], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [11, 17], [7, 9], [0], [7, 8], [1, 6], [11, 19], [14, 17], [4], [14], [5, 15], [7, 9], [6, 11], [4, 9], [19, 18], [15, 11], [1, 6], [16, 7], [8], [5, 15], [5, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [13, 1], [6, 11], [19], [8, 9], [1, 0], [5, 11], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.9218254089355469

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[99, 122]
[137, 141]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[138, 155]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[17, 21, 27]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[4, 11, 19]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 62, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[87, 91, 92]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[138, 155]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[99, 122]
[137, 141]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.501030683517456

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 11, 19] xcx => c, Pos: [17, 21, 27] ccc => cc, Pos: [57, 62, 70] ccc => cc, Pos: [71, 80] xx => I, Pos: [71, 80] xx => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [87, 91, 92] ccc => cc, Pos: [99, 122] cc => I, Pos: [99, 122] cc => I, Pos: [137, 141] cc => I, Pos: [137, 141] cc => I, Pos: [138, 155] xx => I, Pos: [138, 155] xx => I]

--------End Timer [Generate Plans]:  0.015006065368652344

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 11, 19] xcx => c,
 Pos: [17, 21, 27] ccc => cc,
 Pos: [57, 62, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [99, 122] cc => I,
 Pos: [137, 141] cc => I,
 Pos: [138, 155] xx => I]
Change: 9, Saving: 10

Circuit before: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxccccccccxxcxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxcccccccccccxccccccccxccccccxxcccccxxcxxxcccxcccxxcxccccccxcccccc
---------------
Apply:  Pos: [4, 11, 19] xcx => c
Apply:  Pos: [17, 21, 27] ccc => cc
Apply:  Pos: [57, 62, 70] ccc => cc
Apply:  Pos: [71, 80] xx => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [87, 91, 92] ccc => cc
Apply:  Pos: [99, 122] cc => I
Apply:  Pos: [137, 141] cc => I
Apply:  Pos: [138, 155] xx => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccccxccccccccxcxxccccccccccxxxccccccccccxccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [5, 15], [6, 11], [4, 9], [19, 18], [5, 15], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [13, 1], [8, 9], [1, 0], [5, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.5160367488861084

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3746881484985352

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [75, 79] cc => I, Pos: [75, 79] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [75, 79] cc => I]
Change: 1, Saving: 1

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccccxccccccccxcxxccccccccccxxxccccccccccxccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc
---------------
Apply:  Pos: [75, 79] cc => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccxccccccccxcxxccccccccccxxxccccccccccxccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [4, 9], [7, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 4], [17, 18], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [13, 1], [8, 9], [1, 0], [5, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.3746881484985352

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3281967639923096

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccxccccccccxcxxccccccccccxxxccccccccccxccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc
---------------
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccxccccccccxcxxccccccccccxxxccccccccccxccccccccccccxxcccccxxcxxcccxcccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [13, 1], [8, 9], [1, 0], [5, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.3281967639923096

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [165] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 290

Reduced: 
 - size: 105 (38.89%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10937166213989258

[9], [10], [2, 16], [13, 6], [17, 19], [7, 8], [5], [18], [3], [2], [7], [10, 16], [14, 17], [16], [1], [9], [15], [11, 18], [3, 19], [4, 7], [11], [14], [0, 16], [3, 19], [17, 4], [7, 9], [11], [16, 7], [4, 8], [14, 2], [13, 6], [5], [18], [6], [16, 7], [17, 4], [8, 9], [12, 13], [11], [15], [19], [2, 16], [17, 18], [4, 8], [2], [1], [17, 4], [13, 14], [5, 6], [2], [6], [8], [7], [5], [12], [11, 18], [13, 14], [1, 0], [4, 9], [17, 19], [10, 16], [5], [12], [10, 2], [7, 9], [14, 17], [13, 1], [11, 19], [0, 10], [4, 9], [1, 14], [15, 3], [1], [13], [7], [10, 2], [17, 4], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [2], [4, 9], [13, 6], [5, 15], [17, 19], [11, 18], [0, 16], [2], [16], [13, 1], [17, 4], [11, 18], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [10, 16], [11, 17], [7, 9], [0], [4, 9], [7, 8], [10, 16], [1, 6], [4, 9], [11, 19], [14, 17], [0, 10], [18, 8], [4], [14], [5, 15], [12, 13], [7, 9], [6, 11], [0, 10], [18, 8], [4, 9], [19, 18], [15, 11], [1, 6], [12, 13], [16, 7], [4], [8], [15], [5, 11], [10, 16], [13, 14], [4], [17, 19], [13, 1], [11, 18], [8, 9], [5, 15], [15], [4, 8], [13, 6], [1, 0], [7, 9], [4], [7], [6], [19, 18], [10, 16], [13, 1], [4], [16], [5], [7, 8], [13, 14], [2, 17], [11, 19], [6], [1], [4, 7], [8, 9], [3, 19], [5, 15], [11, 18], [14, 2], [7, 8], [17, 18], [14, 2], [4, 9], [8], [11], [17], [1], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [16], [18, 8], [2, 17], [12, 13], [3, 19], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [18], [3, 19], [7, 8], [1, 0], [6, 11], [14, 4], [18], [19], [8, 9], [10, 16], [13, 1], [18], [16], [17, 19], [5, 11], [7, 8], [18], [14, 4], [17, 19], [1, 0], [18], [10], [6, 11], [14, 4], [12, 5], [0, 16], [8], [2], [17, 18], [1, 0], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [18], [4], [11], [10], [13, 6], [18], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [4, 9], [18], [10], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [10], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 28, 35]
[76, 89, 98]
[141, 148, 155]
[199, 205, 212]
[216, 222, 226]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[33, 48, 50]
[135, 144, 145]
[186, 206, 209]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 75]
[69, 76, 89]
[200, 207, 216]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.8125550746917725

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 15] xx => I, Pos: [0, 15] xx => I, Pos: [3, 30] cc => I, Pos: [3, 30] cc => I, Pos: [6, 31] xx => I, Pos: [6, 31] xx => I, Pos: [14, 45] xx => I, Pos: [14, 45] xx => I, Pos: [16, 39] xx => I, Pos: [16, 39] xx => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [24, 28, 35] ccc => cc, Pos: [26, 38] xx => I, Pos: [26, 38] xx => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [33, 48, 50] xcx => c, Pos: [44, 49] xx => I, Pos: [44, 49] xx => I, Pos: [47, 56] cc => I, Pos: [47, 56] cc => I, Pos: [53, 61] xx => I, Pos: [53, 61] xx => I, Pos: [54, 62] xx => I, Pos: [54, 62] xx => I, Pos: [63, 68, 75] ccc => cc, Pos: [69, 76, 89] ccc => cc, Pos: [76, 89, 98] ccc => cc, Pos: [81, 88] xx => I, Pos: [81, 88] xx => I, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [93, 99] cc => I, Pos: [93, 99] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 131] cc => I, Pos: [122, 131] cc => I, Pos: [133, 139] xx => I, Pos: [133, 139] xx => I, Pos: [135, 144, 145] xcx => c, Pos: [137, 154] cc => I, Pos: [137, 154] cc => I, Pos: [138, 160] cc => I, Pos: [138, 160] cc => I, Pos: [141, 148, 155] ccc => cc, Pos: [150, 156] xx => I, Pos: [150, 156] xx => I, Pos: [152, 163] xx => I, Pos: [152, 163] xx => I, Pos: [164, 178] xx => I, Pos: [164, 178] xx => I, Pos: [167, 190] cc => I, Pos: [167, 190] cc => I, Pos: [170, 173] cc => I, Pos: [170, 173] cc => I, Pos: [183, 200] cc => I, Pos: [183, 200] cc => I, Pos: [186, 206, 209] xcx => c, Pos: [191, 197] xx => I, Pos: [191, 197] xx => I, Pos: [197, 203] xx => I, Pos: [197, 203] xx => I, Pos: [199, 205, 212] ccc => cc, Pos: [200, 207, 216] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [203, 208] xx => I, Pos: [203, 208] xx => I, Pos: [208, 213] xx => I, Pos: [208, 213] xx => I, Pos: [210, 215] cc => I, Pos: [210, 215] cc => I, Pos: [213, 217] xx => I, Pos: [213, 217] xx => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [216, 222, 226] ccc => cc, Pos: [218, 235] xx => I, Pos: [218, 235] xx => I, Pos: [220, 227] cc => I, Pos: [220, 227] cc => I, Pos: [226, 246] cc => I, Pos: [226, 246] cc => I, Pos: [232, 237] xx => I, Pos: [232, 237] xx => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [255, 263] xx => I, Pos: [255, 263] xx => I]

--------End Timer [Generate Plans]:  0.10935354232788086

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [20, 26] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [76, 89, 98] ccc => cc,
 Pos: [81, 88] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [183, 200] cc => I,
 Pos: [186, 206, 209] xcx => c,
 Pos: [191, 197] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [214, 220] cc => I,
 Pos: [203, 208] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [213, 217] xx => I,
 Pos: [226, 246] cc => I,
 Pos: [218, 235] xx => I,
 Pos: [232, 237] xx => I,
 Pos: [253, 266] cc => I,
 Pos: [255, 263] xx => I]
Change: 46, Saving: 46

Circuit before: xxccccxxxxxccxxxxcccxxccccxccccxxxccccxxxcccxxcccxxxxxxccccccxxcccccccccxxxccccccxxxxcccxccccccxxcccxcccxccccxcccccccccxxccccccccccccxxxcccxcccccxccccxxxcccxxxccccxxccccccccccxxxxcccccccxccccxxccccxcccccxxcccxxcccxcccxxccccxxcccccccxxxxcxxxxcccxcccccxxccxxccccccxxcccccc
---------------
Apply:  Pos: [0, 15] xx => I
Apply:  Pos: [3, 30] cc => I
Apply:  Pos: [6, 31] xx => I
Apply:  Pos: [14, 45] xx => I
Apply:  Pos: [16, 39] xx => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [24, 28, 35] ccc => cc
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [33, 48, 50] xcx => c
Apply:  Pos: [44, 49] xx => I
Apply:  Pos: [47, 56] cc => I
Apply:  Pos: [53, 61] xx => I
Apply:  Pos: [54, 62] xx => I
Apply:  Pos: [63, 68, 75] ccc => cc
Apply:  Pos: [76, 89, 98] ccc => cc
Apply:  Pos: [81, 88] xx => I
Apply:  Pos: [93, 99] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 131] cc => I
Apply:  Pos: [133, 139] xx => I
Apply:  Pos: [135, 144, 145] xcx => c
Apply:  Pos: [137, 154] cc => I
Apply:  Pos: [138, 160] cc => I
Apply:  Pos: [141, 148, 155] ccc => cc
Apply:  Pos: [150, 156] xx => I
Apply:  Pos: [152, 163] xx => I
Apply:  Pos: [164, 178] xx => I
Apply:  Pos: [167, 190] cc => I
Apply:  Pos: [170, 173] cc => I
Apply:  Pos: [183, 200] cc => I
Apply:  Pos: [186, 206, 209] xcx => c
Apply:  Pos: [191, 197] xx => I
Apply:  Pos: [199, 205, 212] ccc => cc
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [203, 208] xx => I
Apply:  Pos: [210, 215] cc => I
Apply:  Pos: [213, 217] xx => I
Apply:  Pos: [226, 246] cc => I
Apply:  Pos: [218, 235] xx => I
Apply:  Pos: [232, 237] xx => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [255, 263] xx => I
---------------
Circuit after: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxccccccccxxcxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxccccccccxcccccccxxccccccxxcxxxcccxccccxxcxccccccxccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 8], [14, 2], [18], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [4, 8], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [19, 18], [1, 14], [4, 9], [13, 6], [5, 15], [17, 19], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [11, 17], [7, 9], [0], [7, 8], [1, 6], [11, 19], [14, 17], [4], [14], [5, 15], [7, 9], [6, 11], [4, 9], [19, 18], [15, 11], [1, 6], [16, 7], [8], [5, 15], [5, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [14, 4], [19], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.9219086170196533

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[136, 148]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[137, 156]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[17, 21, 27]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[4, 11, 19]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 62, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[87, 91, 92]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[137, 156]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[136, 148]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4999990463256836

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 11, 19] xcx => c, Pos: [17, 21, 27] ccc => cc, Pos: [57, 62, 70] ccc => cc, Pos: [71, 80] xx => I, Pos: [71, 80] xx => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [87, 91, 92] ccc => cc, Pos: [136, 148] cc => I, Pos: [136, 148] cc => I, Pos: [137, 156] xx => I, Pos: [137, 156] xx => I]

--------End Timer [Generate Plans]:  0.03125262260437012

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 11, 19] xcx => c,
 Pos: [17, 21, 27] ccc => cc,
 Pos: [57, 62, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [136, 148] cc => I,
 Pos: [137, 156] xx => I]
Change: 8, Saving: 9

Circuit before: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxccccccccxxcxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxccccccccxcccccccxxccccccxxcxxxcccxccccxxcxccccccxccccc
---------------
Apply:  Pos: [4, 11, 19] xcx => c
Apply:  Pos: [17, 21, 27] ccc => cc
Apply:  Pos: [57, 62, 70] ccc => cc
Apply:  Pos: [71, 80] xx => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [87, 91, 92] ccc => cc
Apply:  Pos: [136, 148] cc => I
Apply:  Pos: [137, 156] xx => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [5, 15], [6, 11], [4, 9], [19, 18], [5, 15], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.5312516689300537

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.499988317489624

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [75, 79] cc => I, Pos: [75, 79] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [75, 79] cc => I]
Change: 1, Saving: 1

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxccccc
---------------
Apply:  Pos: [75, 79] cc => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [4, 9], [7, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 4], [17, 18], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.499988317489624

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4376583099365234

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxccccc
---------------
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxccccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 0], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4376583099365234

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [168] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 102 (37.78%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936760902404785

[9], [10], [2, 16], [13, 6], [17, 19], [7, 8], [5], [18], [3], [2], [7], [10, 16], [14, 17], [16], [1], [9], [15], [11, 18], [3, 19], [4, 7], [11], [14], [0, 16], [3, 19], [17, 4], [7, 9], [11], [16, 7], [4, 8], [14, 2], [13, 6], [5], [18], [6], [16, 7], [17, 4], [8, 9], [12, 13], [11], [15], [19], [2, 16], [17, 18], [4, 8], [2], [1], [17, 4], [13, 14], [5, 6], [2], [6], [8], [7], [5], [12], [11, 18], [13, 14], [1, 0], [4, 9], [17, 19], [10, 16], [5], [12], [10, 2], [7, 9], [14, 17], [13, 1], [11, 19], [0, 10], [4, 9], [1, 14], [15, 3], [1], [13], [7], [10, 2], [17, 4], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [2], [4, 9], [13, 6], [5, 15], [17, 19], [11, 18], [0, 16], [2], [16], [13, 1], [17, 4], [11, 18], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [10, 16], [11, 17], [7, 9], [0], [4, 9], [7, 8], [10, 16], [1, 6], [4, 9], [11, 19], [14, 17], [0, 10], [18, 8], [4], [14], [5, 15], [12, 13], [7, 9], [6, 11], [0, 10], [18, 8], [4, 9], [19, 18], [15, 11], [1, 6], [12, 13], [16, 7], [4], [8], [15], [5, 11], [10, 16], [13, 14], [4], [17, 19], [13, 1], [11, 18], [8, 9], [5, 15], [15], [4, 8], [13, 6], [1, 0], [7, 9], [4], [7], [6], [19, 18], [10, 16], [13, 1], [4], [16], [5], [7, 8], [13, 14], [2, 17], [11, 19], [6], [1], [4, 7], [8, 9], [3, 19], [5, 15], [11, 18], [14, 2], [7, 8], [17, 18], [14, 2], [4, 9], [8], [11], [17], [1], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [16], [18, 8], [2, 17], [12, 13], [3, 19], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [18], [3, 19], [7, 8], [1, 0], [6, 11], [14, 4], [18], [19], [8, 9], [10, 16], [13, 1], [18], [16], [17, 19], [5, 11], [7, 8], [18], [14, 4], [17, 19], [1, 0], [18], [10], [6, 11], [14, 4], [12, 5], [0, 16], [8], [2], [17, 18], [1, 0], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [18], [4], [11], [10], [13, 6], [18], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [4, 9], [18], [10], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [10], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 28, 35]
[76, 89, 98]
[141, 148, 155]
[199, 205, 212]
[216, 222, 226]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[33, 48, 50]
[135, 144, 145]
[186, 206, 209]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 75]
[69, 76, 89]
[200, 207, 216]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.8124840259552002

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 15] xx => I, Pos: [0, 15] xx => I, Pos: [3, 30] cc => I, Pos: [3, 30] cc => I, Pos: [6, 31] xx => I, Pos: [6, 31] xx => I, Pos: [14, 45] xx => I, Pos: [14, 45] xx => I, Pos: [16, 39] xx => I, Pos: [16, 39] xx => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [24, 28, 35] ccc => cc, Pos: [26, 38] xx => I, Pos: [26, 38] xx => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [33, 48, 50] xcx => c, Pos: [44, 49] xx => I, Pos: [44, 49] xx => I, Pos: [47, 56] cc => I, Pos: [47, 56] cc => I, Pos: [53, 61] xx => I, Pos: [53, 61] xx => I, Pos: [54, 62] xx => I, Pos: [54, 62] xx => I, Pos: [63, 68, 75] ccc => cc, Pos: [69, 76, 89] ccc => cc, Pos: [76, 89, 98] ccc => cc, Pos: [81, 88] xx => I, Pos: [81, 88] xx => I, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [93, 99] cc => I, Pos: [93, 99] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 131] cc => I, Pos: [122, 131] cc => I, Pos: [133, 139] xx => I, Pos: [133, 139] xx => I, Pos: [135, 144, 145] xcx => c, Pos: [137, 154] cc => I, Pos: [137, 154] cc => I, Pos: [138, 160] cc => I, Pos: [138, 160] cc => I, Pos: [141, 148, 155] ccc => cc, Pos: [150, 156] xx => I, Pos: [150, 156] xx => I, Pos: [152, 163] xx => I, Pos: [152, 163] xx => I, Pos: [164, 178] xx => I, Pos: [164, 178] xx => I, Pos: [167, 190] cc => I, Pos: [167, 190] cc => I, Pos: [170, 173] cc => I, Pos: [170, 173] cc => I, Pos: [183, 200] cc => I, Pos: [183, 200] cc => I, Pos: [186, 206, 209] xcx => c, Pos: [191, 197] xx => I, Pos: [191, 197] xx => I, Pos: [197, 203] xx => I, Pos: [197, 203] xx => I, Pos: [199, 205, 212] ccc => cc, Pos: [200, 207, 216] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [203, 208] xx => I, Pos: [203, 208] xx => I, Pos: [208, 213] xx => I, Pos: [208, 213] xx => I, Pos: [210, 215] cc => I, Pos: [210, 215] cc => I, Pos: [213, 217] xx => I, Pos: [213, 217] xx => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [216, 222, 226] ccc => cc, Pos: [218, 235] xx => I, Pos: [218, 235] xx => I, Pos: [220, 227] cc => I, Pos: [220, 227] cc => I, Pos: [226, 246] cc => I, Pos: [226, 246] cc => I, Pos: [232, 237] xx => I, Pos: [232, 237] xx => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [255, 263] xx => I, Pos: [255, 263] xx => I]

--------End Timer [Generate Plans]:  0.12499070167541504

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [20, 26] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [76, 89, 98] ccc => cc,
 Pos: [88, 95] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [200, 207, 216] ccc => cc,
 Pos: [186, 206, 209] xcx => c,
 Pos: [191, 197] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [214, 220] cc => I,
 Pos: [203, 208] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [213, 217] xx => I,
 Pos: [218, 235] xx => I,
 Pos: [226, 246] cc => I,
 Pos: [232, 237] xx => I,
 Pos: [253, 266] cc => I,
 Pos: [255, 263] xx => I]
Change: 46, Saving: 46

Circuit before: xxccccxxxxxccxxxxcccxxccccxccccxxxccccxxxcccxxcccxxxxxxccccccxxcccccccccxxxccccccxxxxcccxccccccxxcccxcccxccccxcccccccccxxccccccccccccxxxcccxcccccxccccxxxcccxxxccccxxccccccccccxxxxcccccccxccccxxccccxcccccxxcccxxcccxcccxxccccxxcccccccxxxxcxxxxcccxcccccxxccxxccccccxxcccccc
---------------
Apply:  Pos: [0, 15] xx => I
Apply:  Pos: [3, 30] cc => I
Apply:  Pos: [6, 31] xx => I
Apply:  Pos: [14, 45] xx => I
Apply:  Pos: [16, 39] xx => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [24, 28, 35] ccc => cc
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [33, 48, 50] xcx => c
Apply:  Pos: [44, 49] xx => I
Apply:  Pos: [47, 56] cc => I
Apply:  Pos: [53, 61] xx => I
Apply:  Pos: [54, 62] xx => I
Apply:  Pos: [63, 68, 75] ccc => cc
Apply:  Pos: [76, 89, 98] ccc => cc
Apply:  Pos: [88, 95] xx => I
Apply:  Pos: [93, 99] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 131] cc => I
Apply:  Pos: [133, 139] xx => I
Apply:  Pos: [135, 144, 145] xcx => c
Apply:  Pos: [137, 154] cc => I
Apply:  Pos: [138, 160] cc => I
Apply:  Pos: [141, 148, 155] ccc => cc
Apply:  Pos: [150, 156] xx => I
Apply:  Pos: [152, 163] xx => I
Apply:  Pos: [164, 178] xx => I
Apply:  Pos: [167, 190] cc => I
Apply:  Pos: [170, 173] cc => I
Apply:  Pos: [200, 207, 216] ccc => cc
Apply:  Pos: [186, 206, 209] xcx => c
Apply:  Pos: [191, 197] xx => I
Apply:  Pos: [199, 205, 212] ccc => cc
Apply:  Pos: [214, 220] cc => I
Apply:  Pos: [203, 208] xx => I
Apply:  Pos: [210, 215] cc => I
Apply:  Pos: [213, 217] xx => I
Apply:  Pos: [218, 235] xx => I
Apply:  Pos: [226, 246] cc => I
Apply:  Pos: [232, 237] xx => I
Apply:  Pos: [253, 266] cc => I
Apply:  Pos: [255, 263] xx => I
---------------
Circuit after: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxxccccccccxcxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxcccccccccccxcccccccccxccccccxxccccccxxcxxxcccxccccxxcxccccccxccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 8], [14, 2], [18], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [4, 8], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [4, 9], [13, 6], [5, 15], [17, 19], [0, 16], [16], [13, 1], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [11, 17], [7, 9], [0], [7, 8], [1, 6], [11, 19], [14, 17], [4], [14], [5, 15], [7, 9], [6, 11], [4, 9], [19, 18], [15, 11], [1, 6], [16, 7], [8], [5, 15], [5, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [13, 1], [6, 11], [14, 4], [19], [8, 9], [1, 0], [5, 11], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.9374747276306152

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[99, 122]
[137, 142]
[138, 149]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[139, 157]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[17, 21, 27]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[4, 11, 19]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[58, 63, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[87, 91, 92]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[139, 157]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]
[99, 122]
[137, 142]
[138, 149]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5313928127288818

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 11, 19] xcx => c, Pos: [17, 21, 27] ccc => cc, Pos: [58, 63, 70] ccc => cc, Pos: [71, 80] xx => I, Pos: [71, 80] xx => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [87, 91, 92] ccc => cc, Pos: [99, 122] cc => I, Pos: [99, 122] cc => I, Pos: [137, 142] cc => I, Pos: [137, 142] cc => I, Pos: [138, 149] cc => I, Pos: [138, 149] cc => I, Pos: [139, 157] xx => I, Pos: [139, 157] xx => I]

--------End Timer [Generate Plans]:  0.015629053115844727

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 11, 19] xcx => c,
 Pos: [17, 21, 27] ccc => cc,
 Pos: [58, 63, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [99, 122] cc => I,
 Pos: [137, 142] cc => I,
 Pos: [138, 149] cc => I,
 Pos: [139, 157] xx => I]
Change: 10, Saving: 11

Circuit before: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxxccccccccxcxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxcccccccccccxcccccccccxccccccxxccccccxxcxxxcccxccccxxcxccccccxccccc
---------------
Apply:  Pos: [4, 11, 19] xcx => c
Apply:  Pos: [17, 21, 27] ccc => cc
Apply:  Pos: [58, 63, 70] ccc => cc
Apply:  Pos: [71, 80] xx => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [87, 91, 92] ccc => cc
Apply:  Pos: [99, 122] cc => I
Apply:  Pos: [137, 142] cc => I
Apply:  Pos: [138, 149] cc => I
Apply:  Pos: [139, 157] xx => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxxccccccccxcxccccxccccxcccccccxccccccccxcxxccccccccccxxxccccccccccxccccccccccccxxcccccxxcxxcccxccccxxcxccccccxccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [5, 15], [6, 11], [4, 9], [19, 18], [5, 15], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [13, 1], [8, 9], [1, 0], [5, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.5470218658447266

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[75, 79]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3906126022338867

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [75, 79] cc => I, Pos: [75, 79] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [75, 79] cc => I]
Change: 1, Saving: 1

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxxccccccccxcxccccxccccxcccccccxccccccccxcxxccccccccccxxxccccccccccxccccccccccccxxcccccxxcxxcccxccccxxcxccccccxccccc
---------------
Apply:  Pos: [75, 79] cc => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxxccccccccxcxccccxccccxcccccxccccccccxcxxccccccccccxxxccccccccccxccccccccccccxxcccccxxcxxcccxccccxxcxccccccxccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [4, 9], [7, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 4], [17, 18], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [13, 1], [8, 9], [1, 0], [5, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.3906126022338867

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.3440723419189453

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxxccccccccxcxccccxccccxcccccxccccccccxcxxccccccccccxxxccccccccccxccccccccccccxxcccccxxcxxcccxccccxxcxccccccxccccc
---------------
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxxccccccccxcxccccxccccxcccccxccccccccxcxxccccccccccxxxccccccccccxccccccccccccxxcccccxxcxxcccxccccxxcxccccccxccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [4, 9], [1, 14], [15, 3], [1], [13], [7], [17, 9], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [17, 19], [1, 14], [4, 9], [13, 6], [5, 15], [19, 18], [0, 16], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [13, 1], [8, 9], [1, 0], [5, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.3440723419189453

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [165] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 290

Reduced: 
 - size: 105 (38.89%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12488436698913574

[9], [10], [2, 16], [13, 6], [17, 19], [7, 8], [5], [18], [3], [2], [7], [10, 16], [14, 17], [16], [1], [9], [15], [11, 18], [3, 19], [4, 7], [11], [14], [0, 16], [3, 19], [17, 4], [7, 9], [11], [16, 7], [4, 8], [14, 2], [13, 6], [5], [18], [6], [16, 7], [17, 4], [8, 9], [12, 13], [11], [15], [19], [2, 16], [17, 18], [4, 8], [2], [1], [17, 4], [13, 14], [5, 6], [2], [6], [8], [7], [5], [12], [11, 18], [13, 14], [1, 0], [4, 9], [17, 19], [10, 16], [5], [12], [10, 2], [7, 9], [14, 17], [13, 1], [11, 19], [0, 10], [4, 9], [1, 14], [15, 3], [1], [13], [7], [10, 2], [17, 4], [6, 14], [3, 19], [18, 8], [12, 5], [2], [15], [5], [10], [6, 11], [19, 18], [1, 14], [2], [4, 9], [13, 6], [5, 15], [17, 19], [11, 18], [0, 16], [2], [16], [13, 1], [17, 4], [11, 18], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [10, 16], [11, 17], [7, 9], [0], [4, 9], [7, 8], [10, 16], [1, 6], [4, 9], [11, 19], [14, 17], [0, 10], [18, 8], [4], [14], [5, 15], [12, 13], [7, 9], [6, 11], [0, 10], [18, 8], [4, 9], [19, 18], [15, 11], [1, 6], [12, 13], [16, 7], [4], [8], [15], [5, 11], [10, 16], [13, 14], [4], [17, 19], [13, 1], [11, 18], [8, 9], [5, 15], [15], [4, 8], [13, 6], [1, 0], [7, 9], [4], [7], [6], [19, 18], [10, 16], [13, 1], [4], [16], [5], [7, 8], [13, 14], [2, 17], [11, 19], [6], [1], [4, 7], [8, 9], [3, 19], [5, 15], [11, 18], [14, 2], [7, 8], [17, 18], [14, 2], [4, 9], [8], [11], [17], [1], [14, 4], [16, 7], [7, 8], [13, 14], [1, 0], [5, 11], [2, 4], [16], [18, 8], [2, 17], [12, 13], [3, 19], [18], [7], [4, 8], [6, 15], [1, 14], [11, 19], [18], [3, 19], [7, 8], [1, 0], [6, 11], [14, 4], [18], [19], [8, 9], [10, 16], [13, 1], [18], [16], [17, 19], [5, 11], [7, 8], [18], [14, 4], [17, 19], [1, 0], [18], [10], [6, 11], [14, 4], [12, 5], [0, 16], [8], [2], [17, 18], [1, 0], [14, 4], [5, 6], [18, 8], [1, 6], [7, 9], [18], [4], [11], [10], [13, 6], [18], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [4, 9], [11], [15], [17, 18], [4, 9], [18], [10], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [10], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[24, 28, 35]
[76, 89, 98]
[141, 148, 155]
[199, 205, 212]
[216, 222, 226]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[33, 48, 50]
[135, 144, 145]
[186, 206, 209]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[63, 68, 75]
[69, 76, 89]
[200, 207, 216]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 15]
[20, 26]
[6, 31]
[26, 38]
[16, 39]
[14, 45]
[44, 49]
[53, 61]
[54, 62]
[81, 88]
[88, 95]
[133, 139]
[150, 156]
[152, 163]
[164, 178]
[191, 197]
[197, 203]
[203, 208]
[208, 213]
[213, 217]
[218, 235]
[232, 237]
[255, 263]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[18, 23]
[3, 30]
[27, 34]
[47, 56]
[93, 99]
[106, 112]
[110, 114]
[117, 125]
[118, 126]
[122, 131]
[137, 154]
[138, 160]
[170, 173]
[167, 190]
[183, 200]
[202, 214]
[210, 215]
[214, 220]
[220, 227]
[226, 246]
[249, 253]
[253, 266]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.78135347366333

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 15] xx => I, Pos: [0, 15] xx => I, Pos: [3, 30] cc => I, Pos: [3, 30] cc => I, Pos: [6, 31] xx => I, Pos: [6, 31] xx => I, Pos: [14, 45] xx => I, Pos: [14, 45] xx => I, Pos: [16, 39] xx => I, Pos: [16, 39] xx => I, Pos: [18, 23] cc => I, Pos: [18, 23] cc => I, Pos: [20, 26] xx => I, Pos: [20, 26] xx => I, Pos: [24, 28, 35] ccc => cc, Pos: [26, 38] xx => I, Pos: [26, 38] xx => I, Pos: [27, 34] cc => I, Pos: [27, 34] cc => I, Pos: [33, 48, 50] xcx => c, Pos: [44, 49] xx => I, Pos: [44, 49] xx => I, Pos: [47, 56] cc => I, Pos: [47, 56] cc => I, Pos: [53, 61] xx => I, Pos: [53, 61] xx => I, Pos: [54, 62] xx => I, Pos: [54, 62] xx => I, Pos: [63, 68, 75] ccc => cc, Pos: [69, 76, 89] ccc => cc, Pos: [76, 89, 98] ccc => cc, Pos: [81, 88] xx => I, Pos: [81, 88] xx => I, Pos: [88, 95] xx => I, Pos: [88, 95] xx => I, Pos: [93, 99] cc => I, Pos: [93, 99] cc => I, Pos: [106, 112] cc => I, Pos: [106, 112] cc => I, Pos: [110, 114] cc => I, Pos: [110, 114] cc => I, Pos: [117, 125] cc => I, Pos: [117, 125] cc => I, Pos: [118, 126] cc => I, Pos: [118, 126] cc => I, Pos: [122, 131] cc => I, Pos: [122, 131] cc => I, Pos: [133, 139] xx => I, Pos: [133, 139] xx => I, Pos: [135, 144, 145] xcx => c, Pos: [137, 154] cc => I, Pos: [137, 154] cc => I, Pos: [138, 160] cc => I, Pos: [138, 160] cc => I, Pos: [141, 148, 155] ccc => cc, Pos: [150, 156] xx => I, Pos: [150, 156] xx => I, Pos: [152, 163] xx => I, Pos: [152, 163] xx => I, Pos: [164, 178] xx => I, Pos: [164, 178] xx => I, Pos: [167, 190] cc => I, Pos: [167, 190] cc => I, Pos: [170, 173] cc => I, Pos: [170, 173] cc => I, Pos: [183, 200] cc => I, Pos: [183, 200] cc => I, Pos: [186, 206, 209] xcx => c, Pos: [191, 197] xx => I, Pos: [191, 197] xx => I, Pos: [197, 203] xx => I, Pos: [197, 203] xx => I, Pos: [199, 205, 212] ccc => cc, Pos: [200, 207, 216] ccc => cc, Pos: [202, 214] cc => I, Pos: [202, 214] cc => I, Pos: [203, 208] xx => I, Pos: [203, 208] xx => I, Pos: [208, 213] xx => I, Pos: [208, 213] xx => I, Pos: [210, 215] cc => I, Pos: [210, 215] cc => I, Pos: [213, 217] xx => I, Pos: [213, 217] xx => I, Pos: [214, 220] cc => I, Pos: [214, 220] cc => I, Pos: [216, 222, 226] ccc => cc, Pos: [218, 235] xx => I, Pos: [218, 235] xx => I, Pos: [220, 227] cc => I, Pos: [220, 227] cc => I, Pos: [226, 246] cc => I, Pos: [226, 246] cc => I, Pos: [232, 237] xx => I, Pos: [232, 237] xx => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [253, 266] cc => I, Pos: [253, 266] cc => I, Pos: [255, 263] xx => I, Pos: [255, 263] xx => I]

Plan: 1
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [20, 26] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [69, 76, 89] ccc => cc,
 Pos: [81, 88] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [183, 200] cc => I,
 Pos: [186, 206, 209] xcx => c,
 Pos: [191, 197] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [203, 208] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [213, 217] xx => I,
 Pos: [216, 222, 226] ccc => cc,
 Pos: [218, 235] xx => I,
 Pos: [220, 227] cc => I,
 Pos: [232, 237] xx => I,
 Pos: [249, 253] cc => I,
 Pos: [255, 263] xx => I]
Change: 47, Saving: 47

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10937190055847168

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 15] xx => I,
 Pos: [3, 30] cc => I,
 Pos: [6, 31] xx => I,
 Pos: [14, 45] xx => I,
 Pos: [16, 39] xx => I,
 Pos: [18, 23] cc => I,
 Pos: [20, 26] xx => I,
 Pos: [24, 28, 35] ccc => cc,
 Pos: [27, 34] cc => I,
 Pos: [33, 48, 50] xcx => c,
 Pos: [44, 49] xx => I,
 Pos: [47, 56] cc => I,
 Pos: [53, 61] xx => I,
 Pos: [54, 62] xx => I,
 Pos: [63, 68, 75] ccc => cc,
 Pos: [69, 76, 89] ccc => cc,
 Pos: [81, 88] xx => I,
 Pos: [93, 99] cc => I,
 Pos: [106, 112] cc => I,
 Pos: [110, 114] cc => I,
 Pos: [117, 125] cc => I,
 Pos: [118, 126] cc => I,
 Pos: [122, 131] cc => I,
 Pos: [133, 139] xx => I,
 Pos: [135, 144, 145] xcx => c,
 Pos: [137, 154] cc => I,
 Pos: [138, 160] cc => I,
 Pos: [141, 148, 155] ccc => cc,
 Pos: [150, 156] xx => I,
 Pos: [152, 163] xx => I,
 Pos: [164, 178] xx => I,
 Pos: [167, 190] cc => I,
 Pos: [170, 173] cc => I,
 Pos: [183, 200] cc => I,
 Pos: [186, 206, 209] xcx => c,
 Pos: [191, 197] xx => I,
 Pos: [199, 205, 212] ccc => cc,
 Pos: [202, 214] cc => I,
 Pos: [203, 208] xx => I,
 Pos: [210, 215] cc => I,
 Pos: [213, 217] xx => I,
 Pos: [216, 222, 226] ccc => cc,
 Pos: [218, 235] xx => I,
 Pos: [220, 227] cc => I,
 Pos: [232, 237] xx => I,
 Pos: [249, 253] cc => I,
 Pos: [255, 263] xx => I]
Change: 47, Saving: 47

Circuit before: xxccccxxxxxccxxxxcccxxccccxccccxxxccccxxxcccxxcccxxxxxxccccccxxcccccccccxxxccccccxxxxcccxccccccxxcccxcccxccccxcccccccccxxccccccccccccxxxcccxcccccxccccxxxcccxxxccccxxccccccccccxxxxcccccccxccccxxccccxcccccxxcccxxcccxcccxxccccxxcccccccxxxxcxxxxcccxcccccxxccxxccccccxxcccccc
---------------
Apply:  Pos: [0, 15] xx => I
Apply:  Pos: [3, 30] cc => I
Apply:  Pos: [6, 31] xx => I
Apply:  Pos: [14, 45] xx => I
Apply:  Pos: [16, 39] xx => I
Apply:  Pos: [18, 23] cc => I
Apply:  Pos: [20, 26] xx => I
Apply:  Pos: [24, 28, 35] ccc => cc
Apply:  Pos: [27, 34] cc => I
Apply:  Pos: [33, 48, 50] xcx => c
Apply:  Pos: [44, 49] xx => I
Apply:  Pos: [47, 56] cc => I
Apply:  Pos: [53, 61] xx => I
Apply:  Pos: [54, 62] xx => I
Apply:  Pos: [63, 68, 75] ccc => cc
Apply:  Pos: [69, 76, 89] ccc => cc
Apply:  Pos: [81, 88] xx => I
Apply:  Pos: [93, 99] cc => I
Apply:  Pos: [106, 112] cc => I
Apply:  Pos: [110, 114] cc => I
Apply:  Pos: [117, 125] cc => I
Apply:  Pos: [118, 126] cc => I
Apply:  Pos: [122, 131] cc => I
Apply:  Pos: [133, 139] xx => I
Apply:  Pos: [135, 144, 145] xcx => c
Apply:  Pos: [137, 154] cc => I
Apply:  Pos: [138, 160] cc => I
Apply:  Pos: [141, 148, 155] ccc => cc
Apply:  Pos: [150, 156] xx => I
Apply:  Pos: [152, 163] xx => I
Apply:  Pos: [164, 178] xx => I
Apply:  Pos: [167, 190] cc => I
Apply:  Pos: [170, 173] cc => I
Apply:  Pos: [183, 200] cc => I
Apply:  Pos: [186, 206, 209] xcx => c
Apply:  Pos: [191, 197] xx => I
Apply:  Pos: [199, 205, 212] ccc => cc
Apply:  Pos: [202, 214] cc => I
Apply:  Pos: [203, 208] xx => I
Apply:  Pos: [210, 215] cc => I
Apply:  Pos: [213, 217] xx => I
Apply:  Pos: [216, 222, 226] ccc => cc
Apply:  Pos: [218, 235] xx => I
Apply:  Pos: [220, 227] cc => I
Apply:  Pos: [232, 237] xx => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [255, 263] xx => I
---------------
Circuit after: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxcccccccxxccxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxcccccccxcccccccxxcccccxxcxxxcccxccccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [18], [3], [2], [7], [10, 16], [14, 17], [16], [11, 18], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 8], [14, 2], [18], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [4, 8], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 4], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [19, 18], [1, 14], [13, 6], [5, 15], [17, 19], [0, 16], [2], [16], [13, 1], [17, 4], [9], [2, 4], [5, 6], [19, 18], [4], [6, 15], [11, 17], [7, 9], [0], [7, 8], [1, 6], [11, 19], [14, 17], [4], [14], [5, 15], [7, 9], [6, 11], [4, 9], [19, 18], [15, 11], [1, 6], [16, 7], [8], [5, 15], [5, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [19], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [19], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.8907253742218018

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[136, 154]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[17, 21, 27]
[42, 48, 66]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[4, 11, 19]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 61, 70]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[87, 91, 92]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[71, 80]
[136, 154]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 83]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4687016010284424

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [4, 11, 19] xcx => c, Pos: [17, 21, 27] ccc => cc, Pos: [42, 48, 66] ccc => cc, Pos: [57, 61, 70] ccc => cc, Pos: [71, 80] xx => I, Pos: [71, 80] xx => I, Pos: [74, 83] cc => I, Pos: [74, 83] cc => I, Pos: [87, 91, 92] ccc => cc, Pos: [136, 154] xx => I, Pos: [136, 154] xx => I]

Plan: 1
[Pos: [4, 11, 19] xcx => c,
 Pos: [17, 21, 27] ccc => cc,
 Pos: [42, 48, 66] ccc => cc,
 Pos: [57, 61, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [136, 154] xx => I]
Change: 8, Saving: 9

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015610933303833008

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [4, 11, 19] xcx => c,
 Pos: [17, 21, 27] ccc => cc,
 Pos: [42, 48, 66] ccc => cc,
 Pos: [57, 61, 70] ccc => cc,
 Pos: [71, 80] xx => I,
 Pos: [74, 83] cc => I,
 Pos: [87, 91, 92] ccc => cc,
 Pos: [136, 154] xx => I]
Change: 8, Saving: 9

Circuit before: xcccxxxxccxccxcccccxcccxxccccxxccccccccccccccxxxcccccxxxcccccccxxccxcccxcccxccccxxccccccccxccccccccccxcxxccccccccccxxxccccccccccxcccccccxcccccccxxcccccxxcxxxcccxccccxxcxccccccxcccccc
---------------
Apply:  Pos: [4, 11, 19] xcx => c
Apply:  Pos: [17, 21, 27] ccc => cc
Apply:  Pos: [42, 48, 66] ccc => cc
Apply:  Pos: [57, 61, 70] ccc => cc
Apply:  Pos: [71, 80] xx => I
Apply:  Pos: [74, 83] cc => I
Apply:  Pos: [87, 91, 92] ccc => cc
Apply:  Pos: [136, 154] xx => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [5, 15], [6, 11], [4, 9], [19, 18], [5, 15], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.4843125343322754

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 78]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[74, 78]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.42193603515625

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [74, 78] cc => I, Pos: [74, 78] cc => I]

Plan: 1
[Pos: [74, 78] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [74, 78] cc => I]
Change: 1, Saving: 1

Circuit before: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxcccccc
---------------
Apply:  Pos: [74, 78] cc => I
---------------
Circuit after: xccccxxxccxcxccccccccxxcccxxccccccccccccccxxxcccccxxxcccccccxxcxccccxccccxcccccxcccccccccxcxxccccccccccxxxccccccccccxccccccccccccccxxcccccxxcxxcccxccccxxcxccccccxcccccc

--------End Timer [apply mapping plan]:  0.0

[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [4, 9], [7, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 4], [17, 18], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [11, 19], [3, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.42193603515625

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.375011920928955

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[10], [2, 16], [17, 19], [7, 8], [11, 18], [3], [2], [7], [10, 16], [14, 17], [16], [4, 7], [14], [0, 16], [17, 8], [7, 9], [4, 9], [14, 2], [5, 6], [8, 9], [12, 13], [11], [19], [2, 16], [17, 18], [17, 4], [8], [7], [11, 18], [1, 0], [4, 9], [17, 19], [10, 16], [0, 10], [7, 9], [14, 17], [13, 1], [11, 19], [10, 2], [17, 9], [1, 14], [15, 3], [1], [13], [7], [4, 9], [6, 14], [3, 19], [18, 8], [12, 5], [15], [5], [10], [6, 11], [17, 19], [1, 14], [13, 6], [5, 15], [19, 18], [0, 16], [2], [16], [13, 1], [9], [2, 4], [5, 6], [6, 15], [11, 17], [0], [7, 8], [1, 6], [11, 19], [14, 17], [14], [6, 11], [4, 9], [19, 18], [1, 6], [16, 7], [8], [15, 11], [17, 19], [13, 0], [11, 18], [8, 9], [4, 8], [13, 6], [1, 0], [7, 9], [7], [19, 18], [16], [5], [7, 8], [2, 17], [11, 19], [4, 7], [8, 9], [5, 15], [11, 18], [7, 8], [17, 18], [4, 9], [8], [11], [17], [14, 4], [16, 7], [7, 8], [13, 14], [5, 11], [2, 4], [10, 16], [18, 8], [2, 17], [12, 13], [7], [4, 8], [6, 15], [1, 14], [3, 19], [11, 19], [7, 9], [6, 11], [8, 9], [13, 1], [5, 11], [1, 16], [6, 11], [12, 5], [0, 16], [8], [2], [17, 18], [5, 6], [18, 8], [1, 6], [7, 9], [4], [11], [13, 6], [16], [3], [5, 11], [14, 17], [7, 8], [14], [11, 18], [1, 0], [10, 16], [2, 17], [11], [15], [17, 18], [18], [4, 7], [1, 14], [0, 16], [3, 19], [5, 15], [11, 17], [12], [18, 8], [2, 16], [4, 9], [6, 11], [13, 1], [14, 17], ----End Timer [Execute Mapping]:  1.375011920928955

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [168] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 33 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 102 (37.78%)
 - depth: 12 (26.67%)

