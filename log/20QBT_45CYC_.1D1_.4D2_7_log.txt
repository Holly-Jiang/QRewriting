----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12477374076843262

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [6, 17], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [6, 17], [12, 4], [16], [17], [8], [5], [13, 11], [7, 14], [4, 2], [7], [17], [4], [12], [10, 16], [2, 3], [12, 16], [18, 4], [11, 1], [17, 5], [3, 15], [16], [4], [0], [11, 19], [10, 6], [1], [14], [9], [7], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [0], [9, 15], [17, 5], [13, 11], [2], [12], [10, 6], [8, 1], [16, 17], [11, 19], [6], [2, 15], [17, 5], [10, 16], [12, 4], [11, 19], [6], [16], [11], [1], [18, 4], [2, 15], [5], [7], [15], [9], [6, 17], [8, 11], [0, 10], [17], [12], [18], [6], [10, 16], [8, 13], [11, 1], [15], [16, 17], [1, 9], [0, 12], [19, 2], [8, 13], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [2], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [18], [19], [12, 16], [5, 3], [6, 17], [13, 1], [19], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [18, 8], [15], [13], [14], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [18, 8], [11, 19], [7, 0], [4, 2], [10], [14], [12, 16], [19, 17], [4, 11], [7, 0], [7], [0, 10], [16, 17], [13, 11], [18, 12], [10], [3], [11], [1], [19, 5], [2, 15], [0, 16], [18, 4], [8, 13], [10], [8], [13, 1], [4, 11], [9, 3], [3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [14, 4], [0], [8], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [0, 10], [13, 11], [12, 16], [2, 15], [0, 10], [14, 4], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [16], [14, 4], [3, 15], [2, 9], [8, 1], [0, 12], [16], [19], [1, 9], [13, 11], [7, 0], [10], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [8, 1], [1], [10], [16, 5], [2, 3], [7, 0], [1], [14], [18], [10, 16], [8, 11], [5, 3], [19, 2], [6], [12, 10], [19, 5], [4, 2], [11, 1], [12, 10], [3, 15], [8, 11], [4, 2], [19, 17], [13, 1], [9], [14, 12], [13, 1], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [13, 1], [10, 16], [11, 2], [14, 18], [7], [17], [0, 16], [13, 1], [19, 5], [18], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[192, 198, 201]
[204, 208, 219]
[229, 236, 239]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[31, 36, 41]
[54, 61, 65]
[45, 62, 74]
[156, 168, 169]
[227, 255, 261]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 63, 67]
[138, 143, 160]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[253, 258, 263]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6722631454467773

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [23, 30] xx => I, Pos: [23, 30] xx => I, Pos: [29, 48] xx => I, Pos: [29, 48] xx => I, Pos: [31, 36, 41] xcx => c, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [42, 55] xx => I, Pos: [42, 55] xx => I, Pos: [45, 62, 74] xcx => c, Pos: [48, 78] xx => I, Pos: [48, 78] xx => I, Pos: [54, 61, 65] xcx => c, Pos: [57, 63, 67] ccc => cc, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 71] xx => I, Pos: [65, 71] xx => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [79, 91] xx => I, Pos: [79, 91] xx => I, Pos: [86, 113] xx => I, Pos: [86, 113] xx => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [99, 105] xx => I, Pos: [99, 105] xx => I, Pos: [105, 120] xx => I, Pos: [105, 120] xx => I, Pos: [114, 119] xx => I, Pos: [114, 119] xx => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [131, 145] xx => I, Pos: [131, 145] xx => I, Pos: [138, 143, 160] ccc => cc, Pos: [142, 149] cc => I, Pos: [142, 149] cc => I, Pos: [155, 164] xx => I, Pos: [155, 164] xx => I, Pos: [156, 168, 169] xcx => c, Pos: [160, 173] cc => I, Pos: [160, 173] cc => I, Pos: [165, 178] xx => I, Pos: [165, 178] xx => I, Pos: [169, 179] xx => I, Pos: [169, 179] xx => I, Pos: [176, 192] cc => I, Pos: [176, 192] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 198, 201] ccc => cc, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 208, 219] ccc => cc, Pos: [210, 224] cc => I, Pos: [210, 224] cc => I, Pos: [211, 221] xx => I, Pos: [211, 221] xx => I, Pos: [220, 225] xx => I, Pos: [220, 225] xx => I, Pos: [227, 255, 261] xcx => c, Pos: [229, 236, 239] ccc => cc, Pos: [233, 237] cc => I, Pos: [233, 237] cc => I, Pos: [235, 240] cc => I, Pos: [235, 240] cc => I, Pos: [242, 245] cc => I, Pos: [242, 245] cc => I, Pos: [245, 252] cc => I, Pos: [245, 252] cc => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [253, 258, 263] ccc => cc]

Plan: 1
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [29, 48] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [38, 57] cc => I,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [54, 61, 65] xcx => c,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [99, 105] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [138, 143, 160] ccc => cc,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [156, 168, 169] xcx => c,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [242, 245] cc => I,
 Pos: [249, 253] cc => I,
 Pos: [252, 259] cc => I]
Change: 36, Saving: 102

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [29, 48] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [38, 57] cc => I,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [54, 61, 65] xcx => c,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [99, 105] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [138, 143, 160] ccc => cc,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [156, 168, 169] xcx => c,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [242, 245] cc => I,
 Pos: [249, 253] cc => I,
 Pos: [252, 259] cc => I]
Change: 36, Saving: 102

Circuit before: xxxccccxccccccccccccccxxxxcccxxxxcccccccxxxccxxxxccccxxxcccxxccccxcccccxxxxccxxxxcccxxxxcccxccccccxxccccxxccccccxxxccccxxccccccccxxxccxxxxccccccxxccccxccccxxxxcccccxxcccxxxcccccxxxxccccxxccccccccxccccxcccccxxcccxccccxcccxxcccxxxccccxccccccccccxccccccxcccccxxcccxxccccccc
---------------
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [23, 30] xx => I
Apply:  Pos: [29, 48] xx => I
Apply:  Pos: [31, 36, 41] xcx => c
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [42, 55] xx => I
Apply:  Pos: [45, 62, 74] xcx => c
Apply:  Pos: [54, 61, 65] xcx => c
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [79, 91] xx => I
Apply:  Pos: [86, 113] xx => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [99, 105] xx => I
Apply:  Pos: [114, 119] xx => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [131, 145] xx => I
Apply:  Pos: [138, 143, 160] ccc => cc
Apply:  Pos: [142, 149] cc => I
Apply:  Pos: [155, 164] xx => I
Apply:  Pos: [156, 168, 169] xcx => c
Apply:  Pos: [165, 178] xx => I
Apply:  Pos: [176, 192] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 208, 219] ccc => cc
Apply:  Pos: [210, 224] cc => I
Apply:  Pos: [211, 221] xx => I
Apply:  Pos: [220, 225] xx => I
Apply:  Pos: [227, 255, 261] xcx => c
Apply:  Pos: [229, 236, 239] ccc => cc
Apply:  Pos: [233, 237] cc => I
Apply:  Pos: [235, 240] cc => I
Apply:  Pos: [242, 245] cc => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [252, 259] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxcccccxxccccccxxccccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxccccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [13, 11], [2], [12], [16, 17], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [7], [4, 2], [10, 16], [11, 19], [2, 15], [10], [12, 16], [19, 17], [4, 11], [7], [0, 10], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [0, 16], [19, 5], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.6722631454467773

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 130]
[109, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[172, 191, 194]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 130]
[109, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.530942440032959

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [105, 114] xx => I, Pos: [105, 114] xx => I, Pos: [109, 131] cc => I, Pos: [109, 131] cc => I, Pos: [115, 130] cc => I, Pos: [115, 130] cc => I, Pos: [172, 191, 194] ccc => cc]

Plan: 1
[Pos: [105, 114] xx => I,
 Pos: [109, 131] cc => I,
 Pos: [115, 130] cc => I,
 Pos: [172, 191, 194] ccc => cc]
Change: 4, Saving: 12

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [105, 114] xx => I,
 Pos: [109, 131] cc => I,
 Pos: [115, 130] cc => I,
 Pos: [172, 191, 194] ccc => cc]
Change: 4, Saving: 12

Circuit before: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxcccccxxccccccxxccccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxccccccc
---------------
Apply:  Pos: [105, 114] xx => I
Apply:  Pos: [109, 131] cc => I
Apply:  Pos: [115, 130] cc => I
Apply:  Pos: [172, 191, 194] ccc => cc
---------------
Circuit after: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [13, 11], [2], [12], [16, 17], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.530942440032959

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4210700988769531

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [13, 11], [2], [12], [16, 17], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4210700988769531

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [194] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 336

Reduced: 
 - size: 76 (28.15%)
 - cycle: 114 (25.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10897231101989746

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [6, 17], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [6, 17], [12, 4], [16], [17], [8], [5], [13, 11], [7, 14], [4, 2], [7], [17], [4], [12], [10, 16], [2, 3], [12, 16], [18, 4], [11, 1], [17, 5], [3, 15], [16], [4], [0], [11, 19], [10, 6], [1], [14], [9], [7], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [0], [9, 15], [17, 5], [13, 11], [2], [12], [10, 6], [8, 1], [16, 17], [11, 19], [6], [2, 15], [17, 5], [10, 16], [12, 4], [11, 19], [6], [16], [11], [1], [18, 4], [2, 15], [5], [7], [15], [9], [6, 17], [8, 11], [0, 10], [17], [12], [18], [6], [10, 16], [8, 13], [11, 1], [15], [16, 17], [1, 9], [0, 12], [19, 2], [8, 13], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [2], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [18], [19], [12, 16], [5, 3], [6, 17], [13, 1], [19], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [18, 8], [15], [13], [14], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [18, 8], [11, 19], [7, 0], [4, 2], [10], [14], [12, 16], [19, 17], [4, 11], [7, 0], [7], [0, 10], [16, 17], [13, 11], [18, 12], [10], [3], [11], [1], [19, 5], [2, 15], [0, 16], [18, 4], [8, 13], [10], [8], [13, 1], [4, 11], [9, 3], [3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [14, 4], [0], [8], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [0, 10], [13, 11], [12, 16], [2, 15], [0, 10], [14, 4], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [16], [14, 4], [3, 15], [2, 9], [8, 1], [0, 12], [16], [19], [1, 9], [13, 11], [7, 0], [10], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [8, 1], [1], [10], [16, 5], [2, 3], [7, 0], [1], [14], [18], [10, 16], [8, 11], [5, 3], [19, 2], [6], [12, 10], [19, 5], [4, 2], [11, 1], [12, 10], [3, 15], [8, 11], [4, 2], [19, 17], [13, 1], [9], [14, 12], [13, 1], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [13, 1], [10, 16], [11, 2], [14, 18], [7], [17], [0, 16], [13, 1], [19, 5], [18], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[192, 198, 201]
[204, 208, 219]
[229, 236, 239]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[31, 36, 41]
[54, 61, 65]
[45, 62, 74]
[156, 168, 169]
[227, 255, 261]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 63, 67]
[138, 143, 160]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[253, 258, 263]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6562786102294922

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [23, 30] xx => I, Pos: [23, 30] xx => I, Pos: [29, 48] xx => I, Pos: [29, 48] xx => I, Pos: [31, 36, 41] xcx => c, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [42, 55] xx => I, Pos: [42, 55] xx => I, Pos: [45, 62, 74] xcx => c, Pos: [48, 78] xx => I, Pos: [48, 78] xx => I, Pos: [54, 61, 65] xcx => c, Pos: [57, 63, 67] ccc => cc, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 71] xx => I, Pos: [65, 71] xx => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [79, 91] xx => I, Pos: [79, 91] xx => I, Pos: [86, 113] xx => I, Pos: [86, 113] xx => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [99, 105] xx => I, Pos: [99, 105] xx => I, Pos: [105, 120] xx => I, Pos: [105, 120] xx => I, Pos: [114, 119] xx => I, Pos: [114, 119] xx => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [131, 145] xx => I, Pos: [131, 145] xx => I, Pos: [138, 143, 160] ccc => cc, Pos: [142, 149] cc => I, Pos: [142, 149] cc => I, Pos: [155, 164] xx => I, Pos: [155, 164] xx => I, Pos: [156, 168, 169] xcx => c, Pos: [160, 173] cc => I, Pos: [160, 173] cc => I, Pos: [165, 178] xx => I, Pos: [165, 178] xx => I, Pos: [169, 179] xx => I, Pos: [169, 179] xx => I, Pos: [176, 192] cc => I, Pos: [176, 192] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 198, 201] ccc => cc, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 208, 219] ccc => cc, Pos: [210, 224] cc => I, Pos: [210, 224] cc => I, Pos: [211, 221] xx => I, Pos: [211, 221] xx => I, Pos: [220, 225] xx => I, Pos: [220, 225] xx => I, Pos: [227, 255, 261] xcx => c, Pos: [229, 236, 239] ccc => cc, Pos: [233, 237] cc => I, Pos: [233, 237] cc => I, Pos: [235, 240] cc => I, Pos: [235, 240] cc => I, Pos: [242, 245] cc => I, Pos: [242, 245] cc => I, Pos: [245, 252] cc => I, Pos: [245, 252] cc => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [253, 258, 263] ccc => cc]

Plan: 1
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [29, 48] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [38, 57] cc => I,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [54, 61, 65] xcx => c,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [99, 105] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [138, 143, 160] ccc => cc,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [156, 168, 169] xcx => c,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [242, 245] cc => I,
 Pos: [249, 253] cc => I,
 Pos: [252, 259] cc => I]
Change: 36, Saving: 37

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09367036819458008

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [29, 48] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [38, 57] cc => I,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [54, 61, 65] xcx => c,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [99, 105] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [138, 143, 160] ccc => cc,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [156, 168, 169] xcx => c,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [242, 245] cc => I,
 Pos: [249, 253] cc => I,
 Pos: [252, 259] cc => I]
Change: 36, Saving: 37

Circuit before: xxxccccxccccccccccccccxxxxcccxxxxcccccccxxxccxxxxccccxxxcccxxccccxcccccxxxxccxxxxcccxxxxcccxccccccxxccccxxccccccxxxccccxxccccccccxxxccxxxxccccccxxccccxccccxxxxcccccxxcccxxxcccccxxxxccccxxccccccccxccccxcccccxxcccxccccxcccxxcccxxxccccxccccccccccxccccccxcccccxxcccxxccccccc
---------------
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [23, 30] xx => I
Apply:  Pos: [29, 48] xx => I
Apply:  Pos: [31, 36, 41] xcx => c
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [42, 55] xx => I
Apply:  Pos: [45, 62, 74] xcx => c
Apply:  Pos: [54, 61, 65] xcx => c
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [79, 91] xx => I
Apply:  Pos: [86, 113] xx => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [99, 105] xx => I
Apply:  Pos: [114, 119] xx => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [131, 145] xx => I
Apply:  Pos: [138, 143, 160] ccc => cc
Apply:  Pos: [142, 149] cc => I
Apply:  Pos: [155, 164] xx => I
Apply:  Pos: [156, 168, 169] xcx => c
Apply:  Pos: [165, 178] xx => I
Apply:  Pos: [176, 192] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 208, 219] ccc => cc
Apply:  Pos: [210, 224] cc => I
Apply:  Pos: [211, 221] xx => I
Apply:  Pos: [220, 225] xx => I
Apply:  Pos: [227, 255, 261] xcx => c
Apply:  Pos: [229, 236, 239] ccc => cc
Apply:  Pos: [233, 237] cc => I
Apply:  Pos: [235, 240] cc => I
Apply:  Pos: [242, 245] cc => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [252, 259] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxcccccxxccccccxxccccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxccccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [13, 11], [2], [12], [16, 17], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [7], [4, 2], [10, 16], [11, 19], [2, 15], [10], [12, 16], [19, 17], [4, 11], [7], [0, 10], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [0, 16], [19, 5], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.7499489784240723

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 130]
[109, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[172, 191, 194]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 130]
[109, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4843804836273193

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [105, 114] xx => I, Pos: [105, 114] xx => I, Pos: [109, 131] cc => I, Pos: [109, 131] cc => I, Pos: [115, 130] cc => I, Pos: [115, 130] cc => I, Pos: [172, 191, 194] ccc => cc]

Plan: 1
[Pos: [105, 114] xx => I,
 Pos: [109, 131] cc => I,
 Pos: [115, 130] cc => I,
 Pos: [172, 191, 194] ccc => cc]
Change: 4, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015639066696166992

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [105, 114] xx => I,
 Pos: [109, 131] cc => I,
 Pos: [115, 130] cc => I,
 Pos: [172, 191, 194] ccc => cc]
Change: 4, Saving: 4

Circuit before: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxcccccxxccccccxxccccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxccccccc
---------------
Apply:  Pos: [105, 114] xx => I
Apply:  Pos: [109, 131] cc => I
Apply:  Pos: [115, 130] cc => I
Apply:  Pos: [172, 191, 194] ccc => cc
---------------
Circuit after: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [13, 11], [2], [12], [16, 17], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.5000195503234863

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4218554496765137

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [13, 11], [2], [12], [16, 17], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4218554496765137

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [194] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 41 - (small)
 - circuit cycle: 336

Reduced: 
 - size: 76 (28.15%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938096046447754

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [6, 17], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [6, 17], [12, 4], [16], [17], [8], [5], [13, 11], [7, 14], [4, 2], [7], [17], [4], [12], [10, 16], [2, 3], [12, 16], [18, 4], [11, 1], [17, 5], [3, 15], [16], [4], [0], [11, 19], [10, 6], [1], [14], [9], [7], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [0], [9, 15], [17, 5], [13, 11], [2], [12], [10, 6], [8, 1], [16, 17], [11, 19], [6], [2, 15], [17, 5], [10, 16], [12, 4], [11, 19], [6], [16], [11], [1], [18, 4], [2, 15], [5], [7], [15], [9], [6, 17], [8, 11], [0, 10], [17], [12], [18], [6], [10, 16], [8, 13], [11, 1], [15], [16, 17], [1, 9], [0, 12], [19, 2], [8, 13], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [2], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [18], [19], [12, 16], [5, 3], [6, 17], [13, 1], [19], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [18, 8], [15], [13], [14], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [18, 8], [11, 19], [7, 0], [4, 2], [10], [14], [12, 16], [19, 17], [4, 11], [7, 0], [7], [0, 10], [16, 17], [13, 11], [18, 12], [10], [3], [11], [1], [19, 5], [2, 15], [0, 16], [18, 4], [8, 13], [10], [8], [13, 1], [4, 11], [9, 3], [3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [14, 4], [0], [8], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [0, 10], [13, 11], [12, 16], [2, 15], [0, 10], [14, 4], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [16], [14, 4], [3, 15], [2, 9], [8, 1], [0, 12], [16], [19], [1, 9], [13, 11], [7, 0], [10], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [8, 1], [1], [10], [16, 5], [2, 3], [7, 0], [1], [14], [18], [10, 16], [8, 11], [5, 3], [19, 2], [6], [12, 10], [19, 5], [4, 2], [11, 1], [12, 10], [3, 15], [8, 11], [4, 2], [19, 17], [13, 1], [9], [14, 12], [13, 1], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [13, 1], [10, 16], [11, 2], [14, 18], [7], [17], [0, 16], [13, 1], [19, 5], [18], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[192, 198, 201]
[204, 208, 219]
[229, 236, 239]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[31, 36, 41]
[54, 61, 65]
[45, 62, 74]
[156, 168, 169]
[227, 255, 261]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 63, 67]
[138, 143, 160]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[253, 258, 263]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6394116878509521

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [23, 30] xx => I, Pos: [23, 30] xx => I, Pos: [29, 48] xx => I, Pos: [29, 48] xx => I, Pos: [31, 36, 41] xcx => c, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [42, 55] xx => I, Pos: [42, 55] xx => I, Pos: [45, 62, 74] xcx => c, Pos: [48, 78] xx => I, Pos: [48, 78] xx => I, Pos: [54, 61, 65] xcx => c, Pos: [57, 63, 67] ccc => cc, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 71] xx => I, Pos: [65, 71] xx => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [79, 91] xx => I, Pos: [79, 91] xx => I, Pos: [86, 113] xx => I, Pos: [86, 113] xx => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [99, 105] xx => I, Pos: [99, 105] xx => I, Pos: [105, 120] xx => I, Pos: [105, 120] xx => I, Pos: [114, 119] xx => I, Pos: [114, 119] xx => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [131, 145] xx => I, Pos: [131, 145] xx => I, Pos: [138, 143, 160] ccc => cc, Pos: [142, 149] cc => I, Pos: [142, 149] cc => I, Pos: [155, 164] xx => I, Pos: [155, 164] xx => I, Pos: [156, 168, 169] xcx => c, Pos: [160, 173] cc => I, Pos: [160, 173] cc => I, Pos: [165, 178] xx => I, Pos: [165, 178] xx => I, Pos: [169, 179] xx => I, Pos: [169, 179] xx => I, Pos: [176, 192] cc => I, Pos: [176, 192] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 198, 201] ccc => cc, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 208, 219] ccc => cc, Pos: [210, 224] cc => I, Pos: [210, 224] cc => I, Pos: [211, 221] xx => I, Pos: [211, 221] xx => I, Pos: [220, 225] xx => I, Pos: [220, 225] xx => I, Pos: [227, 255, 261] xcx => c, Pos: [229, 236, 239] ccc => cc, Pos: [233, 237] cc => I, Pos: [233, 237] cc => I, Pos: [235, 240] cc => I, Pos: [235, 240] cc => I, Pos: [242, 245] cc => I, Pos: [242, 245] cc => I, Pos: [245, 252] cc => I, Pos: [245, 252] cc => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [253, 258, 263] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [48, 78] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [57, 63, 67] ccc => cc,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [54, 61, 65] xcx => c,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [99, 105] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [160, 173] cc => I,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [169, 179] xx => I,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [245, 252] cc => I,
 Pos: [253, 258, 263] ccc => cc]
Change: 35, Saving: 96

Circuit before: xxxccccxccccccccccccccxxxxcccxxxxcccccccxxxccxxxxccccxxxcccxxccccxcccccxxxxccxxxxcccxxxxcccxccccccxxccccxxccccccxxxccccxxccccccccxxxccxxxxccccccxxccccxccccxxxxcccccxxcccxxxcccccxxxxccccxxccccccccxccccxcccccxxcccxccccxcccxxcccxxxccccxccccccccccxccccccxcccccxxcccxxccccccc
---------------
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [23, 30] xx => I
Apply:  Pos: [48, 78] xx => I
Apply:  Pos: [31, 36, 41] xcx => c
Apply:  Pos: [57, 63, 67] ccc => cc
Apply:  Pos: [42, 55] xx => I
Apply:  Pos: [45, 62, 74] xcx => c
Apply:  Pos: [54, 61, 65] xcx => c
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [79, 91] xx => I
Apply:  Pos: [86, 113] xx => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [99, 105] xx => I
Apply:  Pos: [114, 119] xx => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [131, 145] xx => I
Apply:  Pos: [160, 173] cc => I
Apply:  Pos: [142, 149] cc => I
Apply:  Pos: [155, 164] xx => I
Apply:  Pos: [169, 179] xx => I
Apply:  Pos: [165, 178] xx => I
Apply:  Pos: [176, 192] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 208, 219] ccc => cc
Apply:  Pos: [210, 224] cc => I
Apply:  Pos: [211, 221] xx => I
Apply:  Pos: [220, 225] xx => I
Apply:  Pos: [227, 255, 261] xcx => c
Apply:  Pos: [229, 236, 239] ccc => cc
Apply:  Pos: [233, 237] cc => I
Apply:  Pos: [235, 240] cc => I
Apply:  Pos: [245, 252] cc => I
Apply:  Pos: [253, 258, 263] ccc => cc
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxccccccxcccxxccccxccccxxcccxxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxccccxxxcccccccxxcccxxccccxxcccccxcccccccccxccccccxccccxcccccxcccccxcccccxcccxxcccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [16, 17], [13, 11], [2], [12], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [11, 19], [4, 2], [10], [12, 16], [19, 17], [4, 11], [7], [0, 10], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [0, 10], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [13, 1], [9], [14, 12], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [0, 10], [11, 2], [7], [17], [10, 16], [13, 1], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.6394116878509521

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 132]
[172, 187]
[181, 195]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[106, 115]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[187, 189, 194]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[106, 115]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 132]
[172, 187]
[181, 195]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5160417556762695

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [106, 115] xx => I, Pos: [106, 115] xx => I, Pos: [116, 132] cc => I, Pos: [116, 132] cc => I, Pos: [172, 187] cc => I, Pos: [172, 187] cc => I, Pos: [181, 195] cc => I, Pos: [181, 195] cc => I, Pos: [187, 189, 194] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [106, 115] xx => I,
 Pos: [116, 132] cc => I,
 Pos: [187, 189, 194] ccc => cc,
 Pos: [181, 195] cc => I]
Change: 4, Saving: 12

Circuit before: xxxccccxccccccccccccxxxcccxcxccccccxcccxxccccxccccxxcccxxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxccccxxxcccccccxxcccxxccccxxcccccxcccccccccxccccccxccccxcccccxcccccxcccccxcccxxcccxcccccc
---------------
Apply:  Pos: [106, 115] xx => I
Apply:  Pos: [116, 132] cc => I
Apply:  Pos: [187, 189, 194] ccc => cc
Apply:  Pos: [181, 195] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxccccccxcccxxccccxccccxxcccxxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxccccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxcccccxcccxxcxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [16, 17], [13, 11], [2], [12], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [2, 15], [10, 16], [11, 19], [4, 2], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [0, 10], [5], [10, 16], [0, 12], [11, 2], [7], [17], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.5160417556762695

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[168, 182, 184]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4686338901519775

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [168, 182, 184] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [168, 182, 184] ccc => cc]
Change: 1, Saving: 2

Circuit before: xxxccccxccccccccccccxxxcccxcxccccccxcccxxccccxccccxxcccxxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxccccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxcccccxcccxxcxcccccc
---------------
Apply:  Pos: [168, 182, 184] ccc => cc
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxccccccxcccxxccccxccccxxcccxxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxccccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxcccccxccxxcxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [16, 17], [13, 11], [2], [12], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [2, 15], [10, 16], [11, 19], [4, 2], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [11, 2], [7], [17], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4686338901519775

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4691755771636963

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxxccccxccccccccccccxxxcccxcxccccccxcccxxccccxccccxxcccxxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxccccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxcccccxccxxcxcccccc
---------------
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxccccccxcccxxccccxccccxxcccxxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxccccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxcccccxccxxcxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [16, 17], [13, 11], [2], [12], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [2, 15], [10, 16], [11, 19], [4, 2], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [11, 2], [7], [17], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4691755771636963

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [196] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 340

Reduced: 
 - size: 74 (27.41%)
 - cycle: 110 (24.44%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938453674316406

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [6, 17], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [6, 17], [12, 4], [16], [17], [8], [5], [13, 11], [7, 14], [4, 2], [7], [17], [4], [12], [10, 16], [2, 3], [12, 16], [18, 4], [11, 1], [17, 5], [3, 15], [16], [4], [0], [11, 19], [10, 6], [1], [14], [9], [7], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [0], [9, 15], [17, 5], [13, 11], [2], [12], [10, 6], [8, 1], [16, 17], [11, 19], [6], [2, 15], [17, 5], [10, 16], [12, 4], [11, 19], [6], [16], [11], [1], [18, 4], [2, 15], [5], [7], [15], [9], [6, 17], [8, 11], [0, 10], [17], [12], [18], [6], [10, 16], [8, 13], [11, 1], [15], [16, 17], [1, 9], [0, 12], [19, 2], [8, 13], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [2], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [18], [19], [12, 16], [5, 3], [6, 17], [13, 1], [19], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [18, 8], [15], [13], [14], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [18, 8], [11, 19], [7, 0], [4, 2], [10], [14], [12, 16], [19, 17], [4, 11], [7, 0], [7], [0, 10], [16, 17], [13, 11], [18, 12], [10], [3], [11], [1], [19, 5], [2, 15], [0, 16], [18, 4], [8, 13], [10], [8], [13, 1], [4, 11], [9, 3], [3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [14, 4], [0], [8], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [0, 10], [13, 11], [12, 16], [2, 15], [0, 10], [14, 4], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [16], [14, 4], [3, 15], [2, 9], [8, 1], [0, 12], [16], [19], [1, 9], [13, 11], [7, 0], [10], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [8, 1], [1], [10], [16, 5], [2, 3], [7, 0], [1], [14], [18], [10, 16], [8, 11], [5, 3], [19, 2], [6], [12, 10], [19, 5], [4, 2], [11, 1], [12, 10], [3, 15], [8, 11], [4, 2], [19, 17], [13, 1], [9], [14, 12], [13, 1], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [13, 1], [10, 16], [11, 2], [14, 18], [7], [17], [0, 16], [13, 1], [19, 5], [18], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[192, 198, 201]
[204, 208, 219]
[229, 236, 239]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[31, 36, 41]
[54, 61, 65]
[45, 62, 74]
[156, 168, 169]
[227, 255, 261]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 63, 67]
[138, 143, 160]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[253, 258, 263]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.672072172164917

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [23, 30] xx => I, Pos: [23, 30] xx => I, Pos: [29, 48] xx => I, Pos: [29, 48] xx => I, Pos: [31, 36, 41] xcx => c, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [42, 55] xx => I, Pos: [42, 55] xx => I, Pos: [45, 62, 74] xcx => c, Pos: [48, 78] xx => I, Pos: [48, 78] xx => I, Pos: [54, 61, 65] xcx => c, Pos: [57, 63, 67] ccc => cc, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 71] xx => I, Pos: [65, 71] xx => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [79, 91] xx => I, Pos: [79, 91] xx => I, Pos: [86, 113] xx => I, Pos: [86, 113] xx => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [99, 105] xx => I, Pos: [99, 105] xx => I, Pos: [105, 120] xx => I, Pos: [105, 120] xx => I, Pos: [114, 119] xx => I, Pos: [114, 119] xx => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [131, 145] xx => I, Pos: [131, 145] xx => I, Pos: [138, 143, 160] ccc => cc, Pos: [142, 149] cc => I, Pos: [142, 149] cc => I, Pos: [155, 164] xx => I, Pos: [155, 164] xx => I, Pos: [156, 168, 169] xcx => c, Pos: [160, 173] cc => I, Pos: [160, 173] cc => I, Pos: [165, 178] xx => I, Pos: [165, 178] xx => I, Pos: [169, 179] xx => I, Pos: [169, 179] xx => I, Pos: [176, 192] cc => I, Pos: [176, 192] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 198, 201] ccc => cc, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 208, 219] ccc => cc, Pos: [210, 224] cc => I, Pos: [210, 224] cc => I, Pos: [211, 221] xx => I, Pos: [211, 221] xx => I, Pos: [220, 225] xx => I, Pos: [220, 225] xx => I, Pos: [227, 255, 261] xcx => c, Pos: [229, 236, 239] ccc => cc, Pos: [233, 237] cc => I, Pos: [233, 237] cc => I, Pos: [235, 240] cc => I, Pos: [235, 240] cc => I, Pos: [242, 245] cc => I, Pos: [242, 245] cc => I, Pos: [245, 252] cc => I, Pos: [245, 252] cc => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [253, 258, 263] ccc => cc]

--------End Timer [Generate Plans]:  0.07811474800109863

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [29, 48] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [57, 63, 67] ccc => cc,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [54, 61, 65] xcx => c,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [105, 120] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [160, 173] cc => I,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [156, 168, 169] xcx => c,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [245, 252] cc => I,
 Pos: [249, 253] cc => I]
Change: 35, Saving: 36

Circuit before: xxxccccxccccccccccccccxxxxcccxxxxcccccccxxxccxxxxccccxxxcccxxccccxcccccxxxxccxxxxcccxxxxcccxccccccxxccccxxccccccxxxccccxxccccccccxxxccxxxxccccccxxccccxccccxxxxcccccxxcccxxxcccccxxxxccccxxccccccccxccccxcccccxxcccxccccxcccxxcccxxxccccxccccccccccxccccccxcccccxxcccxxccccccc
---------------
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [23, 30] xx => I
Apply:  Pos: [29, 48] xx => I
Apply:  Pos: [31, 36, 41] xcx => c
Apply:  Pos: [57, 63, 67] ccc => cc
Apply:  Pos: [42, 55] xx => I
Apply:  Pos: [45, 62, 74] xcx => c
Apply:  Pos: [54, 61, 65] xcx => c
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [79, 91] xx => I
Apply:  Pos: [86, 113] xx => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [105, 120] xx => I
Apply:  Pos: [114, 119] xx => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [131, 145] xx => I
Apply:  Pos: [160, 173] cc => I
Apply:  Pos: [142, 149] cc => I
Apply:  Pos: [155, 164] xx => I
Apply:  Pos: [156, 168, 169] xcx => c
Apply:  Pos: [165, 178] xx => I
Apply:  Pos: [176, 192] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 208, 219] ccc => cc
Apply:  Pos: [210, 224] cc => I
Apply:  Pos: [211, 221] xx => I
Apply:  Pos: [220, 225] xx => I
Apply:  Pos: [227, 255, 261] xcx => c
Apply:  Pos: [229, 236, 239] ccc => cc
Apply:  Pos: [233, 237] cc => I
Apply:  Pos: [235, 240] cc => I
Apply:  Pos: [245, 252] cc => I
Apply:  Pos: [249, 253] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxccccxccccccxcccxxccccxccccxxcccxxxcxxxcccxxxcccccccxxccccxccccccxcccccccccccxxccxxxxccccxcccxcccccxxccccccxxcccxxxccccxxcccccxcccccccccxccccccxccccxcccccxcccccxccccxccxxcccxccccccc

--------End Timer [apply mapping plan]:  0.015624523162841797

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [16, 17], [13, 11], [2], [12], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [11, 19], [4, 2], [10], [12, 16], [19, 17], [4, 11], [7], [0, 10], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [0, 10], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [13, 1], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [0, 16], [13, 1], [19, 5], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.7814311981201172

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 131]
[181, 193]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[106, 115]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[49, 72, 75]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[172, 192, 196]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[106, 115]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 131]
[181, 193]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.547532320022583

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [49, 72, 75] xcx => c, Pos: [106, 115] xx => I, Pos: [106, 115] xx => I, Pos: [116, 131] cc => I, Pos: [116, 131] cc => I, Pos: [172, 192, 196] ccc => cc, Pos: [181, 193] cc => I, Pos: [181, 193] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [49, 72, 75] xcx => c,
 Pos: [106, 115] xx => I,
 Pos: [116, 131] cc => I,
 Pos: [172, 192, 196] ccc => cc,
 Pos: [181, 193] cc => I]
Change: 5, Saving: 5

Circuit before: xxxccccxccccccccccccxxxccccxccccccxcccxxccccxccccxxcccxxxcxxxcccxxxcccccccxxccccxccccccxcccccccccccxxccxxxxccccxcccxcccccxxccccccxxcccxxxccccxxcccccxcccccccccxccccccxccccxcccccxcccccxccccxccxxcccxccccccc
---------------
Apply:  Pos: [49, 72, 75] xcx => c
Apply:  Pos: [106, 115] xx => I
Apply:  Pos: [116, 131] cc => I
Apply:  Pos: [172, 192, 196] ccc => cc
Apply:  Pos: [181, 193] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxccccxccccccxcccxxccccxcccccxcccxxxcxxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxccccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [16, 17], [13, 11], [19, 2], [12], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [2, 15], [10, 16], [11, 19], [4, 2], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.547532320022583

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[42, 49]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[42, 49]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4717419147491455

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [42, 49] cc => I, Pos: [42, 49] cc => I]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [42, 49] cc => I]
Change: 1, Saving: 1

Circuit before: xxxccccxccccccccccccxxxccccxccccccxcccxxccccxcccccxcccxxxcxxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxccccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc
---------------
Apply:  Pos: [42, 49] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxccccxccccccxcccxxcccxccccxcccxxxcxxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxccccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [4, 11], [10], [10, 6], [9, 15], [16, 17], [13, 11], [12], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [2, 15], [10, 16], [11, 19], [4, 2], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4873661994934082

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4703669548034668

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxxccccxccccccccccccxxxccccxccccccxcccxxcccxccccxcccxxxcxxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxccccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc
---------------
---------------
Circuit after: xxxccccxccccccccccccxxxccccxccccccxcccxxcccxccccxcccxxxcxxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxccccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [4, 11], [10], [10, 6], [9, 15], [16, 17], [13, 11], [12], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [2, 15], [10, 16], [11, 19], [4, 2], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4703669548034668

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [192] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 41 - (small)
 - circuit cycle: 334

Reduced: 
 - size: 78 (28.89%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12497258186340332

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [6, 17], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [6, 17], [12, 4], [16], [17], [8], [5], [13, 11], [7, 14], [4, 2], [7], [17], [4], [12], [10, 16], [2, 3], [12, 16], [18, 4], [11, 1], [17, 5], [3, 15], [16], [4], [0], [11, 19], [10, 6], [1], [14], [9], [7], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [0], [9, 15], [17, 5], [13, 11], [2], [12], [10, 6], [8, 1], [16, 17], [11, 19], [6], [2, 15], [17, 5], [10, 16], [12, 4], [11, 19], [6], [16], [11], [1], [18, 4], [2, 15], [5], [7], [15], [9], [6, 17], [8, 11], [0, 10], [17], [12], [18], [6], [10, 16], [8, 13], [11, 1], [15], [16, 17], [1, 9], [0, 12], [19, 2], [8, 13], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [2], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [18], [19], [12, 16], [5, 3], [6, 17], [13, 1], [19], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [18, 8], [15], [13], [14], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [18, 8], [11, 19], [7, 0], [4, 2], [10], [14], [12, 16], [19, 17], [4, 11], [7, 0], [7], [0, 10], [16, 17], [13, 11], [18, 12], [10], [3], [11], [1], [19, 5], [2, 15], [0, 16], [18, 4], [8, 13], [10], [8], [13, 1], [4, 11], [9, 3], [3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [14, 4], [0], [8], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [0, 10], [13, 11], [12, 16], [2, 15], [0, 10], [14, 4], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [16], [14, 4], [3, 15], [2, 9], [8, 1], [0, 12], [16], [19], [1, 9], [13, 11], [7, 0], [10], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [8, 1], [1], [10], [16, 5], [2, 3], [7, 0], [1], [14], [18], [10, 16], [8, 11], [5, 3], [19, 2], [6], [12, 10], [19, 5], [4, 2], [11, 1], [12, 10], [3, 15], [8, 11], [4, 2], [19, 17], [13, 1], [9], [14, 12], [13, 1], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [13, 1], [10, 16], [11, 2], [14, 18], [7], [17], [0, 16], [13, 1], [19, 5], [18], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[192, 198, 201]
[204, 208, 219]
[229, 236, 239]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[31, 36, 41]
[54, 61, 65]
[45, 62, 74]
[156, 168, 169]
[227, 255, 261]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 63, 67]
[138, 143, 160]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[253, 258, 263]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.031285524368286

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [23, 30] xx => I, Pos: [23, 30] xx => I, Pos: [29, 48] xx => I, Pos: [29, 48] xx => I, Pos: [31, 36, 41] xcx => c, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [42, 55] xx => I, Pos: [42, 55] xx => I, Pos: [45, 62, 74] xcx => c, Pos: [48, 78] xx => I, Pos: [48, 78] xx => I, Pos: [54, 61, 65] xcx => c, Pos: [57, 63, 67] ccc => cc, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 71] xx => I, Pos: [65, 71] xx => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [79, 91] xx => I, Pos: [79, 91] xx => I, Pos: [86, 113] xx => I, Pos: [86, 113] xx => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [99, 105] xx => I, Pos: [99, 105] xx => I, Pos: [105, 120] xx => I, Pos: [105, 120] xx => I, Pos: [114, 119] xx => I, Pos: [114, 119] xx => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [131, 145] xx => I, Pos: [131, 145] xx => I, Pos: [138, 143, 160] ccc => cc, Pos: [142, 149] cc => I, Pos: [142, 149] cc => I, Pos: [155, 164] xx => I, Pos: [155, 164] xx => I, Pos: [156, 168, 169] xcx => c, Pos: [160, 173] cc => I, Pos: [160, 173] cc => I, Pos: [165, 178] xx => I, Pos: [165, 178] xx => I, Pos: [169, 179] xx => I, Pos: [169, 179] xx => I, Pos: [176, 192] cc => I, Pos: [176, 192] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 198, 201] ccc => cc, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 208, 219] ccc => cc, Pos: [210, 224] cc => I, Pos: [210, 224] cc => I, Pos: [211, 221] xx => I, Pos: [211, 221] xx => I, Pos: [220, 225] xx => I, Pos: [220, 225] xx => I, Pos: [227, 255, 261] xcx => c, Pos: [229, 236, 239] ccc => cc, Pos: [233, 237] cc => I, Pos: [233, 237] cc => I, Pos: [235, 240] cc => I, Pos: [235, 240] cc => I, Pos: [242, 245] cc => I, Pos: [242, 245] cc => I, Pos: [245, 252] cc => I, Pos: [245, 252] cc => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [253, 258, 263] ccc => cc]

--------End Timer [Generate Plans]:  0.09374833106994629

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [48, 78] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [38, 57] cc => I,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [65, 71] xx => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [105, 120] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [138, 143, 160] ccc => cc,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [169, 179] xx => I,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [245, 252] cc => I,
 Pos: [253, 258, 263] ccc => cc]
Change: 35, Saving: 36

Circuit before: xxxccccxccccccccccccccxxxxcccxxxxcccccccxxxccxxxxccccxxxcccxxccccxcccccxxxxccxxxxcccxxxxcccxccccccxxccccxxccccccxxxccccxxccccccccxxxccxxxxccccccxxccccxccccxxxxcccccxxcccxxxcccccxxxxccccxxccccccccxccccxcccccxxcccxccccxcccxxcccxxxccccxccccccccccxccccccxcccccxxcccxxccccccc
---------------
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [23, 30] xx => I
Apply:  Pos: [48, 78] xx => I
Apply:  Pos: [31, 36, 41] xcx => c
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [42, 55] xx => I
Apply:  Pos: [45, 62, 74] xcx => c
Apply:  Pos: [65, 71] xx => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [79, 91] xx => I
Apply:  Pos: [86, 113] xx => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [105, 120] xx => I
Apply:  Pos: [114, 119] xx => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [131, 145] xx => I
Apply:  Pos: [138, 143, 160] ccc => cc
Apply:  Pos: [142, 149] cc => I
Apply:  Pos: [155, 164] xx => I
Apply:  Pos: [169, 179] xx => I
Apply:  Pos: [165, 178] xx => I
Apply:  Pos: [176, 192] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 208, 219] ccc => cc
Apply:  Pos: [210, 224] cc => I
Apply:  Pos: [211, 221] xx => I
Apply:  Pos: [220, 225] xx => I
Apply:  Pos: [227, 255, 261] xcx => c
Apply:  Pos: [229, 236, 239] ccc => cc
Apply:  Pos: [233, 237] cc => I
Apply:  Pos: [235, 240] cc => I
Apply:  Pos: [245, 252] cc => I
Apply:  Pos: [253, 258, 263] ccc => cc
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxccxxcccccxxcxxcccxxxcccccccxxccccxccccccxcccccccccccxxccxxxxccccxcccxccccxxxcccccccxxccccxxccccxxcccccxcccccccccxccccccxccccxcccccxcccccxcccccxcccxxcccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [9, 15], [13, 11], [2], [12], [10, 6], [16, 17], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [7], [4, 2], [10, 16], [11, 19], [2, 15], [10], [12, 16], [19, 17], [4, 11], [7], [0, 10], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [13, 1], [9], [14, 12], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [0, 10], [11, 2], [7], [17], [10, 16], [13, 1], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  2.1250338554382324

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 131]
[109, 132]
[172, 187]
[181, 195]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[48, 71, 74]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[187, 189, 194]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 131]
[109, 132]
[172, 187]
[181, 195]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.8437469005584717

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 71, 74] xcx => c, Pos: [105, 114] xx => I, Pos: [105, 114] xx => I, Pos: [109, 132] cc => I, Pos: [109, 132] cc => I, Pos: [115, 131] cc => I, Pos: [115, 131] cc => I, Pos: [172, 187] cc => I, Pos: [172, 187] cc => I, Pos: [181, 195] cc => I, Pos: [181, 195] cc => I, Pos: [187, 189, 194] ccc => cc]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 71, 74] xcx => c,
 Pos: [105, 114] xx => I,
 Pos: [109, 132] cc => I,
 Pos: [115, 131] cc => I,
 Pos: [187, 189, 194] ccc => cc,
 Pos: [181, 195] cc => I]
Change: 6, Saving: 6

Circuit before: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxccxxcccccxxcxxcccxxxcccccccxxccccxccccccxcccccccccccxxccxxxxccccxcccxccccxxxcccccccxxccccxxccccxxcccccxcccccccccxccccccxccccxcccccxcccccxcccccxcccxxcccxcccccc
---------------
Apply:  Pos: [48, 71, 74] xcx => c
Apply:  Pos: [105, 114] xx => I
Apply:  Pos: [109, 132] cc => I
Apply:  Pos: [115, 131] cc => I
Apply:  Pos: [187, 189, 194] ccc => cc
Apply:  Pos: [181, 195] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxcccxcccccxxcxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxcccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxcccccxcccxxcxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [9, 15], [13, 11], [19, 2], [12], [10, 6], [16, 17], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [0, 10], [5], [10, 16], [0, 12], [11, 2], [7], [17], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.859370470046997

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[42, 48]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[164, 178, 180]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[42, 48]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5000293254852295

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [42, 48] cc => I, Pos: [42, 48] cc => I, Pos: [164, 178, 180] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [42, 48] cc => I, Pos: [164, 178, 180] ccc => cc]
Change: 2, Saving: 2

Circuit before: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxcccxcccccxxcxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxcccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxcccccxcccxxcxcccccc
---------------
Apply:  Pos: [42, 48] cc => I
Apply:  Pos: [164, 178, 180] ccc => cc
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxcccccxcccxxcccxxccxcccccxxcxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxcccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxcccccxccxxcxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [4, 11], [10], [6], [9, 15], [13, 11], [12], [10, 6], [16, 17], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [11, 2], [7], [17], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.5000293254852295

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4844789505004883

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxxccccxccccccccccccxxxcccxcxcccccxcccxxcccxxccxcccccxxcxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxcccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxcccccxccxxcxcccccc
---------------
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxcccccxcccxxcccxxccxcccccxxcxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxcccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxcccccxccxxcxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [4, 11], [10], [6], [9, 15], [13, 11], [12], [10, 6], [16, 17], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [11, 2], [7], [17], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4844789505004883

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-x-x-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [190] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 330

Reduced: 
 - size: 80 (29.63%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10937261581420898

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [6, 17], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [6, 17], [12, 4], [16], [17], [8], [5], [13, 11], [7, 14], [4, 2], [7], [17], [4], [12], [10, 16], [2, 3], [12, 16], [18, 4], [11, 1], [17, 5], [3, 15], [16], [4], [0], [11, 19], [10, 6], [1], [14], [9], [7], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [0], [9, 15], [17, 5], [13, 11], [2], [12], [10, 6], [8, 1], [16, 17], [11, 19], [6], [2, 15], [17, 5], [10, 16], [12, 4], [11, 19], [6], [16], [11], [1], [18, 4], [2, 15], [5], [7], [15], [9], [6, 17], [8, 11], [0, 10], [17], [12], [18], [6], [10, 16], [8, 13], [11, 1], [15], [16, 17], [1, 9], [0, 12], [19, 2], [8, 13], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [2], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [18], [19], [12, 16], [5, 3], [6, 17], [13, 1], [19], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [18, 8], [15], [13], [14], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [18, 8], [11, 19], [7, 0], [4, 2], [10], [14], [12, 16], [19, 17], [4, 11], [7, 0], [7], [0, 10], [16, 17], [13, 11], [18, 12], [10], [3], [11], [1], [19, 5], [2, 15], [0, 16], [18, 4], [8, 13], [10], [8], [13, 1], [4, 11], [9, 3], [3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [14, 4], [0], [8], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [0, 10], [13, 11], [12, 16], [2, 15], [0, 10], [14, 4], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [16], [14, 4], [3, 15], [2, 9], [8, 1], [0, 12], [16], [19], [1, 9], [13, 11], [7, 0], [10], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [8, 1], [1], [10], [16, 5], [2, 3], [7, 0], [1], [14], [18], [10, 16], [8, 11], [5, 3], [19, 2], [6], [12, 10], [19, 5], [4, 2], [11, 1], [12, 10], [3, 15], [8, 11], [4, 2], [19, 17], [13, 1], [9], [14, 12], [13, 1], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [13, 1], [10, 16], [11, 2], [14, 18], [7], [17], [0, 16], [13, 1], [19, 5], [18], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[192, 198, 201]
[204, 208, 219]
[229, 236, 239]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[31, 36, 41]
[54, 61, 65]
[45, 62, 74]
[156, 168, 169]
[227, 255, 261]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 63, 67]
[138, 143, 160]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[253, 258, 263]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6407732963562012

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [23, 30] xx => I, Pos: [23, 30] xx => I, Pos: [29, 48] xx => I, Pos: [29, 48] xx => I, Pos: [31, 36, 41] xcx => c, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [42, 55] xx => I, Pos: [42, 55] xx => I, Pos: [45, 62, 74] xcx => c, Pos: [48, 78] xx => I, Pos: [48, 78] xx => I, Pos: [54, 61, 65] xcx => c, Pos: [57, 63, 67] ccc => cc, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 71] xx => I, Pos: [65, 71] xx => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [79, 91] xx => I, Pos: [79, 91] xx => I, Pos: [86, 113] xx => I, Pos: [86, 113] xx => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [99, 105] xx => I, Pos: [99, 105] xx => I, Pos: [105, 120] xx => I, Pos: [105, 120] xx => I, Pos: [114, 119] xx => I, Pos: [114, 119] xx => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [131, 145] xx => I, Pos: [131, 145] xx => I, Pos: [138, 143, 160] ccc => cc, Pos: [142, 149] cc => I, Pos: [142, 149] cc => I, Pos: [155, 164] xx => I, Pos: [155, 164] xx => I, Pos: [156, 168, 169] xcx => c, Pos: [160, 173] cc => I, Pos: [160, 173] cc => I, Pos: [165, 178] xx => I, Pos: [165, 178] xx => I, Pos: [169, 179] xx => I, Pos: [169, 179] xx => I, Pos: [176, 192] cc => I, Pos: [176, 192] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 198, 201] ccc => cc, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 208, 219] ccc => cc, Pos: [210, 224] cc => I, Pos: [210, 224] cc => I, Pos: [211, 221] xx => I, Pos: [211, 221] xx => I, Pos: [220, 225] xx => I, Pos: [220, 225] xx => I, Pos: [227, 255, 261] xcx => c, Pos: [229, 236, 239] ccc => cc, Pos: [233, 237] cc => I, Pos: [233, 237] cc => I, Pos: [235, 240] cc => I, Pos: [235, 240] cc => I, Pos: [242, 245] cc => I, Pos: [242, 245] cc => I, Pos: [245, 252] cc => I, Pos: [245, 252] cc => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [253, 258, 263] ccc => cc]

--------End Timer [Generate Plans]:  0.09374451637268066

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [48, 78] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [38, 57] cc => I,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [65, 71] xx => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [99, 105] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [138, 143, 160] ccc => cc,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [169, 179] xx => I,
 Pos: [165, 178] xx => I,
 Pos: [192, 198, 201] ccc => cc,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [242, 245] cc => I,
 Pos: [253, 258, 263] ccc => cc,
 Pos: [252, 259] cc => I]
Change: 36, Saving: 37

Circuit before: xxxccccxccccccccccccccxxxxcccxxxxcccccccxxxccxxxxccccxxxcccxxccccxcccccxxxxccxxxxcccxxxxcccxccccccxxccccxxccccccxxxccccxxccccccccxxxccxxxxccccccxxccccxccccxxxxcccccxxcccxxxcccccxxxxccccxxccccccccxccccxcccccxxcccxccccxcccxxcccxxxccccxccccccccccxccccccxcccccxxcccxxccccccc
---------------
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [23, 30] xx => I
Apply:  Pos: [48, 78] xx => I
Apply:  Pos: [31, 36, 41] xcx => c
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [42, 55] xx => I
Apply:  Pos: [45, 62, 74] xcx => c
Apply:  Pos: [65, 71] xx => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [79, 91] xx => I
Apply:  Pos: [86, 113] xx => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [99, 105] xx => I
Apply:  Pos: [114, 119] xx => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [131, 145] xx => I
Apply:  Pos: [138, 143, 160] ccc => cc
Apply:  Pos: [142, 149] cc => I
Apply:  Pos: [155, 164] xx => I
Apply:  Pos: [169, 179] xx => I
Apply:  Pos: [165, 178] xx => I
Apply:  Pos: [192, 198, 201] ccc => cc
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 208, 219] ccc => cc
Apply:  Pos: [210, 224] cc => I
Apply:  Pos: [211, 221] xx => I
Apply:  Pos: [220, 225] xx => I
Apply:  Pos: [227, 255, 261] xcx => c
Apply:  Pos: [229, 236, 239] ccc => cc
Apply:  Pos: [233, 237] cc => I
Apply:  Pos: [235, 240] cc => I
Apply:  Pos: [242, 245] cc => I
Apply:  Pos: [253, 258, 263] ccc => cc
Apply:  Pos: [252, 259] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxccxxcccccxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxccccxxxcccccccxxcccccxxccccxxccccccxccccccccxccccccxccccxcccccxccccxcccccxcccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [9, 15], [13, 11], [2], [12], [10, 6], [16, 17], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [7], [4, 2], [10, 16], [11, 19], [2, 15], [10], [12, 16], [19, 17], [4, 11], [7], [0, 10], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [14, 4], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [14, 11], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [0, 10], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.7345178127288818

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 131]
[109, 132]
[173, 187]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[187, 189, 194]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 131]
[109, 132]
[173, 187]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5158398151397705

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [105, 114] xx => I, Pos: [105, 114] xx => I, Pos: [109, 132] cc => I, Pos: [109, 132] cc => I, Pos: [115, 131] cc => I, Pos: [115, 131] cc => I, Pos: [173, 187] cc => I, Pos: [173, 187] cc => I, Pos: [187, 189, 194] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [105, 114] xx => I,
 Pos: [109, 132] cc => I,
 Pos: [115, 131] cc => I,
 Pos: [173, 187] cc => I]
Change: 4, Saving: 4

Circuit before: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxccxxcccccxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxccccxxxcccccccxxcccccxxccccxxccccccxccccccccxccccccxccccxcccccxccccxcccccxcccxxccxcccccc
---------------
Apply:  Pos: [105, 114] xx => I
Apply:  Pos: [109, 132] cc => I
Apply:  Pos: [115, 131] cc => I
Apply:  Pos: [173, 187] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxccxxcccccxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxccccccxxxcccccccxxcccxxccccxxccccccxccccccccxccccccxccccxccccxccccxccccxcccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [9, 15], [13, 11], [2], [12], [10, 6], [16, 17], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [1, 9], [11, 19], [14, 4], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [14, 11], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 10], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.5158398151397705

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4375338554382324

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxccxxcccccxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxccccccxxxcccccccxxcccxxccccxxccccccxccccccccxccccccxccccxccccxccccxccccxcccxxccxcccccc
---------------
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxccxxcccccxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxccccccxxxcccccccxxcccxxccccxxccccccxccccccccxccccccxccccxccccxccccxccccxcccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [9, 15], [13, 11], [2], [12], [10, 6], [16, 17], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [1, 9], [11, 19], [14, 4], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [14, 11], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [0, 10], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4375338554382324

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [195] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 41 - (small)
 - circuit cycle: 338

Reduced: 
 - size: 75 (27.78%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936808586120605

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [6, 17], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [6, 17], [12, 4], [16], [17], [8], [5], [13, 11], [7, 14], [4, 2], [7], [17], [4], [12], [10, 16], [2, 3], [12, 16], [18, 4], [11, 1], [17, 5], [3, 15], [16], [4], [0], [11, 19], [10, 6], [1], [14], [9], [7], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [0], [9, 15], [17, 5], [13, 11], [2], [12], [10, 6], [8, 1], [16, 17], [11, 19], [6], [2, 15], [17, 5], [10, 16], [12, 4], [11, 19], [6], [16], [11], [1], [18, 4], [2, 15], [5], [7], [15], [9], [6, 17], [8, 11], [0, 10], [17], [12], [18], [6], [10, 16], [8, 13], [11, 1], [15], [16, 17], [1, 9], [0, 12], [19, 2], [8, 13], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [2], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [18], [19], [12, 16], [5, 3], [6, 17], [13, 1], [19], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [18, 8], [15], [13], [14], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [18, 8], [11, 19], [7, 0], [4, 2], [10], [14], [12, 16], [19, 17], [4, 11], [7, 0], [7], [0, 10], [16, 17], [13, 11], [18, 12], [10], [3], [11], [1], [19, 5], [2, 15], [0, 16], [18, 4], [8, 13], [10], [8], [13, 1], [4, 11], [9, 3], [3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [14, 4], [0], [8], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [0, 10], [13, 11], [12, 16], [2, 15], [0, 10], [14, 4], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [16], [14, 4], [3, 15], [2, 9], [8, 1], [0, 12], [16], [19], [1, 9], [13, 11], [7, 0], [10], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [8, 1], [1], [10], [16, 5], [2, 3], [7, 0], [1], [14], [18], [10, 16], [8, 11], [5, 3], [19, 2], [6], [12, 10], [19, 5], [4, 2], [11, 1], [12, 10], [3, 15], [8, 11], [4, 2], [19, 17], [13, 1], [9], [14, 12], [13, 1], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [13, 1], [10, 16], [11, 2], [14, 18], [7], [17], [0, 16], [13, 1], [19, 5], [18], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[192, 198, 201]
[204, 208, 219]
[229, 236, 239]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[31, 36, 41]
[54, 61, 65]
[45, 62, 74]
[156, 168, 169]
[227, 255, 261]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 63, 67]
[138, 143, 160]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[253, 258, 263]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.687614917755127

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [23, 30] xx => I, Pos: [23, 30] xx => I, Pos: [29, 48] xx => I, Pos: [29, 48] xx => I, Pos: [31, 36, 41] xcx => c, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [42, 55] xx => I, Pos: [42, 55] xx => I, Pos: [45, 62, 74] xcx => c, Pos: [48, 78] xx => I, Pos: [48, 78] xx => I, Pos: [54, 61, 65] xcx => c, Pos: [57, 63, 67] ccc => cc, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 71] xx => I, Pos: [65, 71] xx => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [79, 91] xx => I, Pos: [79, 91] xx => I, Pos: [86, 113] xx => I, Pos: [86, 113] xx => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [99, 105] xx => I, Pos: [99, 105] xx => I, Pos: [105, 120] xx => I, Pos: [105, 120] xx => I, Pos: [114, 119] xx => I, Pos: [114, 119] xx => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [131, 145] xx => I, Pos: [131, 145] xx => I, Pos: [138, 143, 160] ccc => cc, Pos: [142, 149] cc => I, Pos: [142, 149] cc => I, Pos: [155, 164] xx => I, Pos: [155, 164] xx => I, Pos: [156, 168, 169] xcx => c, Pos: [160, 173] cc => I, Pos: [160, 173] cc => I, Pos: [165, 178] xx => I, Pos: [165, 178] xx => I, Pos: [169, 179] xx => I, Pos: [169, 179] xx => I, Pos: [176, 192] cc => I, Pos: [176, 192] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 198, 201] ccc => cc, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 208, 219] ccc => cc, Pos: [210, 224] cc => I, Pos: [210, 224] cc => I, Pos: [211, 221] xx => I, Pos: [211, 221] xx => I, Pos: [220, 225] xx => I, Pos: [220, 225] xx => I, Pos: [227, 255, 261] xcx => c, Pos: [229, 236, 239] ccc => cc, Pos: [233, 237] cc => I, Pos: [233, 237] cc => I, Pos: [235, 240] cc => I, Pos: [235, 240] cc => I, Pos: [242, 245] cc => I, Pos: [242, 245] cc => I, Pos: [245, 252] cc => I, Pos: [245, 252] cc => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [253, 258, 263] ccc => cc]

--------End Timer [Generate Plans]:  0.09375643730163574

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [29, 48] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [38, 57] cc => I,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [54, 61, 65] xcx => c,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [99, 105] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [138, 143, 160] ccc => cc,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [169, 179] xx => I,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [245, 252] cc => I,
 Pos: [249, 253] cc => I]
Change: 35, Saving: 36

Circuit before: xxxccccxccccccccccccccxxxxcccxxxxcccccccxxxccxxxxccccxxxcccxxccccxcccccxxxxccxxxxcccxxxxcccxccccccxxccccxxccccccxxxccccxxccccccccxxxccxxxxccccccxxccccxccccxxxxcccccxxcccxxxcccccxxxxccccxxccccccccxccccxcccccxxcccxccccxcccxxcccxxxccccxccccccccccxccccccxcccccxxcccxxccccccc
---------------
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [23, 30] xx => I
Apply:  Pos: [29, 48] xx => I
Apply:  Pos: [31, 36, 41] xcx => c
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [42, 55] xx => I
Apply:  Pos: [45, 62, 74] xcx => c
Apply:  Pos: [54, 61, 65] xcx => c
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [79, 91] xx => I
Apply:  Pos: [86, 113] xx => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [99, 105] xx => I
Apply:  Pos: [114, 119] xx => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [131, 145] xx => I
Apply:  Pos: [138, 143, 160] ccc => cc
Apply:  Pos: [142, 149] cc => I
Apply:  Pos: [155, 164] xx => I
Apply:  Pos: [169, 179] xx => I
Apply:  Pos: [165, 178] xx => I
Apply:  Pos: [176, 192] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 208, 219] ccc => cc
Apply:  Pos: [210, 224] cc => I
Apply:  Pos: [211, 221] xx => I
Apply:  Pos: [220, 225] xx => I
Apply:  Pos: [227, 255, 261] xcx => c
Apply:  Pos: [229, 236, 239] ccc => cc
Apply:  Pos: [233, 237] cc => I
Apply:  Pos: [235, 240] cc => I
Apply:  Pos: [245, 252] cc => I
Apply:  Pos: [249, 253] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxccccxxxcccccccxxccccxxccccxxcccccxcccccccccxccccccxccccxcccccxcccccxccccxccxxcccxccccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [13, 11], [2], [12], [16, 17], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [7], [4, 2], [10, 16], [11, 19], [2, 15], [10], [12, 16], [19, 17], [4, 11], [7], [0, 10], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [13, 1], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [0, 16], [13, 1], [19, 5], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.7813713550567627

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 131]
[109, 132]
[181, 193]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[172, 192, 196]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 131]
[109, 132]
[181, 193]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5627431869506836

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [105, 114] xx => I, Pos: [105, 114] xx => I, Pos: [109, 132] cc => I, Pos: [109, 132] cc => I, Pos: [115, 131] cc => I, Pos: [115, 131] cc => I, Pos: [172, 192, 196] ccc => cc, Pos: [181, 193] cc => I, Pos: [181, 193] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [105, 114] xx => I,
 Pos: [109, 132] cc => I,
 Pos: [115, 131] cc => I,
 Pos: [172, 192, 196] ccc => cc,
 Pos: [181, 193] cc => I]
Change: 5, Saving: 5

Circuit before: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxccccxxxcccccccxxccccxxccccxxcccccxcccccccccxccccccxccccxcccccxcccccxccccxccxxcccxccccccc
---------------
Apply:  Pos: [105, 114] xx => I
Apply:  Pos: [109, 132] cc => I
Apply:  Pos: [115, 131] cc => I
Apply:  Pos: [172, 192, 196] ccc => cc
Apply:  Pos: [181, 193] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.01563715934753418

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [13, 11], [2], [12], [16, 17], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.5783803462982178

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4374141693115234

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc
---------------
---------------
Circuit after: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [13, 11], [2], [12], [16, 17], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4374141693115234

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [194] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 336

Reduced: 
 - size: 76 (28.15%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938096046447754

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [6, 17], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [6, 17], [12, 4], [16], [17], [8], [5], [13, 11], [7, 14], [4, 2], [7], [17], [4], [12], [10, 16], [2, 3], [12, 16], [18, 4], [11, 1], [17, 5], [3, 15], [16], [4], [0], [11, 19], [10, 6], [1], [14], [9], [7], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [0], [9, 15], [17, 5], [13, 11], [2], [12], [10, 6], [8, 1], [16, 17], [11, 19], [6], [2, 15], [17, 5], [10, 16], [12, 4], [11, 19], [6], [16], [11], [1], [18, 4], [2, 15], [5], [7], [15], [9], [6, 17], [8, 11], [0, 10], [17], [12], [18], [6], [10, 16], [8, 13], [11, 1], [15], [16, 17], [1, 9], [0, 12], [19, 2], [8, 13], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [2], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [18], [19], [12, 16], [5, 3], [6, 17], [13, 1], [19], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [18, 8], [15], [13], [14], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [18, 8], [11, 19], [7, 0], [4, 2], [10], [14], [12, 16], [19, 17], [4, 11], [7, 0], [7], [0, 10], [16, 17], [13, 11], [18, 12], [10], [3], [11], [1], [19, 5], [2, 15], [0, 16], [18, 4], [8, 13], [10], [8], [13, 1], [4, 11], [9, 3], [3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [14, 4], [0], [8], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [0, 10], [13, 11], [12, 16], [2, 15], [0, 10], [14, 4], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [16], [14, 4], [3, 15], [2, 9], [8, 1], [0, 12], [16], [19], [1, 9], [13, 11], [7, 0], [10], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [8, 1], [1], [10], [16, 5], [2, 3], [7, 0], [1], [14], [18], [10, 16], [8, 11], [5, 3], [19, 2], [6], [12, 10], [19, 5], [4, 2], [11, 1], [12, 10], [3, 15], [8, 11], [4, 2], [19, 17], [13, 1], [9], [14, 12], [13, 1], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [13, 1], [10, 16], [11, 2], [14, 18], [7], [17], [0, 16], [13, 1], [19, 5], [18], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[192, 198, 201]
[204, 208, 219]
[229, 236, 239]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[31, 36, 41]
[54, 61, 65]
[45, 62, 74]
[156, 168, 169]
[227, 255, 261]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 63, 67]
[138, 143, 160]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[253, 258, 263]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6719343662261963

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [23, 30] xx => I, Pos: [23, 30] xx => I, Pos: [29, 48] xx => I, Pos: [29, 48] xx => I, Pos: [31, 36, 41] xcx => c, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [42, 55] xx => I, Pos: [42, 55] xx => I, Pos: [45, 62, 74] xcx => c, Pos: [48, 78] xx => I, Pos: [48, 78] xx => I, Pos: [54, 61, 65] xcx => c, Pos: [57, 63, 67] ccc => cc, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 71] xx => I, Pos: [65, 71] xx => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [79, 91] xx => I, Pos: [79, 91] xx => I, Pos: [86, 113] xx => I, Pos: [86, 113] xx => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [99, 105] xx => I, Pos: [99, 105] xx => I, Pos: [105, 120] xx => I, Pos: [105, 120] xx => I, Pos: [114, 119] xx => I, Pos: [114, 119] xx => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [131, 145] xx => I, Pos: [131, 145] xx => I, Pos: [138, 143, 160] ccc => cc, Pos: [142, 149] cc => I, Pos: [142, 149] cc => I, Pos: [155, 164] xx => I, Pos: [155, 164] xx => I, Pos: [156, 168, 169] xcx => c, Pos: [160, 173] cc => I, Pos: [160, 173] cc => I, Pos: [165, 178] xx => I, Pos: [165, 178] xx => I, Pos: [169, 179] xx => I, Pos: [169, 179] xx => I, Pos: [176, 192] cc => I, Pos: [176, 192] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 198, 201] ccc => cc, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 208, 219] ccc => cc, Pos: [210, 224] cc => I, Pos: [210, 224] cc => I, Pos: [211, 221] xx => I, Pos: [211, 221] xx => I, Pos: [220, 225] xx => I, Pos: [220, 225] xx => I, Pos: [227, 255, 261] xcx => c, Pos: [229, 236, 239] ccc => cc, Pos: [233, 237] cc => I, Pos: [233, 237] cc => I, Pos: [235, 240] cc => I, Pos: [235, 240] cc => I, Pos: [242, 245] cc => I, Pos: [242, 245] cc => I, Pos: [245, 252] cc => I, Pos: [245, 252] cc => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [253, 258, 263] ccc => cc]

--------End Timer [Generate Plans]:  0.09376168251037598

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [48, 78] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [38, 57] cc => I,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [65, 71] xx => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [105, 120] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [160, 173] cc => I,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [156, 168, 169] xcx => c,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [242, 245] cc => I,
 Pos: [249, 253] cc => I,
 Pos: [252, 259] cc => I]
Change: 36, Saving: 36

Circuit before: xxxccccxccccccccccccccxxxxcccxxxxcccccccxxxccxxxxccccxxxcccxxccccxcccccxxxxccxxxxcccxxxxcccxccccccxxccccxxccccccxxxccccxxccccccccxxxccxxxxccccccxxccccxccccxxxxcccccxxcccxxxcccccxxxxccccxxccccccccxccccxcccccxxcccxccccxcccxxcccxxxccccxccccccccccxccccccxcccccxxcccxxccccccc
---------------
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [23, 30] xx => I
Apply:  Pos: [48, 78] xx => I
Apply:  Pos: [31, 36, 41] xcx => c
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [42, 55] xx => I
Apply:  Pos: [45, 62, 74] xcx => c
Apply:  Pos: [65, 71] xx => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [79, 91] xx => I
Apply:  Pos: [86, 113] xx => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [105, 120] xx => I
Apply:  Pos: [114, 119] xx => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [131, 145] xx => I
Apply:  Pos: [160, 173] cc => I
Apply:  Pos: [142, 149] cc => I
Apply:  Pos: [155, 164] xx => I
Apply:  Pos: [156, 168, 169] xcx => c
Apply:  Pos: [165, 178] xx => I
Apply:  Pos: [176, 192] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 208, 219] ccc => cc
Apply:  Pos: [210, 224] cc => I
Apply:  Pos: [211, 221] xx => I
Apply:  Pos: [220, 225] xx => I
Apply:  Pos: [227, 255, 261] xcx => c
Apply:  Pos: [229, 236, 239] ccc => cc
Apply:  Pos: [233, 237] cc => I
Apply:  Pos: [235, 240] cc => I
Apply:  Pos: [242, 245] cc => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [252, 259] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxccxxcccccxxcxxcccxxxcccccccxxccccxccccccxcccccccccccxxccxxxxccccxcccxcccccxxccccccxxcccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxccccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [9, 15], [13, 11], [2], [12], [10, 6], [16, 17], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [11, 19], [4, 2], [10], [12, 16], [19, 17], [4, 11], [7], [0, 10], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [0, 10], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [0, 16], [19, 5], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.7656960487365723

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 130]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[48, 71, 74]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[171, 190, 193]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 130]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4843907356262207

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [48, 71, 74] xcx => c, Pos: [105, 114] xx => I, Pos: [105, 114] xx => I, Pos: [115, 130] cc => I, Pos: [115, 130] cc => I, Pos: [171, 190, 193] ccc => cc]

--------End Timer [Generate Plans]:  0.015628337860107422

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [48, 71, 74] xcx => c,
 Pos: [105, 114] xx => I,
 Pos: [115, 130] cc => I,
 Pos: [171, 190, 193] ccc => cc]
Change: 4, Saving: 4

Circuit before: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxccxxcccccxxcxxcccxxxcccccccxxccccxccccccxcccccccccccxxccxxxxccccxcccxcccccxxccccccxxcccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxccccccc
---------------
Apply:  Pos: [48, 71, 74] xcx => c
Apply:  Pos: [105, 114] xx => I
Apply:  Pos: [115, 130] cc => I
Apply:  Pos: [171, 190, 193] ccc => cc
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxcccxcccccxxcxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxccccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [9, 15], [13, 11], [19, 2], [12], [10, 6], [16, 17], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [2, 15], [10, 16], [11, 19], [4, 2], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.5000190734863281

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[42, 48]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[42, 48]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4843425750732422

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [42, 48] cc => I, Pos: [42, 48] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [42, 48] cc => I]
Change: 1, Saving: 1

Circuit before: xxxccccxccccccccccccxxxcccxcxcccccxcccxxccccxxcccxcccccxxcxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxccccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc
---------------
Apply:  Pos: [42, 48] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxcccccxcccxxcccxxccxcccccxxcxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxccccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [4, 11], [10], [6], [9, 15], [13, 11], [12], [10, 6], [16, 17], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [2, 15], [10, 16], [11, 19], [4, 2], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4843425750732422

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4531311988830566

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxxccccxccccccccccccxxxcccxcxcccccxcccxxcccxxccxcccccxxcxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxccccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc
---------------
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxcccccxcccxxcccxxccxcccccxxcxxcccxxxccccccxccccxccccccxcccccccccccxxccxxxccccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [4, 11], [10], [6], [9, 15], [13, 11], [12], [10, 6], [16, 17], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [2, 15], [10, 16], [11, 19], [4, 2], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4531311988830566

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [191] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 332

Reduced: 
 - size: 79 (29.26%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1096048355102539

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [6, 17], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [6, 17], [12, 4], [16], [17], [8], [5], [13, 11], [7, 14], [4, 2], [7], [17], [4], [12], [10, 16], [2, 3], [12, 16], [18, 4], [11, 1], [17, 5], [3, 15], [16], [4], [0], [11, 19], [10, 6], [1], [14], [9], [7], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [0], [9, 15], [17, 5], [13, 11], [2], [12], [10, 6], [8, 1], [16, 17], [11, 19], [6], [2, 15], [17, 5], [10, 16], [12, 4], [11, 19], [6], [16], [11], [1], [18, 4], [2, 15], [5], [7], [15], [9], [6, 17], [8, 11], [0, 10], [17], [12], [18], [6], [10, 16], [8, 13], [11, 1], [15], [16, 17], [1, 9], [0, 12], [19, 2], [8, 13], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [2], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [18], [19], [12, 16], [5, 3], [6, 17], [13, 1], [19], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [18, 8], [15], [13], [14], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [18, 8], [11, 19], [7, 0], [4, 2], [10], [14], [12, 16], [19, 17], [4, 11], [7, 0], [7], [0, 10], [16, 17], [13, 11], [18, 12], [10], [3], [11], [1], [19, 5], [2, 15], [0, 16], [18, 4], [8, 13], [10], [8], [13, 1], [4, 11], [9, 3], [3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [14, 4], [0], [8], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [0, 10], [13, 11], [12, 16], [2, 15], [0, 10], [14, 4], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [16], [14, 4], [3, 15], [2, 9], [8, 1], [0, 12], [16], [19], [1, 9], [13, 11], [7, 0], [10], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [8, 1], [1], [10], [16, 5], [2, 3], [7, 0], [1], [14], [18], [10, 16], [8, 11], [5, 3], [19, 2], [6], [12, 10], [19, 5], [4, 2], [11, 1], [12, 10], [3, 15], [8, 11], [4, 2], [19, 17], [13, 1], [9], [14, 12], [13, 1], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [13, 1], [10, 16], [11, 2], [14, 18], [7], [17], [0, 16], [13, 1], [19, 5], [18], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[192, 198, 201]
[204, 208, 219]
[229, 236, 239]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[31, 36, 41]
[54, 61, 65]
[45, 62, 74]
[156, 168, 169]
[227, 255, 261]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 63, 67]
[138, 143, 160]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[253, 258, 263]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6716434955596924

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [23, 30] xx => I, Pos: [23, 30] xx => I, Pos: [29, 48] xx => I, Pos: [29, 48] xx => I, Pos: [31, 36, 41] xcx => c, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [42, 55] xx => I, Pos: [42, 55] xx => I, Pos: [45, 62, 74] xcx => c, Pos: [48, 78] xx => I, Pos: [48, 78] xx => I, Pos: [54, 61, 65] xcx => c, Pos: [57, 63, 67] ccc => cc, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 71] xx => I, Pos: [65, 71] xx => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [79, 91] xx => I, Pos: [79, 91] xx => I, Pos: [86, 113] xx => I, Pos: [86, 113] xx => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [99, 105] xx => I, Pos: [99, 105] xx => I, Pos: [105, 120] xx => I, Pos: [105, 120] xx => I, Pos: [114, 119] xx => I, Pos: [114, 119] xx => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [131, 145] xx => I, Pos: [131, 145] xx => I, Pos: [138, 143, 160] ccc => cc, Pos: [142, 149] cc => I, Pos: [142, 149] cc => I, Pos: [155, 164] xx => I, Pos: [155, 164] xx => I, Pos: [156, 168, 169] xcx => c, Pos: [160, 173] cc => I, Pos: [160, 173] cc => I, Pos: [165, 178] xx => I, Pos: [165, 178] xx => I, Pos: [169, 179] xx => I, Pos: [169, 179] xx => I, Pos: [176, 192] cc => I, Pos: [176, 192] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 198, 201] ccc => cc, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 208, 219] ccc => cc, Pos: [210, 224] cc => I, Pos: [210, 224] cc => I, Pos: [211, 221] xx => I, Pos: [211, 221] xx => I, Pos: [220, 225] xx => I, Pos: [220, 225] xx => I, Pos: [227, 255, 261] xcx => c, Pos: [229, 236, 239] ccc => cc, Pos: [233, 237] cc => I, Pos: [233, 237] cc => I, Pos: [235, 240] cc => I, Pos: [235, 240] cc => I, Pos: [242, 245] cc => I, Pos: [242, 245] cc => I, Pos: [245, 252] cc => I, Pos: [245, 252] cc => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [253, 258, 263] ccc => cc]

--------End Timer [Generate Plans]:  0.09389114379882812

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [29, 48] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [57, 63, 67] ccc => cc,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [54, 61, 65] xcx => c,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [99, 105] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [138, 143, 160] ccc => cc,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [156, 168, 169] xcx => c,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [242, 245] cc => I,
 Pos: [249, 253] cc => I,
 Pos: [252, 259] cc => I]
Change: 36, Saving: 37

Circuit before: xxxccccxccccccccccccccxxxxcccxxxxcccccccxxxccxxxxccccxxxcccxxccccxcccccxxxxccxxxxcccxxxxcccxccccccxxccccxxccccccxxxccccxxccccccccxxxccxxxxccccccxxccccxccccxxxxcccccxxcccxxxcccccxxxxccccxxccccccccxccccxcccccxxcccxccccxcccxxcccxxxccccxccccccccccxccccccxcccccxxcccxxccccccc
---------------
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [23, 30] xx => I
Apply:  Pos: [29, 48] xx => I
Apply:  Pos: [31, 36, 41] xcx => c
Apply:  Pos: [57, 63, 67] ccc => cc
Apply:  Pos: [42, 55] xx => I
Apply:  Pos: [45, 62, 74] xcx => c
Apply:  Pos: [54, 61, 65] xcx => c
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [79, 91] xx => I
Apply:  Pos: [86, 113] xx => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [99, 105] xx => I
Apply:  Pos: [114, 119] xx => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [131, 145] xx => I
Apply:  Pos: [138, 143, 160] ccc => cc
Apply:  Pos: [142, 149] cc => I
Apply:  Pos: [155, 164] xx => I
Apply:  Pos: [156, 168, 169] xcx => c
Apply:  Pos: [165, 178] xx => I
Apply:  Pos: [176, 192] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 208, 219] ccc => cc
Apply:  Pos: [210, 224] cc => I
Apply:  Pos: [211, 221] xx => I
Apply:  Pos: [220, 225] xx => I
Apply:  Pos: [227, 255, 261] xcx => c
Apply:  Pos: [229, 236, 239] ccc => cc
Apply:  Pos: [233, 237] cc => I
Apply:  Pos: [235, 240] cc => I
Apply:  Pos: [242, 245] cc => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [252, 259] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxccccxccccccxcccxxccccxccccxxcccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxcccccxxccccccxxccccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxccccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [16, 17], [13, 11], [2], [12], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [7], [4, 2], [10, 16], [11, 19], [2, 15], [10], [12, 16], [19, 17], [4, 11], [7], [0, 10], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [0, 16], [19, 5], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.7655346393585205

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 131]
[110, 132]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[106, 115]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[173, 192, 195]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[106, 115]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 131]
[110, 132]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4999170303344727

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [106, 115] xx => I, Pos: [106, 115] xx => I, Pos: [110, 132] cc => I, Pos: [110, 132] cc => I, Pos: [116, 131] cc => I, Pos: [116, 131] cc => I, Pos: [173, 192, 195] ccc => cc]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [106, 115] xx => I,
 Pos: [110, 132] cc => I,
 Pos: [116, 131] cc => I,
 Pos: [173, 192, 195] ccc => cc]
Change: 4, Saving: 4

Circuit before: xxxccccxccccccccccccxxxccccxccccccxcccxxccccxccccxxcccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxcccccxxccccccxxccccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxccccccc
---------------
Apply:  Pos: [106, 115] xx => I
Apply:  Pos: [110, 132] cc => I
Apply:  Pos: [116, 131] cc => I
Apply:  Pos: [173, 192, 195] ccc => cc
---------------
Circuit after: xxxccccxccccccccccccxxxccccxccccccxcccxxccccxccccxxcccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [16, 17], [13, 11], [2], [12], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.515540599822998

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4532990455627441

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxxccccxccccccccccccxxxccccxccccccxcccxxccccxccccxxcccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc
---------------
---------------
Circuit after: xxxccccxccccccccccccxxxccccxccccccxcccxxccccxccccxxcccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [16, 17], [13, 11], [2], [12], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4532990455627441

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [195] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 338

Reduced: 
 - size: 75 (27.78%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10943841934204102

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [6, 17], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [6, 17], [12, 4], [16], [17], [8], [5], [13, 11], [7, 14], [4, 2], [7], [17], [4], [12], [10, 16], [2, 3], [12, 16], [18, 4], [11, 1], [17, 5], [3, 15], [16], [4], [0], [11, 19], [10, 6], [1], [14], [9], [7], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [0], [9, 15], [17, 5], [13, 11], [2], [12], [10, 6], [8, 1], [16, 17], [11, 19], [6], [2, 15], [17, 5], [10, 16], [12, 4], [11, 19], [6], [16], [11], [1], [18, 4], [2, 15], [5], [7], [15], [9], [6, 17], [8, 11], [0, 10], [17], [12], [18], [6], [10, 16], [8, 13], [11, 1], [15], [16, 17], [1, 9], [0, 12], [19, 2], [8, 13], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [2], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [18], [19], [12, 16], [5, 3], [6, 17], [13, 1], [19], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [18, 8], [15], [13], [14], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [18, 8], [11, 19], [7, 0], [4, 2], [10], [14], [12, 16], [19, 17], [4, 11], [7, 0], [7], [0, 10], [16, 17], [13, 11], [18, 12], [10], [3], [11], [1], [19, 5], [2, 15], [0, 16], [18, 4], [8, 13], [10], [8], [13, 1], [4, 11], [9, 3], [3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [14, 4], [0], [8], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [0, 10], [13, 11], [12, 16], [2, 15], [0, 10], [14, 4], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [16], [14, 4], [3, 15], [2, 9], [8, 1], [0, 12], [16], [19], [1, 9], [13, 11], [7, 0], [10], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [8, 1], [1], [10], [16, 5], [2, 3], [7, 0], [1], [14], [18], [10, 16], [8, 11], [5, 3], [19, 2], [6], [12, 10], [19, 5], [4, 2], [11, 1], [12, 10], [3, 15], [8, 11], [4, 2], [19, 17], [13, 1], [9], [14, 12], [13, 1], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [13, 1], [10, 16], [11, 2], [14, 18], [7], [17], [0, 16], [13, 1], [19, 5], [18], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[192, 198, 201]
[204, 208, 219]
[229, 236, 239]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[31, 36, 41]
[54, 61, 65]
[45, 62, 74]
[156, 168, 169]
[227, 255, 261]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 63, 67]
[138, 143, 160]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[253, 258, 263]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6874120235443115

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [23, 30] xx => I, Pos: [23, 30] xx => I, Pos: [29, 48] xx => I, Pos: [29, 48] xx => I, Pos: [31, 36, 41] xcx => c, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [42, 55] xx => I, Pos: [42, 55] xx => I, Pos: [45, 62, 74] xcx => c, Pos: [48, 78] xx => I, Pos: [48, 78] xx => I, Pos: [54, 61, 65] xcx => c, Pos: [57, 63, 67] ccc => cc, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 71] xx => I, Pos: [65, 71] xx => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [79, 91] xx => I, Pos: [79, 91] xx => I, Pos: [86, 113] xx => I, Pos: [86, 113] xx => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [99, 105] xx => I, Pos: [99, 105] xx => I, Pos: [105, 120] xx => I, Pos: [105, 120] xx => I, Pos: [114, 119] xx => I, Pos: [114, 119] xx => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [131, 145] xx => I, Pos: [131, 145] xx => I, Pos: [138, 143, 160] ccc => cc, Pos: [142, 149] cc => I, Pos: [142, 149] cc => I, Pos: [155, 164] xx => I, Pos: [155, 164] xx => I, Pos: [156, 168, 169] xcx => c, Pos: [160, 173] cc => I, Pos: [160, 173] cc => I, Pos: [165, 178] xx => I, Pos: [165, 178] xx => I, Pos: [169, 179] xx => I, Pos: [169, 179] xx => I, Pos: [176, 192] cc => I, Pos: [176, 192] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 198, 201] ccc => cc, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 208, 219] ccc => cc, Pos: [210, 224] cc => I, Pos: [210, 224] cc => I, Pos: [211, 221] xx => I, Pos: [211, 221] xx => I, Pos: [220, 225] xx => I, Pos: [220, 225] xx => I, Pos: [227, 255, 261] xcx => c, Pos: [229, 236, 239] ccc => cc, Pos: [233, 237] cc => I, Pos: [233, 237] cc => I, Pos: [235, 240] cc => I, Pos: [235, 240] cc => I, Pos: [242, 245] cc => I, Pos: [242, 245] cc => I, Pos: [245, 252] cc => I, Pos: [245, 252] cc => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [253, 258, 263] ccc => cc]

--------End Timer [Generate Plans]:  0.09374427795410156

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [48, 78] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [57, 63, 67] ccc => cc,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [65, 71] xx => I,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [99, 105] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [138, 143, 160] ccc => cc,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [169, 179] xx => I,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [242, 245] cc => I,
 Pos: [253, 258, 263] ccc => cc,
 Pos: [252, 259] cc => I]
Change: 36, Saving: 37

Circuit before: xxxccccxccccccccccccccxxxxcccxxxxcccccccxxxccxxxxccccxxxcccxxccccxcccccxxxxccxxxxcccxxxxcccxccccccxxccccxxccccccxxxccccxxccccccccxxxccxxxxccccccxxccccxccccxxxxcccccxxcccxxxcccccxxxxccccxxccccccccxccccxcccccxxcccxccccxcccxxcccxxxccccxccccccccccxccccccxcccccxxcccxxccccccc
---------------
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [23, 30] xx => I
Apply:  Pos: [48, 78] xx => I
Apply:  Pos: [31, 36, 41] xcx => c
Apply:  Pos: [57, 63, 67] ccc => cc
Apply:  Pos: [42, 55] xx => I
Apply:  Pos: [45, 62, 74] xcx => c
Apply:  Pos: [65, 71] xx => I
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [79, 91] xx => I
Apply:  Pos: [86, 113] xx => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [99, 105] xx => I
Apply:  Pos: [114, 119] xx => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [131, 145] xx => I
Apply:  Pos: [138, 143, 160] ccc => cc
Apply:  Pos: [142, 149] cc => I
Apply:  Pos: [155, 164] xx => I
Apply:  Pos: [169, 179] xx => I
Apply:  Pos: [165, 178] xx => I
Apply:  Pos: [176, 192] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 208, 219] ccc => cc
Apply:  Pos: [210, 224] cc => I
Apply:  Pos: [211, 221] xx => I
Apply:  Pos: [220, 225] xx => I
Apply:  Pos: [227, 255, 261] xcx => c
Apply:  Pos: [229, 236, 239] ccc => cc
Apply:  Pos: [233, 237] cc => I
Apply:  Pos: [235, 240] cc => I
Apply:  Pos: [242, 245] cc => I
Apply:  Pos: [253, 258, 263] ccc => cc
Apply:  Pos: [252, 259] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxccccccxcccxxccccxxcccxxccccxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxccccxxxcccccccxxccccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxcccccxcccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [9, 15], [16, 17], [13, 11], [2], [12], [10, 6], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [7], [4, 2], [10, 16], [11, 19], [2, 15], [10], [12, 16], [19, 17], [4, 11], [7], [0, 10], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [0, 10], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.781156301498413

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 132]
[110, 133]
[173, 187]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[106, 115]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[187, 189, 194]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[106, 115]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 132]
[110, 133]
[173, 187]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5468463897705078

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [106, 115] xx => I, Pos: [106, 115] xx => I, Pos: [110, 133] cc => I, Pos: [110, 133] cc => I, Pos: [116, 132] cc => I, Pos: [116, 132] cc => I, Pos: [173, 187] cc => I, Pos: [173, 187] cc => I, Pos: [187, 189, 194] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [106, 115] xx => I,
 Pos: [110, 133] cc => I,
 Pos: [116, 132] cc => I,
 Pos: [173, 187] cc => I]
Change: 4, Saving: 4

Circuit before: xxxccccxccccccccccccxxxcccxcxccccccxcccxxccccxxcccxxccccxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxccccxxxcccccccxxccccxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxcccccxcccxxccxcccccc
---------------
Apply:  Pos: [106, 115] xx => I
Apply:  Pos: [110, 133] cc => I
Apply:  Pos: [116, 132] cc => I
Apply:  Pos: [173, 187] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxccccccxcccxxccccxxcccxxccccxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxccccxccccxccccxcccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [9, 15], [16, 17], [13, 11], [2], [12], [10, 6], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 10], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.5468463897705078

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.468759536743164

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxxccccxccccccccccccxxxcccxcxccccccxcccxxccccxxcccxxccccxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxccccxccccxccccxcccxxccxcccccc
---------------
---------------
Circuit after: xxxccccxccccccccccccxxxcccxcxccccccxcccxxccccxxcccxxccccxxcxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxccccccxxxcccccccxxccxxccccxxcccccxcccccccccxccccccxccccxccccxccccxccccxcccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [7], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [17, 5], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [9, 15], [16, 17], [13, 11], [2], [12], [10, 6], [17, 5], [10, 16], [12, 4], [16], [11], [18, 4], [5], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [9, 3], [12], [13], [1, 9], [11, 19], [0], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [0, 10], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.468759536743164

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [195] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 41 - (small)
 - circuit cycle: 338

Reduced: 
 - size: 75 (27.78%)
 - depth: 4 (8.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499237060546875

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [6, 17], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [6, 17], [12, 4], [16], [17], [8], [5], [13, 11], [7, 14], [4, 2], [7], [17], [4], [12], [10, 16], [2, 3], [12, 16], [18, 4], [11, 1], [17, 5], [3, 15], [16], [4], [0], [11, 19], [10, 6], [1], [14], [9], [7], [10, 16], [18, 12], [19, 2], [4, 11], [10], [6], [0], [9, 15], [17, 5], [13, 11], [2], [12], [10, 6], [8, 1], [16, 17], [11, 19], [6], [2, 15], [17, 5], [10, 16], [12, 4], [11, 19], [6], [16], [11], [1], [18, 4], [2, 15], [5], [7], [15], [9], [6, 17], [8, 11], [0, 10], [17], [12], [18], [6], [10, 16], [8, 13], [11, 1], [15], [16, 17], [1, 9], [0, 12], [19, 2], [8, 13], [4, 11], [8], [2], [6, 17], [5, 3], [10, 16], [4, 19], [13], [2], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [18], [19], [12, 16], [5, 3], [6, 17], [13, 1], [19], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [18, 8], [15], [13], [14], [16, 17], [18, 4], [16], [11], [4], [7], [2, 15], [10, 16], [18, 8], [11, 19], [7, 0], [4, 2], [10], [14], [12, 16], [19, 17], [4, 11], [7, 0], [7], [0, 10], [16, 17], [13, 11], [18, 12], [10], [3], [11], [1], [19, 5], [2, 15], [0, 16], [18, 4], [8, 13], [10], [8], [13, 1], [4, 11], [9, 3], [3], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [14, 4], [0], [8], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [0, 10], [13, 11], [12, 16], [2, 15], [0, 10], [14, 4], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [16], [14, 4], [3, 15], [2, 9], [8, 1], [0, 12], [16], [19], [1, 9], [13, 11], [7, 0], [10], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [8, 1], [1], [10], [16, 5], [2, 3], [7, 0], [1], [14], [18], [10, 16], [8, 11], [5, 3], [19, 2], [6], [12, 10], [19, 5], [4, 2], [11, 1], [12, 10], [3, 15], [8, 11], [4, 2], [19, 17], [13, 1], [9], [14, 12], [13, 1], [2, 15], [6, 17], [4, 11], [10, 16], [5], [0, 12], [13, 1], [10, 16], [11, 2], [14, 18], [7], [17], [0, 16], [13, 1], [19, 5], [18], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[192, 198, 201]
[204, 208, 219]
[229, 236, 239]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[31, 36, 41]
[54, 61, 65]
[45, 62, 74]
[156, 168, 169]
[227, 255, 261]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[57, 63, 67]
[138, 143, 160]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[253, 258, 263]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[23, 30]
[29, 48]
[42, 55]
[65, 71]
[48, 78]
[79, 91]
[99, 105]
[86, 113]
[114, 119]
[105, 120]
[131, 145]
[155, 164]
[165, 178]
[169, 179]
[200, 206]
[211, 221]
[220, 225]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[14, 20]
[38, 57]
[64, 70]
[66, 76]
[89, 96]
[128, 140]
[142, 149]
[160, 173]
[187, 191]
[176, 192]
[210, 224]
[233, 237]
[235, 240]
[242, 245]
[245, 252]
[249, 253]
[252, 259]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6718828678131104

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [14, 20] cc => I, Pos: [14, 20] cc => I, Pos: [23, 30] xx => I, Pos: [23, 30] xx => I, Pos: [29, 48] xx => I, Pos: [29, 48] xx => I, Pos: [31, 36, 41] xcx => c, Pos: [38, 57] cc => I, Pos: [38, 57] cc => I, Pos: [42, 55] xx => I, Pos: [42, 55] xx => I, Pos: [45, 62, 74] xcx => c, Pos: [48, 78] xx => I, Pos: [48, 78] xx => I, Pos: [54, 61, 65] xcx => c, Pos: [57, 63, 67] ccc => cc, Pos: [64, 70] cc => I, Pos: [64, 70] cc => I, Pos: [65, 71] xx => I, Pos: [65, 71] xx => I, Pos: [66, 76] cc => I, Pos: [66, 76] cc => I, Pos: [79, 91] xx => I, Pos: [79, 91] xx => I, Pos: [86, 113] xx => I, Pos: [86, 113] xx => I, Pos: [89, 96] cc => I, Pos: [89, 96] cc => I, Pos: [99, 105] xx => I, Pos: [99, 105] xx => I, Pos: [105, 120] xx => I, Pos: [105, 120] xx => I, Pos: [114, 119] xx => I, Pos: [114, 119] xx => I, Pos: [128, 140] cc => I, Pos: [128, 140] cc => I, Pos: [131, 145] xx => I, Pos: [131, 145] xx => I, Pos: [138, 143, 160] ccc => cc, Pos: [142, 149] cc => I, Pos: [142, 149] cc => I, Pos: [155, 164] xx => I, Pos: [155, 164] xx => I, Pos: [156, 168, 169] xcx => c, Pos: [160, 173] cc => I, Pos: [160, 173] cc => I, Pos: [165, 178] xx => I, Pos: [165, 178] xx => I, Pos: [169, 179] xx => I, Pos: [169, 179] xx => I, Pos: [176, 192] cc => I, Pos: [176, 192] cc => I, Pos: [187, 191] cc => I, Pos: [187, 191] cc => I, Pos: [192, 198, 201] ccc => cc, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 208, 219] ccc => cc, Pos: [210, 224] cc => I, Pos: [210, 224] cc => I, Pos: [211, 221] xx => I, Pos: [211, 221] xx => I, Pos: [220, 225] xx => I, Pos: [220, 225] xx => I, Pos: [227, 255, 261] xcx => c, Pos: [229, 236, 239] ccc => cc, Pos: [233, 237] cc => I, Pos: [233, 237] cc => I, Pos: [235, 240] cc => I, Pos: [235, 240] cc => I, Pos: [242, 245] cc => I, Pos: [242, 245] cc => I, Pos: [245, 252] cc => I, Pos: [245, 252] cc => I, Pos: [249, 253] cc => I, Pos: [249, 253] cc => I, Pos: [252, 259] cc => I, Pos: [252, 259] cc => I, Pos: [253, 258, 263] ccc => cc]

Plan: 1
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [29, 48] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [38, 57] cc => I,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [54, 61, 65] xcx => c,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [99, 105] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [138, 143, 160] ccc => cc,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [156, 168, 169] xcx => c,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [242, 245] cc => I,
 Pos: [249, 253] cc => I,
 Pos: [252, 259] cc => I]
Change: 36, Saving: 37

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.09374499320983887

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [14, 20] cc => I,
 Pos: [23, 30] xx => I,
 Pos: [29, 48] xx => I,
 Pos: [31, 36, 41] xcx => c,
 Pos: [38, 57] cc => I,
 Pos: [42, 55] xx => I,
 Pos: [45, 62, 74] xcx => c,
 Pos: [54, 61, 65] xcx => c,
 Pos: [64, 70] cc => I,
 Pos: [66, 76] cc => I,
 Pos: [79, 91] xx => I,
 Pos: [86, 113] xx => I,
 Pos: [89, 96] cc => I,
 Pos: [99, 105] xx => I,
 Pos: [114, 119] xx => I,
 Pos: [128, 140] cc => I,
 Pos: [131, 145] xx => I,
 Pos: [138, 143, 160] ccc => cc,
 Pos: [142, 149] cc => I,
 Pos: [155, 164] xx => I,
 Pos: [156, 168, 169] xcx => c,
 Pos: [165, 178] xx => I,
 Pos: [176, 192] cc => I,
 Pos: [187, 191] cc => I,
 Pos: [200, 206] xx => I,
 Pos: [204, 208, 219] ccc => cc,
 Pos: [210, 224] cc => I,
 Pos: [211, 221] xx => I,
 Pos: [220, 225] xx => I,
 Pos: [227, 255, 261] xcx => c,
 Pos: [229, 236, 239] ccc => cc,
 Pos: [233, 237] cc => I,
 Pos: [235, 240] cc => I,
 Pos: [242, 245] cc => I,
 Pos: [249, 253] cc => I,
 Pos: [252, 259] cc => I]
Change: 36, Saving: 37

Circuit before: xxxccccxccccccccccccccxxxxcccxxxxcccccccxxxccxxxxccccxxxcccxxccccxcccccxxxxccxxxxcccxxxxcccxccccccxxccccxxccccccxxxccccxxccccccccxxxccxxxxccccccxxccccxccccxxxxcccccxxcccxxxcccccxxxxccccxxccccccccxccccxcccccxxcccxccccxcccxxcccxxxccccxccccccccccxccccccxcccccxxcccxxccccccc
---------------
Apply:  Pos: [14, 20] cc => I
Apply:  Pos: [23, 30] xx => I
Apply:  Pos: [29, 48] xx => I
Apply:  Pos: [31, 36, 41] xcx => c
Apply:  Pos: [38, 57] cc => I
Apply:  Pos: [42, 55] xx => I
Apply:  Pos: [45, 62, 74] xcx => c
Apply:  Pos: [54, 61, 65] xcx => c
Apply:  Pos: [64, 70] cc => I
Apply:  Pos: [66, 76] cc => I
Apply:  Pos: [79, 91] xx => I
Apply:  Pos: [86, 113] xx => I
Apply:  Pos: [89, 96] cc => I
Apply:  Pos: [99, 105] xx => I
Apply:  Pos: [114, 119] xx => I
Apply:  Pos: [128, 140] cc => I
Apply:  Pos: [131, 145] xx => I
Apply:  Pos: [138, 143, 160] ccc => cc
Apply:  Pos: [142, 149] cc => I
Apply:  Pos: [155, 164] xx => I
Apply:  Pos: [156, 168, 169] xcx => c
Apply:  Pos: [165, 178] xx => I
Apply:  Pos: [176, 192] cc => I
Apply:  Pos: [187, 191] cc => I
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 208, 219] ccc => cc
Apply:  Pos: [210, 224] cc => I
Apply:  Pos: [211, 221] xx => I
Apply:  Pos: [220, 225] xx => I
Apply:  Pos: [227, 255, 261] xcx => c
Apply:  Pos: [229, 236, 239] ccc => cc
Apply:  Pos: [233, 237] cc => I
Apply:  Pos: [235, 240] cc => I
Apply:  Pos: [242, 245] cc => I
Apply:  Pos: [249, 253] cc => I
Apply:  Pos: [252, 259] cc => I
---------------
Circuit after: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxcccccxxccccccxxccccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxccccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [13, 11], [2], [12], [16, 17], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [7], [4, 2], [10, 16], [11, 19], [2, 15], [10], [12, 16], [19, 17], [4, 11], [7], [0, 10], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [0, 10], [2, 15], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [10, 16], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [0, 16], [19, 5], [15], [0, 10], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.7656278610229492

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 130]
[109, 131]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[172, 191, 194]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[105, 114]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 130]
[109, 131]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4843699932098389

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [105, 114] xx => I, Pos: [105, 114] xx => I, Pos: [109, 131] cc => I, Pos: [109, 131] cc => I, Pos: [115, 130] cc => I, Pos: [115, 130] cc => I, Pos: [172, 191, 194] ccc => cc]

Plan: 1
[Pos: [105, 114] xx => I,
 Pos: [109, 131] cc => I,
 Pos: [115, 130] cc => I,
 Pos: [172, 191, 194] ccc => cc]
Change: 4, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [105, 114] xx => I,
 Pos: [109, 131] cc => I,
 Pos: [115, 130] cc => I,
 Pos: [172, 191, 194] ccc => cc]
Change: 4, Saving: 4

Circuit before: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxxccccxcccxcccccxxccccccxxccccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxccccccc
---------------
Apply:  Pos: [105, 114] xx => I
Apply:  Pos: [109, 131] cc => I
Apply:  Pos: [115, 130] cc => I
Apply:  Pos: [172, 191, 194] ccc => cc
---------------
Circuit after: xxxccccxccccccccccccxxxccccxcccccxcccxxccccxcccxxccccxxxcxxxcccxxxcccccccxccccxccccccxccccxcccccccxxccxxxcccxcccccccxxccccccxxccxxxccccxxcccccxcccccccccxccccccxccccxcccccxccccxccccxccxxccxcccccc

--------End Timer [apply mapping plan]:  0.0

[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [13, 11], [2], [12], [16, 17], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [8, 9], [2, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [16, 5], [17, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4843699932098389

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.4063069820404053

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[12], [4], [10], [7, 0], [16, 19], [5, 3], [8, 13], [16], [0, 12], [18, 8], [14, 4], [3, 15], [2, 9], [19, 5], [0, 10], [8, 1], [4, 19], [10, 16], [8, 11], [12, 4], [16], [8], [5], [13, 11], [7, 14], [4, 2], [18, 4], [12], [10, 16], [2, 3], [12, 16], [11, 1], [3, 15], [16], [11, 19], [10, 6], [8, 1], [14], [9], [10, 16], [18, 12], [19, 2], [4, 11], [10], [10, 6], [9, 15], [13, 11], [2], [12], [16, 17], [17, 5], [10, 16], [12, 4], [6], [16], [11], [18, 4], [5], [7], [9], [6, 17], [8, 11], [0, 10], [17], [12], [6], [10, 16], [11, 1], [16, 17], [1, 9], [0, 12], [19, 2], [4, 11], [8], [6, 17], [5, 3], [10, 16], [4, 19], [13], [10, 6], [8, 1], [7, 0], [9, 15], [19, 5], [16, 17], [10], [12, 16], [5, 3], [6, 17], [13, 1], [2], [0, 10], [3, 15], [1, 9], [8, 13], [10, 16], [2, 9], [7, 14], [15], [13], [16, 17], [18, 4], [16], [11], [4], [4, 2], [10, 16], [11, 19], [10], [12, 16], [19, 17], [4, 11], [16, 17], [13, 11], [18, 12], [9, 3], [11], [1], [19, 5], [0, 16], [18, 4], [8, 13], [13, 1], [4, 11], [12], [13], [1, 9], [11, 19], [0], [3], [1], [10, 16], [19, 2], [14, 18], [17, 5], [9], [5], [13, 11], [12, 16], [2, 15], [18, 12], [6, 17], [2], [0, 16], [14, 18], [4, 11], [10, 6], [14, 4], [3, 15], [2, 9], [8, 9], [0, 12], [19], [1, 9], [13, 11], [16, 17], [14, 12], [4, 11], [2, 15], [16], [19, 2], [17, 5], [16, 5], [2, 3], [14], [14, 18], [0, 10], [8, 1], [5, 3], [19, 2], [6], [19, 5], [11, 1], [3, 15], [19, 17], [9], [14, 12], [2, 15], [6, 17], [4, 11], [5], [0, 12], [11, 2], [7], [17], [10, 16], [19, 5], [15], [11, 19], [8, 1], [2, 9], [12, 4], [6, 17], [5, 3], ----End Timer [Execute Mapping]:  1.4063069820404053

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx 
     => total size: [194] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 41 - (small)
 - circuit cycle: 336

Reduced: 
 - size: 76 (28.15%)
 - depth: 4 (8.89%)

